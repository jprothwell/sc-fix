## Makefile automatically generated by NewTest.pl ##
# For more information on the different variables, and others you
# may define, see ${SOFT_WORKDIR}/Makefile.skel and/or read the doc
## --------------Don't change the line below------------------ ##
include ${SOFT_WORKDIR}/env/compilation/compilevars.mk

LOCAL_NAME := toolpool/t_flash_programmer

LOCAL_API_DEPENDS :=    target \
                        platform \
                        platform/base/common \
                        platform/chip/hal \
                        platform/chip/defs \
                        platform/chip/regs/${CT_ASIC} \
                        platform/base/sx \
                        platform/chip/pal \
                        platform/stack \
                        platform/svc/fmg \
                        platform/svc/uctls \
                        platform/svc/umss \
                        platform/edrv/memd \
                        platform/edrv/lcdd \
                        platform/csw \
                        platform/csw/base \
                        platform/edrv/aud \
                        platform/edrv/fmd \
                        platform/edrv/pmd \
                        platform/calib \


LOCAL_MODULE_DEPENDS := target \
                        toolpool/t_flash_programmer/SourceDepends \
                        platform/edrv/lcdd \
                        platform/edrv/memd \
                        platform/edrv/mcd \
                        platform/edrv/pmd \

ifeq "$(wildcard $(SOFT_WORKDIR)/toolpool/t_flash_programmer/SourceDepends/src)" ""
LOCAL_BINARY_LIBS    += toolpool/t_flash_programmer/SourceDepends
endif

IS_ENTRY_POINT := yes

CT_RELEASE:=release
ifneq ($(CT_RELEASE),release)
$(error You can only compile the flash programmer with CT_RELEASE defined as release)
endif

LOCAL_EXPORT_FLAG += _T_UPGRADE_PROGRAMMER

# Discard charger code and depencies to SX.
LOCAL_EXPORT_FLAG += PMD_NO_CHARGER

#####################################################
# FIXME: DEPRECATED???
LOCAL_EXPORT_FLAG += NO_RF 
#####################################################



# Avoids TGT to load the UCTLS services (mass storage, traces, etc) in
# the target configuration structure. This will avoid the linker to include
# the useless UCTLS function in the lodfile. Flash prog manages the Host
# over USB itself. 
export UCTLS_SERVICE := no

# Avoids TGT to load the UCTLS services (mass storage, traces, etc) in
# the target configuration structure. This will avoid the linker to include
# the useless UCTLS function in the lodfile. Flash prog manages the Host
# over USB itself. 
export UCTLS_SERVICE := no

# We always want to compile the flash programmer as a Ramrun.
export CT_RAMRUN    := 1

export NO_SPI_REG_DEBUG := 1
TARGET_EXPORT_FLAG := $(filter-out SPI_REG_DEBUG,$(TARGET_EXPORT_FLAG))
GLOBAL_EXPORT_FLAG := $(filter-out SPI_REG_DEBUG,$(GLOBAL_EXPORT_FLAG))
LDPPFLAGS := $(filter-out -DSPI_REG_DEBUG,$(LDPPFLAGS))


C_SRC += sap_main.c sap_usr.c reftest_init.c test_task.c tupgrade.c stubbed_functions.c
S_SRC :=  


INPUT_FILES :=  

## --------------Don't change the line below------------------ ##
include ${SOFT_WORKDIR}/env/compilation/compilerules.mk

FLSHPROG_INSTALL_DIR := ${SOFT_WORKDIR}/toolpool/plugins/fastpf/flash_programmers/t_ramrun

flshprog_install:
	@${ECHO} "INSTALL           ${CT_TARGET}_ramrun.lod"
	cp ${LODBASE}ramrun.lod ${FLSHPROG_INSTALL_DIR}/${CT_TARGET}_ramrun.lod