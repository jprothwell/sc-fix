		//0x0300		VoC_code_section_1
		//0x0300		vpp_AmjpZoom
0xF01CF000,	//0x0300		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF01EF01D,	//0x0302		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x1540F01F,	//0x0304		VoC_sw16_d(REG0,0xffc1)(lo)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x0A967FC1,	//0x0306		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG0,0xffc1)(hi)
0xF01B003F,	//0x0308		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x3f)(hi)
0x404E1484,	//0x030a		VoC_lw32_d(ACC0,0x404e)
0x28370A82,	//0x030c		VoC_lw16i(REG2,0x2837)
0x00450A83,	//0x030e		VoC_lw16i(REG3,0x45)
0x7FC31542,	//0x0310		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x0312		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x0314		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0316		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0318		VoC_cfg_lg(0x8,)
0x2B80DFE9,	//0x031a		VoC_jal(vpp_AmjpZoomGenerateYuv2RgbTable)(lo)	|	VoC_push16(RA,DEFAULT)
0xDFA905BB,	//0x031c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(vpp_AmjpZoomGenerateYuv2RgbTable)(hi)
		//0x031e		VoC_yuv4112rgb_DMA_L0
0x40161404,	//0x031e		VoC_lw16_d(REG4,0x4016)
0x00001804,	//0x0320		VoC_lw16i_set_inc(REG0,0x0,0x1)
0x0FA00A87,	//0x0322		VoC_lw16i(REG7,0xfa0)
0x40161406,	//0x0324		VoC_lw16_d(REG6,0x4016)
		//0x0326		LABLE_LOOP_DIV_INLINE
0xDE0043F7,	//0x0326		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0x401A4FB7,	//0x0328		VoC_bnlt16_rd(LABLE_LOOP_DIV_INLINE,REG7,0x401a)
0xF9F8F908,	//0x032a		VoC_shru16_ri(REG0,0xffffffff,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xF4016001,	//0x032c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x152A0983,	//0x032e		VoC_sub32_rd(REG67,REG01,0x152a)
0xF9097658,	//0x0330		VoC_shru16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0xfffffff2,DEFAULT)
0x50F81583,	//0x0332		VoC_sw32_d(REG67,0x50f8)
0xC6224DE5,	//0x0334		VoC_multf16_rr(REG2,REG0,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC1,REG7,REG4,DEFAULT)
0x152A0789,	//0x0336		VoC_sub16_rd(REG1,REG1,0x152a)
0x50FD1807,	//0x0338		VoC_lw16i_set_inc(REG3,0x50fd,0x1)
0xF9FA7039,	//0x033a		VoC_shru16_ri(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x1,DEFAULT)
0x510C1502,	//0x033c		VoC_sw16_d(REG2,0x510c)
0x40161482,	//0x033e		VoC_lw32_d(REG45,0x4016)
0x401807A6,	//0x0340		VoC_sub16_rd(REG6,REG4,0x4018)
0xF6C7790E,	//0x0342		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x1D280A85,	//0x0344		VoC_lw16i(REG5,0x1d28)
0xF9174176,	//0x0346		VoC_shru16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0xF91A4155,	//0x0348		VoC_shru16_ri(REG2,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0xF6A7417D,	//0x034a		VoC_movreg16(REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xDCB6790F,	//0x034c		VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0x1,DEFAULT)
0xCC645CB5,	//0x034e		VoC_multf32_rr(ACC0,REG1,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xF9FA5CB7,	//0x0350		VoC_shru16_ri(REG2,0xffffffff,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x510D1502,	//0x0352		VoC_sw16_d(REG2,0x510d)
0x510E1585,	//0x0354		VoC_sw32_d(ACC1,0x510e)
0x51101584,	//0x0356		VoC_sw32_d(ACC0,0x5110)
0xF90C4155,	//0x0358		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0xF685790A,	//0x035a		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xDCB5790D,	//0x035c		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xDFE941D7,	//0x035e		VoC_push16(RA,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG2,DEFAULT)
0xEFE87000,	//0x0360		VoC_lw16i_short(ACC0_LO,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDD9ADCB7,	//0x0362		VoC_sw32_p(REG45,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x1FFF0A88,	//0x0364		VoC_lw16i(ACC0_LO,0x1fff)
0x51041584,	//0x0366		VoC_sw32_d(ACC0,0x5104)
0x51061584,	//0x0368		VoC_sw32_d(ACC0,0x5106)
0x0A000A87,	//0x036a		VoC_lw16i(REG7,0xa00)
0x401A1406,	//0x036c		VoC_lw16_d(REG6,0x401a)
		//0x036e		LABLE_LOOP_DIV
0xDE0043F7,	//0x036e		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0x401A4FB7,	//0x0370		VoC_bnlt16_rd(LABLE_LOOP_DIV,REG7,0x401a)
0x401A0804,	//0x0372		VoC_mult16_rd(REG4,REG0,0x401a)
0x51180A85,	//0x0374		VoC_lw16i(REG5,0x5118)
0xF90C4165,	//0x0376		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xF9F47005,	//0x0378		VoC_shru16_ri(REG4,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x51081582,	//0x037a		VoC_sw32_d(REG45,0x5108)
0x510A1582,	//0x037c		VoC_sw32_d(REG45,0x510a)
0x51121808,	//0x037e		VoC_lw16i_set_inc(REG0,0x5112,0x2)
0x40181483,	//0x0380		VoC_lw32_d(REG67,0x4018)
0x401A1487,	//0x0382		VoC_lw32_d(RL7,0x401a)
0xF6EE61C7,	//0x0384		VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x04962B80,	//0x0386		VoC_jal(CoolSand_Div2)
0xDDC67F3B,	//0x0388		VoC_sw32inc_p(RL6,REG0,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x04962B80,	//0x038a		VoC_jal(CoolSand_Div2)
0xFFC0DDC6,	//0x038c		VoC_NAD	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0x05842B80,	//0x038e		VoC_jal(COOLSAND_DMA_READ)
0x51181805,	//0x0390		VoC_lw16i_set_inc(REG1,0x5118,0x1)
0xF4017F43,	//0x0392		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x401B1404,	//0x0394		VoC_lw16_d(REG4,0x401b)
0x152A07A4,	//0x0396		VoC_sub16_rd(REG4,REG4,0x152a)
0xF5E977BA,	//0x0398		VoC_lw16i_short(FORMAT32,0xfffffffd,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffffd,DEFAULT)
0x046A2E21,	//0x039a		VoC_loop_r(1,REG4)
0xF0047C6B,	//0x039c		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xd,DEFAULT)
0xE0145F43,	//0x039e		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x50F948A6,	//0x03a0		VoC_blt16_rd(LABLE_PREVIEW_L0,REG6,0x50f9)
0x05842B80,	//0x03a2		VoC_jal(COOLSAND_DMA_READ)
0x50F907B4,	//0x03a4		VoC_sub16_rd(REG4,REG6,0x50f9)
0x7D9AF005,	//0x03a6		VoC_shru32_ri(REG45,0xfffffff3,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF024F686,	//0x03a8		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0xFFC0DD0A,	//0x03aa		VoC_NAD	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
		//0x03ac		LABLE_PREVIEW_L0
0x510407B7,	//0x03ac		VoC_sub16_rd(REG7,REG6,0x5104)
0x51041506,	//0x03ae		VoC_sw16_d(REG6,0x5104)
0x18280A82,	//0x03b0		VoC_lw16i(REG2,0x1828)
0x1AA81807,	//0x03b2		VoC_lw16i_set_inc(REG3,0x1aa8,0x1)
0x03D035BC,	//0x03b4		VoC_bne16_rr(LABLE_PREVIEW_L1,REG7,REG4)
0x51056E0E,	//0x03b6		VoC_bnez16_d(LABLE_PREVIEW_L3,0x5105)
0xF6436062,	//0x03b8		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x51051504,	//0x03ba		VoC_sw16_d(REG4,0x5105)
0x51161581,	//0x03bc		VoC_sw32_d(REG23,0x5116)
0x04DA2B80,	//0x03be		VoC_jal(Coolsand_UpdateP4_addr)
0x04F02B80,	//0x03c0		VoC_jal(Coolsand_zoomline_yuv411)
0x03E42B00,	//0x03c2		VoC_jump_lg(LABLE_PREVIEW_L2)
		//0x03c4		LABLE_PREVIEW_L3
0x1581F007,	//0x03c4		VoC_sw32_d(REG23,0x5116)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x15075116,	//0x03c6		VoC_sw16_d(REG7,0x5105)(lo)	|	VoC_sw32_d(REG23,0x5116)(hi)
0xFFC05105,	//0x03c8		VoC_NAD	|	VoC_sw16_d(REG7,0x5105)(hi)
0x04DA2B80,	//0x03ca		VoC_jal(Coolsand_UpdateP4_addr)
0x04F02B80,	//0x03cc		VoC_jal(Coolsand_zoomline_yuv411)
0xFFC0E5D6,	//0x03ce		VoC_NAD	|	VoC_jump(LABLE_PREVIEW_L2)
		//0x03d0		LABLE_PREVIEW_L1
0x03E43187,	//0x03d0		VoC_bez16_r(LABLE_PREVIEW_L2,REG7)
0x6062F007,	//0x03d2		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x1581F643,	//0x03d4		VoC_sw32_d(REG23,0x5116)(lo)	|	VoC_movreg16(REG3,REG2,IN_PARALLEL)
0x15075116,	//0x03d6		VoC_sw16_d(REG7,0x5105)(lo)	|	VoC_sw32_d(REG23,0x5116)(hi)
0xFFC05105,	//0x03d8		VoC_NAD	|	VoC_sw16_d(REG7,0x5105)(hi)
0x04BA2B80,	//0x03da		VoC_jal(Coolsand_UpdateP3_addr)
0x04F02B80,	//0x03dc		VoC_jal(Coolsand_zoomline_yuv411)
0x1AA81807,	//0x03de		VoC_lw16i_set_inc(REG3,0x1aa8,0x1)
0x04CC2B80,	//0x03e0		VoC_jal(CoolSand_Updatep3p4)
0x04F02B80,	//0x03e2		VoC_jal(Coolsand_zoomline_yuv411)
		//0x03e4		LABLE_PREVIEW_L2
0x401A1404,	//0x03e4		VoC_lw16_d(REG4,0x401a)
0x20000A85,	//0x03e6		VoC_lw16i(REG5,0x2000)
0xF90C590B,	//0x03e8		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x51062983,	//0x03ea		VoC_and32_rd(REG67,0x5106)
0xDFC14377,	//0x03ec		VoC_push16(REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG5,REG6,DEFAULT)
0x51161481,	//0x03ee		VoC_lw32_d(REG23,0x5116)
0x401A0710,	//0x03f0		VoC_add16_rd(REG0,REG2,0x401a)
0x401A0719,	//0x03f2		VoC_add16_rd(REG1,REG3,0x401a)
0x16280A8C,	//0x03f4		VoC_lw16i(RL6_LO,0x1628)
0x15280A8D,	//0x03f6		VoC_lw16i(RL6_HI,0x1528)
0x14280A8F,	//0x03f8		VoC_lw16i(RL7_HI,0x1428)
0x17280A8E,	//0x03fa		VoC_lw16i(RL7_LO,0x1728)
0xF0087051,	//0x03fc		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF00B7052,	//0x03fe		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x04512E20,	//0x0400		VoC_loop_r(0,REG4)
0x9BD51BD4,	//0x0402		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xD1335173,	//0x0404		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0x9BC51BC4,	//0x0406		VoC_multf32inc_rp(ACC1,REG7,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)
0xF7656124,	//0x0408		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xD1315131,	//0x040a		VoC_mac32inc_rp(REG6,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xF0055F43,	//0x040c		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xF7676126,	//0x040e		VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC8FB48F0,	//0x0410		VoC_add32_rr(REG67,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG67,RL6,DEFAULT)
0x813FDF40,	//0x0412		VoC_add16_rp(REG7,REG4,REG7,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF435800,	//0x0414		VoC_push32(REG67,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x041A3107,	//0x0416		VoC_bgtz16_r(LABLE_CUTZOOM_R1,REG7)
0xFFC0F007,	//0x0418		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x041a		LABLE_CUTZOOM_R1
0xF8CF0409,	//0x041a		VoC_shr16_ri(REG7,0xfffffff9,IN_PARALLEL)	|	VoC_sub16_rp(REG1,REG0,REG1,DEFAULT)
0xF9570136,	//0x041c		VoC_shru16_ri(REG7,0xa,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG4,REG6,DEFAULT)
0x04223106,	//0x041e		VoC_bgtz16_r(LABLE_CUTZOOM_B1,REG6)
0xFFC0F006,	//0x0420		VoC_NAD	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0422		LABLE_CUTZOOM_B1
0xF9AF4108,	//0x0422		VoC_shru16_ri(REG7,0xfffffff5,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG4,REG1,DEFAULT)
0x04283100,	//0x0424		VoC_bgtz16_r(LABLE_CUTZOOM_G1,REG0)
0xFFC0F000,	//0x0426		VoC_NAD	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0428		LABLE_CUTZOOM_G1
0xF8C85FC1,	//0x0428		VoC_shr16_ri(REG0,0xfffffff9,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0xF8CE7948,	//0x042a		VoC_shr16_ri(REG6,0xfffffff9,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x9,DEFAULT)
0xF9D87956,	//0x042c		VoC_shru16_ri(REG0,0xfffffffb,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xa,DEFAULT)
0xD6216477,	//0x042e		VoC_lw16_sd(REG1,0x1,IN_PARALLEL)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0xDF806447,	//0x0430		VoC_pop16(REG0,IN_PARALLEL)	|	VoC_or16_rr(REG7,REG0,DEFAULT)
0xC1405F03,	//0x0432		VoC_add16_rr(REG0,REG5,REG0,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xF8C85C97,	//0x0434		VoC_shr16_ri(REG0,0xfffffff9,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x043A3100,	//0x0436		VoC_bgtz16_r(LABLE_CUTZOOM_G,REG0)
0xFFC0F000,	//0x0438		VoC_NAD	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x043a		LABLE_CUTZOOM_G
0xF948017F,	//0x043a		VoC_shru16_ri(REG0,0x9,IN_PARALLEL)	|	VoC_add16_rp(REG7,REG5,REG7,DEFAULT)
0x04403107,	//0x043c		VoC_bgtz16_r(LABLE_CUTZOOM_R,REG7)
0xFFC0F007,	//0x043e		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0440		LABLE_CUTZOOM_R
0xF8CF0176,	//0x0440		VoC_shr16_ri(REG7,0xfffffff9,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG5,REG6,DEFAULT)
0x04463106,	//0x0442		VoC_bgtz16_r(LABLE_CUTZOOM_B,REG6)
0xFFC0F006,	//0x0444		VoC_NAD	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0446		LABLE_CUTZOOM_B
0xF8CE7957,	//0x0446		VoC_shr16_ri(REG6,0xfffffff9,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xa,DEFAULT)
0xF95679AF,	//0x0448		VoC_shru16_ri(REG6,0xa,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff5,DEFAULT)
0xF9D86477,	//0x044a		VoC_shru16_ri(REG0,0xfffffffb,IN_PARALLEL)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0xF051E447,	//0x044c		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_or16_rr(REG7,REG0,DEFAULT)
0x5F00DC97,	//0x044e		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xDF03DA11,	//0x0450		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_sd(REG1,0x0,IN_PARALLEL)
		//0x0451		VoC_endloop0
0xDF815F03,	//0x0452		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0x51094531,	//0x0454		VoC_bne16_rd(LABLE_PREVIEW_L4,REG1,0x5109)
0x288C0A85,	//0x0456		VoC_lw16i(REG5,0x288c)
0x51081404,	//0x0458		VoC_lw16_d(REG4,0x5108)
0x40141484,	//0x045a		VoC_lw32_d(ACC0,0x4014)
0x7FC215C2,	//0x045c		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x045e		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0460		VoC_NOP	|	VoC_cfg(0x0)
0x510A0924,	//0x0462		VoC_add32_rd(ACC0,ACC0,0x510a)
0x00081794,	//0x0464		VoC_cfg_lg(0x8,)
0x51181805,	//0x0466		VoC_lw16i_set_inc(REG1,0x5118,0x1)
0x40141584,	//0x0468		VoC_sw32_d(ACC0,0x4014)
		//0x046a		LABLE_PREVIEW_L4
		//0x046a		VoC_endloop1
0x5114091B,	//0x046a		VoC_add32_rd(REG67,REG67,0x5114)
0xF00A7051,	//0x046c		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x401A078A,	//0x046e		VoC_sub16_rd(REG2,REG1,0x401a)
0x401A1404,	//0x0470		VoC_lw16_d(REG4,0x401a)
0x2E20F814,	//0x0472		VoC_loop_r(0,REG4)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xD9D40478,	//0x0474		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0xDDCCD9D4,	//0x0476		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
		//0x0478		VoC_endloop0
0xDFA9DDCC,	//0x0478		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x51180A85,	//0x047a		VoC_lw16i(REG5,0x5118)
0x048B350D,	//0x047c		VoC_be16_rr(LABLE_PREVIEW_L7,REG1,REG5)
0xF90D426C,	//0x047e		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG1,REG5,DEFAULT)
0x1484F90C,	//0x0480		VoC_lw32_d(ACC0,0x4014)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x15C24014,	//0x0482		VoC_sw32_d(REG45,0xffc2)(lo)	|	VoC_lw32_d(ACC0,0x4014)(hi)
0x15C47FC2,	//0x0484		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw32_d(REG45,0xffc2)(hi)
0xDE807FC4,	//0x0486		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x0488		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xFFC00008,	//0x048a		VoC_NOP	|	VoC_cfg_lg(0x8,)(hi)
		//0x048b		LABLE_PREVIEW_L7
0xFFC0E580,	//0x048c		VoC_NAD	|	VoC_return
		//0x048e		CoolSand_SignBits2
0xEE257023,	//0x048e		VoC_lw16i_short(REG5,0xffffffe2,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x0490		Lable_X_L1
0xC15D790C,	//0x0490		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x049031C4,	//0x0492		VoC_bnez16_r(Lable_X_L1,REG4)
0xFFC0E580,	//0x0494		VoC_NAD	|	VoC_return
		//0x0496		CoolSand_Div2
0xF3FF5FE9,	//0x0496		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4460C4,	//0x0498		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x048E2B80,	//0x049a		VoC_jal(CoolSand_SignBits2)
0xF6C860A6,	//0x049c		VoC_movreg16(ACC0_LO,REG6,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xFF4560E4,	//0x049e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x048E2B80,	//0x04a0		VoC_jal(CoolSand_SignBits2)
0xFEF460EA,	//0x04a2		VoC_shru32_rr(ACC0,REG6,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG7,DEFAULT)
0xC3747EED,	//0x04a4		VoC_sub16_rr(REG4,REG5,REG6,IN_PARALLEL)	|	VoC_shru32_rr(ACC1,REG5,DEFAULT)
0xE0167087,	//0x04a6		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xE007413C,	//0x04a8		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xFF467223,	//0x04aa		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x11,DEFAULT)
		//0x04ac		LABLE_DIV_COUNTDOWN
0x04B0362C,	//0x04ac		VoC_bgt32_rr(LABLE_DIV_L0,ACC1,ACC0)
0xC99E4B2C,	//0x04ae		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
		//0x04b0		LABLE_DIV_L0
0xFDFC7DFE,	//0x04b0		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xffffffff,DEFAULT)
0x31C3DE18,	//0x04b2		VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(lo)	|	VoC_inc_p(REG3,DEFAULT)
0x5FA904AC,	//0x04b4		VoC_pop16(RA,DEFAULT)	|	VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(hi)
0xFEE6F00B,	//0x04b6		VoC_shru32_rr(RL6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xFFC0E580,	//0x04b8		VoC_NAD	|	VoC_return
		//0x04ba		Coolsand_UpdateP3_addr
0x51020834,	//0x04ba		VoC_mult16_rd(REG4,REG6,0x5102)
0x50FA1804,	//0x04bc		VoC_lw16i_set_inc(REG0,0x50fa,0x1)
0x0836F90E,	//0x04be		VoC_mult16_rd(REG6,REG6,0x5103)(lo)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x07245103,	//0x04c0		VoC_add16_rd(REG4,REG4,0x50fd)(lo)	|	VoC_mult16_rd(REG6,REG6,0x5103)(hi)
0x073550FD,	//0x04c2		VoC_add16_rd(REG5,REG6,0x50fe)(lo)	|	VoC_add16_rd(REG4,REG4,0x50fd)(hi)
0x073650FE,	//0x04c4		VoC_add16_rd(REG6,REG6,0x5100)(lo)	|	VoC_add16_rd(REG5,REG6,0x50fe)(hi)
0x15825100,	//0x04c6		VoC_sw32_d(REG45,0x50fa)(lo)	|	VoC_add16_rd(REG6,REG6,0x5100)(hi)
0x150650FA,	//0x04c8		VoC_sw16_d(REG6,0x50fc)(lo)	|	VoC_sw32_d(REG45,0x50fa)(hi)
0xE58050FC,	//0x04ca		VoC_return	|	VoC_sw16_d(REG6,0x50fc)(hi)
		//0x04cc		CoolSand_Updatep3p4
0x50FA1482,	//0x04cc		VoC_lw32_d(REG45,0x50fa)
0x50FC1406,	//0x04ce		VoC_lw16_d(REG6,0x50fc)
0x51020912,	//0x04d0		VoC_add32_rd(REG45,REG45,0x5102)
0x51030736,	//0x04d2		VoC_add16_rd(REG6,REG6,0x5103)
0x50FA1582,	//0x04d4		VoC_sw32_d(REG45,0x50fa)
0x50FC1506,	//0x04d6		VoC_sw16_d(REG6,0x50fc)
0xFFC0E580,	//0x04d8		VoC_NAD	|	VoC_return
		//0x04da		Coolsand_UpdateP4_addr
0x51020834,	//0x04da		VoC_mult16_rd(REG4,REG6,0x5102)
0x50FA1804,	//0x04dc		VoC_lw16i_set_inc(REG0,0x50fa,0x1)
0x0836F90E,	//0x04de		VoC_mult16_rd(REG6,REG6,0x5103)(lo)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x07245103,	//0x04e0		VoC_add16_rd(REG4,REG4,0x50fd)(lo)	|	VoC_mult16_rd(REG6,REG6,0x5103)(hi)
0x073550FD,	//0x04e2		VoC_add16_rd(REG5,REG6,0x50fe)(lo)	|	VoC_add16_rd(REG4,REG4,0x50fd)(hi)
0x073650FE,	//0x04e4		VoC_add16_rd(REG6,REG6,0x5100)(lo)	|	VoC_add16_rd(REG5,REG6,0x50fe)(hi)
0x09125100,	//0x04e6		VoC_add32_rd(REG45,REG45,0x5102)(lo)	|	VoC_add16_rd(REG6,REG6,0x5100)(hi)
0x07365102,	//0x04e8		VoC_add16_rd(REG6,REG6,0x5103)(lo)	|	VoC_add32_rd(REG45,REG45,0x5102)(hi)
0x15825103,	//0x04ea		VoC_sw32_d(REG45,0x50fa)(lo)	|	VoC_add16_rd(REG6,REG6,0x5103)(hi)
0x150650FA,	//0x04ec		VoC_sw16_d(REG6,0x50fc)(lo)	|	VoC_sw32_d(REG45,0x50fa)(hi)
0xE58050FC,	//0x04ee		VoC_return	|	VoC_sw16_d(REG6,0x50fc)(hi)
		//0x04f0		Coolsand_zoomline_yuv411
0xDFC17F43,	//0x04f0		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x51061486,	//0x04f2		VoC_lw32_d(RL6,0x5106)
0x20000A80,	//0x04f4		VoC_lw16i(REG0,0x2000)
0x50FA1806,	//0x04f6		VoC_lw16i_set_inc(REG2,0x50fa,0x1)
0x401A0719,	//0x04f8		VoC_add16_rd(REG1,REG3,0x401a)
0xF0057F42,	//0x04fa		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw32z(REG45,DEFAULT)
0xDF405FC2,	//0x04fc		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x401A2005,	//0x04fe		VoC_lw16d_set_inc(REG1,0x401a,0x1)
0x0789F909,	//0x0500		VoC_sub16_rd(REG1,REG1,0x152a)(lo)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0xFFC0152A,	//0x0502		VoC_NAD	|	VoC_sub16_rd(REG1,REG1,0x152a)(hi)
0x05472E08,	//0x0504		VoC_loop_r(0,REG1)
0xFA6A7F17,	//0x0506		VoC_shr32_ri(REG45,0xd,IN_PARALLEL)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xD6124237,	//0x0508		VoC_lw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG0,REG6,DEFAULT)
0xF90C6085,	//0x050a		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xFF1C0310,	//0x050c		VoC_movreg32(ACC0,REG67,IN_PARALLEL)	|	VoC_add16inc_rp(REG0,REG4,REG2,DEFAULT)
0xE0160311,	//0x050e		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_add16inc_rp(REG1,REG4,REG2,DEFAULT)
0x81126435,	//0x0510		VoC_add16_rp(REG2,REG4,REG2,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x052831C5,	//0x0512		VoC_bnez16_r(LABLE_ZOOMLINE_L1,REG5)
0xFF235805,	//0x0514		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0x00FF0A80,	//0x0516		VoC_lw16i(REG0,0xff)
0xF6A47945,	//0x0518		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x8,DEFAULT)
0xCD746404,	//0x051a		VoC_multf32_rr(ACC0,REG5,REG6,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xD8144E27,	//0x051c		VoC_lw16_p(REG4,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG7,DEFAULT)
0xD8156404,	//0x051e		VoC_lw16_p(REG5,REG1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xCD3D7945,	//0x0520		VoC_multf32_rr(ACC1,REG4,REG7,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x8,DEFAULT)
0xCE2E5825,	//0x0522		VoC_mac32_rr(REG5,REG6,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG2,DEFAULT)
0x6404D824,	//0x0524		VoC_and16_rr(REG4,REG0,DEFAULT)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xE5D5F945,	//0x0526		VoC_jump(LABLE_ZOOMLINE_L2)	|	VoC_shru16_ri(REG5,0x8,IN_PARALLEL)
		//0x0528		LABLE_ZOOMLINE_L1
0xFF235884,	//0x0528		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x00FF0A80,	//0x052a		VoC_lw16i(REG0,0xff)
0xF9445805,	//0x052c		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0xCD3C6405,	//0x052e		VoC_multf32_rr(ACC0,REG4,REG7,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG0,DEFAULT)
0xD8944E2E,	//0x0530		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0xF9445815,	//0x0532		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0xCD3D6405,	//0x0534		VoC_multf32_rr(ACC1,REG4,REG7,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG0,DEFAULT)
0xCE2E58A4,	//0x0536		VoC_mac32_rr(REG5,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x6405D825,	//0x0538		VoC_and16_rr(REG5,REG0,DEFAULT)	|	VoC_lw16_p(REG5,REG2,DEFAULT)
0xFFC0F944,	//0x053a		VoC_NAD	|	VoC_shru16_ri(REG4,0x8,IN_PARALLEL)
		//0x053c		LABLE_ZOOMLINE_L2
0x5112093F,	//0x053c		VoC_add32_rd(RL7,RL7,0x5112)
0xDCB94D74,	//0x053e		VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG6,DEFAULT)
0xD9084E27,	//0x0540		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG7,DEFAULT)
0x64F3FF3B,	//0x0542		VoC_and32_rr(REG67,RL6,DEFAULT)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x5C99DC9B,	//0x0544		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG1,IN_PARALLEL)
0xDD08FF3A,	//0x0546		VoC_sw32_sd(REG01,0x0,DEFAULT)	|	VoC_movreg32(REG45,RL7,IN_PARALLEL)
		//0x0547		VoC_endloop0
0x152A079A,	//0x0548		VoC_sub16_rd(REG2,REG3,0x152a)
0x152B078A,	//0x054a		VoC_sub16_rd(REG2,REG1,0x152b)
0xD82BD829,	//0x054c		VoC_lw16_p(ACC1_HI,REG2,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG2,DEFAULT)
0x152A078A,	//0x054e		VoC_sub16_rd(REG2,REG1,0x152a)
0xD822DC39,	//0x0550		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_sw16_p(ACC0_HI,REG3,DEFAULT)
0x5C12DC9B,	//0x0552		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)
0x1401DE18,	//0x0554		VoC_lw16_d(REG1,0x401a)(lo)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x7909401A,	//0x0556		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_lw16_d(REG1,0x401a)(hi)
0x0789DF82,	//0x0558		VoC_sub16_rd(REG1,REG1,0x152a)(lo)	|	VoC_pop16(REG2,IN_PARALLEL)
0xFFC0152A,	//0x055a		VoC_NAD	|	VoC_sub16_rd(REG1,REG1,0x152a)(hi)
0x057C2E08,	//0x055c		VoC_loop_r(0,REG1)
0xFA6A7F17,	//0x055e		VoC_shr32_ri(REG45,0xd,IN_PARALLEL)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xE0114237,	//0x0560		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG0,REG6,DEFAULT)
0xF90C6085,	//0x0562		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x8110640D,	//0x0564		VoC_add16_rp(REG0,REG4,REG2,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG1,DEFAULT)
0x056F31C5,	//0x0566		VoC_bnez16_r(LABLE_ZOOMLINE_L3,REG5)
0xD8055804,	//0x0568		VoC_lw16_p(REG5,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0x00FF1604,	//0x056a		VoC_and16_ri(REG4,0xff)
0xCD3C7945,	//0x056c		VoC_multf32_rr(ACC0,REG4,REG7,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x8,DEFAULT)
0xD884E5C8,	//0x056e		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_jump(LABLE_ZOOMLINE_L4)
		//0x056f		LABLE_ZOOMLINE_L3
0xF9445805,	//0x0570		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0x00FF1605,	//0x0572		VoC_and16_ri(REG5,0xff)
0xFFC0CD3C,	//0x0574		VoC_NAD	|	VoC_multf32_rr(ACC0,REG4,REG7,DEFAULT)
		//0x0576		LABLE_ZOOMLINE_L4
0xD9084E2E,	//0x0576		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0x5112093B,	//0x0578		VoC_add32_rd(REG67,RL7,0x5112)
0xFF1A64F3,	//0x057a		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_and32_rr(REG67,RL6,DEFAULT)
		//0x057c		VoC_endloop0
0x079ADCB9,	//0x057c		VoC_sub16_rd(REG2,REG3,0x152a)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
0xDF04152A,	//0x057e		VoC_pop32(ACC0,DEFAULT)	|	VoC_sub16_rd(REG2,REG3,0x152a)(hi)
0xDF81D822,	//0x0580		VoC_pop16(REG1,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xE580DC32,	//0x0582		VoC_return	|	VoC_sw16_p(REG2,REG3,DEFAULT)
		//0x0584		COOLSAND_DMA_READ
0x0E940A85,	//0x0584		VoC_lw16i(REG5,0xe94)
0x510C1404,	//0x0586		VoC_lw16_d(REG4,0x510c)
0x40101484,	//0x0588		VoC_lw32_d(ACC0,0x4010)
0x7FC215C2,	//0x058a		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x058c		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x058e		VoC_NOP	|	VoC_cfg(0x0)
0x510E0924,	//0x0590		VoC_add32_rd(ACC0,ACC0,0x510e)
0x00081794,	//0x0592		VoC_cfg_lg(0x8,)
0x40101584,	//0x0594		VoC_sw32_d(ACC0,0x4010)
0x50FF1405,	//0x0596		VoC_lw16_d(REG5,0x50ff)
0x510D1404,	//0x0598		VoC_lw16_d(REG4,0x510d)
0x401C1484,	//0x059a		VoC_lw32_d(ACC0,0x401c)
0x7FC215C2,	//0x059c		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x059e		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x05a0		VoC_NOP	|	VoC_cfg(0x0)
0x51100924,	//0x05a2		VoC_add32_rd(ACC0,ACC0,0x5110)
0x00081794,	//0x05a4		VoC_cfg_lg(0x8,)
0x401C1584,	//0x05a6		VoC_sw32_d(ACC0,0x401c)
0x51011405,	//0x05a8		VoC_lw16_d(REG5,0x5101)
0x510D1404,	//0x05aa		VoC_lw16_d(REG4,0x510d)
0x401E1484,	//0x05ac		VoC_lw32_d(ACC0,0x401e)
0x7FC215C2,	//0x05ae		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x05b0		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x05b2		VoC_NOP	|	VoC_cfg(0x0)
0x51100924,	//0x05b4		VoC_add32_rd(ACC0,ACC0,0x5110)
0x00081794,	//0x05b6		VoC_cfg_lg(0x8,)
0x401E1584,	//0x05b8		VoC_sw32_d(ACC0,0x401e)
0xDF40E580,	//0x05ba		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x05bb		vpp_AmjpZoomGenerateYuv2RgbTable
0xDF42DF41,	//0x05bc		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xDFE95F43,	//0x05be		VoC_push16(RA,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x14281804,	//0x05c0		VoC_lw16i_set_inc(REG0,0x1428,0x1)
0x506E1805,	//0x05c2		VoC_lw16i_set_inc(REG1,0x506e,0x1)
0x04001FBE,	//0x05c4		VoC_lw16i_set_inc(REG2,0x400,0xffffffff)
0x00021FBF,	//0x05c6		VoC_lw16i_set_inc(REG3,0x2,0xffffffff)
0x00010A84,	//0x05c8		VoC_lw16i(REG4,0x1)
0x04000A85,	//0x05ca		VoC_lw16i(REG5,0x400)
0x023A2B80,	//0x05cc		VoC_jal(vpp_AmjpDecompressVssAdpcm16Table)
0xDFA95F03,	//0x05ce		VoC_pop16(RA,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xDF01DF02,	//0x05d0		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xE580DF00,	//0x05d2		VoC_return	|	VoC_pop32(REG01,DEFAULT)
