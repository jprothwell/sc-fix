		//0x0d00		VoC_code_section_2
		//0x0d00		CII_MRRING_Decode
0x40016C1E,	//0x0d00		VoC_bez16_d(CII_MAIN_VOCODER,0x4001)
0x040A180B,	//0x0d02		VoC_lw16i_set_inc(REG3,0x40a,0x2)
0xF201F000,	//0x0d04		VoC_lw16i_short(REG1,0x10,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF01DF01C,	//0x0d06		VoC_lw16i_short(WRAP1,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF01FF01E,	//0x0d08		VoC_lw16i_short(WRAP3,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x7FC11540,	//0x0d0a		VoC_sw16_d(REG0,0xffc1)
0x003F0A96,	//0x0d0c		VoC_lw16i(STATUS,0x3f)
0x1500F01B,	//0x0d0e		VoC_sw16_d(REG0,0x562a)(lo)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x7F44562A,	//0x0d10		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw16_d(REG0,0x562a)(hi)
0x0A84EFF5,	//0x0d12		VoC_lw16i(REG4,0xf7)(lo)	|	VoC_lw16i_short(REG5,0xffff,IN_PARALLEL)
0x608900F7,	//0x0d14		VoC_movreg16(ACC0_HI,REG4,DEFAULT)	|	VoC_lw16i(REG4,0xf7)(hi)
0x1509E017,	//0x0d16		VoC_sw16_d(ACC0_HI,0x4001)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xDDDC4001,	//0x0d18		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw16_d(ACC0_HI,0x4001)(hi)
0x1507DDDA,	//0x0d1a		VoC_sw16_d(REG7,0x562e)(lo)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xFFC0562E,	//0x0d1c		VoC_NAD	|	VoC_sw16_d(REG7,0x562e)(hi)
		//0x0d1e		CII_MAIN_VOCODER
0x040A1808,	//0x0d1e		VoC_lw16i_set_inc(REG0,0x40a,0x2)
0x407E0700,	//0x0d20		VoC_add16_rd(REG0,REG0,0x407e)
0xD9C3DFE9,	//0x0d22		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF6C759C1,	//0x0d24		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x563A1507,	//0x0d26		VoC_sw16_d(REG7,0x563a)
0x56311502,	//0x0d28		VoC_sw16_d(REG2,0x5631)
0x56331503,	//0x0d2a		VoC_sw16_d(REG3,0x5633)
0x0D3F2B80,	//0x0d2c		VoC_jal(CII_MAIN_DECODER)
0xDFA97F44,	//0x0d2e		VoC_pop16(RA,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE0C57024,	//0x0d30		VoC_lw16i_short(REG5,0xc,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xE5067003,	//0x0d32		VoC_lw16i_short(REG6,0x50,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x1F400A82,	//0x0d34		VoC_lw16i(REG2,0x1f40)
0x562E1508,	//0x0d36		VoC_sw16_d(ACC0_LO,0x562e)
0x40231504,	//0x0d38		VoC_sw16_d(REG4,0x4023)
0x40261505,	//0x0d3a		VoC_sw16_d(REG5,0x4026)
0x40241581,	//0x0d3c		VoC_sw32_d(REG23,0x4024)
0xDFE9E580,	//0x0d3e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0d3f		CII_MAIN_DECODER
0x562E1402,	//0x0d40		VoC_lw16_d(REG2,0x562e)
0xF7F9F7F8,	//0x0d42		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0x40BC4037,	//0x0d44		VoC_be16_rd(CII_MAIN_DECODER_end,REG7,0x40bc)
0x0D782B80,	//0x0d46		VoC_jal(CII_reload_sideinfo)
0x112E2B80,	//0x0d48		VoC_jal(CII_AMR_Decode)
		//0x0d4a		CII_MAIN_DECODER_end
0x1400DFA9,	//0x0d4a		VoC_lw16_d(REG0,0x562f)(lo)	|	VoC_pop16(RA,DEFAULT)
0xF007562F,	//0x0d4c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16_d(REG0,0x562f)(hi)
0xFFC0E580,	//0x0d4e		VoC_NAD	|	VoC_return
		//0x0d50		CII_NORM_L_ACC0
0x00001805,	//0x0d50		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xFF255F45,	//0x0d52		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
0x0D5F3304,	//0x0d54		VoC_bez32_r(G_PITCH_NORM_L_3_EXIT,ACC0)
0x0D5933C4,	//0x0d56		VoC_bnltz32_r(G_PITCH_NORM_L_3_1,ACC0)
0xEBE5E3C4,	//0x0d58		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_not32_r(ACC0,DEFAULT)
		//0x0d59		G_PITCH_NORM_L_3_1
0x40A8642C,	//0x0d5a		VoC_bnlt32_rd(G_PITCH_NORM_L_3_EXIT,ACC0,0x40a8)
0xDE087BFC,	//0x0d5c		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
		//0x0d5e		VoC_endloop0
0xFF2CFBFD,	//0x0d5e		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
		//0x0d5f		G_PITCH_NORM_L_3_EXIT
0xE580DF05,	//0x0d60		VoC_return	|	VoC_pop32(ACC1,DEFAULT)
		//0x0d62		CII_DIV_S
0x7FFF0A82,	//0x0d62		VoC_lw16i(REG2,0x7fff)
0x0D773508,	//0x0d64		VoC_be16_rr(SCHUR1_DIV_S_11,REG1,REG0)
0x00001806,	//0x0d66		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xF62E600C,	//0x0d68		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
0xE00F700D,	//0x0d6a		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0xFBFE69C6,	//0x0d6c		VoC_shr32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_loop_i_short(0xe,DEFAULT)
0x0D72363E,	//0x0d6e		VoC_bgt32_rr(SCHUR1_DIV_S_1,RL7,RL6)
0xDE104BBE,	//0x0d70		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
		//0x0d72		SCHUR1_DIV_S_1
		//0x0d72		VoC_endloop0
0xFBFE78FA,	//0x0d72		VoC_shr32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x0D77363E,	//0x0d74		VoC_bgt32_rr(SCHUR1_DIV_S_11,RL7,RL6)
0xE580DE10,	//0x0d76		VoC_return	|	VoC_inc_p(REG2,DEFAULT)
		//0x0d77		SCHUR1_DIV_S_11
		//0x0d78		CII_reload_sideinfo
0x1404E0E6,	//0x0d78		VoC_lw16_d(REG4,0x562c)(lo)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x783E562C,	//0x0d7a		VoC_shr16_ri(REG6,0x7,DEFAULT)	|	VoC_lw16_d(REG4,0x562c)(hi)
0xF003F83C,	//0x0d7c		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shr16_ri(REG4,0x7,IN_PARALLEL)
0x0D813534,	//0x0d7e		VoC_be16_rr(NO_SECTION_RESET,REG6,REG4)
0xE45AF023,	//0x0d80		VoC_or16_rr(REG2,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x0d81		NO_SECTION_RESET
0x56302882,	//0x0d82		VoC_or16_rd(REG2,0x5630)
0x56301503,	//0x0d84		VoC_sw16_d(REG3,0x5630)
0x562C1507,	//0x0d86		VoC_sw16_d(REG7,0x562c)
0x56351807,	//0x0d88		VoC_lw16i_set_inc(REG3,0x5635,0x1)
0xF1E6E847,	//0x0d8a		VoC_lw16i_short(REG6,0xf,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0x401EE43E,	//0x0d8c		VoC_be16_rd(SECTION_4_DONE,REG6,0x4083)(lo)	|	VoC_and16_rr(REG6,REG7,DEFAULT)
0xDCB64083,	//0x0d8e		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_be16_rd(SECTION_4_DONE,REG6,0x4083)(hi)
		//0x0d90		SECTION_4_DONE
0x1807F827,	//0x0d90		VoC_lw16i_set_inc(REG3,0x5636,0x1)(lo)	|	VoC_shr16_ri(REG7,0x4,DEFAULT)
		//0x0d91		VoC_endloop0
0x15065636,	//0x0d92		VoC_sw16_d(REG6,0x5637)(lo)	|	VoC_lw16i_set_inc(REG3,0x5636,0x1)(hi)
0xE5805637,	//0x0d94		VoC_return	|	VoC_sw16_d(REG6,0x5637)(hi)
		//0x0d96		CII_Copy_M
0xE8A2D9C4,	//0x0d96		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDCCD9C4,	//0x0d98		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0d99		VoC_endloop0
0xD9C2E580,	//0x0d9a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_return
		//0x0d9b		CII_scale
0xE6C4F8FB,	//0x0d9c		VoC_loop_r_short(REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0xFE15FE14,	//0x0d9e		VoC_shr16_rr(REG5,REG2,DEFAULT)	|	VoC_shr16_rr(REG4,REG2,DEFAULT)
0xDDCAD9C2,	//0x0da0		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x0da1		VoC_endloop0
0xFFC0E580,	//0x0da2		VoC_NAD	|	VoC_return
		//0x0da4		CII_copy_xy
0xF8FE59C4,	//0x0da4		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C4E782,	//0x0da6		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x0da8		VoC_endloop0
0xF80EDDCC,	//0x0da8		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDFE9E580,	//0x0daa		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0dab		CII_dtx_com_s2
0x2B80C079,	//0x0dac		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xFF440D96,	//0x0dae		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
0x0DB22CA0,	//0x0db0		VoC_loop_i(0x0,0x50)
		//0x0db2		VoC_endloop0
0x0A86D512,	//0x0db2		VoC_lw16i(REG6,0x2149)(lo)	|	VoC_bimac32inc_pp(REG2,REG2)
0x2B802149,	//0x0db4		VoC_jal(CII_Log2)(lo)	|	VoC_lw16i(REG6,0x2149)(hi)
0xF8B40EA5,	//0x0db6		VoC_shr16_ri(REG4,0xfffffff6,DEFAULT)	|	VoC_jal(CII_Log2)(hi)
0xC12CF82D,	//0x0db8		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0x5,DEFAULT)
0xC334DFA9,	//0x0dba		VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0dbc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0dbd		CII_DIV_32
0x33C2FF15,	//0x0dbe		VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)(lo)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x0B920DC3,	//0x0dc0		VoC_sub32_dr(REG45,0x40a4,REG45)(lo)	|	VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)(hi)
0xF02340A4,	//0x0dc2		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_sub32_dr(REG45,0x40a4,REG45)(hi)
		//0x0dc3		DIV_32_L_ABS_IN
0x3FFF0A80,	//0x0dc4		VoC_lw16i(REG0,0x3fff)
0x2B80E0E1,	//0x0dc6		VoC_jal(CII_DIV_S)(lo)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xC7900D62,	//0x0dc8		VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)	|	VoC_jal(CII_DIV_S)(hi)
0xCE03CDD4,	//0x0dca		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0x0BA3F90C,	//0x0dcc		VoC_sub32_dr(REG67,0x40aa,ACC0)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF90E40AA,	//0x0dce		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_sub32_dr(REG67,0x40aa,ACC0)(hi)
0xCDD4C790,	//0x0dd0		VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)
0xFFC0CE03,	//0x0dd2		VoC_NOP	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0xF90EFF23,	//0x0dd4		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xC7704D7C,	//0x0dd6		VoC_multf16_rr(REG0,REG5,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xCE03C73E,	//0x0dd8		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf16_rr(REG6,REG4,REG7,DEFAULT)
0xDFA9CE33,	//0x0dda		VoC_pop16(RA,DEFAULT)	|	VoC_mac32_rr(REG6,REG3,DEFAULT)
0xFF23FBF4,	//0x0ddc		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0DE232C5,	//0x0dde		VoC_bngtz32_r(DIV_32_L_ABS_OUT,ACC1)
0x40A40B9B,	//0x0de0		VoC_sub32_dr(REG67,0x40a4,REG67)
		//0x0de2		DIV_32_L_ABS_OUT
0xF026E580,	//0x0de2		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_return
		//0x0de3		CII_Inv_sqrt
0x40A45030,	//0x0de4		VoC_bgt32_rd(INV_SQRT101,REG01,0x40a4)
0x0A81F7E0,	//0x0de6		VoC_lw16i(REG1,0x3fff)(lo)	|	VoC_lw16i_short(REG0,0xffff,DEFAULT)
0xE5803FFF,	//0x0de8		VoC_return	|	VoC_lw16i(REG1,0x3fff)(hi)
		//0x0dea		INV_SQRT101
0x00001806,	//0x0dea		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xEBE3FFC0,	//0x0dec		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x40A86420,	//0x0dee		VoC_bnlt32_rd(NORM_L105,REG01,0x40a8)
		//0x0df0		VoC_endloop0
0xFBF85E10,	//0x0df0		VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
		//0x0df2		NORM_L105
0x408D0B12,	//0x0df2		VoC_sub16_dr(REG2,0x408d,REG2)
0xF80A6416,	//0x0df4		VoC_shr16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG2,DEFAULT)
0x0DF931C6,	//0x0df6		VoC_bnez16_r(INV_SQRT102,REG6)
0xFA48FA08,	//0x0df8		VoC_shr32_ri(REG01,0x9,DEFAULT)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
		//0x0df9		INV_SQRT102
0x4087078E,	//0x0dfa		VoC_sub16_rd(REG6,REG1,0x4087)
0xFA085E10,	//0x0dfc		VoC_shr32_ri(REG01,0x1,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x416E1805,	//0x0dfe		VoC_lw16i_set_inc(REG1,0x416e,0x1)
0xE0084189,	//0x0e00		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x7FFF1600,	//0x0e02		VoC_and16_ri(REG0,0x7fff)
0x60C9D896,	//0x0e04		VoC_movreg16(ACC0_HI,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xCE888589,	//0x0e06		VoC_msu32_rr(REG1,REG0,DEFAULT)	|	VoC_sub16_rp(REG1,REG6,REG1,IN_PARALLEL)
0xFF20FFC0,	//0x0e08		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xE580FE90,	//0x0e0a		VoC_return	|	VoC_shr32_rr(REG01,REG2,DEFAULT)
		//0x0e0c		CII_Get_lsp_pol
0xFF44F045,	//0x0e0c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x01000A89,	//0x0e0e		VoC_lw16i(ACC0_HI,0x100)
0xE0477040,	//0x0e10		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xFF445DD4,	//0x0e12		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x0E342C0B,	//0x0e14		VoC_loop_i(0x1,0x5)
0x407E4180,	//0x0e16		VoC_be16_rd(Get_lsp_pol_L1,REG0,0x407e)
0xC22E59A4,	//0x0e18		VoC_sub16_rr(REG6,REG0,REG5,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x6791F80E,	//0x0e1a		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xC2AEDD94,	//0x0e1c		VoC_sub16_rr(REG6,REG2,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,IN_PARALLEL)
0xD99442BC,	//0x0e1e		VoC_lw32_p(ACC0,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
0x790ED9B3,	//0x0e20		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32_p(REG67,REG6,DEFAULT)
0x8D8E99CD,	//0x0e22		VoC_multf16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,IN_PARALLEL)
0x1124F027,	//0x0e24		VoC_add32_rp(ACC0,ACC0,REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE046CE37,	//0x0e26		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_mac32_rr(REG6,REG7,IN_PARALLEL)
0x4B2CFBFD,	//0x0e28		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0xC2AAE047,	//0x0e2a		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
		//0x0e2c		VoC_endloop0
0xD994DDB4,	//0x0e2c		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x0e2e		Get_lsp_pol_L1
0x409A1404,	//0x0e2e		VoC_lw16_d(REG4,0x409a)
0xE012D1A1,	//0x0e30		VoC_movreg16(INC2,REG0,DEFAULT)	|	VoC_msu32inc_rp(REG4,REG1,DEFAULT)
0xDDD4C028,	//0x0e32		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
		//0x0e34		VoC_endloop1
0xE580C2BC,	//0x0e34		VoC_return	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
		//0x0e36		CII_Lsp_Az
0xDF40DFE9,	//0x0e36		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x642A180A,	//0x0e38		VoC_lw16i_set_inc(REG2,0x642a,0x2)
0x0E0C2B80,	//0x0e3a		VoC_jal(CII_Get_lsp_pol)
0x180AD908,	//0x0e3c		VoC_lw16i_set_inc(REG2,0x6436,0x2)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x07096436,	//0x0e3e		VoC_add16_rd(REG1,REG1,0x40a6)(lo)	|	VoC_lw16i_set_inc(REG2,0x6436,0x2)(hi)
0xFFC040A6,	//0x0e40		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x40a6)(hi)
0x0E0C2B80,	//0x0e42		VoC_jal(CII_Get_lsp_pol)
0x64341FB8,	//0x0e44		VoC_lw16i_set_inc(REG0,0x6434,0xfffffffe)
0x64321FBA,	//0x0e46		VoC_lw16i_set_inc(REG2,0x6432,0xfffffffe)
0x64401FB9,	//0x0e48		VoC_lw16i_set_inc(REG1,0x6440,0xfffffffe)
0x643E1FBB,	//0x0e4a		VoC_lw16i_set_inc(REG3,0x643e,0xfffffffe)
0xE0A768A7,	//0x0e4c		VoC_lw16i_short(REG7,0xa,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x9314D984,	//0x0e4e		VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x975DD98D,	//0x0e50		VoC_sub32inc_rp(ACC1,ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xDDCDDDC4,	//0x0e52		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0e53		VoC_endloop0
0x10000A84,	//0x0e54		VoC_lw16i(REG4,0x1000)
0xF3FF5F01,	//0x0e56		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xF00640BB,	//0x0e58		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG7,DEFAULT)
0x642C1808,	//0x0e5a		VoC_lw16i_set_inc(REG0,0x642c,0x2)
0x64381809,	//0x0e5c		VoC_lw16i_set_inc(REG1,0x6438,0x2)
0xDCA468B0,	//0x0e5e		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD9CED9C7,	//0x0e60		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFA64C9F4,	//0x0e62		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,RL7,RL6,DEFAULT)
0x40A60924,	//0x0e64		VoC_add32_rd(ACC0,ACC0,0x40a6)
0xCBF4FA0C,	//0x0e66		VoC_sub32_rr(ACC0,RL7,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFA64DCA8,	//0x0e68		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0x40A60924,	//0x0e6a		VoC_add32_rd(ACC0,ACC0,0x40a6)
0xFFC0FA0C,	//0x0e6c		VoC_NOP	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
		//0x0e6e		VoC_endloop0
0xDFA9DCB8,	//0x0e6e		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
0xE580F033,	//0x0e70		VoC_return	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
		//0x0e72		CII_Lsf_lsp
0xF0047033,	//0x0e72		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x410A1806,	//0x0e74		VoC_lw16i_set_inc(REG2,0x410a,0x1)
0xF0055883,	//0x0e76		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE067E94D,	//0x0e78		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC0D3F843,	//0x0e7a		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG3,0x8,DEFAULT)
0x00FF1607,	//0x0e7c		VoC_and16_ri(REG7,0xff)
0xB8EED8B5,	//0x0e7e		VoC_sub16_pr(REG6,REG3,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xFFC0CDBB,	//0x0e80		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC176FA4B,	//0x0e82		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0x9,DEFAULT)
0xDC96D883,	//0x0e84		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x0e85		VoC_endloop0
0xF126E580,	//0x0e86		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_return
		//0x0e87		CII_Lsp_lsf
0xC0714030,	//0x0e88		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x003F1FBE,	//0x0e8a		VoC_lw16i_set_inc(REG2,0x3f,0xffffffff)
0x41491FBF,	//0x0e8c		VoC_lw16i_set_inc(REG3,0x4149,0xffffffff)
0x41090A84,	//0x0e8e		VoC_lw16i(REG4,0x4109)
0xD886E953,	//0x0e90		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x0E982C81,	//0x0e92		VoC_loop_i(0x1,0x40)
0x3147879F,	//0x0e94		VoC_bngtz16_r(LSP_LSF_02,REG7)(lo)	|	VoC_sub16inc_rp(REG7,REG6,REG3,DEFAULT)
0xDE100E9A,	//0x0e96		VoC_inc_p(REG2,DEFAULT)	|	VoC_bngtz16_r(LSP_LSF_02,REG7)(hi)
		//0x0e98		VoC_endloop1
0x40A607A4,	//0x0e98		VoC_sub16_rd(REG4,REG4,0x40a6)
		//0x0e9a		LSP_LSF_02
0xE04599E3,	//0x0e9a		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_multf32_rp(REG67,REG7,REG4,DEFAULT)
0xF8C57BEB,	//0x0e9c		VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)
0x40BA091B,	//0x0e9e		VoC_add32_rd(REG67,REG67,0x40ba)
0x071BC1EF,	//0x0ea0		VoC_add16_rd(REG3,REG3,0x40a6)(lo)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
0xDC9740A6,	//0x0ea2		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x40a6)(hi)
		//0x0ea3		VoC_endloop0
0xFF42E580,	//0x0ea4		VoC_lw32z(REG45,DEFAULT)	|	VoC_return
		//0x0ea5		CII_Log2
0x2B80DFE9,	//0x0ea6		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_push16(RA,DEFAULT)
0xDF400D50,	//0x0ea8		VoC_push32(REG01,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3284FF21,	//0x0eaa		VoC_bgtz32_r(LOG1001,ACC0)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0xFF420EAF,	//0x0eac		VoC_lw32z(REG45,DEFAULT)	|	VoC_bgtz32_r(LOG1001,ACC0)(hi)
0xFF25E5D5,	//0x0eae		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_jump(LOG1002)
		//0x0eaf		LOG1001
0x408D0B09,	//0x0eb0		VoC_sub16_dr(REG1,0x408d,REG1)
0x0798FA49,	//0x0eb2		VoC_sub16_rd(REG0,REG3,0x408f)(lo)	|	VoC_shr32_ri(REG23,0x9,DEFAULT)
0x7A09408F,	//0x0eb4		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG3,0x408f)(hi)
0x2802F004,	//0x0eb6		VoC_and16_rd(REG2,0x40b8)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x0A8440B8,	//0x0eb8		VoC_lw16i(REG4,0x414c)(lo)	|	VoC_and16_rd(REG2,0x40b8)(hi)
0xC100414C,	//0x0eba		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x414c)(hi)
0xD885F004,	//0x0ebc		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xCCD18543,	//0x0ebe		VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)	|	VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)
0xCA8AFFC0,	//0x0ec0		VoC_sub32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_NOP
0xDFA9E024,	//0x0ec2		VoC_pop16(RA,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
		//0x0ec3		LOG1002
0xE580DF00,	//0x0ec4		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0ec6		CII_Lsf_wt
0x7030FF01,	//0x0ec6		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x7032F007,	//0x0ec8		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x5E00F005,	//0x0eca		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE923E006,	//0x0ecc		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0xD8A6BA37,	//0x0ece		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sub16inc_pr(REG7,REG0,REG6,DEFAULT)
		//0x0ed0		VoC_endloop0
0x0B36DC97,	//0x0ed0		VoC_sub16_dr(REG6,0x4073,REG6)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0A844073,	//0x0ed2		VoC_lw16i(REG4,0x733)(lo)	|	VoC_sub16_dr(REG6,0x4073,REG6)(hi)
0xDC160733,	//0x0ed4		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_lw16i(REG4,0x733)(hi)
0x0D630A85,	//0x0ed6		VoC_lw16i(REG5,0xd63)
0x6E000A86,	//0x0ed8		VoC_lw16i(REG6,0x6e00)
0x18620A87,	//0x0eda		VoC_lw16i(REG7,0x1862)
0x8D98E94B,	//0x0edc		VoC_multf16_rp(REG0,REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC340B8E1,	//0x0ede		VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)	|	VoC_sub16_pr(REG1,REG3,REG4,DEFAULT)
0x0EE53201,	//0x0ee0		VoC_bltz16_r(Lsf_wt101,REG1)
0xFFC0C678,	//0x0ee2		VoC_NOP	|	VoC_multf16_rr(REG0,REG1,REG7,DEFAULT)
0xF8E8C300,	//0x0ee4		VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG0,REG4,REG0,DEFAULT)
		//0x0ee5		Lsf_wt101
0xDCB0FFC0,	//0x0ee6		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_NOP
		//0x0ee7		VoC_endloop0
0xD886E580,	//0x0ee8		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_return
		//0x0ee9		CII_Residu_new
0xF3FD600E,	//0x0eea		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0x0EF92C51,	//0x0eec		VoC_loop_i(0x1,0x28)
0x07999B9C,	//0x0eee		VoC_sub16_rd(REG1,REG3,0x407e)(lo)	|	VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)
0xE942407E,	//0x0ef0		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_sub16_rd(REG1,REG3,0x407e)(hi)
0xD139D887,	//0x0ef2		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x0ef3		VoC_endloop0
0xFBECE1C0,	//0x0ef4		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x40BA0922,	//0x0ef6		VoC_add32_rd(REG45,ACC0,0x40ba)
0xDCA5FFC0,	//0x0ef8		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_NOP
		//0x0ef9		VoC_endloop1
0xD885E580,	//0x0efa		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_return
		//0x0efb		CII_Weight_Ai
0x9E0AE963,	//0x0efc		VoC_multf32inc_pp(REG45,REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0x0912DCA5,	//0x0efe		VoC_add32_rd(REG45,REG45,0x40ba)(lo)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x0eff		VoC_endloop0
0xE58040BA,	//0x0f00		VoC_return	|	VoC_add32_rd(REG45,REG45,0x40ba)(hi)
		//0x0f02		CII_Int_lpc_only
0xF052F053,	//0x0f02		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9D2D9DB,	//0x0f04		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xF80CE8A9,	//0x0f06		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x780EF80D,	//0x0f08		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x4134F80F,	//0x0f0a		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0xD9DBC17D,	//0x0f0c		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xD9D2DDCA,	//0x0f0e		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x0f0f		VoC_endloop0
0xF004E580,	//0x0f10		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_return
		//0x0f11		CII_Pow2
0x408F0A01,	//0x0f12		VoC_multf32_rd(REG23,REG0,0x408f)
0x41A01804,	//0x0f14		VoC_lw16i_set_inc(REG0,0x41a0,0x1)
0xFA094018,	//0x0f16		VoC_shr32_ri(REG23,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x7FFF1602,	//0x0f18		VoC_and16_ri(REG2,0x7fff)
0x8543D885,	//0x0f1a		VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x0B08CCD1,	//0x0f1c		VoC_sub16_dr(REG0,0x408d,REG1)(lo)	|	VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)
0xCA89408D,	//0x0f1e		VoC_sub32_rr(REG23,REG45,REG23,DEFAULT)	|	VoC_sub16_dr(REG0,0x408d,REG1)(hi)
0x408E3C20,	//0x0f20		VoC_bngt16_rd(POW2101,REG0,0x408e)
0xE580FF41,	//0x0f22		VoC_return	|	VoC_lw32z(REG23,DEFAULT)
		//0x0f24		POW2101
0x40A60780,	//0x0f24		VoC_sub16_rd(REG0,REG0,0x40a6)
0x3C20FE81,	//0x0f26		VoC_bngt16_rd(POW2102,REG0,0x40a6)(lo)	|	VoC_shr32_rr(REG23,REG0,DEFAULT)
0x090940A6,	//0x0f28		VoC_add32_rd(REG23,REG23,0x40a6)(lo)	|	VoC_bngt16_rd(POW2102,REG0,0x40a6)(hi)
0xFA0940A6,	//0x0f2a		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x40a6)(hi)
		//0x0f2b		POW2102
0xF001E580,	//0x0f2c		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_return
		//0x0f2d		CII_sqrt_l_exp
0x0F323284,	//0x0f2e		VoC_bgtz32_r(sqrt_l_exp_go,ACC0)
0xE580FF44,	//0x0f30		VoC_return	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0f32		sqrt_l_exp_go
0xFF235FE9,	//0x0f32		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0D502B80,	//0x0f34		VoC_jal(CII_NORM_L_ACC0)
0x7FFE1641,	//0x0f36		VoC_and16_ri(REG1,0xfffe)
0x40A40B08,	//0x0f38		VoC_sub16_dr(REG0,0x40a4,REG1)
0xFA4BFE83,	//0x0f3a		VoC_shr32_ri(REG67,0x9,DEFAULT)	|	VoC_shr32_rr(REG67,REG0,DEFAULT)
0x53A21804,	//0x0f3c		VoC_lw16i_set_inc(REG0,0x53a2,0x1)
0x0780C038,	//0x0f3e		VoC_sub16_rd(REG0,REG0,0x4087)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xFA0B4087,	//0x0f40		VoC_shr32_ri(REG67,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x4087)(hi)
0x7FFF1606,	//0x0f42		VoC_and16_ri(REG6,0x7fff)
0xD8877F44,	//0x0f44		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x85C760E9,	//0x0f46		VoC_sub16_rp(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG7,DEFAULT)
0xCEB7DFA9,	//0x0f48		VoC_msu32_rr(REG6,REG7,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF043E580,	//0x0f4a		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_return
		//0x0f4b		CII_gc_pred_update
0xF023C158,	//0x0f4c		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG0,REG5,REG3,DEFAULT)
0x4081072A,	//0x0f4e		VoC_add16_rd(REG2,REG5,0x4081)
0xC09BC019,	//0x0f50		VoC_add16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG3,DEFAULT)
0xF3FD77F0,	//0x0f52		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF3FF77F2,	//0x0f54		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xD884E864,	//0x0f56		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC94D8A5,	//0x0f58		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x0f5a		VoC_endloop0
0xDC37DCB5,	//0x0f5a		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xE580DC16,	//0x0f5c		VoC_return	|	VoC_sw16_p(REG6,REG1,DEFAULT)
		//0x0f5e		CII_gmed_n
0x64201805,	//0x0f5e		VoC_lw16i_set_inc(REG1,0x6420,0x1)
0xE744E024,	//0x0f60		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0x1807D882,	//0x0f62		VoC_lw16i_set_inc(REG3,0x642a,0x1)(lo)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xDC92642A,	//0x0f64		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x642a,0x1)(hi)
		//0x0f65		VoC_endloop0
0x0F762E29,	//0x0f66		VoC_loop_r(1,REG5)
0x00000AC2,	//0x0f68		VoC_lw16i(REG2,0xffff8000)
0xE746E081,	//0x0f6a		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0x3417D817,	//0x0f6c		VoC_bgt16_rr(GMED001,REG2,REG7)(lo)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
0x60E20F71,	//0x0f6e		VoC_movreg16(REG2,REG7,DEFAULT)	|	VoC_bgt16_rr(GMED001,REG2,REG7)(hi)
0xDE08F626,	//0x0f70		VoC_inc_p(REG1,DEFAULT)	|	VoC_movreg16(REG6,REG1,IN_PARALLEL)
		//0x0f71		GMED001
		//0x0f71		VoC_endloop0
0x0AC7C3A2,	//0x0f72		VoC_lw16i(REG7,0xffffc000)(lo)	|	VoC_sub16_rr(REG2,REG6,REG4,DEFAULT)
0xDCB24000,	//0x0f74		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw16i(REG7,0xffffc000)(hi)
		//0x0f76		VoC_endloop1
0x0AC3DC67,	//0x0f76		VoC_lw16i(REG3,0xc854)(lo)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0xC0EB4854,	//0x0f78		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_lw16i(REG3,0xc854)(hi)
0xC228F90B,	//0x0f7a		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0xFFC08018,	//0x0f7c		VoC_NOP	|	VoC_add16_rp(REG0,REG0,REG3,DEFAULT)
0xE580D801,	//0x0f7e		VoC_return	|	VoC_lw16_p(REG1,REG0,DEFAULT)
		//0x0f80		CII_Pred_lt_3or6
0x77F0C376,	//0x0f80		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
0x70D2F005,	//0x0f82		VoC_lw16i_short(INC2,0x6,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x0B39F01B,	//0x0f84		VoC_sub16_dr(REG1,0x40a4,REG7)(lo)	|	VoC_lw16i_short(INC3,0x6,IN_PARALLEL)
0x318240A4,	//0x0f86		VoC_bez16_r(PRED_IT_3OR6_001,REG2)(lo)	|	VoC_sub16_dr(REG1,0x40a4,REG7)(hi)
0xF8F90F8A,	//0x0f88		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_bez16_r(PRED_IT_3OR6_001,REG2)(hi)
		//0x0f8a		PRED_IT_3OR6_001
0xE0637024,	//0x0f8a		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x0F903241,	//0x0f8c		VoC_bnltz16_r(PRED_IT6_003,REG1)
0xC3A64059,	//0x0f8e		VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x0f90		PRED_IT6_003
0x42200A87,	//0x0f90		VoC_lw16i(REG7,0x4220)
0xC2CB41CA,	//0x0f92		VoC_sub16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG7,REG1,DEFAULT)
0x1484C0FB,	//0x0f94		VoC_lw32_d(ACC0,0x40ba)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x7F0F40BA,	//0x0f96		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_lw32_d(ACC0,0x40ba)(hi)
0xFFC0FF26,	//0x0f98		VoC_NAD	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x0FA42C51,	//0x0f9a		VoC_loop_i(0x1,0x28)
0xC1A660C0,	//0x0f9c		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0xF6C16943,	//0x0f9e		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD40BD402,	//0x0fa0		VoC_mac32inc_pp(REG1,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
		//0x0fa1		VoC_endloop0
0xC165FF39,	//0x0fa2		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_movreg32(REG23,RL7,DEFAULT)
		//0x0fa4		VoC_endloop1
0xFF345C59,	//0x0fa4		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG5,DEFAULT)
0xDF40E580,	//0x0fa6		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x0fa7		CII_Syn_filt
0x64201806,	//0x0fa8		VoC_lw16i_set_inc(REG2,0x6420,0x1)
0xD8946944,	//0x0faa		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xE0105894,	//0x0fac		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x0fae		VoC_endloop0
0xF0085CA4,	//0x0fae		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC1455854,	//0x0fb0		VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG5,DEFAULT)
0xDFE960A0,	//0x0fb2		VoC_push16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x64291FB9,	//0x0fb4		VoC_lw16i_set_inc(REG1,0x6429,0xfffffffe)
0x0FC12E31,	//0x0fb6		VoC_loop_r(1,REG6)
0x68A2E201,	//0x0fb8		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD5819B1C,	//0x0fba		VoC_bimsu32inc_pp(REG0,REG1)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,IN_PARALLEL)
		//0x0fbb		VoC_endloop0
0xFBECE0A0,	//0x0fbc		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x40BA0924,	//0x0fbe		VoC_add32_rd(ACC0,ACC0,0x40ba)
0xDCA9E041,	//0x0fc0		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x0fc1		VoC_endloop1
0x642A1808,	//0x0fc2		VoC_lw16i_set_inc(REG0,0x642a,0x2)
0xF00960C5,	//0x0fc4		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF6E17816,	//0x0fc6		VoC_movreg16(REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x0DA42B80,	//0x0fc8		VoC_jal(CII_copy_xy)
0x40BE441E,	//0x0fca		VoC_bne16_rd(SYN_FILT_01,REG6,0x40be)
0xD908DD8C,	//0x0fcc		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x0fcd		SYN_FILT_01
0x0FD53180,	//0x0fce		VoC_bez16_r(Syn_filt103,REG0)
0x64200A80,	//0x0fd0		VoC_lw16i(REG0,0x6420)
0x2B80C028,	//0x0fd2		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xDFA90D96,	//0x0fd4		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
		//0x0fd5		Syn_filt103
0xE580DF00,	//0x0fd6		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0fd8		CII_amr_dec_com_sub1
0xF030F8FD,	//0x0fd8		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xE2865F80,	//0x0fda		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x0D3E2006,	//0x0fdc		VoC_lw16d_set_inc(REG2,0xd3e,0x1)
0x40914C8A,	//0x0fde		VoC_bnlt16_rd(Dec_amr_L32A,REG2,0x4091)
0xC0824394,	//0x0fe0		VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG6,REG2,DEFAULT)
0xE7038F46,	//0x0fe2		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_multf16inc_rp(REG6,REG5,REG0,DEFAULT)
0x8F468196,	//0x0fe4		VoC_multf16inc_rp(REG6,REG5,REG0,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
		//0x0fe6		VoC_endloop0
0xD632DCA6,	//0x0fe6		VoC_lw16_sd(REG2,0x2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x0fe7		Dec_amr_L32A
0x0D451505,	//0x0fe8		VoC_sw16_d(REG5,0xd45)
0xDA32D8A6,	//0x0fea		VoC_sw16_sd(REG2,0x2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xF004E580,	//0x0fec		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_return
		//0x0fed		CII_amr_dec_com_sub3
0x1804DF43,	//0x0fee		VoC_lw16i_set_inc(REG0,0xd12,0x1)(lo)	|	VoC_push32(REG67,DEFAULT)
0x18050D12,	//0x0ff0		VoC_lw16i_set_inc(REG1,0x66a,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xd12,0x1)(hi)
0x1806066A,	//0x0ff2		VoC_lw16i_set_inc(REG2,0xdbe,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x66a,0x1)(hi)
0x6D0A0DBE,	//0x0ff4		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xdbe,0x1)(hi)
0xD813C33F,	//0x0ff6		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_sub16_rr(REG7,REG4,REG7,IN_PARALLEL)
0xD12ACCF4,	//0x0ff8		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0xFEBCDC83,	//0x0ffa		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0x40BA0924,	//0x0ffc		VoC_add32_rd(ACC0,ACC0,0x40ba)
0xDC99F044,	//0x0ffe		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x0fff		VoC_endloop0
0x489CF005,	//0x1000		VoC_blt16_rd(Dec_amr_L64,REG4,0x5635)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x6C095635,	//0x1002		VoC_bez16_d(Dec_amr_L64,0xd56)(lo)	|	VoC_blt16_rd(Dec_amr_L64,REG4,0x5635)(hi)
0xD9130D56,	//0x1004		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_bez16_d(Dec_amr_L64,0xd56)(hi)
0x100C3186,	//0x1006		VoC_bez16_r(Dec_amr_L64,REG6)
0x407F3C27,	//0x1008		VoC_bngt16_rd(Dec_amr_L64,REG7,0x407f)
0xFFC0F025,	//0x100a		VoC_NAD	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x100c		Dec_amr_L64
0x07401807,	//0x100c		VoC_lw16i_set_inc(REG3,0x740,0x1)
0x07481505,	//0x100e		VoC_sw16_d(REG5,0x748)
0x0D121806,	//0x1010		VoC_lw16i_set_inc(REG2,0xd12,0x1)
0x0D421407,	//0x1012		VoC_lw16_d(REG7,0xd42)
0x0DBE1804,	//0x1014		VoC_lw16i_set_inc(REG0,0xdbe,0x1)
0xDFC2DFC3,	//0x1016		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xD91EDFC0,	//0x1018		VoC_lw32_sd(RL6,0x2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x0746180A,	//0x101a		VoC_lw16i_set_inc(REG2,0x746,0x2)
0x07431FBF,	//0x101c		VoC_lw16i_set_inc(REG3,0x743,0xffffffff)
0xD9D2DFC2,	//0x101e		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xE0245990,	//0x1020		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x07441FBE,	//0x1022		VoC_lw16i_set_inc(REG2,0x744,0xffffffff)
0xD8B66883,	//0x1024		VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCA6D8B6,	//0x1026		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x1027		VoC_endloop0
0xE0135C27,	//0x1028		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0x40714C37,	//0x102a		VoC_bnlt16_rd(Phdisp_L1,REG7,0x4071)
0x3C1FF004,	//0x102c		VoC_bngt16_rd(Phdisp_L1,REG7,0x4070)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0244070,	//0x102e		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt16_rd(Phdisp_L1,REG7,0x4070)(hi)
		//0x1030		Phdisp_L1
0x40B60A2B,	//0x1030		VoC_multf32_rd(REG67,REG5,0x40b6)
0xFBF3FFC0,	//0x1032		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_NOP
0x4C2FC8F3,	//0x1034		VoC_bnlt16_rd(Phdisp_L4,REG7,0xd44)(lo)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF0410D44,	//0x1036		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_bnlt16_rd(Phdisp_L4,REG7,0xd44)(hi)
0xFFC0E5C5,	//0x1038		VoC_NAD	|	VoC_jump(Phdisp_L5)
		//0x103a		Phdisp_L4
0x103D3141,	//0x103a		VoC_bngtz16_r(Phdisp_L5,REG1)
0xF032C259,	//0x103c		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
		//0x103d		Phdisp_L5
0x104C31C1,	//0x103e		VoC_bnez16_r(Phdisp_L6,REG1)
0xE00668A7,	//0x1040		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x40700C97,	//0x1042		VoC_sub16inc_dp(REG7,0x4070,REG2)
0x10473147,	//0x1044		VoC_bngtz16_r(Phdisp_L7,REG7)
0xFFC0C19E,	//0x1046		VoC_NOP	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
		//0x1047		Phdisp_L7
		//0x1047		VoC_endloop0
0x407E3C26,	//0x1048		VoC_bngt16_rd(Phdisp_L6,REG6,0x407e)
0xFFC0F004,	//0x104a		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x104c		Phdisp_L6
0x105231C1,	//0x104c		VoC_bnez16_r(Phdisp_L8,REG1)
0x3C1AC31A,	//0x104e		VoC_bngt16_rd(Phdisp_L8,REG2,0x746)(lo)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0xE0440746,	//0x1050		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_bngt16_rd(Phdisp_L8,REG2,0x746)(hi)
		//0x1052		Phdisp_L8
0x10573141,	//0x1052		VoC_bngtz16_r(Phdisp_L9,REG1)
0x407E4C1C,	//0x1054		VoC_bnlt16_rd(Phdisp_L9,REG4,0x407e)
0xF053C11C,	//0x1056		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
		//0x1057		Phdisp_L9
0x0D441405,	//0x1058		VoC_lw16_d(REG5,0xd44)
0x40854C1D,	//0x105a		VoC_bnlt16_rd(Phdisp_L10,REG5,0x4085)
0xDF83F044,	//0x105c		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x105d		Phdisp_L10
0x40A64418,	//0x105e		VoC_bne16_rd(Phdisp_L11,REG0,0x40a6)
0xD612F004,	//0x1060		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x1061		Phdisp_L11
0xDD98DDDA,	//0x1062		VoC_sw32_p(REG01,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xDFE9E580,	//0x1064		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1065		CII_amr_dec_com_sub4
0xD90B5631,	//0x1066		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x40A40B3F,	//0x1068		VoC_sub16_dr(REG7,0x40a4,REG7)
0xD6226D08,	//0x106a		VoC_lw16_sd(REG2,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD12A998C,	//0x106c		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_multf32_rp(ACC0,REG6,REG1,DEFAULT)
0xFEBCF030,	//0x106e		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF033C934,	//0x1070		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x1072		VoC_endloop0
0x5F05DC99,	//0x1072		VoC_pop32(ACC1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x5632FF44,	//0x1074		VoC_lw16_sd(REG2,0x2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xEA81F00A,	//0x1076		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
		//0x1078		VoC_endloop0
0xF225D512,	//0x1078		VoC_lw16i_short(REG5,0x11,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG2)
0x2B80FA0C,	//0x107a		VoC_jal(CII_sqrt_l_exp)(lo)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xF8090F2D,	//0x107c		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_jal(CII_sqrt_l_exp)(hi)
0xC0695FA9,	//0x107e		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xFE8C590B,	//0x1080		VoC_shr32_rr(ACC0,REG1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF7055F80,	//0x1082		VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xDFE9E580,	//0x1084		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1085		CII_amr_dec_com_sub5
0x1FBCF083,	//0x1086		VoC_lw16i_set_inc(REG0,0x6b4,0xffffffff)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0x6C0906B4,	//0x1088		VoC_bez16_d(Dec_amr_L67A,0x6b6)(lo)	|	VoC_lw16i_set_inc(REG0,0x6b4,0xffffffff)(hi)
0x3C3B06B6,	//0x108a		VoC_bngt16_rd(Dec_amr_L67A,REG3,0x6aa)(lo)	|	VoC_bez16_d(Dec_amr_L67A,0x6b6)(hi)
0x6E0906AA,	//0x108c		VoC_bnez16_d(Dec_amr_L68,0xd56)(lo)	|	VoC_bngt16_rd(Dec_amr_L67A,REG3,0x6aa)(hi)
0x6E070D56,	//0x108e		VoC_bnez16_d(Dec_amr_L68,0x6a8)(lo)	|	VoC_bnez16_d(Dec_amr_L68,0xd56)(hi)
0xFFC006A8,	//0x1090		VoC_NAD	|	VoC_bnez16_d(Dec_amr_L68,0x6a8)(hi)
		//0x1092		Dec_amr_L67A
0xD8056923,	//0x1092		VoC_lw16_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xD805DC85,	//0x1094		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x1095		VoC_endloop0
		//0x1096		Dec_amr_L68
0x1804D621,	//0x1096		VoC_lw16i_set_inc(REG0,0xcea,0x1)(lo)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x14040CEA,	//0x1098		VoC_lw16_d(REG4,0xd45)(lo)	|	VoC_lw16i_set_inc(REG0,0xcea,0x1)(hi)
0x7F010D45,	//0x109a		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_lw16_d(REG4,0xd45)(hi)
0x3D0CF005,	//0x109c		VoC_bngt16_rd(Dec_amr_L69,REG4,0x40b6)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF4040B6,	//0x109e		VoC_push32(REG01,DEFAULT)	|	VoC_bngt16_rd(Dec_amr_L69,REG4,0x40b6)(hi)
0x6D04E003,	//0x10a0		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x838ED886,	//0x10a2		VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0xDCB6D886,	//0x10a4		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x10a5		VoC_endloop0
0xE0145908,	//0x10a6		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xD9175622,	//0x10a8		VoC_lw32_sd(RL7,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x14012B80,	//0x10aa		VoC_jal(CII_agc)
0xE043DF01,	//0x10ac		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x10ae		Dec_amr_L69
0x00010A96,	//0x10ae		VoC_lw16i(STATUS,0x1)
0xD644D655,	//0x10b0		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x41E7D697,	//0x10b2		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0x8,DEFAULT)
0xF000E286,	//0x10b4		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x069C1805,	//0x10b6		VoC_lw16i_set_inc(REG1,0x69c,0x1)
0xFFC0DF43,	//0x10b8		VoC_NAD	|	VoC_push32(REG67,DEFAULT)
0x0FA72B80,	//0x10ba		VoC_jal(CII_Syn_filt)
0x10D82E80,	//0x10bc		VoC_boe0z16_r(Dec_amr_L75)
0x05D01808,	//0x10be		VoC_lw16i_set_inc(REG0,0x5d0,0x2)
0x00610A85,	//0x10c0		VoC_lw16i(REG5,0x61)
0xE001E84C,	//0x10c2		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xFFC0D9C3,	//0x10c4		VoC_NAD	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x10CB2E29,	//0x10c6		VoC_loop_r(1,REG5)
0xF8177816,	//0x10c8		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xDDCBD9C3,	//0x10ca		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x10cb		VoC_endloop1
0x0D121808,	//0x10cc		VoC_lw16i_set_inc(REG0,0xd12,0x2)
		//0x10ce		VoC_endloop0
0xE1456003,	//0x10ce		VoC_lw16i_short(REG5,0x14,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xD90BD655,	//0x10d0		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x069C1805,	//0x10d2		VoC_lw16i_set_inc(REG1,0x69c,0x1)
0x2B80F020,	//0x10d4		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE5C70FA7,	//0x10d6		VoC_jump(Dec_amr_L76)	|	VoC_jal(CII_Syn_filt)(hi)
		//0x10d8		Dec_amr_L75
0x069C1809,	//0x10d8		VoC_lw16i_set_inc(REG1,0x69c,0x2)
0x408D0738,	//0x10da		VoC_add16_rd(REG0,REG7,0x408d)
0x0D962B80,	//0x10dc		VoC_jal(CII_Copy_M)
		//0x10de		Dec_amr_L76
0xDFA9DF06,	//0x10de		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x05F81808,	//0x10e0		VoC_lw16i_set_inc(REG0,0x5f8,0x2)
0x05D0180B,	//0x10e2		VoC_lw16i_set_inc(REG3,0x5d0,0x2)
0x2C9AD9C4,	//0x10e4		VoC_loop_i(0x0,0x4d)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C410E8,	//0x10e6		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x4d)(hi)
		//0x10e8		VoC_endloop0
0x1404DDDC,	//0x10e8		VoC_lw16_d(REG4,0xd3e)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xF0300D3E,	//0x10ea		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_d(REG4,0xd3e)(hi)
0xF0075645,	//0x10ec		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x4094072E,	//0x10ee		VoC_add16_rd(REG6,REG5,0x4094)
0x06A71504,	//0x10f0		VoC_sw16_d(REG4,0x6a7)
0xE2806862,	//0x10f2		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x10f4		VoC_endloop0
0x5A16DF85,	//0x10f4		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xE580C145,	//0x10f6		VoC_return	|	VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)
		//0x10f8		CII_amr2cod
0x55361805,	//0x10f8		VoC_lw16i_set_inc(REG1,0x5536,0x1)
0x0DE60A82,	//0x10fa		VoC_lw16i(REG2,0xde6)
0x0C9A1808,	//0x10fc		VoC_lw16i_set_inc(REG0,0xc9a,0x2)
0x828F828E,	//0x10fe		VoC_add16inc_rp(REG7,REG2,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG2,REG1,DEFAULT)
0x11062CF5,	//0x1100		VoC_loop_i(0x1,0x7a)
0x828ED9C2,	//0x1102		VoC_add16inc_rp(REG6,REG2,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x828FDC64,	//0x1104		VoC_add16inc_rp(REG7,REG2,REG1,DEFAULT)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
		//0x1106		VoC_endloop1
0x180ADC75,	//0x1106		VoC_lw16i_set_inc(REG2,0xeda,0x2)(lo)	|	VoC_sw16_p(REG5,REG7,DEFAULT)
0xFF440EDA,	//0x1108		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xeda,0x2)(hi)
0xDDD4E8C1,	//0x110a		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i_short(0x6,DEFAULT)
		//0x110b		VoC_endloop0
0x1807F0E7,	//0x110c		VoC_lw16i_set_inc(REG3,0xd84,0x1)(lo)	|	VoC_lw16i_short(REG7,0x7,DEFAULT)
0x0A850D84,	//0x110e		VoC_lw16i(REG5,0x5184)(lo)	|	VoC_lw16i_set_inc(REG3,0xd84,0x1)(hi)
0x18065184,	//0x1110		VoC_lw16i_set_inc(REG2,0x51ea,0x1)(lo)	|	VoC_lw16i(REG5,0x5184)(hi)
0x41ED51EA,	//0x1112		VoC_add16_rr(REG5,REG7,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x51ea,0x1)(hi)
0x1805C1D2,	//0x1114		VoC_lw16i_set_inc(REG1,0xde6,0x1)(lo)	|	VoC_add16_rr(REG2,REG7,REG2,IN_PARALLEL)
0xD8550DE6,	//0x1116		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xde6,0x1)(hi)
0xE0075822,	//0x1118		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x112B2E29,	//0x111a		VoC_loop_r(1,REG5)
0x1604D824,	//0x111c		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x160700FF,	//0x111e		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_and16_ri(REG4,0xff)(hi)
0x31870001,	//0x1120		VoC_bez16_r(BITNO_AMR_even,REG7)(lo)	|	VoC_and16_ri(REG7,0x1)(hi)
0xD8A41126,	//0x1122		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_bez16_r(BITNO_AMR_even,REG7)(hi)
0xFFC0F944,	//0x1124		VoC_NAD	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
		//0x1126		BITNO_AMR_even
0xE0056703,	//0x1126		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xF8FD834D,	//0x1128		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
		//0x1129		VoC_endloop0
0x073FDCB5,	//0x112a		VoC_add16_rd(REG7,REG7,0x40a6)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x112b		VoC_endloop1
0xE58040A6,	//0x112c		VoC_return	|	VoC_add16_rd(REG7,REG7,0x40a6)(hi)
		//0x112e		CII_AMR_Decode
0x7004DFE9,	//0x112e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1808EFF5,	//0x1130		VoC_lw16i_set_inc(REG0,0x412,0x2)(lo)	|	VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)
0xE0060412,	//0x1132		VoC_movreg16(REG6,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x412,0x2)(hi)
0xF107F80E,	//0x1134		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x562E6C08,	//0x1136		VoC_bez16_d(LABLE_NOT_1_FRAME,0x562e)
0x40041486,	//0x1138		VoC_lw32_d(RL6,0x4004)
0x1586FFC0,	//0x113a		VoC_sw32_d(RL6,0x405a)(lo)	|	VoC_NOP
0xFFC0405A,	//0x113c		VoC_NAD	|	VoC_sw32_d(RL6,0x405a)(hi)
		//0x113e		LABLE_NOT_1_FRAME
0x01062B80,	//0x113e		VoC_jal(vpp_AmjpCircBuffDmaRd)
0x1405F001,	//0x1140		VoC_lw16_d(REG5,0x562e)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x1501562E,	//0x1142		VoC_sw16_d(REG1,0x5631)(lo)	|	VoC_lw16_d(REG5,0x562e)(hi)
0x31855631,	//0x1144		VoC_bez16_r(amr_dec_main_L117,REG5)(lo)	|	VoC_sw16_d(REG1,0x5631)(hi)
0x1505114E,	//0x1146		VoC_sw16_d(REG5,0x5639)(lo)	|	VoC_bez16_r(amr_dec_main_L117,REG5)(hi)
0xFF465639,	//0x1148		VoC_lw32z(RL6,DEFAULT)	|	VoC_sw16_d(REG5,0x5639)(hi)
0x13422B80,	//0x114a		VoC_jal(CII_dec_reset)
0x13E72B80,	//0x114c		VoC_jal(CII_Post_Filter_reset)
		//0x114e		amr_dec_main_L117
0x04121808,	//0x114e		VoC_lw16i_set_inc(REG0,0x412,0x2)
0x562F1505,	//0x1150		VoC_sw16_d(REG5,0x562f)
0xE00559C3,	//0x1152		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x0C9A1805,	//0x1154		VoC_lw16i_set_inc(REG1,0xc9a,0x1)
0x563A1505,	//0x1156		VoC_sw16_d(REG5,0x563a)
0x1606F846,	//0x1158		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG6,0x8,DEFAULT)
0x690900FF,	//0x115a		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xE0C5F6E4,	//0x115c		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_movreg16(REG4,REG7,IN_PARALLEL)
0x00801605,	//0x115e		VoC_and16_ri(REG5,0x80)
0xF83DE0E2,	//0x1160		VoC_shr16_ri(REG5,0x7,DEFAULT)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0xF003F8FE,	//0x1162		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
		//0x1164		VoC_endloop0
0xFFC0DC95,	//0x1164		VoC_NAD	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x11842C1F,	//0x1166		VoC_loop_i(0x1,0xf)
		//0x1168		ringtone_process_L4
0x00FF1604,	//0x1168		VoC_and16_ri(REG4,0xff)
0xF8426907,	//0x116a		VoC_shr16_ri(REG2,0x8,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x1605E085,	//0x116c		VoC_and16_ri(REG5,0x80)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xF83D0080,	//0x116e		VoC_shr16_ri(REG5,0x7,DEFAULT)	|	VoC_and16_ri(REG5,0x80)(hi)
0xDC95F8FC,	//0x1170		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
		//0x1171		VoC_endloop0
0x00FF1602,	//0x1172		VoC_and16_ri(REG2,0xff)
0xE045E906,	//0x1174		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x00801605,	//0x1176		VoC_and16_ri(REG5,0x80)
0xF8FAF83D,	//0x1178		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG5,0x7,DEFAULT)
		//0x117a		VoC_endloop0
0x3183DC95,	//0x117a		VoC_bez16_r(ringtone_process_L3,REG3)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x70031182,	//0x117c		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bez16_r(ringtone_process_L3,REG3)(hi)
0xE0E2F6E4,	//0x117e		VoC_movreg16(REG2,REG7,DEFAULT)	|	VoC_movreg16(REG4,REG7,IN_PARALLEL)
0xFFC0E5E8,	//0x1180		VoC_NAD	|	VoC_jump(ringtone_process_L4)
		//0x1182		ringtone_process_L3
0xE01359C3,	//0x1182		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x1184		VoC_endloop1
0xF6C260C4,	//0x1184		VoC_movreg16(REG2,REG6,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x05C61406,	//0x1186		VoC_lw16_d(REG6,0x5c6)
0x56351407,	//0x1188		VoC_lw16_d(REG7,0x5635)
0x4425F0E5,	//0x118a		VoC_bne16_rd(amr_dec_main_L1,REG5,0x563a)(lo)	|	VoC_lw16i_short(REG5,0x7,DEFAULT)
0xE0C7563A,	//0x118c		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_bne16_rd(amr_dec_main_L1,REG5,0x563a)(hi)
0xE0E6E5C2,	//0x118e		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_jump(amr_dec_main_L2)
		//0x118f		amr_dec_main_L1
		//0x1190		amr_dec_main_L2
0x1506DFC7,	//0x1190		VoC_sw16_d(REG6,0x5c6)(lo)	|	VoC_push16(REG7,DEFAULT)
0x150705C6,	//0x1192		VoC_sw16_d(REG7,0x5635)(lo)	|	VoC_sw16_d(REG6,0x5c6)(hi)
0xFFC05635,	//0x1194		VoC_NAD	|	VoC_sw16_d(REG7,0x5635)(hi)
0x10F82B80,	//0x1196		VoC_jal(CII_amr2cod)
0x56381481,	//0x1198		VoC_lw32_d(REG23,0x5638)
0x51840A86,	//0x119a		VoC_lw16i(REG6,0x5184)
0x40A64423,	//0x119c		VoC_bne16_rd(amr_dec_main_L3,REG3,0x40a6)
0x518E0A86,	//0x119e		VoC_lw16i(REG6,0x518e)
		//0x11a0		amr_dec_main_L3
0xC1BED617,	//0x11a0		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x52E01806,	//0x11a2		VoC_lw16i_set_inc(REG2,0x52e0,0x1)
0xC0BA5866,	//0x11a4		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x0D841805,	//0x11a6		VoC_lw16i_set_inc(REG1,0xd84,0x1)
0xE786D822,	//0x11a8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xD8A35896,	//0x11aa		VoC_lw16inc_p(REG3,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x31C6E49E,	//0x11ac		VoC_bnez16_r(Dhf_test_L2,REG6)(lo)	|	VoC_xor16_rr(REG6,REG3,DEFAULT)
0xFFC011B0,	//0x11ae		VoC_NAD	|	VoC_bnez16_r(Dhf_test_L2,REG6)(hi)
		//0x11af		VoC_endloop0
		//0x11b0		Dhf_test_L2
0x31C6F005,	//0x11b0		VoC_bnez16_r(Dhf_test_L3,REG6)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF02511B4,	//0x11b2		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bnez16_r(Dhf_test_L3,REG6)(hi)
		//0x11b4		Dhf_test_L3
0x56381483,	//0x11b4		VoC_lw32_d(REG67,0x5638)
0x11BA3187,	//0x11b6		VoC_bez16_r(amr_dec_main_L3B,REG7)
0xE5C3E0A6,	//0x11b8		VoC_jump(amr_dec_main_L3A)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x11ba		amr_dec_main_L3B
0x56391505,	//0x11ba		VoC_sw16_d(REG5,0x5639)
		//0x11bc		amr_dec_main_L3A
0x3186DF43,	//0x11bc		VoC_bez16_r(amr_dec_main_L4,REG6)(lo)	|	VoC_push32(REG67,DEFAULT)
0x318711CA,	//0x11be		VoC_bez16_r(amr_dec_main_L4,REG7)(lo)	|	VoC_bez16_r(amr_dec_main_L4,REG6)(hi)
0x180811CA,	//0x11c0		VoC_lw16i_set_inc(REG0,0x6380,0x2)(lo)	|	VoC_bez16_r(amr_dec_main_L4,REG7)(hi)
0x14846380,	//0x11c2		VoC_lw32_d(ACC0,0x40b2)(lo)	|	VoC_lw16i_set_inc(REG0,0x6380,0x2)(hi)
0x2CA040B2,	//0x11c4		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw32_d(ACC0,0x40b2)(hi)
0xDDC411C7,	//0x11c6		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x11c7		VoC_endloop0
0xFFC0E5C4,	//0x11c8		VoC_NAD	|	VoC_jump(amr_dec_main_L5)
		//0x11ca		amr_dec_main_L4
0x11FD2B80,	//0x11ca		VoC_jal(CII_Speech_Decode_Frame)
		//0x11cc		amr_dec_main_L5
0x31C3DF01,	//0x11cc		VoC_bnez16_r(amr_dec_main_L6,REG3)(lo)	|	VoC_pop32(REG23,DEFAULT)
0x140211D2,	//0x11ce		VoC_lw16_d(REG2,0x5639)(lo)	|	VoC_bnez16_r(amr_dec_main_L6,REG3)(hi)
0xFFC05639,	//0x11d0		VoC_NAD	|	VoC_lw16_d(REG2,0x5639)(hi)
		//0x11d2		amr_dec_main_L6
0xF6435F87,	//0x11d2		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x6E0BFF46,	//0x11d4		VoC_bnez16_d(amr_dec_main_L7,0xd56)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0x15810D56,	//0x11d6		VoC_sw32_d(REG23,0x5638)(lo)	|	VoC_bnez16_d(amr_dec_main_L7,0xd56)(hi)
0x31825638,	//0x11d8		VoC_bez16_r(amr_dec_main_L7,REG2)(lo)	|	VoC_sw32_d(REG23,0x5638)(hi)
0xFFC011E0,	//0x11da		VoC_NAD	|	VoC_bez16_r(amr_dec_main_L7,REG2)(hi)
0x13422B80,	//0x11dc		VoC_jal(CII_dec_reset)
0x13E72B80,	//0x11de		VoC_jal(CII_Post_Filter_reset)
		//0x11e0		amr_dec_main_L7
0x63801808,	//0x11e0		VoC_lw16i_set_inc(REG0,0x6380,0x2)
0x04421809,	//0x11e2		VoC_lw16i_set_inc(REG1,0x442,0x2)
0xE2866023,	//0x11e4		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x0DA42B80,	//0x11e6		VoC_jal(CII_copy_xy)
0xE502790B,	//0x11e8		VoC_lw16i_short(REG2,0x50,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x40081486,	//0x11ea		VoC_lw32_d(RL6,0x4008)
0x7FC215C1,	//0x11ec		VoC_sw32_d(REG23,0xffc2)
0x7FC415C6,	//0x11ee		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x11f0		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x11f2		VoC_cfg_lg(0x8,)
0x56381400,	//0x11f4		VoC_lw16_d(REG0,0x5638)
0xFFC0E5C4,	//0x11f6		VoC_NAD	|	VoC_jump(ringtone_main_end)
		//0x11f8		ringtone_main_L8
0x56311501,	//0x11f8		VoC_sw16_d(REG1,0x5631)
		//0x11fa		ringtone_main_end
0xFFC0DFA9,	//0x11fa		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x11fc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x11fd		CII_Speech_Decode_Frame
0x40BA1486,	//0x11fe		VoC_lw32_d(RL6,0x40ba)
0x1406D627,	//0x1200		VoC_lw16_d(REG6,0x563a)(lo)	|	VoC_lw16_sd(REG7,0x1,DEFAULT)
0xDF46563A,	//0x1202		VoC_push32(RL6,DEFAULT)	|	VoC_lw16_d(REG6,0x563a)(hi)
0x40BE4026,	//0x1204		VoC_be16_rd(SpDec_Fr_L1,REG6,0x40be)
0x40814436,	//0x1206		VoC_bne16_rd(SpDec_Fr_L2,REG6,0x4081)
		//0x1208		SpDec_Fr_L1
0xFFC0F107,	//0x1208		VoC_NAD	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x14402B80,	//0x120a		VoC_jal(CII_bits2prm_amr_efr)
		//0x120c		SpDec_Fr_L2
0x63801804,	//0x120c		VoC_lw16i_set_inc(REG0,0x6380,0x1)
0xDFC0E0C7,	//0x120e		VoC_push16(REG0,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x12AC2B80,	//0x1210		VoC_jal(CII_Decoder_amr)
0x0D581806,	//0x1212		VoC_lw16i_set_inc(REG2,0xd58,0x1)
0xE2865610,	//0x1214		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xF0085FC2,	//0x1216		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x05201809,	//0x1218		VoC_lw16i_set_inc(REG1,0x520,0x2)
0x0DA42B80,	//0x121a		VoC_jal(CII_copy_xy)
0xD646F006,	//0x121c		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x121d		Post_Filter_L1
0x7140DFC6,	//0x121e		VoC_lw16i_short(REG0,0xa,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x1805F004,	//0x1220		VoC_lw16i_set_inc(REG1,0x4216,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xC2474216,	//0x1222		VoC_sub16_rr(REG7,REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x4216,0x1)(hi)
0x40BE3836,	//0x1224		VoC_bgt16_rd(Post_Filter_L4,REG6,0x40be)
0x54FC1805,	//0x1226		VoC_lw16i_set_inc(REG1,0x54fc,0x1)
0x42160A87,	//0x1228		VoC_lw16i(REG7,0x4216)
		//0x122a		Post_Filter_L4
0x0DE61806,	//0x122a		VoC_lw16i_set_inc(REG2,0xde6,0x1)
0x12312C05,	//0x122c		VoC_loop_i(0x1,0x2)
0x2B80D620,	//0x122e		VoC_jal(CII_Weight_Ai)(lo)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xE0E10EFB,	//0x1230		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_jal(CII_Weight_Ai)(hi)
		//0x1231		VoC_endloop1
0x40A60780,	//0x1232		VoC_sub16_rd(REG0,REG0,0x40a6)
0xDA20D616,	//0x1234		VoC_sw16_sd(REG0,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x05201807,	//0x1236		VoC_lw16i_set_inc(REG3,0x520,0x1)
0x04E21806,	//0x1238		VoC_lw16i_set_inc(REG2,0x4e2,0x1)
0x1804C0F3,	//0x123a		VoC_lw16i_set_inc(REG0,0xde6,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xDFC30DE6,	//0x123c		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xde6,0x1)(hi)
0x0EE92B80,	//0x123e		VoC_jal(CII_Residu_new)
0x1807F2C6,	//0x1240		VoC_lw16i_set_inc(REG3,0xde6,0x1)(lo)	|	VoC_lw16i_short(REG6,0x16,DEFAULT)
0x18050DE6,	//0x1242		VoC_lw16i_set_inc(REG1,0xdfc,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0xde6,0x1)(hi)
0xE0270DFC,	//0x1244		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xdfc,0x1)(hi)
0x4094070A,	//0x1246		VoC_add16_rd(REG2,REG1,0x4094)
0xE0006964,	//0x1248		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDCA0D8B5,	//0x124a		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
		//0x124c		VoC_endloop0
0x60E3DC95,	//0x124c		VoC_movreg16(REG3,REG7,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xFFC0F665,	//0x124e		VoC_NAD	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0x0FA72B80,	//0x1250		VoC_jal(CII_Syn_filt)
0xFF4560E3,	//0x1252		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0xFF446AC3,	//0x1254		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x16,DEFAULT)
0x4E36D8B6,	//0x1256		VoC_mac32_rr(REG6,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x1257		VoC_endloop0
0xE160D033,	//0x1258		VoC_movreg16(REG0,ACC1_HI,DEFAULT)	|	VoC_mac32_rp(REG6,REG3,IN_PARALLEL)
0xF7217002,	//0x125a		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x12623140,	//0x125c		VoC_bngtz16_r(Post_Filter_L6,REG0)
0x40770880,	//0x125e		VoC_multf16_rd(REG0,REG0,0x4077)
0x0D622B80,	//0x1260		VoC_jal(CII_DIV_S)
		//0x1262		Post_Filter_L6
0x05141804,	//0x1262		VoC_lw16i_set_inc(REG0,0x514,0x1)
0x05091FBD,	//0x1264		VoC_lw16i_set_inc(REG1,0x509,0xffffffff)
0x05081FBF,	//0x1266		VoC_lw16i_set_inc(REG3,0x508,0xffffffff)
0x8E9DD816,	//0x1268		VoC_multf16inc_rp(REG5,REG2,REG3,DEFAULT)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xB86DECE3,	//0x126a		VoC_sub16_pr(REG5,REG1,REG5,DEFAULT)	|	VoC_loop_i_short(0x27,DEFAULT)
0xDC958E9D,	//0x126c		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_multf16inc_rp(REG5,REG2,REG3,DEFAULT)
		//0x126d		VoC_endloop0
0xD6478C85,	//0x126e		VoC_lw16_sd(REG7,0x3,DEFAULT)	|	VoC_multf16_rp(REG5,REG2,REG0,DEFAULT)
0xDC06B86D,	//0x1270		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_sub16_pr(REG5,REG1,REG5,DEFAULT)
0x5620DC15,	//0x1272		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x0A85E286,	//0x1274		VoC_lw16i(REG5,0xdf1)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x18070DF1,	//0x1276		VoC_lw16i_set_inc(REG3,0x4e2,0x1)(lo)	|	VoC_lw16i(REG5,0xdf1)(hi)
0xC1C704E2,	//0x1278		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x4e2,0x1)(hi)
0x050A1805,	//0x127a		VoC_lw16i_set_inc(REG1,0x50a,0x1)
0x2B80F020,	//0x127c		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE0E00FA7,	//0x127e		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0x1805DF82,	//0x1280		VoC_lw16i_set_inc(REG1,0x515,0x1)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x70040515,	//0x1282		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x515,0x1)(hi)
0xDFC1F004,	//0x1284		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x2B80D90F,	//0x1286		VoC_jal(CII_agc)(lo)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xDF811401,	//0x1288		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_agc)(hi)
0x0736DF86,	//0x128a		VoC_add16_rd(REG6,REG6,0x4091)(lo)	|	VoC_pop16(REG6,DEFAULT)
0x402E4091,	//0x128c		VoC_be16_rd(not_Post_Filter_L1,REG6,0x4075)(lo)	|	VoC_add16_rd(REG6,REG6,0x4091)(hi)
0x2B004075,	//0x128e		VoC_jump_lg(Post_Filter_L1)(lo)	|	VoC_be16_rd(not_Post_Filter_L1,REG6,0x4075)(hi)
0xFFC0121D,	//0x1290		VoC_NAD	|	VoC_jump_lg(Post_Filter_L1)(hi)
		//0x1292		not_Post_Filter_L1
0x05161809,	//0x1292		VoC_lw16i_set_inc(REG1,0x516,0x2)
0x05B61808,	//0x1294		VoC_lw16i_set_inc(REG0,0x5b6,0x2)
0x0D962B80,	//0x1296		VoC_jal(CII_Copy_M)
0x1808DF82,	//0x1298		VoC_lw16i_set_inc(REG0,0x5c0,0x2)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x561105C0,	//0x129a		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5c0,0x2)(hi)
0x2B80F005,	//0x129c		VoC_jal(CII_Post_Process)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF061648,	//0x129e		VoC_pop32(RL6,DEFAULT)	|	VoC_jal(CII_Post_Process)(hi)
0xEF825F80,	//0x12a0		VoC_lw16i_short(REG2,0xfff8,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xF030E001,	//0x12a2		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD886DFA9,	//0x12a4		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x12AA2D40,	//0x12a6		VoC_loop_i(0x0,0xa0)
0xD886E416,	//0x12a8		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_and16_rr(REG6,REG2,DEFAULT)
		//0x12aa		VoC_endloop0
0xE580DC96,	//0x12aa		VoC_return	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x12ac		CII_Decoder_amr
0x2B80DFE9,	//0x12ac		VoC_jal(CII_rx_dtx_handler)(lo)	|	VoC_push16(RA,DEFAULT)
0xFF41151F,	//0x12ae		VoC_lw32z(REG23,DEFAULT)	|	VoC_jal(CII_rx_dtx_handler)(hi)
0x0D551504,	//0x12b0		VoC_sw16_d(REG4,0xd55)
0x0D411502,	//0x12b2		VoC_sw16_d(REG2,0xd41)
0x0D561581,	//0x12b4		VoC_sw32_d(REG23,0xd56)
0x40A64427,	//0x12b6		VoC_bne16_rd(Dec_amr_L3,REG7,0x40a6)
0x0D571507,	//0x12b8		VoC_sw16_d(REG7,0xd57)
		//0x12ba		Dec_amr_L3
0x407F4087,	//0x12ba		VoC_be16_rd(Dec_amr_L2,REG7,0x407f)
0x40824037,	//0x12bc		VoC_be16_rd(Dec_amr_L2,REG7,0x4082)
0x407E4027,	//0x12be		VoC_be16_rd(Dec_amr_L2,REG7,0x407e)
0x12F02B00,	//0x12c0		VoC_jump_lg(Dec_amr_L4)
		//0x12c2		Dec_amr_L2
0xD645F026,	//0x12c2		VoC_lw16_sd(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0D561506,	//0x12c4		VoC_sw16_d(REG6,0xd56)
0x407F4427,	//0x12c6		VoC_bne16_rd(Dec_amr_L4_go,REG7,0x407f)
0x12F02B00,	//0x12c8		VoC_jump_lg(Dec_amr_L4)
		//0x12ca		Dec_amr_L4_go
0x06C11404,	//0x12ca		VoC_lw16_d(REG4,0x6c1)
0x51841804,	//0x12cc		VoC_lw16i_set_inc(REG0,0x5184,0x1)
0x51EA1805,	//0x12ce		VoC_lw16i_set_inc(REG1,0x51ea,0x1)
0xC069402F,	//0x12d0		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG0,REG5,DEFAULT)
0x0D841804,	//0x12d2		VoC_lw16i_set_inc(REG0,0xd84,0x1)
0xD811D877,	//0x12d4		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x406E0A24,	//0x12d6		VoC_multf32_rd(ACC0,REG4,0x406e)
0x36190A82,	//0x12d8		VoC_lw16i(REG2,0x3619)
0xE0037A0C,	//0x12da		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x0A86C90A,	//0x12dc		VoC_lw16i(REG6,0x7f)(lo)	|	VoC_add32_rr(REG45,ACC0,REG23,DEFAULT)
0x1504007F,	//0x12de		VoC_sw16_d(REG4,0x6c1)(lo)	|	VoC_lw16i(REG6,0x7f)(hi)
0x180706C1,	//0x12e0		VoC_lw16i_set_inc(REG3,0x53d4,0x1)(lo)	|	VoC_sw16_d(REG4,0x6c1)(hi)
0x642653D4,	//0x12e2		VoC_and16_rr(REG6,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x53d4,0x1)(hi)
0xC19BE002,	//0x12e4		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xEFF567C8,	//0x12e6		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x868ED8B7,	//0x12e8		VoC_sub16inc_rp(REG6,REG2,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xE385FE35,	//0x12ea		VoC_not16_r(REG5,DEFAULT)	|	VoC_shr16_rr(REG5,REG6,DEFAULT)
0xF7E5E42F,	//0x12ec		VoC_lw16i_short(REG5,0xffffffff,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
		//0x12ee		VoC_endloop0
0xFFC0DC87,	//0x12ee		VoC_NAD	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x12f0		Dec_amr_L4
0x06AA1404,	//0x12f0		VoC_lw16_d(REG4,0x6aa)
0x40A60723,	//0x12f2		VoC_add16_rd(REG3,REG4,0x40a6)
0x0D566E06,	//0x12f4		VoC_bnez16_d(Dec_amr_L7,0xd56)
0x401CF0A3,	//0x12f6		VoC_be16_rd(Dec_amr_L7,REG4,0x4081)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0xF0034081,	//0x12f8		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_be16_rd(Dec_amr_L7,REG4,0x4081)(hi)
		//0x12fa		Dec_amr_L7
0x40813C23,	//0x12fa		VoC_bngt16_rd(Dec_amr_L9,REG3,0x4081)
0xFFC0F0C3,	//0x12fc		VoC_NAD	|	VoC_lw16i_short(REG3,0x6,DEFAULT)
		//0x12fe		Dec_amr_L9
0x07BD1404,	//0x12fe		VoC_lw16_d(REG4,0x7bd)
0x06A81405,	//0x1300		VoC_lw16_d(REG5,0x6a8)
0x40A64424,	//0x1302		VoC_bne16_rd(Dec_amr_L11_1,REG4,0x40a6)
0xF0A3F005,	//0x1304		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x1306		Dec_amr_L11_1
0x407E4424,	//0x1306		VoC_bne16_rd(Dec_amr_L11,REG4,0x407e)
0xF0A3F025,	//0x1308		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x130a		Dec_amr_L11
0x06A81505,	//0x130a		VoC_sw16_d(REG5,0x6a8)
0x06AA1503,	//0x130c		VoC_sw16_d(REG3,0x6aa)
0x07141808,	//0x130e		VoC_lw16i_set_inc(REG0,0x714,0x2)
0x0CAE1809,	//0x1310		VoC_lw16i_set_inc(REG1,0xcae,0x2)
0x0D962B80,	//0x1312		VoC_jal(CII_Copy_M)
0x07141804,	//0x1314		VoC_lw16i_set_inc(REG0,0x714,0x1)
0x0D841805,	//0x1316		VoC_lw16i_set_inc(REG1,0xd84,0x1)
0x1406D647,	//0x1318		VoC_lw16_d(REG6,0xd56)(lo)	|	VoC_lw16_sd(REG7,0x3,DEFAULT)
0x0A820D56,	//0x131a		VoC_lw16i(REG2,0x692)(lo)	|	VoC_lw16_d(REG6,0xd56)(hi)
0x0A830692,	//0x131c		VoC_lw16i(REG3,0xc9a)(lo)	|	VoC_lw16i(REG2,0x692)(hi)
0x0A840C9A,	//0x131e		VoC_lw16i(REG4,0xca4)(lo)	|	VoC_lw16i(REG3,0xc9a)(hi)
0x0A850CA4,	//0x1320		VoC_lw16i(REG5,0xd58)(lo)	|	VoC_lw16i(REG4,0xca4)(hi)
0xDF410D58,	//0x1322		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i(REG5,0xd58)(hi)
0xFFC0DF42,	//0x1324		VoC_NAD	|	VoC_push32(REG45,DEFAULT)
0x166D2B80,	//0x1326		VoC_jal(CII_amr_dec_122)
0x15B22B80,	//0x1328		VoC_jal(CII_AMR_subfunc0)
0x0D561483,	//0x132a		VoC_lw32_d(REG67,0xd56)
0x1583FFC0,	//0x132c		VoC_sw32_d(REG67,0x6a8)(lo)	|	VoC_NOP
0xDFA906A8,	//0x132e		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_d(REG67,0x6a8)(hi)
0x070A1804,	//0x1330		VoC_lw16i_set_inc(REG0,0x70a,0x1)
0x07141805,	//0x1332		VoC_lw16i_set_inc(REG1,0x714,0x1)
0x147B0A85,	//0x1334		VoC_lw16i(REG5,0x147b)
0xD90C6948,	//0x1336		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD0A8D809,	//0x1338		VoC_msu32_rp(REG5,REG0,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG0,DEFAULT)
0x1404D129,	//0x133a		VoC_lw16_d(REG4,0xd55)(lo)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xD90C0D55,	//0x133c		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_lw16_d(REG4,0xd55)(hi)
		//0x133e		VoC_endloop0
0x1504DC89,	//0x133e		VoC_sw16_d(REG4,0x7bd)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0xE58007BD,	//0x1340		VoC_return	|	VoC_sw16_d(REG4,0x7bd)(hi)
		//0x1342		CII_dec_reset
0x7267F032,	//0x1342		VoC_lw16i_short(REG7,0x13,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x3306E1B5,	//0x1344		VoC_bez32_r(dec_reset_L0,RL6)(lo)	|	VoC_lw16i_short(REG5,0x1b,IN_PARALLEL)
0x7167134A,	//0x1346		VoC_lw16i_short(REG7,0xb,DEFAULT)	|	VoC_bez32_r(dec_reset_L0,RL6)(hi)
0xFFC0E075,	//0x1348		VoC_NAD	|	VoC_lw16i_short(REG5,0x7,IN_PARALLEL)
		//0x134a		dec_reset_L0
0x05D01806,	//0x134a		VoC_lw16i_set_inc(REG2,0x5d0,0x1)
0x1807F004,	//0x134c		VoC_lw16i_set_inc(REG3,0x69c,0x1)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x2D34069C,	//0x134e		VoC_loop_i(0x0,0x9a)(lo)	|	VoC_lw16i_set_inc(REG3,0x69c,0x1)(hi)
0xDCA41351,	//0x1350		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x9a)(hi)
		//0x1351		VoC_endloop0
0x06A61806,	//0x1352		VoC_lw16i_set_inc(REG2,0x6a6,0x1)
0xDCB4E941,	//0x1354		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1355		VoC_endloop0
0x1806DCA4,	//0x1356		VoC_lw16i_set_inc(REG2,0x6a8,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE86106A8,	//0x1358		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6a8,0x1)(hi)
		//0x135a		VoC_endloop0
0x1806DCA4,	//0x135a		VoC_lw16i_set_inc(REG2,0x6b6,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE84106B6,	//0x135c		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6b6,0x1)(hi)
		//0x135e		VoC_endloop0
0x1806DCA4,	//0x135e		VoC_lw16i_set_inc(REG2,0x6ac,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE92106AC,	//0x1360		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6ac,0x1)(hi)
		//0x1362		VoC_endloop0
0x1806DCA4,	//0x1362		VoC_lw16i_set_inc(REG2,0x6b8,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE92106B8,	//0x1364		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6b8,0x1)(hi)
		//0x1366		VoC_endloop0
0x1806DCA4,	//0x1366		VoC_lw16i_set_inc(REG2,0x700,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE9410700,	//0x1368		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x700,0x1)(hi)
		//0x136a		VoC_endloop0
0x1806DCA4,	//0x136a		VoC_lw16i_set_inc(REG2,0x71e,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE941071E,	//0x136c		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x71e,0x1)(hi)
		//0x136e		VoC_endloop0
0x1806DCA4,	//0x136e		VoC_lw16i_set_inc(REG2,0x6c2,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xEFA106C2,	//0x1370		VoC_loop_i_short(0x3d,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6c2,0x1)(hi)
		//0x1372		VoC_endloop0
0x1806DCA4,	//0x1372		VoC_lw16i_set_inc(REG2,0x740,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0x18070740,	//0x1374		VoC_lw16i_set_inc(REG3,0x74a,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x740,0x1)(hi)
0xE8A1074A,	//0x1376		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x74a,0x1)(hi)
		//0x1378		VoC_endloop0
0xDCB4DCA4,	//0x1378		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0x07AC1806,	//0x137a		VoC_lw16i_set_inc(REG2,0x7ac,0x1)
0xDCA4E861,	//0x137c		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x137d		VoC_endloop0
0x07BA1806,	//0x137e		VoC_lw16i_set_inc(REG2,0x7ba,0x1)
0x07BE1807,	//0x1380		VoC_lw16i_set_inc(REG3,0x7be,0x1)
0xDCA4E861,	//0x1382		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x1383		VoC_endloop0
0xFF47DCB4,	//0x1384		VoC_lw32z(RL7,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x40911405,	//0x1386		VoC_lw16_d(REG5,0x4091)
0x06921805,	//0x1388		VoC_lw16i_set_inc(REG1,0x692,0x1)
0x53481806,	//0x138a		VoC_lw16i_set_inc(REG2,0x5348,0x1)
0x06A71505,	//0x138c		VoC_sw16_d(REG5,0x6a7)
0xD8A46943,	//0x138e		VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC94D8A4,	//0x1390		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x1391		VoC_endloop0
0x06AB1505,	//0x1392		VoC_sw16_d(REG5,0x6ab)
0x40C01804,	//0x1394		VoC_lw16i_set_inc(REG0,0x40c0,0x1)
0x070A1805,	//0x1396		VoC_lw16i_set_inc(REG1,0x70a,0x1)
0xD8846943,	//0x1398		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC94D884,	//0x139a		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x139b		VoC_endloop0
0x40C01804,	//0x139c		VoC_lw16i_set_inc(REG0,0x40c0,0x1)
0x07141805,	//0x139e		VoC_lw16i_set_inc(REG1,0x714,0x1)
0xD8846943,	//0x13a0		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC94D884,	//0x13a2		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x13a3		VoC_endloop0
0x550C1804,	//0x13a4		VoC_lw16i_set_inc(REG0,0x550c,0x1)
0x07381805,	//0x13a6		VoC_lw16i_set_inc(REG1,0x738,0x1)
0xD8846883,	//0x13a8		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC94D884,	//0x13aa		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x13ab		VoC_endloop0
0x55101804,	//0x13ac		VoC_lw16i_set_inc(REG0,0x5510,0x1)
0x073C1805,	//0x13ae		VoC_lw16i_set_inc(REG1,0x73c,0x1)
0x55281405,	//0x13b0		VoC_lw16_d(REG5,0x5528)
0xD8846883,	//0x13b2		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC94D884,	//0x13b4		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x13b5		VoC_endloop0
0x06C11505,	//0x13b6		VoC_sw16_d(REG5,0x6c1)
0x40C01804,	//0x13b8		VoC_lw16i_set_inc(REG0,0x40c0,0x1)
0x075C1805,	//0x13ba		VoC_lw16i_set_inc(REG1,0x75c,0x1)
0x13C42C11,	//0x13bc		VoC_loop_i(0x1,0x8)
0xD8846943,	//0x13be		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC94D884,	//0x13c0		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x13c1		VoC_endloop0
0x40C01804,	//0x13c2		VoC_lw16i_set_inc(REG0,0x40c0,0x1)
		//0x13c4		VoC_endloop1
0x1804FFC0,	//0x13c4		VoC_lw16i_set_inc(REG0,0x552a,0x1)(lo)	|	VoC_NOP
0x1805552A,	//0x13c6		VoC_lw16i_set_inc(REG1,0x7ae,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x552a,0x1)(hi)
0x690307AE,	//0x13c8		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x7ae,0x1)(hi)
0xD884D884,	//0x13ca		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x13cc		VoC_endloop0
0x1804DC94,	//0x13cc		VoC_lw16i_set_inc(REG0,0x5532,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x18055532,	//0x13ce		VoC_lw16i_set_inc(REG1,0x7b8,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x5532,0x1)(hi)
0x140507B8,	//0x13d0		VoC_lw16_d(REG5,0x5534)(lo)	|	VoC_lw16i_set_inc(REG1,0x7b8,0x1)(hi)
0x68435534,	//0x13d2		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16_d(REG5,0x5534)(hi)
0xD884D884,	//0x13d4		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x13d6		VoC_endloop0
0x1505DC94,	//0x13d6		VoC_sw16_d(REG5,0x7bd)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x334607BD,	//0x13d8		VoC_bnez32_r(dec_reset_L4,RL6)(lo)	|	VoC_sw16_d(REG5,0x7bd)(hi)
0x158713DE,	//0x13da		VoC_sw32_d(RL7,0x7b6)(lo)	|	VoC_bnez32_r(dec_reset_L4,RL6)(hi)
0xFFC007B6,	//0x13dc		VoC_NAD	|	VoC_sw32_d(RL7,0x7b6)(hi)
		//0x13de		dec_reset_L4
0x55550A86,	//0x13de		VoC_lw16i(REG6,0x5555)
0x07461587,	//0x13e0		VoC_sw32_d(RL7,0x746)
0x07481587,	//0x13e2		VoC_sw32_d(RL7,0x748)
0x06C11506,	//0x13e4		VoC_sw16_d(REG6,0x6c1)
0xFF45E580,	//0x13e6		VoC_lw32z(ACC1,DEFAULT)	|	VoC_return
		//0x13e7		CII_Post_Filter_reset
0x04E21808,	//0x13e8		VoC_lw16i_set_inc(REG0,0x4e2,0x2)
0x13EC2CE4,	//0x13ea		VoC_loop_i(0x0,0x72)
		//0x13ec		VoC_endloop0
0x0A8BDDC5,	//0x13ec		VoC_lw16i(ACC1_HI,0x1000)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x150A1000,	//0x13ee		VoC_sw16_d(ACC1_LO,0x5c6)(lo)	|	VoC_lw16i(ACC1_HI,0x1000)(hi)
0x158505C6,	//0x13f0		VoC_sw32_d(ACC1,0x514)(lo)	|	VoC_sw16_d(ACC1_LO,0x5c6)(hi)
0xE5800514,	//0x13f2		VoC_return	|	VoC_sw32_d(ACC1,0x514)(hi)
		//0x13f4		CII_energy_new
0xFF45FF44,	//0x13f4		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD8076D04,	//0x13f6		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD4007817,	//0x13f8		VoC_mac32inc_pp(REG0,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
		//0x13fa		VoC_endloop0
0xD8074E3F,	//0x13fa		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG7,DEFAULT)
0x40AA5825,	//0x13fc		VoC_be32_rd(Energy_L0,ACC1,0x40aa)
0xFF2CFA25,	//0x13fe		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,DEFAULT)
		//0x1400		Energy_L0
0xDFE9E580,	//0x1400		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1401		CII_agc
0x2B80DFC0,	//0x1402		VoC_jal(CII_energy_new)(lo)	|	VoC_push16(REG0,DEFAULT)
0xF00513F4,	//0x1404		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jal(CII_energy_new)(hi)
0x14393304,	//0x1406		VoC_bez32_r(AGC_LEnd,ACC0)
0x0D502B80,	//0x1408		VoC_jal(CII_NORM_L_ACC0)
0xFA0C6025,	//0x140a		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG1,DEFAULT)
0xF640493E,	//0x140c		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL7,DEFAULT)
0x13F42B80,	//0x140e		VoC_jal(CII_energy_new)
0x3304F003,	//0x1410		VoC_bez32_r(AGC_LA5,ACC0)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xFFC01425,	//0x1412		VoC_NAD	|	VoC_bez32_r(AGC_LA5,ACC0)(hi)
0x0D502B80,	//0x1414		VoC_jal(CII_NORM_L_ACC0)
0xC34D4938,	//0x1416		VoC_sub16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL7,DEFAULT)
0xFFC0E1A0,	//0x1418		VoC_NAD	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x0D622B80,	//0x141a		VoC_jal(CII_DIV_S)
0xF6407001,	//0x141c		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFEA8FBC0,	//0x141e		VoC_shr32_rr(REG01,REG5,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffff8,DEFAULT)
0x0DE32B80,	//0x1420		VoC_jal(CII_Inv_sqrt)
0x0901FBB8,	//0x1422		VoC_add32_rd(REG23,REG01,0x40ba)(lo)	|	VoC_shr32_ri(REG01,0xfffffff7,DEFAULT)
0xE06540BA,	//0x1424		VoC_movreg16(REG5,REG3,DEFAULT)	|	VoC_add32_rd(REG23,REG01,0x40ba)(hi)
		//0x1425		AGC_LA5
0x142C31C4,	//0x1426		VoC_bnez16_r(AGC_LA4,REG4)
0x089BD637,	//0x1428		VoC_multf16_rd(REG3,REG3,0x4095)(lo)	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xD8754095,	//0x142a		VoC_lw16_p(REG5,REG7,DEFAULT)	|	VoC_multf16_rd(REG3,REG3,0x4095)(hi)
		//0x142c		AGC_LA4
0xED0BD610,	//0x142c		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x143431C4,	//0x142e		VoC_bnez16_r(AGC_LA6,REG4)
0x406F08AD,	//0x1430		VoC_multf16_rd(REG5,REG5,0x406f)
0xC15DFFC0,	//0x1432		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_NOP
		//0x1434		AGC_LA6
0xFFC09944,	//0x1434		VoC_NOP	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0xFFC0FBEC,	//0x1436		VoC_NOP	|	VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)
		//0x1438		VoC_endloop0
0xDF80DC89,	//0x1438		VoC_pop16(REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x1439		AGC_LEnd
0xD616DFA9,	//0x143a		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x143F31C4,	//0x143c		VoC_bnez16_r(AGC_LA7,REG4)
0xE580DC65,	//0x143e		VoC_return	|	VoC_sw16_p(REG5,REG6,DEFAULT)
		//0x143f		AGC_LA7
		//0x1440		CII_bits2prm_amr_efr
0x40AFF105,	//0x1440		VoC_be16_rd(word32_needed,REG7,0x4082)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0xF0E54082,	//0x1442		VoC_lw16i_short(REG5,0x7,DEFAULT)	|	VoC_be16_rd(word32_needed,REG7,0x4082)(hi)
0x40814097,	//0x1444		VoC_be16_rd(word32_needed,REG7,0x4081)
0x383FF0A5,	//0x1446		VoC_bgt16_rd(word32_needed,REG7,0x407e)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0xF085407E,	//0x1448		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_bgt16_rd(word32_needed,REG7,0x407e)(hi)
0x40A43827,	//0x144a		VoC_bgt16_rd(word32_needed,REG7,0x40a4)
0xFFC0F065,	//0x144c		VoC_NAD	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
		//0x144e		word32_needed
0x04121808,	//0x144e		VoC_lw16i_set_inc(REG0,0x412,0x2)
0x0DE61805,	//0x1450		VoC_lw16i_set_inc(REG1,0xde6,0x1)
0x145A2E29,	//0x1452		VoC_loop_r(1,REG5)
0xEC04D9C2,	//0x1454		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xE422F022,	//0x1456		VoC_and16_rr(REG2,REG4,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xDC92FA0A,	//0x1458		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
		//0x1459		VoC_endloop0
		//0x145a		VoC_endloop1
0x0D841807,	//0x145a		VoC_lw16i_set_inc(REG3,0xd84,0x1)
0x51840A85,	//0x145c		VoC_lw16i(REG5,0x5184)
0x51EA1806,	//0x145e		VoC_lw16i_set_inc(REG2,0x51ea,0x1)
0xC1D241ED,	//0x1460		VoC_add16_rr(REG2,REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG7,REG5,DEFAULT)
0x0DE61805,	//0x1462		VoC_lw16i_set_inc(REG1,0xde6,0x1)
0x5822D855,	//0x1464		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x2E29E007,	//0x1466		VoC_loop_r(1,REG5)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xD8241477,	//0x1468		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_loop_r(1,REG5)(hi)
0x00FF1604,	//0x146a		VoC_and16_ri(REG4,0xff)
0x00011607,	//0x146c		VoC_and16_ri(REG7,0x1)
0x14723187,	//0x146e		VoC_bez16_r(BITN1_AMR_even,REG7)
0xF944D8A4,	//0x1470		VoC_shru16_ri(REG4,0x8,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x1472		BITN1_AMR_even
0xE0056703,	//0x1472		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xF8FD834D,	//0x1474		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
		//0x1475		VoC_endloop0
0x073FDCB5,	//0x1476		VoC_add16_rd(REG7,REG7,0x40a6)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x1477		VoC_endloop1
0xE58040A6,	//0x1478		VoC_return	|	VoC_add16_rd(REG7,REG7,0x40a6)(hi)
		//0x147a		CII_R02R3_p_R6
0xE782D885,	//0x147a		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xDCB5D885,	//0x147c		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x147d		VoC_endloop0
0xD610E580,	//0x147e		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_return
		//0x147f		CII_ec_gain_code_update
0x40820702,	//0x1480		VoC_add16_rd(REG2,REG0,0x4082)
0x0D566E0B,	//0x1482		VoC_bnez16_d(Ecgains_L10,0xd56)
0x06A86C08,	//0x1484		VoC_bez16_d(Ecgains_L11,0x6a8)
0x34B7D827,	//0x1486		VoC_bngt16_rr(Ecgains_L11,REG6,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xE0E6148C,	//0x1488		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bngt16_rr(Ecgains_L11,REG6,REG7)(hi)
0x0D431507,	//0x148a		VoC_sw16_d(REG7,0xd43)
		//0x148c		Ecgains_L11
0xF027DC26,	//0x148c		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
		//0x148d		Ecgains_L10
0xC039C2BA,	//0x148e		VoC_add16_rr(REG1,REG0,REG7,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0xF0045C26,	//0x1490		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
0xD8976883,	//0x1492		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC87D897,	//0x1494		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
		//0x1495		VoC_endloop0
0xE580DC06,	//0x1496		VoC_return	|	VoC_sw16_p(REG6,REG0,DEFAULT)
		//0x1498		CII_ec_gain_pitch_update
0x0702D610,	//0x1498		VoC_add16_rd(REG2,REG0,0x4082)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x6E0B4082,	//0x149a		VoC_bnez16_d(Ecgains_L2,0xd56)(lo)	|	VoC_add16_rd(REG2,REG0,0x4082)(hi)
0x6C080D56,	//0x149c		VoC_bez16_d(Ecgains_L33,0x6a8)(lo)	|	VoC_bnez16_d(Ecgains_L2,0xd56)(hi)
0xD82706A8,	//0x149e		VoC_lw16_p(REG7,REG2,DEFAULT)	|	VoC_bez16_d(Ecgains_L33,0x6a8)(hi)
0x14A534B7,	//0x14a0		VoC_bngt16_rr(Ecgains_L33,REG6,REG7)
0x1507E0E6,	//0x14a2		VoC_sw16_d(REG7,0xd42)(lo)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xDC260D42,	//0x14a4		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_sw16_d(REG7,0xd42)(hi)
		//0x14a5		Ecgains_L33
		//0x14a6		Ecgains_L2
0xF026E0C7,	//0x14a6		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x0A81C2B2,	//0x14a8		VoC_lw16i(REG1,0x4000)(lo)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0x34B94000,	//0x14aa		VoC_bngt16_rr(Ecgains_L4,REG7,REG1)(lo)	|	VoC_lw16i(REG1,0x4000)(hi)
0xE02714AE,	//0x14ac		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_bngt16_rr(Ecgains_L4,REG7,REG1)(hi)
		//0x14ae		Ecgains_L4
0xC031D610,	//0x14ae		VoC_add16_rr(REG1,REG0,REG6,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x6883DC27,	//0x14b0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0xD896D896,	//0x14b2		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
		//0x14b4		VoC_endloop0
0xDC07DC86,	//0x14b4		VoC_sw16_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xDFE9E580,	//0x14b6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x14b7		CII_Int_lsf
0x1804D647,	//0x14b8		VoC_lw16i_set_inc(REG0,0xcb8,0x1)(lo)	|	VoC_lw16_sd(REG7,0x3,DEFAULT)
0x18050CB8,	//0x14ba		VoC_lw16i_set_inc(REG1,0xcae,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xcb8,0x1)(hi)
0x18060CAE,	//0x14bc		VoC_lw16i_set_inc(REG2,0x714,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xcae,0x1)(hi)
0x403F0714,	//0x14be		VoC_be16_rd(Lspavg_lab1,REG7,0x4099)(lo)	|	VoC_lw16i_set_inc(REG2,0x714,0x1)(hi)
0x31C74099,	//0x14c0		VoC_bnez16_r(Lspavg_lab3,REG7)(lo)	|	VoC_be16_rd(Lspavg_lab1,REG7,0x4099)(hi)
0x602214D1,	//0x14c2		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_bnez16_r(Lspavg_lab3,REG7)(hi)
0xFFC0F641,	//0x14c4		VoC_NAD	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
		//0x14c6		Lspavg_lab1
0x20000A86,	//0x14c6		VoC_lw16i(REG6,0x2000)
0x8F8C6947,	//0x14c8		VoC_multf16inc_rp(REG4,REG6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xFFC08D95,	//0x14ca		VoC_NOP	|	VoC_multf16_rp(REG5,REG6,REG2,DEFAULT)
0xC165BAAD,	//0x14cc		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_sub16inc_pr(REG5,REG2,REG5,DEFAULT)
0xDC858F8C,	//0x14ce		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG6,REG1,DEFAULT)
		//0x14cf		VoC_endloop0
0xFFC0E5CC,	//0x14d0		VoC_NOP	|	VoC_jump(Lspavg_lab4)
		//0x14d1		Lspavg_lab3
0xE948D8A5,	//0x14d2		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x409D4037,	//0x14d4		VoC_be16_rd(Lspavg_lab2,REG7,0x409d)
0xD894780D,	//0x14d6		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0xC12DF80C,	//0x14d8		VoC_add16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x14da		Lspavg_lab2
0xDC85D8A5,	//0x14da		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x14db		VoC_endloop0
		//0x14dc		Lspavg_lab4
0x07001805,	//0x14dc		VoC_lw16i_set_inc(REG1,0x700,0x1)
0x0D431407,	//0x14de		VoC_lw16_d(REG7,0xd43)
0x070A1806,	//0x14e0		VoC_lw16i_set_inc(REG2,0x70a,0x1)
0x06B61485,	//0x14e2		VoC_lw32_d(ACC1,0x6b6)
0x5A27DA31,	//0x14e4		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_sw16_sd(REG1,0x2,DEFAULT)
0x1804DF45,	//0x14e6		VoC_lw16i_set_inc(REG0,0x701,0x1)(lo)	|	VoC_push32(ACC1,IN_PARALLEL)
0x18070701,	//0x14e8		VoC_lw16i_set_inc(REG3,0xdf0,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x701,0x1)(hi)
0x68C30DF0,	//0x14ea		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xdf0,0x1)(hi)
0xD885D885,	//0x14ec		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
		//0x14ee		VoC_endloop0
0xDC17DC95,	//0x14ee		VoC_sw16_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x0CB81804,	//0x14f0		VoC_lw16i_set_inc(REG0,0xcb8,0x1)
0xE0076041,	//0x14f2		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x150F2C15,	//0x14f4		VoC_loop_i(0x1,0xa)
0x8706D894,	//0x14f6		VoC_sub16inc_rp(REG6,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xE0085F40,	//0x14f8		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x14FE3246,	//0x14fa		VoC_bnltz16_r(CII_Cb_gain_La2,REG6)
0x40A40B36,	//0x14fc		VoC_sub16_dr(REG6,0x40a4,REG6)
		//0x14fe		CII_Cb_gain_La2
0xFFC0E0C9,	//0x14fe		VoC_NAD	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0x0D502B80,	//0x1500		VoC_jal(CII_NORM_L_ACC0)
0xF6257A0C,	//0x1502		VoC_movreg16(REG5,REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xF6896120,	//0x1504		VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0x0D502B80,	//0x1506		VoC_jal(CII_NORM_L_ACC0)
0xC34D6121,	//0x1508		VoC_sub16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0x0D622B80,	//0x150a		VoC_jal(CII_DIV_S)
0xFE2AF80A,	//0x150c		VoC_shr16_rr(REG2,REG5,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x5CB2DF00,	//0x150e		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x150f		VoC_endloop1
0xDFA9C1D7,	//0x1510		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,IN_PARALLEL)
0xE580E0E5,	//0x1512		VoC_return	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x1514		CII_Reorder_lsf
0x00CD0A85,	//0x1514		VoC_lw16i(REG5,0xcd)
0xD804E946,	//0x1516		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x151C34AC,	//0x1518		VoC_bngt16_rr(Reord_L,REG5,REG4)
0xFFC0DC05,	//0x151a		VoC_NAD	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x151c		Reord_L
		//0x151c		VoC_endloop0
0x407B0085,	//0x151c		VoC_add16inc_pd(REG5,REG0,0x407b)
0xF004E580,	//0x151e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_return
		//0x151f		CII_rx_dtx_handler
0x1403F002,	//0x1520		VoC_lw16_d(REG3,0x7bd)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x402F07BD,	//0x1522		VoC_be16_rd(DtxDec_L8,REG7,0x4082)(lo)	|	VoC_lw16_d(REG3,0x7bd)(hi)
0x383F4082,	//0x1524		VoC_bgt16_rd(DtxDec_L3,REG7,0x407f)(lo)	|	VoC_be16_rd(DtxDec_L8,REG7,0x4082)(hi)
0xFFC0407F,	//0x1526		VoC_NAD	|	VoC_bgt16_rd(DtxDec_L3,REG7,0x407f)(hi)
		//0x1528		DtxDec_L8
0x153C3183,	//0x1528		VoC_bez16_r(DtxDec_L5,REG3)
0x40A63D17,	//0x152a		VoC_bngt16_rd(DtxDec_L5,REG7,0x40a6)
		//0x152c		DtxDec_L3
0x443BF024,	//0x152c		VoC_bne16_rd(DtxDec_L7,REG3,0x407e)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x402F407E,	//0x152e		VoC_be16_rd(DtxDec_L7,REG7,0x407f)(lo)	|	VoC_bne16_rd(DtxDec_L7,REG3,0x407e)(hi)
0x401F407F,	//0x1530		VoC_be16_rd(DtxDec_L7,REG7,0x40be)(lo)	|	VoC_be16_rd(DtxDec_L7,REG7,0x407f)(hi)
0xF04440BE,	//0x1532		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_be16_rd(DtxDec_L7,REG7,0x40be)(hi)
		//0x1534		DtxDec_L7
0x0712F022,	//0x1534		VoC_add16_rd(REG2,REG2,0x74a)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x402D074A,	//0x1536		VoC_be16_rd(DtxDec_L5,REG5,0x40be)(lo)	|	VoC_add16_rd(REG2,REG2,0x74a)(hi)
0x3C1A40BE,	//0x1538		VoC_bngt16_rd(DtxDec_L5,REG2,0x407c)(lo)	|	VoC_be16_rd(DtxDec_L5,REG5,0x40be)(hi)
0xF044407C,	//0x153a		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_bngt16_rd(DtxDec_L5,REG2,0x407c)(hi)
		//0x153c		DtxDec_L5
0x074A1502,	//0x153c		VoC_sw16_d(REG2,0x74a)
0x07B92007,	//0x153e		VoC_lw16d_set_inc(REG3,0x7b9,0x1)
0x07BE6E05,	//0x1540		VoC_bnez16_d(DtxDec_L9,0x7be)
0x40BE441F,	//0x1542		VoC_bne16_rd(DtxDec_L9,REG7,0x40be)
0xF001F003,	//0x1544		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x1545		DtxDec_L9
0x40A6071B,	//0x1546		VoC_add16_rd(REG3,REG3,0x40a6)
0x407E4027,	//0x1548		VoC_be16_rd(DtxDec_L10,REG7,0x407e)
0x4080483F,	//0x154a		VoC_blt16_rd(DtxDec_L11,REG7,0x4080)
		//0x154c		DtxDec_L10
0x40824427,	//0x154c		VoC_bne16_rd(DtxDec_L12,REG7,0x4082)
0x15513184,	//0x154e		VoC_bez16_r(DtxDec_L11,REG4)
		//0x1550		DtxDec_L12
0xF006F021,	//0x1550		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x1551		DtxDec_L11
0x3181F0E2,	//0x1552		VoC_bez16_r(DtxDec_L14,REG1)(lo)	|	VoC_lw16i_short(REG2,0x7,DEFAULT)
0xF0261560,	//0x1554		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_bez16_r(DtxDec_L14,REG1)(hi)
0x408D3883,	//0x1556		VoC_bgt16_rd(DtxDec_L15,REG3,0x408d)
0xE0127006,	//0x1558		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x07B80B12,	//0x155a		VoC_sub16_dr(REG2,0x7b8,REG2)
0x07B86E04,	//0x155c		VoC_bnez16_d(DtxDec_L14,0x7b8)
		//0x155e		DtxDec_L15
0xFFC0FF41,	//0x155e		VoC_NOP	|	VoC_lw32z(REG23,DEFAULT)
		//0x1560		DtxDec_L14
0x07B81581,	//0x1560		VoC_sw32_d(REG23,0x7b8)
0x15723184,	//0x1562		VoC_bez16_r(DtxDec_L19,REG4)
0xE0037022,	//0x1564		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x40804097,	//0x1566		VoC_be16_rd(DtxDec_L22,REG7,0x4080)
0x403FF023,	//0x1568		VoC_be16_rd(DtxDec_L22,REG7,0x40be)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xFF4140BE,	//0x156a		VoC_lw32z(REG23,DEFAULT)	|	VoC_be16_rd(DtxDec_L22,REG7,0x40be)(hi)
0x40814427,	//0x156c		VoC_bne16_rd(DtxDec_L22,REG7,0x4081)
0xF006F022,	//0x156e		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x1570		DtxDec_L22
0x07BA1581,	//0x1570		VoC_sw32_d(REG23,0x7ba)
		//0x1572		DtxDec_L19
0x07BC1506,	//0x1572		VoC_sw16_d(REG6,0x7bc)
0xDFE9E580,	//0x1574		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1575		CII_gc_pred
0x1808FF44,	//0x1576		VoC_lw16i_set_inc(REG0,0xdbe,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x6A820DBE,	//0x1578		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xdbe,0x2)(hi)
0xD500DFC1,	//0x157a		VoC_bimac32inc_pp(REG0,REG0)	|	VoC_push16(REG1,IN_PARALLEL)
		//0x157b		VoC_endloop0
0x0EA52B80,	//0x157c		VoC_jal(CII_Log2)
0x1FAC0AC2,	//0x157e		VoC_lw16i(REG2,0xffff9fac)
0xC755CD14,	//0x1580		VoC_multf16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0x00401806,	//0x1582		VoC_lw16i_set_inc(REG2,0x40,0x1)
0x40A60E28,	//0x1584		VoC_mac32_rd(REG5,0x40a6)
0x41260A80,	//0x1586		VoC_lw16i(REG0,0x4126)
0x40BE4487,	//0x1588		VoC_bne16_rd(label_no_MR795,REG7,0x40be)
0x406D0B09,	//0x158a		VoC_sub16_dr(REG1,0x406d,REG1)
0x42A60A80,	//0x158c		VoC_lw16i(REG0,0x42a6)
0xFFC0E5D0,	//0x158e		VoC_NAD	|	VoC_jump(label_tes_end)
		//0x1590		label_no_MR795
0x40804487,	//0x1590		VoC_bne16_rd(label_no_MR74,REG7,0x4080)
0x00200A82,	//0x1592		VoC_lw16i(REG2,0x20)
0x7F4C0A80,	//0x1594		VoC_lw16i(REG0,0x7f4c)
0xFFC0E5C8,	//0x1596		VoC_NAD	|	VoC_jump(label_tes_end)
		//0x1598		label_no_MR74
0x407F4437,	//0x1598		VoC_bne16_rd(label_tes_end,REG7,0x407f)
0x7E0C0A80,	//0x159a		VoC_lw16i(REG0,0x7e0c)
0x00200A82,	//0x159c		VoC_lw16i(REG2,0x20)
		//0x159e		label_tes_end
0x1804CE02,	//0x159e		VoC_lw16i_set_inc(REG0,0x54ec,0x1)(lo)	|	VoC_mac32_rr(REG0,REG2,DEFAULT)
0xDF8254EC,	//0x15a0		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x54ec,0x1)(hi)
0xFBB46882,	//0x15a2		VoC_shr32_ri(ACC0,0xfffffff6,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x15a4		VoC_endloop0
0x0A82D402,	//0x15a4		VoC_lw16i(REG2,0x1543)(lo)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
0x60E51543,	//0x15a6		VoC_movreg16(REG5,REG7,DEFAULT)	|	VoC_lw16i(REG2,0x1543)(hi)
0x4C13F720,	//0x15a8		VoC_multf32_rr(REG67,REG0,REG2,DEFAULT)	|	VoC_movreg16(REG0,ACC0_HI,IN_PARALLEL)
0x441DC2AA,	//0x15aa		VoC_bne16_rd(label_no_MR74_2,REG5,0x4080)(lo)	|	VoC_sub16_rr(REG2,REG2,REG5,IN_PARALLEL)
0xCC134080,	//0x15ac		VoC_multf32_rr(REG67,REG0,REG2,DEFAULT)	|	VoC_bne16_rd(label_no_MR74_2,REG5,0x4080)(hi)
		//0x15ae		label_no_MR74_2
0xFA43DFA9,	//0x15ae		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE580F90E,	//0x15b0		VoC_return	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
		//0x15b2		CII_AMR_subfunc0
0xFF44DFE9,	//0x15b2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x15B62CA0,	//0x15b4		VoC_loop_i(0x0,0x50)
		//0x15b6		VoC_endloop0
0x1804D51B,	//0x15b6		VoC_lw16i_set_inc(REG0,0x6c2,0x1)(lo)	|	VoC_bimac32inc_pp(REG3,REG3)
0xFBF406C2,	//0x15b8		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6c2,0x1)(hi)
0xFF235FC0,	//0x15ba		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x7FFF0A86,	//0x15bc		VoC_lw16i(REG6,0x7fff)
0xD8856F85,	//0x15be		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3c,DEFAULT)
0x15C334B5,	//0x15c0		VoC_bngt16_rr(Bgnscd_LA1,REG6,REG5)
0xD885E0A6,	//0x15c2		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x15c3		Bgnscd_LA1
		//0x15c3		VoC_endloop0
0xD61078E6,	//0x15c4		VoC_lw16_sd(REG0,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffc,DEFAULT)
0x06FE1805,	//0x15c6		VoC_lw16i_set_inc(REG1,0x6fe,0x1)
0xFFC0D885,	//0x15c8		VoC_NAD	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xD8846EE5,	//0x15ca		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x37,DEFAULT)
0x15CF34A5,	//0x15cc		VoC_bngt16_rr(Bgnscd_LA2,REG4,REG5)
0xD884E085,	//0x15ce		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x15cf		Bgnscd_LA2
		//0x15cf		VoC_endloop0
0x0700D610,	//0x15d0		VoC_add16_rd(REG0,REG0,0x4091)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xF0024091,	//0x15d2		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x4091)(hi)
0xFFC0D884,	//0x15d4		VoC_NAD	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD8836A65,	//0x15d6		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x13,DEFAULT)
0x15DB349C,	//0x15d8		VoC_bngt16_rr(Bgnscd_LA3,REG3,REG4)
0xD883E064,	//0x15da		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x15db		Bgnscd_LA3
		//0x15db		VoC_endloop0
0x1807F020,	//0x15dc		VoC_lw16i_set_inc(REG3,0x7a1,0x1)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x3CBD07A1,	//0x15de		VoC_bngt16_rd(Bgnscd_LA5,REG5,0x408a)(lo)	|	VoC_lw16i_set_inc(REG3,0x7a1,0x1)(hi)
0x3CAF408A,	//0x15e0		VoC_bngt16_rd(Bgnscd_LA5,REG7,0x408a)(lo)	|	VoC_bngt16_rd(Bgnscd_LA5,REG5,0x408a)(hi)
0x389F408A,	//0x15e2		VoC_bgt16_rd(Bgnscd_LA5,REG7,0x4072)(lo)	|	VoC_bngt16_rd(Bgnscd_LA5,REG7,0x408a)(hi)
0x34374072,	//0x15e4		VoC_bgt16_rr(Bgnscd_LA4,REG6,REG7)(lo)	|	VoC_bgt16_rd(Bgnscd_LA5,REG7,0x4072)(hi)
0x349C15E9,	//0x15e6		VoC_bngt16_rr(Bgnscd_LA5,REG3,REG4)(lo)	|	VoC_bgt16_rr(Bgnscd_LA4,REG6,REG7)(hi)
0x800A15EE,	//0x15e8		VoC_add16_rp(REG2,REG0,REG1,DEFAULT)	|	VoC_bngt16_rr(Bgnscd_LA5,REG3,REG4)(hi)
		//0x15e9		Bgnscd_LA4
0x408D3C22,	//0x15ea		VoC_bngt16_rd(Bgnscd_LA5,REG2,0x408d)
0x001E0A82,	//0x15ec		VoC_lw16i(REG2,0x1e)
		//0x15ee		Bgnscd_LA5
0x003B0A86,	//0x15ee		VoC_lw16i(REG6,0x3b)
0x40A6381A,	//0x15f0		VoC_bgt16_rd(Bgnscd_LAEnd,REG2,0x40a6)
0xD613F000,	//0x15f2		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x15f3		Bgnscd_LAEnd
0x1500DC12,	//0x15f4		VoC_sw16_d(REG0,0x6b6)(lo)	|	VoC_sw16_p(REG2,REG1,DEFAULT)
0x071806B6,	//0x15f6		VoC_add16_rd(REG0,REG3,0x40a6)(lo)	|	VoC_sw16_d(REG0,0x6b6)(hi)
0xFFC040A6,	//0x15f8		VoC_NAD	|	VoC_add16_rd(REG0,REG3,0x40a6)(hi)
0x147A2B80,	//0x15fa		VoC_jal(CII_R02R3_p_R6)
0x36660A86,	//0x15fc		VoC_lw16i(REG6,0x3666)
0x3C2ADC37,	//0x15fe		VoC_bngt16_rd(Bgnscd_LA8,REG2,0x4083)(lo)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
0x0A864083,	//0x1600		VoC_lw16i(REG6,0x3ccd)(lo)	|	VoC_bngt16_rd(Bgnscd_LA8,REG2,0x4083)(hi)
0xFFC03CCD,	//0x1602		VoC_NAD	|	VoC_lw16i(REG6,0x3ccd)(hi)
		//0x1604		Bgnscd_LA8
0x40933C22,	//0x1604		VoC_bngt16_rd(Bgnscd_LA9,REG2,0x4093)
0x3FFF0A86,	//0x1606		VoC_lw16i(REG6,0x3fff)
		//0x1608		Bgnscd_LA9
0x408A38AA,	//0x1608		VoC_bgt16_rd(Bgnscd_Lab11,REG2,0x408a)
0x06BC1804,	//0x160a		VoC_lw16i_set_inc(REG0,0x6bc,0x1)
0xE0555FC6,	//0x160c		VoC_lw16i_short(REG5,0x5,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x0F5E2B80,	//0x160e		VoC_jal(CII_gmed_n)
0xE0075F86,	//0x1610		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x1626340E,	//0x1612		VoC_bgt16_rr(Bgnscd_LA15,REG1,REG6)
0xDFC6E5CC,	//0x1614		VoC_push16(REG6,DEFAULT)	|	VoC_jump(Bgnscd_Lab15)
		//0x1615		Bgnscd_Lab11
0x1804F125,	//0x1616		VoC_lw16i_set_inc(REG0,0x6b8,0x1)(lo)	|	VoC_lw16i_short(REG5,0x9,DEFAULT)
0xFFC006B8,	//0x1618		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x6b8,0x1)(hi)
0x0F5E2B80,	//0x161a		VoC_jal(CII_gmed_n)
0xE0075F86,	//0x161c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x1626340E,	//0x161e		VoC_bgt16_rr(Bgnscd_LA15,REG1,REG6)
		//0x1620		Bgnscd_Lab15
0x072FF025,	//0x1620		VoC_add16_rd(REG7,REG5,0x6b7)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x3C1F06B7,	//0x1622		VoC_bngt16_rd(Bgnscd_LA15,REG7,0x4085)(lo)	|	VoC_add16_rd(REG7,REG5,0x6b7)(hi)
0xF1474085,	//0x1624		VoC_lw16i_short(REG7,0xa,DEFAULT)	|	VoC_bngt16_rd(Bgnscd_LA15,REG7,0x4085)(hi)
		//0x1626		Bgnscd_LA15
0x1507DF80,	//0x1626		VoC_sw16_d(REG7,0x6b7)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x705206B7,	//0x1628		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_sw16_d(REG7,0x6b7)(hi)
0xF147D632,	//0x162a		VoC_lw16i_short(REG7,0xa,DEFAULT)	|	VoC_lw16_sd(REG2,0x2,IN_PARALLEL)
0x07AC073F,	//0x162c		VoC_add16_rd(REG7,REG7,0x7ac)
0x40994427,	//0x162e		VoC_bne16_rd(DtxDec_L1,REG7,0x4099)
0xFFC0F007,	//0x1630		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1632		DtxDec_L1
0x07141808,	//0x1632		VoC_lw16i_set_inc(REG0,0x714,0x2)
0x075C1809,	//0x1634		VoC_lw16i_set_inc(REG1,0x75c,0x2)
0x07AC1507,	//0x1636		VoC_sw16_d(REG7,0x7ac)
0x0DAB2B80,	//0x1638		VoC_jal(CII_dtx_com_s2)
0x071BF023,	//0x163a		VoC_add16_rd(REG3,REG3,0x7b6)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x441B07B6,	//0x163c		VoC_bne16_rd(DtxDec_L2,REG3,0x4083)(lo)	|	VoC_add16_rd(REG3,REG3,0x7b6)(hi)
0xF0034083,	//0x163e		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bne16_rd(DtxDec_L2,REG3,0x4083)(hi)
		//0x1640		DtxDec_L2
0x07AE1805,	//0x1640		VoC_lw16i_set_inc(REG1,0x7ae,0x1)
0xDFA9C0C9,	//0x1642		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG1,REG3,REG1,DEFAULT)
0x07B61503,	//0x1644		VoC_sw16_d(REG3,0x7b6)
0xE580DC14,	//0x1646		VoC_return	|	VoC_sw16_p(REG4,REG1,DEFAULT)
		//0x1648		CII_Post_Process
0x2D41E004,	//0x1648		VoC_loop_i(0x1,0xa0)(lo)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0xE080166B,	//0x164a		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_loop_i(0x1,0xa0)(hi)
0x54FA1FBE,	//0x164c		VoC_lw16i_set_inc(REG2,0x54fa,0xffffffff)
0x54F4180B,	//0x164e		VoC_lw16i_set_inc(REG3,0x54f4,0x2)
0xFF4459C3,	//0x1650		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD03AE846,	//0x1652		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xFFC08F95,	//0x1654		VoC_NOP	|	VoC_multf16inc_rp(REG5,REG6,REG2,DEFAULT)
0x40A60E28,	//0x1656		VoC_mac32_rd(REG5,0x40a6)
		//0x1658		VoC_endloop0
0xE0E5D9C3,	//0x1658		VoC_movreg16(REG5,REG7,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF6C75816,	//0x165a		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xD12BD233,	//0x165c		VoC_mac32inc_rp(REG5,REG3,DEFAULT)	|	VoC_bimac32inc_rp(REG67,REG3)
0x407E0720,	//0x165e		VoC_add16_rd(REG0,REG4,0x407e)
0x7F23FBF4,	//0x1660		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x1583D986,	//0x1662		VoC_sw32_d(REG67,0x5c4)(lo)	|	VoC_lw32_p(RL6,REG0,IN_PARALLEL)
0x790E05C4,	//0x1664		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_sw32_d(REG67,0x5c4)(hi)
0x0924FBFC,	//0x1666		VoC_add32_rd(ACC0,ACC0,0x40ba)(lo)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xDDA640BA,	//0x1668		VoC_sw32_p(RL6,REG4,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x40ba)(hi)
0xDC99DD83,	//0x166a		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_sw32_p(REG67,REG0,DEFAULT)
		//0x166b		VoC_endloop1
0xDFE9E580,	//0x166c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x166d		CII_amr_dec_122
0xDFC0DFC1,	//0x166e		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x40C01806,	//0x1670		VoC_lw16i_set_inc(REG2,0x40c0,0x1)
0x0DE61807,	//0x1672		VoC_lw16i_set_inc(REG3,0xde6,0x1)
0x3186DFC2,	//0x1674		VoC_bez16_r(Dplsf5_L1,REG6)(lo)	|	VoC_push16(REG2,DEFAULT)
0x0A86168A,	//0x1676		VoC_lw16i(REG6,0x667)(lo)	|	VoC_bez16_r(Dplsf5_L1,REG6)(hi)
0x694E0667,	//0x1678		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i(REG6,0x667)(hi)
0x8D94E097,	//0x167a		VoC_multf16_rp(REG4,REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x9,IN_PARALLEL)
0x40670385,	//0x167c		VoC_multf16inc_pd(REG5,REG0,0x4067)
0xC165C039,	//0x167e		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG7,DEFAULT)
0x4062030C,	//0x1680		VoC_multf16_pd(REG4,REG1,0x4062)
0x8314DCB5,	//0x1682		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xC0FCC364,	//0x1684		VoC_add16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)
0xDC45DC14,	//0x1686		VoC_sw16_p(REG5,REG4,DEFAULT)	|	VoC_sw16_p(REG4,REG1,DEFAULT)
		//0x1687		VoC_endloop0
0x16C62B00,	//0x1688		VoC_jump_lg(Dplsf5_LEnd)
		//0x168a		Dplsf5_L1
0xF00B7050,	//0x168a		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x42660A87,	//0x168c		VoC_lw16i(REG7,0x4266)
0xE843FFC0,	//0x168e		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
0x18532B80,	//0x1690		VoC_jal(CII_D_plsf_5_sub)
		//0x1692		VoC_endloop0
0x44660A87,	//0x1692		VoC_lw16i(REG7,0x4466)
0xD8907022,	//0x1694		VoC_lw16inc_p(REG0,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF808E402,	//0x1696		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_rr(REG2,REG0,DEFAULT)
0x0A84F8F0,	//0x1698		VoC_lw16i(REG4,0x4866)(lo)	|	VoC_shr16_ri(REG0,0xfffffffe,DEFAULT)
0xC0204866,	//0x169a		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x4866)(hi)
0xD9C2FFC0,	//0x169c		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_NOP
0x3182D9C3,	//0x169e		VoC_bez16_r(D_plsf5_L2,REG2)(lo)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF00216A6,	//0x16a0		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_bez16_r(D_plsf5_L2,REG2)(hi)
0xC2AD42A4,	//0x16a2		VoC_sub16_rr(REG5,REG2,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)
0xC2BF42B6,	//0x16a4		VoC_sub16_rr(REG7,REG2,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)
		//0x16a6		D_plsf5_L2
0x4085071A,	//0x16a6		VoC_add16_rd(REG2,REG3,0x4085)
0xDD93DDDA,	//0x16a8		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0x4C660A87,	//0x16aa		VoC_lw16i(REG7,0x4c66)
0xE843FFC0,	//0x16ac		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
0x18532B80,	//0x16ae		VoC_jal(CII_D_plsf_5_sub)
		//0x16b0		VoC_endloop0
0x50660A87,	//0x16b0		VoC_lw16i(REG7,0x5066)
0xE0A75621,	//0x16b2		VoC_lw16i_short(REG7,0xa,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x0DE61807,	//0x16b4		VoC_lw16i_set_inc(REG3,0xde6,0x1)
0xD612C079,	//0x16b6		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x4062030C,	//0x16b8		VoC_multf16_pd(REG4,REG1,0x4062)
0x8314E94A,	//0x16ba		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC0FE811D,	//0x16bc		VoC_add16_rr(REG6,REG3,REG7,DEFAULT)	|	VoC_add16_rp(REG5,REG4,REG3,DEFAULT)
0xD865DCB5,	//0x16be		VoC_lw16_p(REG5,REG6,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xDC95C12C,	//0x16c0		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x4062030C,	//0x16c2		VoC_multf16_pd(REG4,REG1,0x4062)
		//0x16c4		VoC_endloop0
0xFFC0DC64,	//0x16c4		VoC_NAD	|	VoC_sw16_p(REG4,REG6,DEFAULT)
		//0x16c6		Dplsf5_LEnd
0x0DE61804,	//0x16c6		VoC_lw16i_set_inc(REG0,0xde6,0x1)
0x15142B80,	//0x16c8		VoC_jal(CII_Reorder_lsf)
0x15142B80,	//0x16ca		VoC_jal(CII_Reorder_lsf)
0x0DF01804,	//0x16cc		VoC_lw16i_set_inc(REG0,0xdf0,0x1)
0x6943D623,	//0x16ce		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0xD886D886,	//0x16d0		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
		//0x16d2		VoC_endloop0
0x0A80DCB6,	//0x16d2		VoC_lw16i(REG0,0xde6)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x18050DE6,	//0x16d4		VoC_lw16i_set_inc(REG1,0xca4,0x1)(lo)	|	VoC_lw16i(REG0,0xde6)(hi)
0xFFC00CA4,	//0x16d6		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0xca4,0x1)(hi)
0x0E722B80,	//0x16d8		VoC_jal(CII_Lsf_lsp)
0x0DF01804,	//0x16da		VoC_lw16i_set_inc(REG0,0xdf0,0x1)
0x0C9A1805,	//0x16dc		VoC_lw16i_set_inc(REG1,0xc9a,0x1)
0x0E722B80,	//0x16de		VoC_jal(CII_Lsf_lsp)
0x5627DF80,	//0x16e0		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x41C7E050,	//0x16e2		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x5,IN_PARALLEL)
0xD912D909,	//0x16e4		VoC_lw32_sd(REG45,0x1,DEFAULT)	|	VoC_lw32_sd(REG23,0x0,IN_PARALLEL)
0x6060DA27,	//0x16e6		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_sw16_sd(REG7,0x1,DEFAULT)
0xFFC0F683,	//0x16e8		VoC_NAD	|	VoC_movreg16(REG3,REG4,IN_PARALLEL)
0x185D2B80,	//0x16ea		VoC_jal(CII_Int_lpc_1and3_dec)
0xDF825F06,	//0x16ec		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
0x60A0DF02,	//0x16ee		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xFFC0F681,	//0x16f0		VoC_NAD	|	VoC_movreg16(REG1,REG4,IN_PARALLEL)
0x0D962B80,	//0x16f2		VoC_jal(CII_Copy_M)
0xEFF67005,	//0x16f4		VoC_lw16i_short(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1505DFCD,	//0x16f6		VoC_sw16_d(REG5,0xd54)(lo)	|	VoC_push16(RL6_HI,DEFAULT)
0x15060D54,	//0x16f8		VoC_sw16_d(REG6,0xd53)(lo)	|	VoC_sw16_d(REG5,0xd54)(hi)
0xFFC00D53,	//0x16fa		VoC_NAD	|	VoC_sw16_d(REG6,0xd53)(hi)
		//0x16fc		Dec_amr_LoopStart_122
0x40754425,	//0x16fc		VoC_bne16_rd(Dec_amr_LoopEnd_1221,REG5,0x4075)
0x182E2B00,	//0x16fe		VoC_jump_lg(Dec_amr_LoopEnd_122)
		//0x1700		Dec_amr_LoopEnd_1221
0xF0047023,	//0x1700		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x071EDFC5,	//0x1702		VoC_add16_rd(REG6,REG3,0xd53)(lo)	|	VoC_push16(REG5,DEFAULT)
0x079C0D53,	//0x1704		VoC_sub16_rd(REG4,REG3,0xd54)(lo)	|	VoC_add16_rd(REG6,REG3,0xd53)(hi)
0x15060D54,	//0x1706		VoC_sw16_d(REG6,0xd53)(lo)	|	VoC_sub16_rd(REG4,REG3,0xd54)(hi)
0x15040D53,	//0x1708		VoC_sw16_d(REG4,0xd54)(lo)	|	VoC_sw16_d(REG6,0xd53)(hi)
0x441D0D54,	//0x170a		VoC_bne16_rd(Dec_amr_L14_122,REG5,0x4099)(lo)	|	VoC_sw16_d(REG4,0xd54)(hi)
0xF0054099,	//0x170c		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bne16_rd(Dec_amr_L14_122,REG5,0x4099)(hi)
		//0x170e		Dec_amr_L14_122
0x1505D630,	//0x170e		VoC_sw16_d(REG5,0xd46)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xD8830D46,	//0x1710		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16_d(REG5,0xd46)(hi)
0x06A71404,	//0x1712		VoC_lw16_d(REG4,0x6a7)
0x1503DA30,	//0x1714		VoC_sw16_d(REG3,0xd40)(lo)	|	VoC_sw16_sd(REG0,0x2,DEFAULT)
0x14060D40,	//0x1716		VoC_lw16_d(REG6,0xd3e)(lo)	|	VoC_sw16_d(REG3,0xd40)(hi)
0xF0A20D3E,	//0x1718		VoC_lw16i_short(REG2,0x5,DEFAULT)	|	VoC_lw16_d(REG6,0xd3e)(hi)
0x0D466E14,	//0x171a		VoC_bnez16_d(Dec_lag6_L1,0xd46)
0x079EF007,	//0x171c		VoC_sub16_rd(REG6,REG3,0x40a0)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x4CB340A0,	//0x171e		VoC_bnlt16_rd(Dec_lag6_L2,REG3,0x40a1)(lo)	|	VoC_sub16_rd(REG6,REG3,0x40a0)(hi)
0xC0D640A1,	//0x1720		VoC_add16_rr(REG6,REG3,REG2,DEFAULT)	|	VoC_bnlt16_rd(Dec_lag6_L2,REG3,0x40a1)(hi)
0x405F08B6,	//0x1722		VoC_multf16_rd(REG6,REG6,0x405f)
0x0736FFC0,	//0x1724		VoC_add16_rd(REG6,REG6,0x4088)(lo)	|	VoC_NOP
0x08354088,	//0x1726		VoC_mult16_rd(REG5,REG6,0x4081)(lo)	|	VoC_add16_rd(REG6,REG6,0x4088)(hi)
0xFFC04081,	//0x1728		VoC_NOP	|	VoC_mult16_rd(REG5,REG6,0x4081)(hi)
0x072FC2ED,	//0x172a		VoC_add16_rd(REG7,REG5,0x4065)(lo)	|	VoC_sub16_rr(REG5,REG3,REG5,DEFAULT)
0xE5D54065,	//0x172c		VoC_jump(Dec_lag6_end)	|	VoC_add16_rd(REG7,REG5,0x4065)(hi)
		//0x172d		Dec_lag6_L2
		//0x172e		Dec_lag6_L1
0x4C1DC395,	//0x172e		VoC_bnlt16_rd(Dec_lag6_L3,REG5,0x4089)(lo)	|	VoC_sub16_rr(REG5,REG6,REG2,DEFAULT)
0xF2454089,	//0x1730		VoC_lw16i_short(REG5,0x12,DEFAULT)	|	VoC_bnlt16_rd(Dec_lag6_L3,REG5,0x4089)(hi)
		//0x1732		Dec_lag6_L3
0x40683C25,	//0x1732		VoC_bngt16_rd(Dec_lag6_L4,REG5,0x4068)
0x00860A85,	//0x1734		VoC_lw16i(REG5,0x86)
		//0x1736		Dec_lag6_L4
0x0892C0D2,	//0x1736		VoC_multf16_rd(REG2,REG2,0x405f)(lo)	|	VoC_add16_rr(REG2,REG3,REG2,DEFAULT)
0x079F405F,	//0x1738		VoC_sub16_rd(REG7,REG3,0x407f)(lo)	|	VoC_multf16_rd(REG2,REG2,0x405f)(hi)
0x0792407F,	//0x173a		VoC_sub16_rd(REG2,REG2,0x40a6)(lo)	|	VoC_sub16_rd(REG7,REG3,0x407f)(hi)
0x081240A6,	//0x173c		VoC_mult16_rd(REG2,REG2,0x4081)(lo)	|	VoC_sub16_rd(REG2,REG2,0x40a6)(hi)
0xC0AE4081,	//0x173e		VoC_add16_rr(REG6,REG2,REG5,DEFAULT)	|	VoC_mult16_rd(REG2,REG2,0x4081)(hi)
0xFFC0C3D7,	//0x1740		VoC_NAD	|	VoC_sub16_rr(REG7,REG7,REG2,DEFAULT)
		//0x1742		Dec_lag6_end
0x003D0A81,	//0x1742		VoC_lw16i(REG1,0x3d)
0x0D566E06,	//0x1744		VoC_bnez16_d(Dec_amr_L21_122,0xd56)
0x0D466C08,	//0x1746		VoC_bez16_d(Dec_amr_L22_122,0xd46)
0x0D403831,	//0x1748		VoC_bgt16_rd(Dec_amr_L22_122,REG1,0xd40)
		//0x174a		Dec_amr_L21_122
0x06AB1506,	//0x174a		VoC_sw16_d(REG6,0x6ab)
0xE0076086,	//0x174c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
		//0x174e		Dec_amr_L22_122
0x1583F002,	//0x174e		VoC_sw32_d(REG67,0xd3e)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x0A850D3E,	//0x1750		VoC_lw16i(REG5,0x66a)(lo)	|	VoC_sw32_d(REG67,0xd3e)(hi)
0xFFC0066A,	//0x1752		VoC_NAD	|	VoC_lw16i(REG5,0x66a)(hi)
0x0F802B80,	//0x1754		VoC_jal(CII_Pred_lt_3or6)
0x0DBE1804,	//0x1756		VoC_lw16i_set_inc(REG0,0xdbe,0x1)
0xF0065632,	//0x1758		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xD8A1DFC0,	//0x175a		VoC_lw16inc_p(REG1,REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x07281804,	//0x175c		VoC_lw16i_set_inc(REG0,0x728,0x1)
0x06AA2007,	//0x175e		VoC_lw16d_set_inc(REG3,0x6aa,0x1)
0x5FC0DA42,	//0x1760		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_sd(REG2,0x3,DEFAULT)
0x6C05F005,	//0x1762		VoC_bez16_d(Dec_amr_L29_122,0xd56)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDFC30D56,	//0x1764		VoC_push16(REG3,DEFAULT)	|	VoC_bez16_d(Dec_amr_L29_122,0xd56)(hi)
0xE5CBDF83,	//0x1766		VoC_jump(Dec_amr_L30_122)	|	VoC_pop16(REG3,DEFAULT)
		//0x1768		Dec_amr_L29_122
0x41FC0A86,	//0x1768		VoC_lw16i(REG6,0x41fc)
0xFFC0C18E,	//0x176a		VoC_NOP	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xF816D866,	//0x176c		VoC_shr16_ri(REG6,0x2,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xFFC0F8F6,	//0x176e		VoC_NOP	|	VoC_shr16_ri(REG6,0xfffffffe,DEFAULT)
0x0D421506,	//0x1770		VoC_sw16_d(REG6,0xd42)
		//0x1772		Dec_amr_L30_122
0x14982B80,	//0x1772		VoC_jal(CII_ec_gain_pitch_update)
0xD641DF80,	//0x1774		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x4085070A,	//0x1776		VoC_add16_rd(REG2,REG1,0x4085)
0xDA42F050,	//0x1778		VoC_sw16_sd(REG2,0x3,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD6107F44,	//0x177a		VoC_lw16_sd(REG0,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE0026A82,	//0x177c		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x177e		VoC_endloop0
0xD610DDC4,	//0x177e		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x425E0A84,	//0x1780		VoC_lw16i(REG4,0x425e)
0x17AD2C0A,	//0x1782		VoC_loop_i(0x0,0x5)
0xE0765893,	//0x1784		VoC_lw16i_short(REG6,0x7,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xC1A6E41E,	//0x1786		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_and16_rr(REG6,REG3,DEFAULT)
0xD866F0A5,	//0x1788		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x1603CDAB,	//0x178a		VoC_and16_ri(REG3,0x8)(lo)	|	VoC_multf32_rr(REG67,REG6,REG5,DEFAULT)
0xFA0B0008,	//0x178c		VoC_shr32_ri(REG67,0x1,DEFAULT)	|	VoC_and16_ri(REG3,0x8)(hi)
0x0A87C196,	//0x178e		VoC_lw16i(REG7,0x1000)(lo)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0x31831000,	//0x1790		VoC_bez16_r(DEC_10I40_35BITS_L1,REG3)(lo)	|	VoC_lw16i(REG7,0x1000)(hi)
0x0AC71796,	//0x1792		VoC_lw16i(REG7,0xfffff000)(lo)	|	VoC_bez16_r(DEC_10I40_35BITS_L1,REG3)(hi)
0xFFC07000,	//0x1794		VoC_NAD	|	VoC_lw16i(REG7,0xfffff000)(hi)
		//0x1796		DEC_10I40_35BITS_L1
0x4080070D,	//0x1796		VoC_add16_rd(REG5,REG1,0x4080)
0xD855C033,	//0x1798		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_add16_rr(REG3,REG0,REG6,DEFAULT)
0x00071605,	//0x179a		VoC_and16_ri(REG5,0x7)
0xDC37C165,	//0x179c		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x0A2CD855,	//0x179e		VoC_multf32_rd(ACC0,REG5,0x40be)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xFFC040BE,	//0x17a0		VoC_NOP	|	VoC_multf32_rd(ACC0,REG5,0x40be)(hi)
0xE105FA0C,	//0x17a2		VoC_movreg16(REG5,ACC0_LO,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x34B5C155,	//0x17a4		VoC_bngt16_rr(DEC_10I40_35BITS_L2,REG6,REG5)(lo)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x0B3F17A9,	//0x17a6		VoC_sub16_dr(REG7,0x40a4,REG7)(lo)	|	VoC_bngt16_rr(DEC_10I40_35BITS_L2,REG6,REG5)(hi)
0xC02E40A4,	//0x17a8		VoC_add16_rr(REG6,REG0,REG5,DEFAULT)	|	VoC_sub16_dr(REG7,0x40a4,REG7)(hi)
		//0x17a9		DEC_10I40_35BITS_L2
0x81F7FFC0,	//0x17aa		VoC_add16_rp(REG7,REG7,REG6,DEFAULT)	|	VoC_NOP
0xDC67DE10,	//0x17ac		VoC_sw16_p(REG7,REG6,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
		//0x17ad		VoC_endloop0
0x0D421405,	//0x17ae		VoC_lw16_d(REG5,0xd42)
0x0FD82B80,	//0x17b0		VoC_jal(CII_amr_dec_com_sub1)
0x0D401506,	//0x17b2		VoC_sw16_d(REG6,0xd40)
0x07301804,	//0x17b4		VoC_lw16i_set_inc(REG0,0x730,0x1)
0x07381805,	//0x17b6		VoC_lw16i_set_inc(REG1,0x738,0x1)
0xDFC1DFC0,	//0x17b8		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x0D566E1C,	//0x17ba		VoC_bnez16_d(Dec_amr_L44_122,0xd56)
0x2B80DFC6,	//0x17bc		VoC_jal(CII_gc_pred_M122_dec)(lo)	|	VoC_push16(REG6,DEFAULT)
0xFF181834,	//0x17be		VoC_movreg32(REG01,REG67,DEFAULT)	|	VoC_jal(CII_gc_pred_M122_dec)(hi)
0x0F112B80,	//0x17c0		VoC_jal(CII_Pow2)
0x082DDF85,	//0x17c2		VoC_mult16_rd(REG5,REG5,0x407f)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x0A83407F,	//0x17c4		VoC_lw16i(REG3,0x52e8)(lo)	|	VoC_mult16_rd(REG5,REG5,0x407f)(hi)
0xC15852E8,	//0x17c6		VoC_add16_rr(REG0,REG5,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x52e8)(hi)
0x8E82F8E2,	//0x17c8		VoC_multf16inc_rp(REG2,REG2,REG0,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffc,DEFAULT)
0xF8FAFFC0,	//0x17ca		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_NOP
0xD886D887,	//0x17cc		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0x0D431502,	//0x17ce		VoC_sw16_d(REG2,0xd43)
0x07380A85,	//0x17d0		VoC_lw16i(REG5,0x738)
0x0F4B2B80,	//0x17d2		VoC_jal(CII_gc_pred_update)
0xE5C6F031,	//0x17d4		VoC_jump(Dec_amr_L45_122)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
		//0x17d6		Dec_amr_L44_122
0x06AA2006,	//0x17d6		VoC_lw16d_set_inc(REG2,0x6aa,0x1)
0xDFC2FFC0,	//0x17d8		VoC_push16(REG2,DEFAULT)	|	VoC_NOP
0xDF81DF82,	//0x17da		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x17db		Dec_amr_L45_122
0x0D431406,	//0x17dc		VoC_lw16_d(REG6,0xd43)
0x147F2B80,	//0x17de		VoC_jal(CII_ec_gain_code_update)
0x1406DF80,	//0x17e0		VoC_lw16_d(REG6,0xd42)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xF8FE0D42,	//0x17e2		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG6,0xd42)(hi)
0x1402F027,	//0x17e4		VoC_lw16_d(REG2,0xd42)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x15060D42,	//0x17e6		VoC_sw16_d(REG6,0xd45)(lo)	|	VoC_lw16_d(REG2,0xd42)(hi)
0x18040D45,	//0x17e8		VoC_lw16i_set_inc(REG0,0x66a,0x1)(lo)	|	VoC_sw16_d(REG6,0xd45)(hi)
0x3CAE066A,	//0x17ea		VoC_bngt16_rd(Dec_amr_L52_122,REG6,0x40b6)(lo)	|	VoC_lw16i_set_inc(REG0,0x66a,0x1)(hi)
0x8F8540B6,	//0x17ec		VoC_multf16inc_rp(REG5,REG6,REG0,DEFAULT)	|	VoC_bngt16_rd(Dec_amr_L52_122,REG6,0x40b6)(hi)
0x0CEA1805,	//0x17ee		VoC_lw16i_set_inc(REG1,0xcea,0x1)
0xED06CD54,	//0x17f0		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG2,DEFAULT)
0x8F85FEBC,	//0x17f2		VoC_multf16inc_rp(REG5,REG6,REG0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0x40BA0924,	//0x17f4		VoC_add32_rd(ACC0,ACC0,0x40ba)
0xDC99CD54,	//0x17f6		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG2,DEFAULT)
		//0x17f7		VoC_endloop0
		//0x17f8		Dec_amr_L52_122
0x32D91804,	//0x17f8		VoC_lw16i_set_inc(REG0,0x32d9,0x1)
0x34B8E047,	//0x17fa		VoC_bngt16_rr(Dec_amr_L54_122,REG7,REG0)(lo)	|	VoC_movreg16(REG7,REG2,DEFAULT)
0xE00717FE,	//0x17fc		VoC_movreg16(REG7,REG0,DEFAULT)	|	VoC_bngt16_rr(Dec_amr_L54_122,REG7,REG0)(hi)
		//0x17fe		Dec_amr_L54_122
0x0D566E0A,	//0x17fe		VoC_bnez16_d(Dec_amr_L56_122,0xd56)
0x06B81807,	//0x1800		VoC_lw16i_set_inc(REG3,0x6b8,0x1)
0x40A60718,	//0x1802		VoC_add16_rd(REG0,REG3,0x40a6)
0x2B80F106,	//0x1804		VoC_jal(CII_R02R3_p_R6)(lo)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0xDC32147A,	//0x1806		VoC_sw16_p(REG2,REG3,DEFAULT)	|	VoC_jal(CII_R02R3_p_R6)(hi)
		//0x1808		Dec_amr_L56_122
0xDFC0DFC0,	//0x1808		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x06A61507,	//0x180a		VoC_sw16_d(REG7,0x6a6)
0x14B72B80,	//0x180c		VoC_jal(CII_Int_lsf)
0x07081483,	//0x180e		VoC_lw32_d(REG67,0x708)
0x40AE091B,	//0x1810		VoC_add32_rd(REG67,REG67,0x40ae)
0x40A33825,	//0x1812		VoC_bgt16_rd(CGAver_L5_122,REG5,0x40a3)
0xFFC0F007,	//0x1814		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1816		CGAver_L5_122
0x40853C1F,	//0x1816		VoC_bngt16_rd(CGAver_L6_122,REG7,0x4085)
0xDF85F026,	//0x1818		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x1819		CGAver_L6_122
0x07081583,	//0x181a		VoC_sw32_d(REG67,0x708)
0x1505DF87,	//0x181c		VoC_sw16_d(REG5,0xd44)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x14060D44,	//0x181e		VoC_lw16_d(REG6,0xd42)(lo)	|	VoC_sw16_d(REG5,0xd44)(hi)
0xF0670D42,	//0x1820		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_lw16_d(REG6,0xd42)(hi)
0xF047F80E,	//0x1822		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x0FED2B80,	//0x1824		VoC_jal(CII_amr_dec_com_sub3)
0x10652B80,	//0x1826		VoC_jal(CII_amr_dec_com_sub4)
0xFFC0DF04,	//0x1828		VoC_NAD	|	VoC_pop32(ACC0,DEFAULT)
0x10852B80,	//0x182a		VoC_jal(CII_amr_dec_com_sub5)
0x16FC2B00,	//0x182c		VoC_jump_lg(Dec_amr_LoopStart_122)
		//0x182e		Dec_amr_LoopEnd_122
0xDF84DF85,	//0x182e		VoC_pop16(REG4,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xF00B5FA9,	//0x1830		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE580D623,	//0x1832		VoC_return	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
		//0x1834		CII_gc_pred_M122_dec
0x1808DFE9,	//0x1834		VoC_lw16i_set_inc(REG0,0xdbe,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x6A820DBE,	//0x1836		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xdbe,0x2)(hi)
0xD500FF44,	//0x1838		VoC_bimac32inc_pp(REG0,REG0)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x1839		VoC_endloop0
0x4080070E,	//0x183a		VoC_add16_rd(REG6,REG1,0x4080)
0x40BA0921,	//0x183c		VoC_add32_rd(REG23,ACC0,0x40ba)
0x40770A1C,	//0x183e		VoC_multf32_rd(ACC0,REG3,0x4077)
0x0EA52B80,	//0x1840		VoC_jal(CII_Log2)
0x757D0AC8,	//0x1842		VoC_lw16i(ACC0_LO,0xf57d)
0xE0B960C0,	//0x1844		VoC_lw16i_short(ACC0_HI,0xb,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0x54F01805,	//0x1846		VoC_lw16i_set_inc(REG1,0x54f0,0x1)
0xD401E881,	//0x1848		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x1849		VoC_endloop0
0x7BFBE0A6,	//0x184a		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xC317E1E2,	//0x184c		VoC_sub16_rr(REG7,REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x1e,IN_PARALLEL)
0x7A0BCB1B,	//0x184e		VoC_shr32_ri(REG67,0x1,DEFAULT)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0xF90EDFA9,	//0x1850		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_pop16(RA,IN_PARALLEL)
0xD890E580,	//0x1852		VoC_lw16inc_p(REG0,REG1,DEFAULT)	|	VoC_return
		//0x1853		CII_D_plsf_5_sub
0xC038F8F0,	//0x1854		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_shr16_ri(REG0,0xfffffffe,DEFAULT)
0x4085071C,	//0x1856		VoC_add16_rd(REG4,REG3,0x4085)
0xD9C5D9C4,	//0x1858		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDA5DDDC,	//0x185a		VoC_sw32_p(ACC1,REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xF007E580,	//0x185c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x185d		CII_Int_lpc_1and3_dec
0x64201809,	//0x185e		VoC_lw16i_set_inc(REG1,0x6420,0x2)
		//0x1860		Int_lpc_1and3_L0_dec
0x407D441F,	//0x1860		VoC_bne16_rd(Int_lpc_1and3_L3_dec,REG7,0x407d)
0xDFE9E580,	//0x1862		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1863		Int_lpc_1and3_L3_dec
0xDF435FC5,	//0x1864		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xDF405FC2,	//0x1866		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x0F022B80,	//0x1868		VoC_jal(CII_Int_lpc_only)
0xD908D913,	//0x186a		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x2B80C038,	//0x186c		VoC_jal(CII_Lsp_Az)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD9130E36,	//0x186e		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_jal(CII_Lsp_Az)(hi)
0x408B073F,	//0x1870		VoC_add16_rd(REG7,REG7,0x408b)
0x409407BD,	//0x1872		VoC_sub16_rd(REG5,REG7,0x4094)
0xD908DD13,	//0x1874		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32_sd(REG67,0x1,DEFAULT)
0xC0285611,	//0x1876		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x40904425,	//0x1878		VoC_bne16_rd(Int_lpc_1and3_L2_dec,REG5,0x4090)
0xFFC0D621,	//0x187a		VoC_NAD	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
		//0x187c		Int_lpc_1and3_L2_dec
0x0E362B80,	//0x187c		VoC_jal(CII_Lsp_Az)
0xDF005F82,	//0x187e		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xDF035F83,	//0x1880		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xF6655FA9,	//0x1882		VoC_movreg16(REG5,REG3,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x18602B00,	//0x1884		VoC_jump_lg(Int_lpc_1and3_L0_dec)
0xFFC0E580,	//0x1886		VoC_NAD	|	VoC_return
