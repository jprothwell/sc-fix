		//0x0d00		VoC_code_section_2
		//0x0d00		VPP_MP3_DECODE
0x6E05DFE9,	//0x0d00		VoC_bnez16_d(main_decode_while_new_add,0x4001)(lo)	|	VoC_push16(RA,DEFAULT)
0x2B004001,	//0x0d02		VoC_jump_lg(main_decode_while)(lo)	|	VoC_bnez16_d(main_decode_while_new_add,0x4001)(hi)
0xFFC00D5E,	//0x0d04		VoC_NAD	|	VoC_jump_lg(main_decode_while)(hi)
		//0x0d06		main_decode_while_new_add
0xF5F977F8,	//0x0d06		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0xE00771DA,	//0x0d08		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xe,DEFAULT)
0xF4047033,	//0x0d0a		VoC_lw16i_short(WRAP0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xF406701D,	//0x0d0c		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0xF403701F,	//0x0d0e		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x7FC11547,	//0x0d10		VoC_sw16_d(REG7,0xffc1)
0x003F0A96,	//0x0d12		VoC_lw16i(STATUS,0x3f)
0x1808FF44,	//0x0d14		VoC_lw16i_set_inc(REG0,0x47fe,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x150847FE,	//0x0d16		VoC_sw16_d(ACC0_LO,0x4905)(lo)	|	VoC_lw16i_set_inc(REG0,0x47fe,0x2)(hi)
0x2D024905,	//0x0d18		VoC_loop_i(0x0,0x81)(lo)	|	VoC_sw16_d(ACC0_LO,0x4905)(hi)
0xDDC40D1B,	//0x0d1a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x81)(hi)
		//0x0d1b		VoC_endloop0
0x480B1507,	//0x0d1c		VoC_sw16_d(REG7,0x480b)
0x08000A85,	//0x0d1e		VoC_lw16i(REG5,0x800)
0x00000A84,	//0x0d20		VoC_lw16i(REG4,0x0)
0x480C1504,	//0x0d22		VoC_sw16_d(REG4,0x480c)
0x48111504,	//0x0d24		VoC_sw16_d(REG4,0x4811)
0x48121504,	//0x0d26		VoC_sw16_d(REG4,0x4812)
0x481F1504,	//0x0d28		VoC_sw16_d(REG4,0x481f)
0x49081808,	//0x0d2a		VoC_lw16i_set_inc(REG0,0x4908,0x2)
0x159A1809,	//0x0d2c		VoC_lw16i_set_inc(REG1,0x159a,0x2)
0x5208180A,	//0x0d2e		VoC_lw16i_set_inc(REG2,0x5208,0x2)
0x0D3B2C21,	//0x0d30		VoC_loop_i(0x1,0x10)
0x0D342C90,	//0x0d32		VoC_loop_i(0x0,0x48)
		//0x0d34		VoC_endloop0
0x2D20DDC4,	//0x0d34		VoC_loop_i(0x0,0x90)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDCC0D37,	//0x0d36		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x90)(hi)
		//0x0d37		VoC_endloop0
0x0D3A2C80,	//0x0d38		VoC_loop_i(0x0,0x40)
		//0x0d3a		VoC_endloop0
0xFFC0DDD4,	//0x0d3a		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0d3b		VoC_endloop1
0x47F21808,	//0x0d3c		VoC_lw16i_set_inc(REG0,0x47f2,0x2)
0xDDC4E901,	//0x0d3e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x0d3f		VoC_endloop0
0x0DF82B80,	//0x0d40		VoC_jal(CII_mad_frame_mute)
0x013C2B80,	//0x0d42		VoC_jal(vpp_AmjpCircBuffInit)
		//0x0d44		main_decode_do
0xEFF67023,	//0x0d44		VoC_lw16i_short(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x481E1407,	//0x0d46		VoC_lw16_d(REG7,0x481e)
0x480F1503,	//0x0d48		VoC_sw16_d(REG3,0x480f)
0x040A4027,	//0x0d4a		VoC_be16_rd(main_decode_while_100_1,REG7,0x40a)
0xFFC0E5C8,	//0x0d4c		VoC_NAD	|	VoC_jump(main_decode_while_100)
		//0x0d4e		main_decode_while_100_1
0x40211506,	//0x0d4e		VoC_sw16_d(REG6,0x4021)
0x0DD22B80,	//0x0d50		VoC_jal(CII_reload_data_temp)
0x0DAE2B00,	//0x0d52		VoC_jump_lg(main_decode_exit)
		//0x0d54		main_decode_while_100
0xFF46701B,	//0x0d54		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x44E24427,	//0x0d56		VoC_bne16_rd(main_decode_100_2,REG7,0x44e2)
0x0DAE2B00,	//0x0d58		VoC_jump_lg(main_decode_exit)
		//0x0d5a		main_decode_100_2
0x40634427,	//0x0d5a		VoC_bne16_rd(main_decode_while,REG7,0x4063)
0x0DAE2B00,	//0x0d5c		VoC_jump_lg(main_decode_exit)
		//0x0d5e		main_decode_while
0x2B80F15C,	//0x0d5e		VoC_jal(CII_mad_header_decode)(lo)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
0xF21C0E09,	//0x0d60		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_jal(CII_mad_header_decode)(hi)
0x40604587,	//0x0d62		VoC_bne16_rd(main_decode_mad_header_decode,REG7,0x4060)
0x481E1406,	//0x0d64		VoC_lw16_d(REG6,0x481e)
0x1647E0C7,	//0x0d66		VoC_and16_ri(REG7,0xff00)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x31877F00,	//0x0d68		VoC_bez16_r(main_decode_do,REG7)(lo)	|	VoC_and16_ri(REG7,0xff00)(hi)
0xFFC00D44,	//0x0d6a		VoC_NAD	|	VoC_bez16_r(main_decode_do,REG7)(hi)
0x1F1D2B80,	//0x0d6c		VoC_jal(CII_decode_error)
0x44E24427,	//0x0d6e		VoC_bne16_rd(main_decode_while_2,REG7,0x44e2)
0x0DAE2B00,	//0x0d70		VoC_jump_lg(main_decode_exit)
		//0x0d72		main_decode_while_2
0x40634427,	//0x0d72		VoC_bne16_rd(main_decode_while_200,REG7,0x4063)
0x0DAE2B00,	//0x0d74		VoC_jump_lg(main_decode_exit)
		//0x0d76		main_decode_while_200
0x44EB4287,	//0x0d76		VoC_be16_rd(main_decode_while,REG7,0x44eb)
0x42D64237,	//0x0d78		VoC_be16_rd(main_decode_while,REG7,0x42d6)
		//0x0d7a		main_decode_mad_header_decode
0x10D32B80,	//0x0d7a		VoC_jal(CII_mad_frame_decode)
0x453FF006,	//0x0d7c		VoC_bne16_rd(mad_frame_decode_l10a,REG7,0x4060)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x14064060,	//0x0d7e		VoC_lw16_d(REG6,0x481e)(lo)	|	VoC_bne16_rd(mad_frame_decode_l10a,REG7,0x4060)(hi)
0xE0C7481E,	//0x0d80		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x481e)(hi)
0x7F001647,	//0x0d82		VoC_and16_ri(REG7,0xff00)
0x0D443187,	//0x0d84		VoC_bez16_r(main_decode_do,REG7)
0x1F1D2B80,	//0x0d86		VoC_jal(CII_decode_error)
0x44E24427,	//0x0d88		VoC_bne16_rd(main_decode_mad_header_decode_1,REG7,0x44e2)
0x0DAE2B00,	//0x0d8a		VoC_jump_lg(main_decode_exit)
		//0x0d8c		main_decode_mad_header_decode_1
0x40634427,	//0x0d8c		VoC_bne16_rd(main_decode_mad_header_decode_2,REG7,0x4063)
0x0DAE2B00,	//0x0d8e		VoC_jump_lg(main_decode_exit)
		//0x0d90		main_decode_mad_header_decode_2
0x44EB4027,	//0x0d90		VoC_be16_rd(mad_frame_decode_l10a,REG7,0x44eb)
0x0D5E2B00,	//0x0d92		VoC_jump_lg(main_decode_while)
		//0x0d94		mad_frame_decode_l10a
0x0DD22B80,	//0x0d94		VoC_jal(CII_reload_data_temp)
0x47FE1404,	//0x0d96		VoC_lw16_d(REG4,0x47fe)
0x48061403,	//0x0d98		VoC_lw16_d(REG3,0x4806)
0x409CF185,	//0x0d9a		VoC_be16_rd(NS_end,REG4,0x40a)(lo)	|	VoC_lw16i_short(REG5,0xc,DEFAULT)
0x0A85040A,	//0x0d9c		VoC_lw16i(REG5,0x24)(lo)	|	VoC_be16_rd(NS_end,REG4,0x40a)(hi)
0x443C0024,	//0x0d9e		VoC_bne16_rd(NS_end,REG4,0x42cb)(lo)	|	VoC_lw16i(REG5,0x24)(hi)
0x160342CB,	//0x0da0		VoC_and16_ri(REG3,0x1000)(lo)	|	VoC_bne16_rd(NS_end,REG4,0x42cb)(hi)
0x31831000,	//0x0da2		VoC_bez16_r(NS_end,REG3)(lo)	|	VoC_and16_ri(REG3,0x1000)(hi)
0xF2450DA6,	//0x0da4		VoC_lw16i_short(REG5,0x12,DEFAULT)	|	VoC_bez16_r(NS_end,REG3)(hi)
		//0x0da6		NS_end
0x1505F21C,	//0x0da6		VoC_sw16_d(REG5,0x4821)(lo)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0x0A824821,	//0x0da8		VoC_lw16i(REG2,0xc9a)(lo)	|	VoC_sw16_d(REG5,0x4821)(hi)
0x2B800C9A,	//0x0daa		VoC_jal(CII_mad_synth_frame)(lo)	|	VoC_lw16i(REG2,0xc9a)(hi)
0xF0071121,	//0x0dac		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jal(CII_mad_synth_frame)(hi)
		//0x0dae		main_decode_exit
0x40211400,	//0x0dae		VoC_lw16_d(REG0,0x4021)
0x0DCC31C0,	//0x0db0		VoC_bnez16_r(main_decode_output_2,REG0)
0x48201482,	//0x0db2		VoC_lw32_d(REG45,0x4820)
0x0C9A0A80,	//0x0db4		VoC_lw16i(REG0,0xc9a)
0x40081486,	//0x0db6		VoC_lw32_d(RL6,0x4008)
0xC5ADF206,	//0x0db8		VoC_mult16_rr(REG5,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(REG6,0x10,DEFAULT)
0x401CF808,	//0x0dba		VoC_be16_rd(main_decode_output_3,REG4,0x40a)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xF8FD040A,	//0x0dbc		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_be16_rd(main_decode_output_3,REG4,0x40a)(hi)
		//0x0dbe		main_decode_output_3
0x0DCC3185,	//0x0dbe		VoC_bez16_r(main_decode_output_2,REG5)
0x48201582,	//0x0dc0		VoC_sw32_d(REG45,0x4820)
0x7FC21545,	//0x0dc2		VoC_sw16_d(REG5,0xffc2)
0x7FC31540,	//0x0dc4		VoC_sw16_d(REG0,0xffc3)
0x7FC415C6,	//0x0dc6		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0dc8		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0dca		VoC_cfg_lg(0x8,)
		//0x0dcc		main_decode_output_2
0x48201482,	//0x0dcc		VoC_lw32_d(REG45,0x4820)
0x1504DFA9,	//0x0dce		VoC_sw16_d(REG4,0x4023)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5804023,	//0x0dd0		VoC_return	|	VoC_sw16_d(REG4,0x4023)(hi)
		//0x0dd2		CII_reload_data_temp
0x48121407,	//0x0dd2		VoC_lw16_d(REG7,0x4812)
0x07FF1607,	//0x0dd4		VoC_and16_ri(REG7,0x7ff)
0x481F1406,	//0x0dd6		VoC_lw16_d(REG6,0x481f)
0x48121507,	//0x0dd8		VoC_sw16_d(REG7,0x4812)
0x3105C3BD,	//0x0dda		VoC_bgtz16_r(CII_reload_data_temp_L0,REG5)(lo)	|	VoC_sub16_rr(REG5,REG6,REG7,DEFAULT)
0x072D0DE0,	//0x0ddc		VoC_add16_rd(REG5,REG5,0x405e)(lo)	|	VoC_bgtz16_r(CII_reload_data_temp_L0,REG5)(hi)
0xFFC0405E,	//0x0dde		VoC_NAD	|	VoC_add16_rd(REG5,REG5,0x405e)(hi)
		//0x0de0		CII_reload_data_temp_L0
0x04000A83,	//0x0de0		VoC_lw16i(REG3,0x400)
0x0DF7342B,	//0x0de2		VoC_bgt16_rr(CII_reload_data_temp_L1,REG5,REG3)
0xF8177816,	//0x0de4		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x3107C3F7,	//0x0de6		VoC_bgtz16_r(CII_reload_data_temp_L2,REG7)(lo)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0x0A850DEC,	//0x0de8		VoC_lw16i(REG5,0x200)(lo)	|	VoC_bgtz16_r(CII_reload_data_temp_L2,REG7)(hi)
0xC1EF0200,	//0x0dea		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x200)(hi)
		//0x0dec		CII_reload_data_temp_L2
0x7FFC1647,	//0x0dec		VoC_and16_ri(REG7,0xfffc)
0x0A85F144,	//0x0dee		VoC_lw16i(REG5,0x1ff)(lo)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0xDFE901FF,	//0x0df0		VoC_push16(RA,DEFAULT)	|	VoC_lw16i(REG5,0x1ff)(hi)
0x01062B80,	//0x0df2		VoC_jal(vpp_AmjpCircBuffDmaRd)
0x1505DFA9,	//0x0df4		VoC_sw16_d(REG5,0x481f)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580481F,	//0x0df6		VoC_return	|	VoC_sw16_d(REG5,0x481f)(hi)
		//0x0df7		CII_reload_data_temp_L1
		//0x0df8		CII_mad_frame_mute
0x1808FF44,	//0x0df8		VoC_lw16i_set_inc(REG0,0x159a,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x1809159A,	//0x0dfa		VoC_lw16i_set_inc(REG1,0x4908,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x159a,0x2)(hi)
0x180A4908,	//0x0dfc		VoC_lw16i_set_inc(REG2,0x1a1a,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x4908,0x2)(hi)
0xFFC01A1A,	//0x0dfe		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x1a1a,0x2)(hi)
0x0E072C07,	//0x0e00		VoC_loop_i(0x1,0x3)
0x0E062D80,	//0x0e02		VoC_loop_i(0x0,0xc0)
0xDDCCDDC4,	//0x0e04		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0e06		VoC_endloop0
0xFFC0DDD4,	//0x0e06		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0e07		VoC_endloop1
0xF031E580,	//0x0e08		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_return
		//0x0e09		CII_mad_header_decode
0xFF475FE9,	//0x0e0a		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x48122006,	//0x0e0c		VoC_lw16d_set_inc(REG2,0x4812,0x1)
0x481F2007,	//0x0e0e		VoC_lw16d_set_inc(REG3,0x481f,0x1)
0xE02677E7,	//0x0e10		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0x405E3C32,	//0x0e12		VoC_bngt16_rd(mad_header_decode_100,REG2,0x405e)
0x481E1506,	//0x0e14		VoC_sw16_d(REG6,0x481e)
0x0F5E2B00,	//0x0e16		VoC_jump_lg(mad_header_decode_fail)
		//0x0e18		mad_header_decode_100
0x480E6C22,	//0x0e18		VoC_bez16_d(mad_header_decode_skip,0x480e)
0x480F6E04,	//0x0e1a		VoC_bnez16_d(mad_header_decode_skip_100,0x480f)
0x48111402,	//0x0e1c		VoC_lw16_d(REG2,0x4811)
		//0x0e1e		mad_header_decode_skip_100
0xE01642D4,	//0x0e1e		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG2,DEFAULT)
0x0E333144,	//0x0e20		VoC_bngtz16_r(mad_header_decode_skip_200,REG4)
0x480E4D0C,	//0x0e22		VoC_bnlt16_rd(mad_header_decode_skip_200,REG4,0x480e)
0x480E0B24,	//0x0e24		VoC_sub16_dr(REG4,0x480e,REG4)
0x405E4823,	//0x0e26		VoC_blt16_rd(mad_frame_decode101,REG3,0x405e)
0x405E079B,	//0x0e28		VoC_sub16_rd(REG3,REG3,0x405e)
		//0x0e2a		mad_frame_decode101
0x1503FFC0,	//0x0e2a		VoC_sw16_d(REG3,0x4812)(lo)	|	VoC_NOP
0x15044812,	//0x0e2c		VoC_sw16_d(REG4,0x480e)(lo)	|	VoC_sw16_d(REG3,0x4812)(hi)
0x1506480E,	//0x0e2e		VoC_sw16_d(REG6,0x481e)(lo)	|	VoC_sw16_d(REG4,0x480e)(hi)
0x2B00481E,	//0x0e30		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_sw16_d(REG6,0x481e)(hi)
0xFFC00F5E,	//0x0e32		VoC_NOP	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x0e33		mad_header_decode_skip_200
0x480E0712,	//0x0e34		VoC_add16_rd(REG2,REG2,0x480e)
0x480E150F,	//0x0e36		VoC_sw16_d(RL7_HI,0x480e)
0x480F1506,	//0x0e38		VoC_sw16_d(REG6,0x480f)
		//0x0e3a		mad_header_decode_skip
		//0x0e3a		mad_header_decode_sync
0x480F6C3B,	//0x0e3a		VoC_bez16_d(mad_header_decode_sync_100,0x480f)
0xE01642D4,	//0x0e3c		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG2,DEFAULT)
0x42D63824,	//0x0e3e		VoC_bgt16_rd(mad_header_decode111,REG4,0x42d6)
0x405E0724,	//0x0e40		VoC_add16_rd(REG4,REG4,0x405e)
		//0x0e42		mad_header_decode111
0x44E84CAC,	//0x0e42		VoC_bnlt16_rd(mad_header_decode_sync_200,REG4,0x44e8)
0x405E4822,	//0x0e44		VoC_blt16_rd(mad_header_decode101,REG2,0x405e)
0x405E0792,	//0x0e46		VoC_sub16_rd(REG2,REG2,0x405e)
		//0x0e48		mad_header_decode101
0x1502FFC0,	//0x0e48		VoC_sw16_d(REG2,0x4812)(lo)	|	VoC_NOP
0x15064812,	//0x0e4a		VoC_sw16_d(REG6,0x481e)(lo)	|	VoC_sw16_d(REG2,0x4812)(hi)
0x2B00481E,	//0x0e4c		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_sw16_d(REG6,0x481e)(hi)
0xF15D0F5E,	//0x0e4e		VoC_lw16i_short(WRAP1,0xa,DEFAULT)	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x0e4f		mad_header_decode_sync_200
0xF6446041,	//0x0e50		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x1604F909,	//0x0e52		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0xD8950001,	//0x0e54		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x0E5C3184,	//0x0e56		VoC_bez16_r(mad_header_decode_sync_even,REG4)
0xD8947945,	//0x0e58		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x8,DEFAULT)
0xE465F9C4,	//0x0e5a		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)
		//0x0e5c		mad_header_decode_sync_even
0x2805F21D,	//0x0e5c		VoC_and16_rd(REG5,0x4061)(lo)	|	VoC_lw16i_short(WRAP1,0x10,DEFAULT)
0x07174061,	//0x0e5e		VoC_add16_rd(REG7,REG2,0x40a)(lo)	|	VoC_and16_rd(REG5,0x4061)(hi)
0x0A86040A,	//0x0e60		VoC_lw16i(REG6,0x101)(lo)	|	VoC_add16_rd(REG7,REG2,0x40a)(hi)
0x442D0101,	//0x0e62		VoC_bne16_rd(no_mad_header_decode_sync_100_end,REG5,0x4061)(lo)	|	VoC_lw16i(REG6,0x101)(hi)
0x2B004061,	//0x0e64		VoC_jump_lg(mad_header_decode_sync_100_end)(lo)	|	VoC_bne16_rd(no_mad_header_decode_sync_100_end,REG5,0x4061)(hi)
0xFFC00EAA,	//0x0e66		VoC_NAD	|	VoC_jump_lg(mad_header_decode_sync_100_end)(hi)
		//0x0e68		no_mad_header_decode_sync_100_end
0x405E4827,	//0x0e68		VoC_blt16_rd(mad_header_decode102,REG7,0x405e)
0x405E07BF,	//0x0e6a		VoC_sub16_rd(REG7,REG7,0x405e)
		//0x0e6c		mad_header_decode102
0x1502FFC0,	//0x0e6c		VoC_sw16_d(REG2,0x4811)(lo)	|	VoC_NOP
0x15074811,	//0x0e6e		VoC_sw16_d(REG7,0x4812)(lo)	|	VoC_sw16_d(REG2,0x4811)(hi)
0x15064812,	//0x0e70		VoC_sw16_d(REG6,0x481e)(lo)	|	VoC_sw16_d(REG7,0x4812)(hi)
0x2B00481E,	//0x0e72		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_sw16_d(REG6,0x481e)(hi)
0xF01B0F5E,	//0x0e74		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x0e75		mad_header_decode_sync_100
0xF6407F46,	//0x0e76		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x1604E044,	//0x0e78		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0xF9080001,	//0x0e7a		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0xF004715C,	//0x0e7c		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
0x0E823184,	//0x0e7e		VoC_bez16_r(mad_header_decode_mad_bit_init_even_100,REG4)
0xE2A0E240,	//0x0e80		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0e82		mad_header_decode_mad_bit_init_even_100
0x2B80FFC0,	//0x0e82		VoC_jal(CII_mad_stream_sync)(lo)	|	VoC_NOP
0xF21C101D,	//0x0e84		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_jal(CII_mad_stream_sync)(hi)
0x40604027,	//0x0e86		VoC_be16_rd(no2_mad_header_decode_sync_100_end,REG7,0x4060)
0x0EAA2B00,	//0x0e88		VoC_jump_lg(mad_header_decode_sync_100_end)
		//0x0e8a		no2_mad_header_decode_sync_100_end
0x00010A86,	//0x0e8a		VoC_lw16i(REG6,0x1)
0x4812079F,	//0x0e8c		VoC_sub16_rd(REG7,REG3,0x4812)
0x42D63827,	//0x0e8e		VoC_bgt16_rd(mad_header_decode104,REG7,0x42d6)
0x405E073F,	//0x0e90		VoC_add16_rd(REG7,REG7,0x405e)
		//0x0e92		mad_header_decode104
0x44E8079C,	//0x0e92		VoC_sub16_rd(REG4,REG3,0x44e8)
0x0E983104,	//0x0e94		VoC_bgtz16_r(mad_header_decode_sync_403,REG4)
0x405E0724,	//0x0e96		VoC_add16_rd(REG4,REG4,0x405e)
		//0x0e98		mad_header_decode_sync_403
0x0E9C3107,	//0x0e98		VoC_bgtz16_r(mad_header_decode_sync_402,REG7)
0x42D60B3F,	//0x0e9a		VoC_sub16_dr(REG7,0x42d6,REG7)
		//0x0e9c		mad_header_decode_sync_402
0x44E84897,	//0x0e9c		VoC_blt16_rd(mad_header_decode_sync_400,REG7,0x44e8)
0x405E4824,	//0x0e9e		VoC_blt16_rd(mad_header_decode103,REG4,0x405e)
0x405E07A4,	//0x0ea0		VoC_sub16_rd(REG4,REG4,0x405e)
		//0x0ea2		mad_header_decode103
0x1504FFC0,	//0x0ea2		VoC_sw16_d(REG4,0x4812)(lo)	|	VoC_NOP
0xFFC04812,	//0x0ea4		VoC_NAD	|	VoC_sw16_d(REG4,0x4812)(hi)
		//0x0ea6		mad_header_decode_sync_400
0x481E1506,	//0x0ea6		VoC_sw16_d(REG6,0x481e)
0x0F5E2B00,	//0x0ea8		VoC_jump_lg(mad_header_decode_fail)
		//0x0eaa		mad_header_decode_sync_100_end
0x0713DFC3,	//0x0eaa		VoC_add16_rd(REG3,REG2,0x40a)(lo)	|	VoC_push16(REG3,DEFAULT)
0x482B040A,	//0x0eac		VoC_blt16_rd(mad_header_decode105,REG3,0x405e)(lo)	|	VoC_add16_rd(REG3,REG2,0x40a)(hi)
0x079B405E,	//0x0eae		VoC_sub16_rd(REG3,REG3,0x405e)(lo)	|	VoC_blt16_rd(mad_header_decode105,REG3,0x405e)(hi)
0xFFC0405E,	//0x0eb0		VoC_NAD	|	VoC_sub16_rd(REG3,REG3,0x405e)(hi)
		//0x0eb2		mad_header_decode105
0x48111502,	//0x0eb2		VoC_sw16_d(REG2,0x4811)
0x48121503,	//0x0eb4		VoC_sw16_d(REG3,0x4812)
0x7F46F01B,	//0x0eb6		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x1602F640,	//0x0eb8		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_movreg16(REG0,REG2,IN_PARALLEL)
0x79080001,	//0x0eba		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG2,0x1)(hi)
0x3182F004,	//0x0ebc		VoC_bez16_r(mad_header_decode_mad_bit_init_even,REG2)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xE2400EC2,	//0x0ebe		VoC_lbinc_p(REG0)	|	VoC_bez16_r(mad_header_decode_mad_bit_init_even,REG2)(hi)
0xFFC0E2A0,	//0x0ec0		VoC_NAD	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x0ec2		mad_header_decode_mad_bit_init_even
0x47FE1806,	//0x0ec2		VoC_lw16i_set_inc(REG2,0x47fe,0x1)
0x0F652B80,	//0x0ec4		VoC_jal(CII_decode_header)
0x48131500,	//0x0ec6		VoC_sw16_d(REG0,0x4813)
0x48141586,	//0x0ec8		VoC_sw32_d(RL6,0x4814)
0x4816151B,	//0x0eca		VoC_sw16_d(BITCACHE,0x4816)
0x481E1505,	//0x0ecc		VoC_sw16_d(REG5,0x481e)
0x4429DF83,	//0x0ece		VoC_bne16_rd(no_mad_header_decode_fail,REG1,0x4060)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x2B004060,	//0x0ed0		VoC_jump_lg(mad_header_decode_fail)(lo)	|	VoC_bne16_rd(no_mad_header_decode_fail,REG1,0x4060)(hi)
0xFFC00F5E,	//0x0ed2		VoC_NAD	|	VoC_jump_lg(mad_header_decode_fail)(hi)
		//0x0ed4		no_mad_header_decode_fail
0x01010A86,	//0x0ed4		VoC_lw16i(REG6,0x101)
0x48026E06,	//0x0ed6		VoC_bnez16_d(mad_header_bitrate,0x4802)
0x481E1506,	//0x0ed8		VoC_sw16_d(REG6,0x481e)
0x0F5E2B00,	//0x0eda		VoC_jump_lg(mad_header_decode_fail)
		//0x0edc		mad_header_bitrate
0x1405F024,	//0x0edc		VoC_lw16_d(REG5,0x4806)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x16054806,	//0x0ede		VoC_and16_ri(REG5,0x80)(lo)	|	VoC_lw16_d(REG5,0x4806)(hi)
0x31050080,	//0x0ee0		VoC_bgtz16_r(mad_header_decode_pad_slot,REG5)(lo)	|	VoC_and16_ri(REG5,0x80)(hi)
0xF0040EE4,	//0x0ee2		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bgtz16_r(mad_header_decode_pad_slot,REG5)(hi)
		//0x0ee4		mad_header_decode_pad_slot
0xFF45F019,	//0x0ee4		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x4803140A,	//0x0ee6		VoC_lw16_d(ACC1_LO,0x4803)
0x48021406,	//0x0ee8		VoC_lw16_d(REG6,0x4802)
0xFC1D7061,	//0x0eea		VoC_shru32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x00480A82,	//0x0eec		VoC_lw16i(REG2,0x48)
0x47FE4481,	//0x0eee		VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_III,REG1,0x47fe)
0x48061405,	//0x0ef0		VoC_lw16_d(REG5,0x4806)
0x10001605,	//0x0ef2		VoC_and16_ri(REG5,0x1000)
0x0EF73105,	//0x0ef4		VoC_bgtz16_r(mad_header_decode_no_MAD_LAYER_72,REG5)
		//0x0ef6		mad_header_decode_no_MAD_LAYER_III
0xF021F8FA,	//0x0ef6		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
		//0x0ef7		mad_header_decode_no_MAD_LAYER_72
0x47FE4421,	//0x0ef8		VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_I,REG1,0x47fe)
0xFFC0F182,	//0x0efa		VoC_NAD	|	VoC_lw16i_short(REG2,0xc,DEFAULT)
		//0x0efc		mad_header_decode_no_MAD_LAYER_I
0x007D0A87,	//0x0efc		VoC_lw16i(REG7,0x7d)
0xF005C4BA,	//0x0efe		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_mult16_rr(REG2,REG2,REG7,DEFAULT)
0xFFC0CD94,	//0x0f00		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG2,DEFAULT)
		//0x0f02		mad_header_decode_div_102
0x0F08362C,	//0x0f02		VoC_bgt32_rr(mad_header_decode_div_mode101,ACC1,ACC0)
0x072DCB2C,	//0x0f04		VoC_add16_rd(REG5,REG5,0x40a)(lo)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xE5FB040A,	//0x0f06		VoC_jump(mad_header_decode_div_102)	|	VoC_add16_rd(REG5,REG5,0x40a)(hi)
		//0x0f08		mad_header_decode_div_mode101
0x4419C165,	//0x0f08		VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_I_2,REG1,0x47fe)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xF8F547FE,	//0x0f0a		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_bne16_rd(mad_header_decode_no_MAD_LAYER_I_2,REG1,0x47fe)(hi)
		//0x0f0c		mad_header_decode_no_MAD_LAYER_I_2
0x072CF7F9,	//0x0f0c		VoC_add16_rd(REG4,REG5,0x44e8)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x079A44E8,	//0x0f0e		VoC_sub16_rd(REG2,REG3,0x4811)(lo)	|	VoC_add16_rd(REG4,REG5,0x44e8)(hi)
0x31024811,	//0x0f10		VoC_bgtz16_r(MAD_HEADER_101,REG2)(lo)	|	VoC_sub16_rd(REG2,REG3,0x4811)(hi)
0x07120F16,	//0x0f12		VoC_add16_rd(REG2,REG2,0x405e)(lo)	|	VoC_bgtz16_r(MAD_HEADER_101,REG2)(hi)
0xFFC0405E,	//0x0f14		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x405e)(hi)
		//0x0f16		MAD_HEADER_101
0x00010A86,	//0x0f16		VoC_lw16i(REG6,0x1)
0x48111407,	//0x0f18		VoC_lw16_d(REG7,0x4811)
0x34A2C17D,	//0x0f1a		VoC_bngt16_rr(mad_header_N,REG4,REG2)(lo)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x482F0F28,	//0x0f1c		VoC_blt16_rd(mad_header_decode106,REG7,0x405e)(lo)	|	VoC_bngt16_rr(mad_header_N,REG4,REG2)(hi)
0x07BF405E,	//0x0f1e		VoC_sub16_rd(REG7,REG7,0x405e)(lo)	|	VoC_blt16_rd(mad_header_decode106,REG7,0x405e)(hi)
0xFFC0405E,	//0x0f20		VoC_NAD	|	VoC_sub16_rd(REG7,REG7,0x405e)(hi)
		//0x0f22		mad_header_decode106
0x481E1506,	//0x0f22		VoC_sw16_d(REG6,0x481e)
0x48121507,	//0x0f24		VoC_sw16_d(REG7,0x4812)
0x0F5E2B00,	//0x0f26		VoC_jump_lg(mad_header_decode_fail)
		//0x0f28		mad_header_N
0x405E3C25,	//0x0f28		VoC_bngt16_rd(MAD_HEADER102,REG5,0x405e)
0x405E07AD,	//0x0f2a		VoC_sub16_rd(REG5,REG5,0x405e)
		//0x0f2c		MAD_HEADER102
0x1505FFC0,	//0x0f2c		VoC_sw16_d(REG5,0x4812)(lo)	|	VoC_NOP
0x14054812,	//0x0f2e		VoC_lw16_d(REG5,0x4806)(lo)	|	VoC_sw16_d(REG5,0x4812)(hi)
0x16854806,	//0x0f30		VoC_or16_ri(REG5,0x8)(lo)	|	VoC_lw16_d(REG5,0x4806)(hi)
0x6E270008,	//0x0f32		VoC_bnez16_d(mad_header_sync,0x480f)(lo)	|	VoC_or16_ri(REG5,0x8)(hi)
0x2006480F,	//0x0f34		VoC_lw16d_set_inc(REG2,0x4812,0x1)(lo)	|	VoC_bnez16_d(mad_header_sync,0x480f)(hi)
0x60444812,	//0x0f36		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_lw16d_set_inc(REG2,0x4812,0x1)(hi)
0xF031F641,	//0x0f38		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0xE0167909,	//0x0f3a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0x00011604,	//0x0f3c		VoC_and16_ri(REG4,0x1)
0x3184D897,	//0x0f3e		VoC_bez16_r(mad_header_decode_sync_even_333,REG4)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x79470F46,	//0x0f40		VoC_shru16_ri(REG7,0x8,DEFAULT)	|	VoC_bez16_r(mad_header_decode_sync_even_333,REG4)(hi)
0xF9C4D894,	//0x0f42		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
0xFFC0E467,	//0x0f44		VoC_NAD	|	VoC_or16_rr(REG7,REG4,DEFAULT)
		//0x0f46		mad_header_decode_sync_even_333
0x40612807,	//0x0f46		VoC_and16_rd(REG7,0x4061)
0x48111404,	//0x0f48		VoC_lw16_d(REG4,0x4811)
0x040A0722,	//0x0f4a		VoC_add16_rd(REG2,REG4,0x40a)
0x406140A7,	//0x0f4c		VoC_be16_rd(mad_header_sync_100,REG7,0x4061)
0x405E4822,	//0x0f4e		VoC_blt16_rd(mad_header_decode108,REG2,0x405e)
0x405E0792,	//0x0f50		VoC_sub16_rd(REG2,REG2,0x405e)
		//0x0f52		mad_header_decode108
0x1502FFC0,	//0x0f52		VoC_sw16_d(REG2,0x4812)(lo)	|	VoC_NOP
0x2B004812,	//0x0f54		VoC_jump_lg(mad_header_decode_sync)(lo)	|	VoC_sw16_d(REG2,0x4812)(hi)
0xFFC00E3A,	//0x0f56		VoC_NAD	|	VoC_jump_lg(mad_header_decode_sync)(hi)
		//0x0f58		mad_header_sync_100
0x480F1506,	//0x0f58		VoC_sw16_d(REG6,0x480f)
		//0x0f5a		mad_header_sync
0x48061505,	//0x0f5a		VoC_sw16_d(REG5,0x4806)
0xE5C5F007,	//0x0f5c		VoC_jump(mad_header_decode_return0)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0f5e		mad_header_decode_fail
0xF7E7F006,	//0x0f5e		VoC_lw16i_short(REG7,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x480F1506,	//0x0f60		VoC_sw16_d(REG6,0x480f)
		//0x0f62		mad_header_decode_return0
0xFFC0DFA9,	//0x0f62		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF7E1E580,	//0x0f64		VoC_lw16i_short(REG1,0xffffffff,DEFAULT)	|	VoC_return
		//0x0f65		CII_decode_header
0x44E80713,	//0x0f66		VoC_add16_rd(REG3,REG2,0x44e8)
0x62ACE240,	//0x0f68		VoC_rbinc_i(REG4,0xb,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE240FF43,	//0x0f6a		VoC_lbinc_p(REG0)	|	VoC_lw32z(REG67,IN_PARALLEL)
0x31C4E284,	//0x0f6c		VoC_bnez16_r(decode_header101,REG4)(lo)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x16860F71,	//0x0f6e		VoC_or16_ri(REG6,0x4000)(lo)	|	VoC_bnez16_r(decode_header101,REG4)(hi)
0xE2844000,	//0x0f70		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_or16_ri(REG6,0x4000)(hi)
		//0x0f71		decode_header101
0x0F7731C4,	//0x0f72		VoC_bnez16_r(decode_header102,REG4)
0x10001686,	//0x0f74		VoC_or16_ri(REG6,0x1000)
0xE0C5E5CA,	//0x0f76		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_jump(decode_header103)
		//0x0f77		decode_header102
0x40001605,	//0x0f78		VoC_and16_ri(REG5,0x4000)
0x0F803185,	//0x0f7a		VoC_bez16_r(decode_header103,REG5)
0x01010A85,	//0x0f7c		VoC_lw16i(REG5,0x101)
0xE580DD9B,	//0x0f7e		VoC_return	|	VoC_sw32_p(REG67,REG3,DEFAULT)
		//0x0f80		decode_header103
0x0B25E288,	//0x0f80		VoC_sub16_dr(REG5,0x44ee,REG4)(lo)	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0x31C444EE,	//0x0f82		VoC_bnez16_r(decode_header104,REG4)(lo)	|	VoC_sub16_dr(REG5,0x44ee,REG4)(hi)
0x0A850F89,	//0x0f84		VoC_lw16i(REG5,0x102)(lo)	|	VoC_bnez16_r(decode_header104,REG4)(hi)
0xDD9B0102,	//0x0f86		VoC_sw32_p(REG67,REG3,DEFAULT)	|	VoC_lw16i(REG5,0x102)(hi)
0xDC25E580,	//0x0f88		VoC_sw16_p(REG5,REG2,DEFAULT)	|	VoC_return
		//0x0f89		decode_header104
0xDFC56284,	//0x0f8a		VoC_push16(REG5,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x0FA831C4,	//0x0f8c		VoC_bnez16_r(decode_header105,REG4)
0x00101686,	//0x0f8e		VoC_or16_ri(REG6,0x10)
0xDF465FC0,	//0x0f90		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FDB,	//0x0f92		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(BITCACHE,DEFAULT)
0xDF415FE9,	//0x0f94		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x109E2B80,	//0x0f96		VoC_jal(CII_creat_crc_table)
0xEFF47207,	//0x0f98		VoC_lw16i_short(REG4,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x10,DEFAULT)
0x2B80DFC1,	//0x0f9a		VoC_jal(CII_mad_bit_crc)(lo)	|	VoC_push16(REG1,DEFAULT)
0xDF811050,	//0x0f9c		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_mad_bit_crc)(hi)
0xDF015FA9,	//0x0f9e		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x44F00714,	//0x0fa0		VoC_add16_rd(REG4,REG2,0x44f0)
0xDF035F9B,	//0x0fa2		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(BITCACHE,DEFAULT)
0xF0065C4E,	//0x0fa4		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_sw16_p(RL7_LO,REG4,DEFAULT)
0xDF065F80,	//0x0fa6		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
		//0x0fa8		decode_header105
0xDF856290,	//0x0fa8		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x4,DEFAULT)
0x42DC4434,	//0x0faa		VoC_bne16_rd(decode_header106,REG4,0x42dc)
0x01030A85,	//0x0fac		VoC_lw16i(REG5,0x103)
0xE580DD9B,	//0x0fae		VoC_return	|	VoC_sw32_p(REG67,REG3,DEFAULT)
		//0x0fb0		decode_header106
0xF6C25F41,	//0x0fb0		VoC_movreg16(REG2,REG6,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x10001602,	//0x0fb2		VoC_and16_ri(REG2,0x1000)
0x040A07AB,	//0x0fb4		VoC_sub16_rd(REG3,REG5,0x40a)
0x0FBC3182,	//0x0fb6		VoC_bez16_r(decode_header107,REG2)
0xF80BE0A3,	//0x0fb8		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG5,DEFAULT)
0x42CB071B,	//0x0fba		VoC_add16_rd(REG3,REG3,0x42cb)
		//0x0fbc		decode_header107
0x44E2081B,	//0x0fbc		VoC_mult16_rd(REG3,REG3,0x44e2)
0x43A40A82,	//0x0fbe		VoC_lw16i(REG2,0x43a4)
0xC0E3FFC0,	//0x0fc0		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_NOP
0x6288C0D5,	//0x0fc2		VoC_rbinc_i(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG5,REG3,REG2,DEFAULT)
0xD85ADF01,	//0x0fc4		VoC_lw16_p(ACC1_LO,REG5,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
0x150ADD9B,	//0x0fc6		VoC_sw16_d(ACC1_LO,0x4026)(lo)	|	VoC_sw32_p(REG67,REG3,DEFAULT)
0x442C4026,	//0x0fc8		VoC_bne16_rd(decode_header108,REG4,0x42cb)(lo)	|	VoC_sw16_d(ACC1_LO,0x4026)(hi)
0x0A8542CB,	//0x0fca		VoC_lw16i(REG5,0x104)(lo)	|	VoC_bne16_rd(decode_header108,REG4,0x42cb)(hi)
0xE5800104,	//0x0fcc		VoC_return	|	VoC_lw16i(REG5,0x104)(hi)
		//0x0fce		decode_header108
0x2C440AC1,	//0x0fce		VoC_lw16i(REG1,0xac44)
0x0FD83184,	//0x0fd0		VoC_bez16_r(decode_header_samplerate,REG4)
0x3B800AC1,	//0x0fd2		VoC_lw16i(REG1,0xbb80)
0x040A4024,	//0x0fd4		VoC_be16_rd(decode_header_samplerate,REG4,0x40a)
0x7D000A81,	//0x0fd6		VoC_lw16i(REG1,0x7d00)
		//0x0fd8		decode_header_samplerate
0x1605E0C5,	//0x0fd8		VoC_and16_ri(REG5,0x1000)(lo)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x31851000,	//0x0fda		VoC_bez16_r(decode_header109,REG5)(lo)	|	VoC_and16_ri(REG5,0x1000)(hi)
0xF9090FE4,	//0x0fdc		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_bez16_r(decode_header109,REG5)(hi)
0x1605E0C5,	//0x0fde		VoC_and16_ri(REG5,0x4000)(lo)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x31854000,	//0x0fe0		VoC_bez16_r(decode_header109,REG5)(lo)	|	VoC_and16_ri(REG5,0x4000)(hi)
0xF8090FE4,	//0x0fe2		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_bez16_r(decode_header109,REG5)(hi)
		//0x0fe4		decode_header109
0xE028FF44,	//0x0fe4		VoC_movreg16(ACC0_LO,REG1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xF62B6284,	//0x0fe6		VoC_movreg16(ACC1_HI,REG1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x40241584,	//0x0fe8		VoC_sw32_d(ACC0,0x4024)
0x44EE0715,	//0x0fea		VoC_add16_rd(REG5,REG2,0x44ee)
0x0FF03184,	//0x0fec		VoC_bez16_r(decode_header110,REG4)
0x00801686,	//0x0fee		VoC_or16_ri(REG6,0x80)
		//0x0ff0		decode_header110
0xE284DDAD,	//0x0ff0		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
0x0FF63184,	//0x0ff2		VoC_bez16_r(decode_header111,REG4)
0x01001687,	//0x0ff4		VoC_or16_ri(REG7,0x100)
		//0x0ff6		decode_header111
0xDE106288,	//0x0ff6		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0x42CB0B24,	//0x0ff8		VoC_sub16_dr(REG4,0x42cb,REG4)
0xDCA4E289,	//0x0ffa		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_rbinc_i(REG5,0x2,DEFAULT)
0xE284DCA5,	//0x0ffc		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x10023184,	//0x0ffe		VoC_bez16_r(decode_header112,REG4)
0x00201686,	//0x1000		VoC_or16_ri(REG6,0x20)
		//0x1002		decode_header112
0x3184E284,	//0x1002		VoC_bez16_r(decode_header113,REG4)(lo)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x16861007,	//0x1004		VoC_or16_ri(REG6,0x40)(lo)	|	VoC_bez16_r(decode_header113,REG4)(hi)
0xF0050040,	//0x1006		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_or16_ri(REG6,0x40)(hi)
		//0x1007		decode_header113
0x4424E288,	//0x1008		VoC_bne16_rd(decode_header114,REG4,0x44ea)(lo)	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0x0A8544EA,	//0x100a		VoC_lw16i(REG5,0x105)(lo)	|	VoC_bne16_rd(decode_header114,REG4,0x44ea)(hi)
0xDCA40105,	//0x100c		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i(REG5,0x105)(hi)
		//0x100d		decode_header114
0x42CB0712,	//0x100e		VoC_add16_rd(REG2,REG2,0x42cb)
0x1601E0C1,	//0x1010		VoC_and16_ri(REG1,0x10)(lo)	|	VoC_movreg16(REG1,REG6,DEFAULT)
0xE2400010,	//0x1012		VoC_lbinc_p(REG0)	|	VoC_and16_ri(REG1,0x10)(hi)
0x101A3181,	//0x1014		VoC_bez16_r(decode_header115,REG1)
0xE240E280,	//0x1016		VoC_lbinc_p(REG0)	|	VoC_rbinc_i(REG4,0x10,DEFAULT)
0xFFC0DCA4,	//0x1018		VoC_NAD	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x101a		decode_header115
0xE0015D9B,	//0x101a		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_sw32_p(REG67,REG3,DEFAULT)
0xE240E580,	//0x101c		VoC_lbinc_p(REG0)	|	VoC_return
		//0x101d		CII_mad_stream_sync
0xE240E2A2,	//0x101e		VoC_lbinc_p(REG0)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
		//0x101f		mad_stream_sync_200
0x4822DE10,	//0x1020		VoC_blt16_rd(mad_stream_sync_201,REG2,0x405e)(lo)	|	VoC_inc_p(REG2,DEFAULT)
0x0792405E,	//0x1022		VoC_sub16_rd(REG2,REG2,0x405e)(lo)	|	VoC_blt16_rd(mad_stream_sync_201,REG2,0x405e)(hi)
0xE2A3405E,	//0x1024		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x405e)(hi)
		//0x1025		mad_stream_sync_201
0xE477F9C7,	//0x1026		VoC_or16_rr(REG7,REG6,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xF946E0E6,	//0x1028		VoC_shru16_ri(REG6,0x8,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x40612807,	//0x102a		VoC_and16_rd(REG7,0x4061)
0x3205C2D5,	//0x102c		VoC_bltz16_r(mad_stream_sync_101,REG5)(lo)	|	VoC_sub16_rr(REG5,REG3,REG2,DEFAULT)
0x3C8D1032,	//0x102e		VoC_bngt16_rd(mad_stream_sync_100,REG5,0x40a)(lo)	|	VoC_bltz16_r(mad_stream_sync_101,REG5)(hi)
0xFFC0040A,	//0x1030		VoC_NAD	|	VoC_bngt16_rd(mad_stream_sync_100,REG5,0x40a)(hi)
		//0x1032		mad_stream_sync_101
0x405E072D,	//0x1032		VoC_add16_rd(REG5,REG5,0x405e)
0x040A3C25,	//0x1034		VoC_bngt16_rd(mad_stream_sync_100,REG5,0x40a)
0x4061468F,	//0x1036		VoC_bne16_rd(mad_stream_sync_200,REG7,0x4061)
		//0x1038		mad_stream_sync_100
0x040A0792,	//0x1038		VoC_sub16_rd(REG2,REG2,0x40a)
0xE00742D5,	//0x103a		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG3,REG2,DEFAULT)
0x10423205,	//0x103c		VoC_bltz16_r(mad_stream_sync_301,REG5)
0x44E84C95,	//0x103e		VoC_bnlt16_rd(mad_stream_sync_300,REG5,0x44e8)
0xFFC0E5C6,	//0x1040		VoC_NAD	|	VoC_jump(mad_stream_sync_302)
		//0x1042		mad_stream_sync_301
0x405E072D,	//0x1042		VoC_add16_rd(REG5,REG5,0x405e)
0x44E84C25,	//0x1044		VoC_bnlt16_rd(mad_stream_sync_300,REG5,0x44e8)
		//0x1046		mad_stream_sync_302
0xE580F7E7,	//0x1046		VoC_return	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x1048		mad_stream_sync_300
0x48131500,	//0x1048		VoC_sw16_d(REG0,0x4813)
0x48141586,	//0x104a		VoC_sw32_d(RL6,0x4814)
0x4816151B,	//0x104c		VoC_sw16_d(BITCACHE,0x4816)
0xFFC0E580,	//0x104e		VoC_NAD	|	VoC_return
		//0x1050		CII_mad_bit_crc
0xE0055FC7,	//0x1050		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x00181FA2,	//0x1052		VoC_lw16i_set_inc(REG2,0x18,0xfffffff8)
0xFF17792F,	//0x1054		VoC_movreg32(RL7,REG45,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0x5,DEFAULT)
0x0C9A1809,	//0x1056		VoC_lw16i_set_inc(REG1,0xc9a,0x2)
0x10703187,	//0x1058		VoC_bez16_r(mad_bit_crc_200,REG7)
0x106F2E39,	//0x105a		VoC_loop_r(1,REG7)
0xE283E240,	//0x105c		VoC_rbinc_i(REG7,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE282E240,	//0x105e		VoC_rbinc_i(REG6,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE88DFFC0,	//0x1060		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xFF3A7F1C,	//0x1062		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xFC427ED4,	//0x1064		VoC_shru32_ri(REG45,0x8,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG2,DEFAULT)
0xFDC76562,	//0x1066		VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0x00FF1604,	//0x1068		VoC_and16_ri(REG4,0xff)
0x5E10C064,	//0x106a		VoC_inc_p(REG2,DEFAULT)	|	VoC_add16_rr(REG4,REG1,REG4,DEFAULT)
0xD844E005,	//0x106c		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
		//0x106e		VoC_endloop0
0xF302E557,	//0x106e		VoC_lw16i_short(REG2,0x18,DEFAULT)	|	VoC_xor32_rr(RL7,REG45,DEFAULT)
		//0x106f		VoC_endloop1
		//0x1070		mad_bit_crc_200
0xE0055F87,	//0x1070		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x001F1607,	//0x1072		VoC_and16_ri(REG7,0x1f)
0xF91F60E2,	//0x1074		VoC_shru16_ri(REG7,0x3,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0x10883187,	//0x1076		VoC_bez16_r(mad_bit_crc_100,REG7)
0x67CEE240,	//0x1078		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE2A2E007,	//0x107a		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x7F44FF3A,	//0x107c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x655AFC42,	//0x107e		VoC_xor32_rr(REG45,REG67,DEFAULT)	|	VoC_shru32_ri(REG45,0x8,IN_PARALLEL)
0x1604FDC7,	//0x1080		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)
0x406400FF,	//0x1082		VoC_add16_rr(REG4,REG1,REG4,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xE240E005,	//0x1084		VoC_lbinc_p(REG0)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xE557D844,	//0x1086		VoC_xor32_rr(RL7,REG45,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
		//0x1087		VoC_endloop0
		//0x1088		mad_bit_crc_100
0x00071602,	//0x1088		VoC_and16_ri(REG2,0x7)
0x3182F007,	//0x108a		VoC_bez16_r(mad_bit_crc_100_end,REG2)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFFC0109D,	//0x108c		VoC_NAD	|	VoC_bez16_r(mad_bit_crc_100_end,REG2)(hi)
0xFF3A668E,	//0x108e		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
0xFDFF6286,	//0x1090		VoC_shru32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xFC7A7022,	//0x1092		VoC_shru32_ri(REG45,0xf,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xE414E55A,	//0x1094		VoC_and16_rr(REG4,REG2,DEFAULT)	|	VoC_xor32_rr(REG45,REG67,DEFAULT)
0x109C3184,	//0x1096		VoC_bez16_r(mad_bit_crc_100_end_9,REG4)
0x0AC8FF44,	//0x1098		VoC_lw16i(ACC0_LO,0x8005)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xE5670005,	//0x109a		VoC_xor32_rr(RL7,ACC0,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x8005)(hi)
		//0x109c		mad_bit_crc_100_end_9
		//0x109c		VoC_endloop0
0xE580FF3A,	//0x109c		VoC_return	|	VoC_movreg32(REG45,RL7,DEFAULT)
		//0x109d		mad_bit_crc_100_end
		//0x109e		CII_creat_crc_table
0x0C9A1806,	//0x109e		VoC_lw16i_set_inc(REG2,0xc9a,0x1)
0xFFC0F000,	//0x10a0		VoC_NAD	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x10a2		creat_crc_table_lable100
0x00800A83,	//0x10a2		VoC_lw16i(REG3,0x80)
0xFF44F004,	//0x10a4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x10a5		creat_crc_table_lable200
0x00000AC6,	//0x10a6		VoC_lw16i(REG6,0x8000)
0xF6886426,	//0x10a8		VoC_movreg16(ACC0_LO,REG4,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG4,DEFAULT)
0xE104FBFC,	//0x10aa		VoC_movreg16(REG4,ACC0_LO,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0x10B03186,	//0x10ac		VoC_bez16_r(creat_crc_table_lable300,REG6)
0x00051744,	//0x10ae		VoC_xor16_ri(REG4,0x8005)
		//0x10b0		creat_crc_table_lable300
0xE41FE007,	//0x10b0		VoC_and16_rr(REG7,REG3,DEFAULT)	|	VoC_movreg16(REG7,REG0,DEFAULT)
0x10B63187,	//0x10b2		VoC_bez16_r(creat_crc_table_lable400,REG7)
0x00051744,	//0x10b4		VoC_xor16_ri(REG4,0x8005)
		//0x10b6		creat_crc_table_lable400
0x31C3F80B,	//0x10b6		VoC_bnez16_r(creat_crc_table_lable200,REG3)(lo)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xDCA410A5,	//0x10b8		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_bnez16_r(creat_crc_table_lable200,REG3)(hi)
0x040A0700,	//0x10ba		VoC_add16_rd(REG0,REG0,0x40a)
0x01000A84,	//0x10bc		VoC_lw16i(REG4,0x100)
0x10A23420,	//0x10be		VoC_bgt16_rr(creat_crc_table_lable100,REG4,REG0)
0xFFC0E580,	//0x10c0		VoC_NAD	|	VoC_return
		//0x10c2		Coolsand_layer12_code_reload
0x40381484,	//0x10c2		VoC_lw32_d(ACC0,0x4038)
0x01800AC6,	//0x10c4		VoC_lw16i(REG6,0x8180)
0x02400A87,	//0x10c6		VoC_lw16i(REG7,0x240)
0x7FC31546,	//0x10c8		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x10ca		VoC_sw16_d(REG7,0xffc2)
0x7FC415C4,	//0x10cc		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x10ce		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x10d0		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x10d2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x10d3		CII_mad_frame_decode
0x481D1406,	//0x10d4		VoC_lw16_d(REG6,0x481d)
0x48061407,	//0x10d6		VoC_lw16_d(REG7,0x4806)
0x480A1506,	//0x10d8		VoC_sw16_d(REG6,0x480a)
0x00081607,	//0x10da		VoC_and16_ri(REG7,0x8)
0x10E43107,	//0x10dc		VoC_bgtz16_r(mad_frame_decode_audio_data,REG7)
0x0E092B80,	//0x10de		VoC_jal(CII_mad_header_decode)
0x40604427,	//0x10e0		VoC_bne16_rd(mad_frame_decode_audio_data,REG7,0x4060)
0x11102B00,	//0x10e2		VoC_jump_lg(mad_frame_decode_fail)
		//0x10e4		mad_frame_decode_audio_data
0x48061407,	//0x10e4		VoC_lw16_d(REG7,0x4806)
0x7FF71647,	//0x10e6		VoC_and16_ri(REG7,0xfffffff7)
0x47FE1406,	//0x10e8		VoC_lw16_d(REG6,0x47fe)
0x48061507,	//0x10ea		VoC_sw16_d(REG7,0x4806)
0x040A4486,	//0x10ec		VoC_bne16_rd(mad_frame_decode_no_I,REG6,0x40a)
0x10C22B80,	//0x10ee		VoC_jal(Coolsand_layer12_code_reload)
0x03242B80,	//0x10f0		VoC_jal(CII_mad_layer_I)
0xFFC0E5CE,	//0x10f2		VoC_NAD	|	VoC_jump(mad_frame_decode_audio_data_end)
		//0x10f4		mad_frame_decode_no_I
0x44EA4486,	//0x10f4		VoC_bne16_rd(mad_frame_decode_no_II,REG6,0x44ea)
0x10C22B80,	//0x10f6		VoC_jal(Coolsand_layer12_code_reload)
0x04942B80,	//0x10f8		VoC_jal(CII_mad_layer_II)
0xFFC0E5C6,	//0x10fa		VoC_NAD	|	VoC_jump(mad_frame_decode_audio_data_end)
		//0x10fc		mad_frame_decode_no_II
0x15722B80,	//0x10fc		VoC_jal(CII_mad_layer_III)
0x49041401,	//0x10fe		VoC_lw16_d(REG1,0x4904)
		//0x1100		mad_frame_decode_audio_data_end
0x406044A9,	//0x1100		VoC_bne16_rd(mad_frame_decode_go_ancillary_data,REG1,0x4060)
0x481E1406,	//0x1102		VoC_lw16_d(REG6,0x481e)
0x7F001646,	//0x1104		VoC_and16_ri(REG6,0xff00)
0x48111407,	//0x1106		VoC_lw16_d(REG7,0x4811)
0x11103106,	//0x1108		VoC_bgtz16_r(mad_frame_decode_fail,REG6)
0x48121507,	//0x110a		VoC_sw16_d(REG7,0x4812)
0xDFA9E5C4,	//0x110c		VoC_pop16(RA,DEFAULT)	|	VoC_jump(mad_frame_decode_fail)
		//0x110d		mad_frame_decode_go_ancillary_data
0xE580F007,	//0x110e		VoC_return	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1110		mad_frame_decode_fail
0x5FA9F006,	//0x1110		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1506EFF7,	//0x1112		VoC_sw16_d(REG6,0x481b)(lo)	|	VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)
0xE580481B,	//0x1114		VoC_return	|	VoC_sw16_d(REG6,0x481b)(hi)
		//0x1116		CII_div_mode
0x7005DFC4,	//0x1116		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0xFFC0E014,	//0x1118		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
		//0x111a		CII_div_mode102
0x111F343E,	//0x111a		VoC_bgt16_rr(CII_div_mode101,REG7,REG6)
0xC16543BE,	//0x111c		VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)
0xDF84E5FC,	//0x111e		VoC_pop16(REG4,DEFAULT)	|	VoC_jump(CII_div_mode102)
		//0x111f		CII_div_mode101
0xDFE9E580,	//0x1120		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1121		CII_mad_synth_frame
0x48201482,	//0x1122		VoC_lw32_d(REG45,0x4820)
0x63C01502,	//0x1124		VoC_sw16_d(REG2,0x63c0)
0x63C11502,	//0x1126		VoC_sw16_d(REG2,0x63c1)
0x63800A82,	//0x1128		VoC_lw16i(REG2,0x6380)
0x5FC0DFC0,	//0x112a		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDFC0FF43,	//0x112c		VoC_push16(REG0,DEFAULT)	|	VoC_lw32z(REG67,IN_PARALLEL)
0xDF425FC2,	//0x112e		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x00801808,	//0x1130		VoC_lw16i_set_inc(REG0,0x80,0x2)
0x407C1809,	//0x1132		VoC_lw16i_set_inc(REG1,0x407c,0x2)
0x0080180A,	//0x1134		VoC_lw16i_set_inc(REG2,0x80,0x2)
0x407C180B,	//0x1136		VoC_lw16i_set_inc(REG3,0x407c,0x2)
0xD9CF59C6,	//0x1138		VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0x11422D10,	//0x113a		VoC_loop_i(0x0,0x88)
0xD9CF59C6,	//0x113c		VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDDD75DDE,	//0x113e		VoC_sw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0xD9CF59C6,	//0x1140		VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
		//0x1142		VoC_endloop0
0xDDD75DDE,	//0x1142		VoC_sw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0x480B1408,	//0x1144		VoC_lw16_d(ACC0_LO,0x480b)
0x48032009,	//0x1146		VoC_lw16d_set_inc(REG1,0x4803,0x2)
0xDFC6E109,	//0x1148		VoC_push16(REG6,DEFAULT)	|	VoC_movreg16(ACC0_HI,ACC0_LO,DEFAULT)
0x159A0A80,	//0x114a		VoC_lw16i(REG0,0x159a)
0x47F20A86,	//0x114c		VoC_lw16i(REG6,0x47f2)
0x64281584,	//0x114e		VoC_sw32_d(ACC0,0x6428)
0x52080A87,	//0x1150		VoC_lw16i(REG7,0x5208)
0xDA56DA40,	//0x1152		VoC_sw16_sd(REG6,0x4,DEFAULT)	|	VoC_sw16_sd(REG0,0x3,DEFAULT)
0x64281406,	//0x1154		VoC_lw16_d(REG6,0x6428)
		//0x1156		syn_full_LBegin
0x122C3184,	//0x1156		VoC_bez16_r(syn_full_LEnd,REG4)
0xDF43DD0A,	//0x1158		VoC_push32(REG67,DEFAULT)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
		//0x115a		syn_full_LSecBg
0x120A3185,	//0x115a		VoC_bez16_r(syn_full_LSecEnd,REG5)
0xD90B5FC5,	//0x115c		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xF6C57024,	//0x115e		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF80D6426,	//0x1160		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG4,DEFAULT)
0xF8C65FC0,	//0x1162		VoC_shr16_ri(REG6,0xfffffff8,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xF48541BA,	//0x1164		VoC_lw16i_short(WRAP1,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG7,DEFAULT)
0x02000A83,	//0x1166		VoC_lw16i(REG3,0x200)
0xFFC0C09B,	//0x1168		VoC_NAD	|	VoC_add16_rr(REG3,REG2,REG3,DEFAULT)
0x12742B80,	//0x116a		VoC_jal(CII_dct32)
0xD9097024,	//0x116c		VoC_lw32_sd(REG23,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF64577C7,	//0x116e		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xfffffffe,DEFAULT)
0xC3666417,	//0x1170		VoC_sub16_rr(REG6,REG5,REG4,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG2,DEFAULT)
0x000F1606,	//0x1172		VoC_and16_ri(REG6,0xf)
0xF80F780E,	//0x1174		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xE1016385,	//0x1176		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_not16_r(REG5,DEFAULT)
0xC18E6425,	//0x1178		VoC_add16_rr(REG6,REG6,REG1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0xF8C56422,	//0x117a		VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_and16_rr(REG2,REG4,DEFAULT)
0xC15878C2,	//0x117c		VoC_add16_rr(REG0,REG5,REG3,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffff8,DEFAULT)
0xF41D409A,	//0x117e		VoC_lw16i_short(WRAP1,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x01F00A84,	//0x1180		VoC_lw16i(REG4,0x1f0)
0xFF444023,	//0x1182		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG0,REG4,DEFAULT)
0x00800A84,	//0x1184		VoC_lw16i(REG4,0x80)
0xC1317F0E,	//0x1186		VoC_add16_rr(REG1,REG4,REG6,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xF6225F43,	//0x1188		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xF41E77F2,	//0x118a		VoC_lw16i_short(WRAP2,0x3,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xF4027019,	//0x118c		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFF456902,	//0x118e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x1190		VoC_endloop0
0xD50254C1,	//0x1190		VoC_msu32inc_pp(REG0,REG2,IN_PARALLEL)	|	VoC_msuXinc_pp(REG0,REG1,DEFAULT)
0xF780590B,	//0x1192		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xC13A4139,	//0x1194		VoC_add16_rr(REG2,REG4,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG4,REG7,DEFAULT)
0xE901FFC0,	//0x1196		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
		//0x1198		VoC_endloop0
0xD4025441,	//0x1198		VoC_mac32inc_pp(REG0,REG2,IN_PARALLEL)	|	VoC_macXinc_pp(REG0,REG1,DEFAULT)
0x1FBBD645,	//0x119a		VoC_lw16i_set_inc(REG3,0x20,0xfffffffe)(lo)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0xFB8D0020,	//0x119c		VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x20,0xfffffffe)(hi)
0x0936C92D,	//0x119e		VoC_add32_rd(RL6,RL6,0x4068)(lo)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0x590B4068,	//0x11a0		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x4068)(hi)
0x7A15F7A0,	//0x11a2		VoC_shr32_ri(ACC1,0x2,DEFAULT)	|	VoC_movreg16(REG0,RL6_HI,IN_PARALLEL)
0x0724FF44,	//0x11a4		VoC_add16_rd(REG4,REG4,0x44eb)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x5DED44EB,	//0x11a6		VoC_sw32inc_p(ACC1,REG5,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x44eb)(hi)
0x4131C15D,	//0x11a8		VoC_add16_rr(REG1,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0xFFC0C132,	//0x11aa		VoC_NAD	|	VoC_add16_rr(REG2,REG4,REG6,IN_PARALLEL)
0x11E42C1F,	//0x11ac		VoC_loop_i(0x1,0xf)
0xFF456902,	//0x11ae		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x11b0		VoC_endloop0
0xD50254C1,	//0x11b0		VoC_msu32inc_pp(REG0,REG2,IN_PARALLEL)	|	VoC_msuXinc_pp(REG0,REG1,DEFAULT)
0xF780590B,	//0x11b2		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xC13A4139,	//0x11b4		VoC_add16_rr(REG2,REG4,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG4,REG7,DEFAULT)
0xDE186902,	//0x11b6		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x11b8		VoC_endloop0
0xD4025441,	//0x11b8		VoC_mac32inc_pp(REG0,REG2,IN_PARALLEL)	|	VoC_macXinc_pp(REG0,REG1,DEFAULT)
0xF005590B,	//0x11ba		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xE1767B8D,	//0x11bc		VoC_lw16i_short(REG6,0x17,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)
0xC339492C,	//0x11be		VoC_sub16_rr(REG1,REG4,REG7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xC35F7A14,	//0x11c0		VoC_sub16_rr(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0xC0724071,	//0x11c2		VoC_add16_rr(REG2,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xF0066180,	//0x11c4		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0xFF445DBC,	//0x11c6		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG7,DEFAULT)
0xFF456902,	//0x11c8		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x11ca		VoC_endloop0
0xD4025441,	//0x11ca		VoC_mac32inc_pp(REG0,REG2,IN_PARALLEL)	|	VoC_macXinc_pp(REG0,REG1,DEFAULT)
0xF2E7D90B,	//0x11cc		VoC_lw16i_short(REG7,0x17,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF7A04331,	//0x11ce		VoC_movreg16(REG0,RL6_HI,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG4,REG6,DEFAULT)
0xC07A4079,	//0x11d0		VoC_add16_rr(REG2,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x40680936,	//0x11d2		VoC_add32_rd(RL6,RL6,0x4068)
0xE901FFC0,	//0x11d4		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
		//0x11d6		VoC_endloop0
0xD4025441,	//0x11d6		VoC_mac32inc_pp(REG0,REG2,IN_PARALLEL)	|	VoC_macXinc_pp(REG0,REG1,DEFAULT)
0xF3FD590B,	//0x11d8		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF3FE7B8D,	//0x11da		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)
0xF7A0492C,	//0x11dc		VoC_movreg16(REG0,RL6_HI,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xC15F7A14,	//0x11de		VoC_add16_rr(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0x44EB0724,	//0x11e0		VoC_add16_rd(REG4,REG4,0x44eb)
0xC1324131,	//0x11e2		VoC_add16_rr(REG2,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG4,REG6,DEFAULT)
		//0x11e4		VoC_endloop1
0xFF445DBC,	//0x11e4		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG7,DEFAULT)
0xFF456902,	//0x11e6		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x11e8		VoC_endloop0
0xD50254C1,	//0x11e8		VoC_msu32inc_pp(REG0,REG2,IN_PARALLEL)	|	VoC_msuXinc_pp(REG0,REG1,DEFAULT)
0xF4065F03,	//0x11ea		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xD90B7B8D,	//0x11ec		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff1,DEFAULT)
0x6380180A,	//0x11ee		VoC_lw16i_set_inc(REG2,0x6380,0x2)
0xE013492C,	//0x11f0		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDA427A14,	//0x11f2		VoC_sw16_sd(REG2,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0x00400A85,	//0x11f4		VoC_lw16i(REG5,0x40)
0x419EDDAC,	//0x11f6		VoC_add16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
0x1606DF80,	//0x11f8		VoC_and16_ri(REG6,0xf)(lo)	|	VoC_pop16(REG0,IN_PARALLEL)
0x4028000F,	//0x11fa		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_and16_ri(REG6,0xf)(hi)
0x5F85F485,	//0x11fc		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x10,IN_PARALLEL)
0x435DDD0B,	//0x11fe		VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_sw32_sd(REG67,0x0,IN_PARALLEL)
0x5651D622,	//0x1200		VoC_lw16_sd(REG1,0x4,DEFAULT)	|	VoC_lw16_sd(REG2,0x1,IN_PARALLEL)
0xDFC5F009,	//0x1202		VoC_push16(REG5,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x124F2B80,	//0x1204		VoC_jal(CoolSand_audio_linear_dither)
0xDF8577F1,	//0x1206		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
0x115A2B00,	//0x1208		VoC_jump_lg(syn_full_LSecBg)
		//0x120a		syn_full_LSecEnd
0xD6125F03,	//0x120a		VoC_lw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0x121231C2,	//0x120c		VoC_bnez16_r(syn_full_L4,REG2)
0x64281506,	//0x120e		VoC_sw16_d(REG6,0x6428)
0xFFC0E5C4,	//0x1210		VoC_NAD	|	VoC_jump(syn_full_L5)
		//0x1212		syn_full_L4
0x64291506,	//0x1212		VoC_sw16_d(REG6,0x6429)
		//0x1214		syn_full_L5
0x63C11402,	//0x1214		VoC_lw16_d(REG2,0x63c1)
0x040A0712,	//0x1216		VoC_add16_rd(REG2,REG2,0x40a)
0x1502D90A,	//0x1218		VoC_sw16_d(REG2,0x63c0)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF02263C0,	//0x121a		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_sw16_d(REG2,0x63c0)(hi)
0x0A86D640,	//0x121c		VoC_lw16i(REG6,0x900)(lo)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0xC0300900,	//0x121e		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x900)(hi)
0x4065073F,	//0x1220		VoC_add16_rd(REG7,REG7,0x4065)
0x47F80A86,	//0x1222		VoC_lw16i(REG6,0x47f8)
0xDA124314,	//0x1224		VoC_sw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)
0x1406DA56,	//0x1226		VoC_lw16_d(REG6,0x6429)(lo)	|	VoC_sw16_sd(REG6,0x4,DEFAULT)
0x2B006429,	//0x1228		VoC_jump_lg(syn_full_LBegin)(lo)	|	VoC_lw16_d(REG6,0x6429)(hi)
0xFFC01156,	//0x122a		VoC_NAD	|	VoC_jump_lg(syn_full_LBegin)(hi)
		//0x122c		syn_full_LEnd
0x00801809,	//0x122c		VoC_lw16i_set_inc(REG1,0x80,0x2)
0x407C1808,	//0x122e		VoC_lw16i_set_inc(REG0,0x407c,0x2)
0x0080180B,	//0x1230		VoC_lw16i_set_inc(REG3,0x80,0x2)
0x407C180A,	//0x1232		VoC_lw16i_set_inc(REG2,0x407c,0x2)
0xD9CF59C6,	//0x1234		VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0x123E2D10,	//0x1236		VoC_loop_i(0x0,0x88)
0xD9CF59C6,	//0x1238		VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDDD75DDE,	//0x123a		VoC_sw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0xD9CF59C6,	//0x123c		VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
		//0x123e		VoC_endloop0
0xDDD75DDE,	//0x123e		VoC_sw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0xDF83DF83,	//0x1240		VoC_pop16(REG3,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xDF025F80,	//0x1242		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xDF83DF83,	//0x1244		VoC_pop16(REG3,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x480B1406,	//0x1246		VoC_lw16_d(REG6,0x480b)
0xC176F1E7,	//0x1248		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0xf,DEFAULT)
0xDFA9E43E,	//0x124a		VoC_pop16(RA,DEFAULT)	|	VoC_and16_rr(REG6,REG7,DEFAULT)
0x480B1506,	//0x124c		VoC_sw16_d(REG6,0x480b)
0xD9CDE580,	//0x124e		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_return
		//0x124f		CoolSand_audio_linear_dither
0xD9CFD9CE,	//0x1250		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0x44F00789,	//0x1252		VoC_sub16_rd(REG1,REG1,0x44f0)
0x48201483,	//0x1254		VoC_lw32_d(REG67,0x4820)
0x63C0200B,	//0x1256		VoC_lw16d_set_inc(REG3,0x63c0,0x2)
0x44EA4026,	//0x1258		VoC_be16_rd(CoolSand_audio_linear_dither_L0,REG6,0x44ea)
0x63C02007,	//0x125a		VoC_lw16d_set_inc(REG3,0x63c0,0x1)
		//0x125c		CoolSand_audio_linear_dither_L0
0x126A2C40,	//0x125c		VoC_loop_i(0x0,0x20)
0x48FBCB73,	//0x125e		VoC_add32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_sub32_rr(REG67,ACC1,RL6,DEFAULT)
0x12D3FF37,	//0x1260		VoC_add32inc_rp(REG67,REG67,REG2,DEFAULT)	|	VoC_movreg32(RL7,RL6,IN_PARALLEL)
0x091AFF2E,	//0x1262		VoC_add32_rd(REG45,REG67,0x4066)(lo)	|	VoC_movreg32(RL6,ACC1,IN_PARALLEL)
0x7BEA4066,	//0x1264		VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)	|	VoC_add32_rd(REG45,REG67,0x4066)(hi)
0x7004FBEB,	//0x1266		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffd,IN_PARALLEL)
0xCAD5FA0E,	//0x1268		VoC_sub32_rr(ACC1,REG67,REG45,DEFAULT)	|	VoC_shr32_ri(RL6,0x1,IN_PARALLEL)
		//0x126a		VoC_endloop0
0xDCB57A1D,	//0x126a		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x3,DEFAULT)
0xDDCDF7D3,	//0x126c		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffffe,DEFAULT)
0xDDCFDDCE,	//0x126e		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0x63C01503,	//0x1270		VoC_sw16_d(REG3,0x63c0)
0xFFC0E580,	//0x1272		VoC_NAD	|	VoC_return
		//0x1274		CII_dct32
0xC0AA40EB,	//0x1274		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xF00840EB,	//0x1276		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xF40240AA,	//0x1278		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0x00F00A81,	//0x127a		VoC_lw16i(REG1,0xf0)
0xF00A40CB,	//0x127c		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0x63E41809,	//0x127e		VoC_lw16i_set_inc(REG1,0x63e4,0x2)
0x0702DF41,	//0x1280		VoC_add16_rd(REG2,REG0,0x44eb)(lo)	|	VoC_push32(REG23,DEFAULT)
0x148644EB,	//0x1282		VoC_lw32_d(RL6,0x405e)(lo)	|	VoC_add16_rd(REG2,REG0,0x44eb)(hi)
0x6A03405E,	//0x1284		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_lw32_d(RL6,0x405e)(hi)
0xD9D7D9D7,	//0x1286		VoC_lw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw32inc_p(RL7,REG2,IN_PARALLEL)
		//0x1288		VoC_endloop0
0x0789DDCF,	//0x1288		VoC_sub16_rd(REG1,REG1,0x44ea)(lo)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0x180A44EA,	//0x128a		VoC_lw16i_set_inc(REG2,0x279a,0x2)(lo)	|	VoC_sub16_rd(REG1,REG1,0x44ea)(hi)
0x1807279A,	//0x128c		VoC_lw16i_set_inc(REG3,0x44b0,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x279a,0x2)(hi)
0x779944B0,	//0x128e		VoC_lw16i_short(FORMAT32,0xfffffffc,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x44b0,0x1)(hi)
0xFFC0F3F9,	//0x1290		VoC_NAD	|	VoC_lw16i_short(INC1,0xfffffffe,IN_PARALLEL)
0xB40F6908,	//0x1292		VoC_sub32_pp(RL7,REG0,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xC9F3320D,	//0x1294		VoC_add32_rr(REG67,RL7,RL6,IN_PARALLEL)	|	VoC_add32inc_pp(ACC1,REG0,REG1,DEFAULT)
0xF966340F,	//0x1296		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_sub32_pp(RL7,REG0,REG1,DEFAULT)
0xDDD419DC,	//0x1298		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
		//0x129a		VoC_endloop0
0xDDD55173,	//0x129a		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0x0A82FFC0,	//0x129c		VoC_lw16i(REG2,0x6406)(lo)	|	VoC_NOP
0xDD946406,	//0x129e		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i(REG2,0x6406)(hi)
0xE908FFC0,	//0x12a0		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xB60B300D,	//0x12a2		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC1,REG0,REG1,DEFAULT)
0xDDD448F3,	//0x12a4		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619DC,	//0x12a6		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
0xDDD5D173,	//0x12a8		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
		//0x12a9		VoC_endloop0
0x279C1810,	//0x12aa		VoC_lw16i_set_inc(REG0,0x279c,0x4)
0x64241FB1,	//0x12ac		VoC_lw16i_set_inc(REG1,0x6424,0xfffffffc)
0x27BC180A,	//0x12ae		VoC_lw16i_set_inc(REG2,0x27bc,0x2)
0xFFC0DD94,	//0x12b0		VoC_NAD	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0xB40F6888,	//0x12b2		VoC_sub32_pp(RL7,REG0,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC9F3320D,	//0x12b4		VoC_add32_rr(REG67,RL7,RL6,IN_PARALLEL)	|	VoC_add32inc_pp(ACC1,REG0,REG1,DEFAULT)
0xF966340F,	//0x12b6		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_sub32_pp(RL7,REG0,REG1,DEFAULT)
0xDDD419DC,	//0x12b8		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
		//0x12ba		VoC_endloop0
0xDDD55173,	//0x12ba		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0x0A82FFC0,	//0x12bc		VoC_lw16i(REG2,0x63d2)(lo)	|	VoC_NOP
0xDD9463D2,	//0x12be		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i(REG2,0x63d2)(hi)
0xE888FFC0,	//0x12c0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xB60B300D,	//0x12c2		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC1,REG0,REG1,DEFAULT)
0xDDD448F3,	//0x12c4		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619DC,	//0x12c6		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
0xDDD5D173,	//0x12c8		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
		//0x12c9		VoC_endloop0
0x44E8079B,	//0x12ca		VoC_sub16_rd(REG3,REG3,0x44e8)
0x279E1810,	//0x12cc		VoC_lw16i_set_inc(REG0,0x279e,0x4)
0x64261FB1,	//0x12ce		VoC_lw16i_set_inc(REG1,0x6426,0xfffffffc)
0x27CC180A,	//0x12d0		VoC_lw16i_set_inc(REG2,0x27cc,0x2)
0xD994DD94,	//0x12d2		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0xB40F6888,	//0x12d4		VoC_sub32_pp(RL7,REG0,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC9F3320D,	//0x12d6		VoC_add32_rr(REG67,RL7,RL6,IN_PARALLEL)	|	VoC_add32inc_pp(ACC1,REG0,REG1,DEFAULT)
0xF966340F,	//0x12d8		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_sub32_pp(RL7,REG0,REG1,DEFAULT)
0xDDD419DC,	//0x12da		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
		//0x12dc		VoC_endloop0
0xDDD55173,	//0x12dc		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0x0A82FFC0,	//0x12de		VoC_lw16i(REG2,0x63c2)(lo)	|	VoC_NOP
0xDD9463C2,	//0x12e0		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i(REG2,0x63c2)(hi)
0xE888FFC0,	//0x12e2		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xB60B300D,	//0x12e4		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC1,REG0,REG1,DEFAULT)
0xDDD448F3,	//0x12e6		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619DC,	//0x12e8		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
0xDDD5D173,	//0x12ea		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
		//0x12eb		VoC_endloop0
0x27BE1810,	//0x12ec		VoC_lw16i_set_inc(REG0,0x27be,0x4)
0x63E01FB1,	//0x12ee		VoC_lw16i_set_inc(REG1,0x63e0,0xfffffffc)
0x279A180A,	//0x12f0		VoC_lw16i_set_inc(REG2,0x279a,0x2)
0x2C05DD94,	//0x12f2		VoC_loop_i(0x1,0x2)(lo)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0xE8481301,	//0x12f4		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xB60B300D,	//0x12f6		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC1,REG0,REG1,DEFAULT)
0xDDD448F3,	//0x12f8		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619DC,	//0x12fa		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
0xDDD5D173,	//0x12fc		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
		//0x12fd		VoC_endloop0
0xF6856044,	//0x12fe		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x0A82DD94,	//0x1300		VoC_lw16i(REG2,0x641e)(lo)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
		//0x1301		VoC_endloop1
0x079B641E,	//0x1302		VoC_sub16_rd(REG3,REG3,0x44ee)(lo)	|	VoC_lw16i(REG2,0x641e)(hi)
0x60A244EE,	//0x1304		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0x44ee)(hi)
0x2C05D9AC,	//0x1306		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw32_p(ACC0,REG5,IN_PARALLEL)
0xE8481315,	//0x1308		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xB60B300D,	//0x130a		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC1,REG0,REG1,DEFAULT)
0xDDD448F3,	//0x130c		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619DC,	//0x130e		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
0xDDD5D173,	//0x1310		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
		//0x1311		VoC_endloop0
0xF6856044,	//0x1312		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x0A82DD94,	//0x1314		VoC_lw16i(REG2,0x6416)(lo)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
		//0x1315		VoC_endloop1
0x079B6416,	//0x1316		VoC_sub16_rd(REG3,REG3,0x44ee)(lo)	|	VoC_lw16i(REG2,0x6416)(hi)
0x60A244EE,	//0x1318		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0x44ee)(hi)
0x1810D9AC,	//0x131a		VoC_lw16i_set_inc(REG0,0x27c0,0x4)(lo)	|	VoC_lw32_p(ACC0,REG5,IN_PARALLEL)
0x1FB127C0,	//0x131c		VoC_lw16i_set_inc(REG1,0x63e2,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x27c0,0x4)(hi)
0x2C0563E2,	//0x131e		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x63e2,0xfffffffc)(hi)
0xE848132D,	//0x1320		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xB60B300D,	//0x1322		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC1,REG0,REG1,DEFAULT)
0xDDD448F3,	//0x1324		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619DC,	//0x1326		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
0xDDD5D173,	//0x1328		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
		//0x1329		VoC_endloop0
0xF6856044,	//0x132a		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x0A82DD94,	//0x132c		VoC_lw16i(REG2,0x640e)(lo)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
		//0x132d		VoC_endloop1
0x079B640E,	//0x132e		VoC_sub16_rd(REG3,REG3,0x44ee)(lo)	|	VoC_lw16i(REG2,0x640e)(hi)
0x60A244EE,	//0x1330		VoC_movreg16(REG2,REG5,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0x44ee)(hi)
0x2C05D9AC,	//0x1332		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw32_p(ACC0,REG5,IN_PARALLEL)
0xE8481341,	//0x1334		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xB60B300D,	//0x1336		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_add32_pp(ACC1,REG0,REG1,DEFAULT)
0xDDD448F3,	//0x1338		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619DC,	//0x133a		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG3,DEFAULT)
0xDDD5D173,	//0x133c		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
		//0x133d		VoC_endloop0
0xF6856044,	//0x133e		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x0A82DD94,	//0x1340		VoC_lw16i(REG2,0x6406)(lo)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
		//0x1341		VoC_endloop1
0x18106406,	//0x1342		VoC_lw16i_set_inc(REG0,0x279c,0x4)(lo)	|	VoC_lw16i(REG2,0x6406)(hi)
0x1FB1279C,	//0x1344		VoC_lw16i_set_inc(REG1,0x6424,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x279c,0x4)(hi)
0xE0646424,	//0x1346		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6424,0xfffffffc)(hi)
0x27BE180A,	//0x1348		VoC_lw16i_set_inc(REG2,0x27be,0x2)
0x63C4180B,	//0x134a		VoC_lw16i_set_inc(REG3,0x63c4,0x2)
0x13662C05,	//0x134c		VoC_loop_i(0x1,0x2)
0xB20FB20C,	//0x134e		VoC_add32inc_pp(RL7,REG0,REG1,DEFAULT)	|	VoC_add32inc_pp(ACC0,REG0,REG1,DEFAULT)
0xCB3B493C,	//0x1350		VoC_sub32_rr(REG67,ACC0,RL7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0x19E5C8F3,	//0x1352		VoC_multf32_rp(ACC1,REG7,REG4,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0x5DD4F966,	//0x1354		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,IN_PARALLEL)
0xE869D074,	//0x1356		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_macX_rp(REG6,REG4,IN_PARALLEL)
0xB20FB20C,	//0x1358		VoC_add32inc_pp(RL7,REG0,REG1,DEFAULT)	|	VoC_add32inc_pp(ACC0,REG0,REG1,DEFAULT)
0xCB3B493C,	//0x135a		VoC_sub32_rr(REG67,ACC0,RL7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDDD48F3,	//0x135c		VoC_sw32inc_p(ACC1,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF96619E5,	//0x135e		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_multf32_rp(ACC1,REG7,REG4,DEFAULT)
		//0x1360		VoC_endloop0
0xD0745DD4,	//0x1360		VoC_macX_rp(REG6,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x279E1810,	//0x1362		VoC_lw16i_set_inc(REG0,0x279e,0x4)
0x64261FB1,	//0x1364		VoC_lw16i_set_inc(REG1,0x6426,0xfffffffc)
		//0x1366		VoC_endloop1
0xF019DDDD,	//0x1366		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0xF007779A,	//0x1368		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffffc,DEFAULT)
0xF6837F0F,	//0x136a		VoC_movreg16(REG3,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x279C1810,	//0x136c		VoC_lw16i_set_inc(REG0,0x279c,0x4)
0x64241FB1,	//0x136e		VoC_lw16i_set_inc(REG1,0x6424,0xfffffffc)
0xF7E25E18,	//0x1370		VoC_movreg16(REG2,RL7_HI,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x13B52C05,	//0x1372		VoC_loop_i(0x1,0x2)
0xB60B7F44,	//0x1374		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xB60A7F45,	//0x1376		VoC_sub32inc_pp(REG45,REG0,REG1,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xC8B248F3,	//0x1378		VoC_add32_rr(REG45,REG45,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF966507B,	//0x137a		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_macX_rp(REG7,REG3,DEFAULT)
0xF9645133,	//0x137c		VoC_shru16_ri(REG4,0xc,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0xD06B604F,	//0x137e		VoC_macX_rp(REG5,REG3,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0xD12361C2,	//0x1380		VoC_mac32inc_rp(REG4,REG3,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_LO,DEFAULT)
0x42CB079B,	//0x1382		VoC_sub16_rd(REG3,REG3,0x42cb)
0xCB2B492C,	//0x1384		VoC_sub32_rr(REG67,ACC0,ACC1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xC8F37F45,	//0x1386		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xD07B4B65,	//0x1388		VoC_macX_rp(REG7,REG3,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xD07B7966,	//0x138a		VoC_macX_rp(REG7,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xD0335DD4,	//0x138c		VoC_mac32_rp(REG6,REG3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD133604E,	//0x138e		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG2,DEFAULT)
0x13AE2C06,	//0x1390		VoC_loop_i(0x0,0x3)
0xB60B7F44,	//0x1392		VoC_sub32inc_pp(REG67,REG0,REG1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xB60A61E2,	//0x1394		VoC_sub32inc_pp(REG45,REG0,REG1,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xC8F37F45,	//0x1396		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xC8B25DD5,	//0x1398		VoC_add32_rr(REG45,REG45,RL6,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xF966507B,	//0x139a		VoC_shru16_ri(REG6,0xc,IN_PARALLEL)	|	VoC_macX_rp(REG7,REG3,DEFAULT)
0xF9645133,	//0x139c		VoC_shru16_ri(REG4,0xc,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0xD06B604F,	//0x139e		VoC_macX_rp(REG5,REG3,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0xD12361C2,	//0x13a0		VoC_mac32inc_rp(REG4,REG3,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_LO,DEFAULT)
0x42CB079B,	//0x13a2		VoC_sub16_rd(REG3,REG3,0x42cb)
0xCB2B492C,	//0x13a4		VoC_sub32_rr(REG67,ACC0,ACC1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xC8F37F45,	//0x13a6		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xD07B4B65,	//0x13a8		VoC_macX_rp(REG7,REG3,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xD07B7966,	//0x13aa		VoC_macX_rp(REG7,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xD0335DD4,	//0x13ac		VoC_mac32_rp(REG6,REG3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x13ae		VoC_endloop0
0xD133604E,	//0x13ae		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG2,DEFAULT)
0x1810E1E2,	//0x13b0		VoC_lw16i_set_inc(REG0,0x279e,0x4)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0x1FB1279E,	//0x13b2		VoC_lw16i_set_inc(REG1,0x6426,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x279e,0x4)(hi)
0xDDD56426,	//0x13b4		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6426,0xfffffffc)(hi)
		//0x13b5		VoC_endloop1
0xF3C2590A,	//0x13b6		VoC_lw16i_short(INC2,0xfffffff0,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x27BE1808,	//0x13b8		VoC_lw16i_set_inc(REG0,0x27be,0x2)
0x27C01809,	//0x13ba		VoC_lw16i_set_inc(REG1,0x27c0,0x2)
0x279C180B,	//0x13bc		VoC_lw16i_set_inc(REG3,0x279c,0x2)
0x938260A2,	//0x13be		VoC_add32inc_rp(REG45,RL6,REG0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x6845FA5A,	//0x13c0		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0x9382F90C,	//0x13c2		VoC_add32inc_rp(REG45,RL6,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xDDD27A5A,	//0x13c4		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
		//0x13c6		VoC_endloop0
0xD9C5F90C,	//0x13c6		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xDDD27BFD,	//0x13c8		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0x49F2974F,	//0x13ca		VoC_add32_rr(REG45,RL7,RL6,DEFAULT)	|	VoC_sub32inc_rp(RL7,ACC1,REG1,DEFAULT)
0x7A5A9383,	//0x13cc		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG0,IN_PARALLEL)
0x790CFA5B,	//0x13ce		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xb,IN_PARALLEL)
0x790ED9C5,	//0x13d0		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)
0x4B7FFBFD,	//0x13d2		VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0x49F2DDD2,	//0x13d4		VoC_add32_rr(REG45,RL7,RL6,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x7A5ADDD3,	//0x13d6		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)
0x790CD9C4,	//0x13d8		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x970DFBFC,	//0x13da		VoC_sub32inc_rp(ACC1,ACC0,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xDDD24972,	//0x13dc		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC1,RL6,DEFAULT)
0xD9C37A5A,	//0x13de		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xFBFB790C,	//0x13e0		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x489496CA,	//0x13e2		VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)	|	VoC_sub32inc_rp(REG45,REG67,REG1,DEFAULT)
0x4B3FDDD2,	//0x13e4		VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x49F2DF42,	//0x13e6		VoC_add32_rr(REG45,RL7,RL6,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0x7A5A9383,	//0x13e8		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG0,IN_PARALLEL)
0x790CFA5B,	//0x13ea		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xb,IN_PARALLEL)
0xD9C4F90E,	//0x13ec		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0xDDD27BFC,	//0x13ee		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xDDD34B3F,	//0x13f0		VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
0xD9C449F2,	//0x13f2		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL7,RL6,DEFAULT)
0xFBFC7A5A,	//0x13f4		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xCB2B790C,	//0x13f6		VoC_sub32_rr(REG67,ACC0,ACC1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x7A5AC8F2,	//0x13f8		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_add32_rr(REG45,REG67,RL6,DEFAULT)
0x790CDDD2,	//0x13fa		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x5F02D9C4,	//0x13fc		VoC_pop32(REG45,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x4B12FBFC,	//0x13fe		VoC_sub32_rr(REG45,ACC0,REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xC894DDD2,	//0x1400		VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0xDF424B3F,	//0x1402		VoC_push32(REG45,IN_PARALLEL)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
0xD9C449F2,	//0x1404		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL7,RL6,DEFAULT)
0xFBFC7A5A,	//0x1406		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0x970C790C,	//0x1408		VoC_sub32inc_rp(ACC0,ACC0,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x7A5AC932,	//0x140a		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0x790CDDD2,	//0x140c		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0xD9C4DDDC,	//0x140e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)
0xDDD27BFC,	//0x1410		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0x4925970C,	//0x1412		VoC_add32_rr(ACC1,ACC0,ACC0,DEFAULT)	|	VoC_sub32inc_rp(ACC0,ACC0,REG1,DEFAULT)
0x4B7FD9C4,	//0x1414		VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x49F2DDDC,	//0x1416		VoC_add32_rr(REG45,RL7,RL6,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)
0x7A5AFBFC,	//0x1418		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x790C970C,	//0x141a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_sub32inc_rp(ACC0,ACC0,REG1,IN_PARALLEL)
0x5DDCC925,	//0x141c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,ACC0,IN_PARALLEL)
0x4972CB5D,	//0x141e		VoC_add32_rr(REG45,ACC1,RL6,DEFAULT)	|	VoC_sub32_rr(ACC1,ACC1,REG67,IN_PARALLEL)
0x7A5ADDD2,	//0x1420		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x790CD9C4,	//0x1422		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x1808FBFC,	//0x1424		VoC_lw16i_set_inc(REG0,0x63c4,0x2)(lo)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x170C63C4,	//0x1426		VoC_sub32inc_rp(ACC0,ACC0,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63c4,0x2)(hi)
0x4924DF02,	//0x1428		VoC_add32_rr(ACC0,ACC0,ACC0,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x4B14DDD2,	//0x142a		VoC_sub32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x4923DDDC,	//0x142c		VoC_add32_rr(REG67,ACC0,ACC0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)
0x4AFFDF02,	//0x142e		VoC_sub32_rr(RL7,REG67,RL7,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x49F2F643,	//0x1430		VoC_add32_rr(REG45,RL7,RL6,DEFAULT)	|	VoC_movreg16(REG3,REG2,IN_PARALLEL)
0x7A5AF682,	//0x1432		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_movreg16(REG2,REG4,IN_PARALLEL)
0x790C9383,	//0x1434		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG0,IN_PARALLEL)
0x180BFA5B,	//0x1436		VoC_lw16i_set_inc(REG3,0x279c,0x2)(lo)	|	VoC_shr32_ri(REG67,0xb,IN_PARALLEL)
0x5D9A279C,	//0x1438		VoC_sw32_p(REG45,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x279c,0x2)(hi)
0x7212F90E,	//0x143a		VoC_lw16i_short(INC2,0x10,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0xD9C3DF44,	//0x143c		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_push32(ACC0,IN_PARALLEL)
0xDDD37BFB,	//0x143e		VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xD9C44AFF,	//0x1440		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_sub32_rr(RL7,REG67,RL7,DEFAULT)
0xFBFC49F2,	//0x1442		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL7,RL6,DEFAULT)
0xCB2D7A5A,	//0x1444		VoC_sub32_rr(ACC1,ACC0,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xC973790C,	//0x1446		VoC_add32_rr(REG67,ACC1,RL6,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9C47A5B,	//0x1448		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
0xDDD2790E,	//0x144a		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xDF027BFC,	//0x144c		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xDDD34B12,	//0x144e		VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_sub32_rr(REG45,ACC0,REG45,DEFAULT)
0xD9C44893,	//0x1450		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,REG45,DEFAULT)
0xDF424AFF,	//0x1452		VoC_push32(REG45,IN_PARALLEL)	|	VoC_sub32_rr(RL7,REG67,RL7,DEFAULT)
0xFBFC49F2,	//0x1454		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL7,RL6,DEFAULT)
0x951C7A5A,	//0x1456		VoC_sub32_rp(ACC0,ACC0,REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xC933790C,	//0x1458		VoC_add32_rr(REG67,ACC0,RL6,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xDDDC7A5B,	//0x145a		VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
0xDDD2790E,	//0x145c		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x7BFCD9C4,	//0x145e		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x151BDDD3,	//0x1460		VoC_sub32_rp(REG67,ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)
0x7BFBD9C4,	//0x1462		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x4AFFFBFC,	//0x1464		VoC_sub32_rr(RL7,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x49F2DDDB,	//0x1466		VoC_add32_rr(REG45,RL7,RL6,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,IN_PARALLEL)
0x7A5A951C,	//0x1468		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_sub32_rp(ACC0,ACC0,REG3,IN_PARALLEL)
0x790CC923,	//0x146a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,ACC0,IN_PARALLEL)
0x5DDCCAED,	//0x146c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sub32_rr(ACC1,REG67,ACC1,IN_PARALLEL)
0x7A5AC972,	//0x146e		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_add32_rr(REG45,ACC1,RL6,IN_PARALLEL)
0x790CDDD2,	//0x1470		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x7BFCD9C4,	//0x1472		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x151CDF02,	//0x1474		VoC_sub32_rp(ACC0,ACC0,REG3,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0xC923DDD2,	//0x1476		VoC_add32_rr(REG67,ACC0,ACC0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0xDDDC4AD2,	//0x1478		VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_sub32_rr(REG45,REG67,REG45,DEFAULT)
0x93824893,	//0x147a		VoC_add32inc_rp(REG45,RL6,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,REG45,DEFAULT)
0xDF424AFF,	//0x147c		VoC_push32(REG45,IN_PARALLEL)	|	VoC_sub32_rr(RL7,REG67,RL7,DEFAULT)
0xFA5A49F3,	//0x147e		VoC_shr32_ri(REG45,0xb,IN_PARALLEL)	|	VoC_add32_rr(REG67,RL7,RL6,DEFAULT)
0xF90C7A5B,	//0x1480		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
0xD9C4790E,	//0x1482		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x4B3FC924,	//0x1484		VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC0,DEFAULT)
0x49F2DDD3,	//0x1486		VoC_add32_rr(REG45,RL7,RL6,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,IN_PARALLEL)
0x7A5ADDD2,	//0x1488		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x790CD9C4,	//0x148a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x4B2BFBFC,	//0x148c		VoC_sub32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x48F2D9C4,	//0x148e		VoC_add32_rr(REG45,REG67,RL6,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0x7A5ADDD2,	//0x1490		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)
0x790CFBFC,	//0x1492		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0xCB2DDF05,	//0x1494		VoC_sub32_rr(ACC1,ACC0,ACC1,DEFAULT)	|	VoC_pop32(ACC1,IN_PARALLEL)
0xDDD2496D,	//0x1496		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,ACC1,DEFAULT)
0xDF454B7F,	//0x1498		VoC_push32(ACC1,IN_PARALLEL)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0xD9C449F2,	//0x149a		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL7,RL6,DEFAULT)
0x279C180B,	//0x149c		VoC_lw16i_set_inc(REG3,0x279c,0x2)
0xFDFC7A5A,	//0x149e		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0x971D790C,	//0x14a0		VoC_sub32inc_rp(ACC1,ACC0,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9C44972,	//0x14a2		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC1,RL6,DEFAULT)
0xDDD27A5A,	//0x14a4		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xFDFC790C,	//0x14a6		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9C4171D,	//0x14a8		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_sub32inc_rp(ACC1,ACC0,REG3,DEFAULT)
0xDDD27DFD,	//0x14aa		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)
0xFDFC4B7F,	//0x14ac		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0x971D49F2,	//0x14ae		VoC_sub32inc_rp(ACC1,ACC0,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL7,RL6,DEFAULT)
0xFDFD7A5A,	//0x14b0		VoC_shru32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xCB5B790C,	//0x14b2		VoC_sub32_rr(REG67,ACC1,REG67,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9C448F2,	//0x14b4		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG67,RL6,DEFAULT)
0xDDD27A5A,	//0x14b6		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xb,DEFAULT)
0xFDFC790C,	//0x14b8		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xDF02171D,	//0x14ba		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_sub32inc_rp(ACC1,ACC0,REG3,DEFAULT)
0xDDD27DFD,	//0x14bc		VoC_sw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)
0xF0064B55,	//0x14be		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,REG45,DEFAULT)
0xF3FF7DFD,	//0x14c0		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xffffffff,DEFAULT)
0xF3FD4B7F,	//0x14c2		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
0xFA5AC9F2,	//0x14c4		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_add32_rr(REG45,RL7,RL6,DEFAULT)
0xFFC0F90C,	//0x14c6		VoC_NOP	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xE580DD92,	//0x14c8		VoC_return	|	VoC_sw32_p(REG45,REG2,DEFAULT)
		//0x14ca		CII_III_sideinfo
0x1402FF47,	//0x14ca		VoC_lw16_d(REG2,0x4820)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x70064820,	//0x14cc		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw16_d(REG2,0x4820)(hi)
0x3517E017,	//0x14ce		VoC_be16_rr(III_sideinfo_100,REG2,REG7)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xF04714D2,	//0x14d0		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_be16_rr(III_sideinfo_100,REG2,REG7)(hi)
		//0x14d2		III_sideinfo_100
0x31C5F103,	//0x14d2		VoC_bnez16_r(III_sideinfo_200,REG5)(lo)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x70A714DA,	//0x14d4		VoC_lw16i_short(REG7,0x5,DEFAULT)	|	VoC_bnez16_r(III_sideinfo_200,REG5)(hi)
0x401AE093,	//0x14d6		VoC_be16_rd(III_sideinfo_200,REG2,0x40a)(lo)	|	VoC_lw16i_short(REG3,0x9,IN_PARALLEL)
0xF067040A,	//0x14d8		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_be16_rd(III_sideinfo_200,REG2,0x40a)(hi)
		//0x14da		III_sideinfo_200
0x48241805,	//0x14da		VoC_lw16i_set_inc(REG1,0x4824,0x1)
0xE318E240,	//0x14dc		VoC_rbinc_r(REG4,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
0x5C94E338,	//0x14de		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_rbinc_r(REG4,REG7,DEFAULT)
0xDC94E013,	//0x14e0		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x14EC31C5,	//0x14e2		VoC_bnez16_r(III_sideinfo_300,REG5)
0x6684E240,	//0x14e4		VoC_loop_r_short(REG2,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE290E023,	//0x14e6		VoC_rbinc_i(REG4,0x4,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0xDC94FFC0,	//0x14e8		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_NOP
		//0x14e9		VoC_endloop0
0xFFC0FFC0,	//0x14ea		VoC_NAD	|	VoC_NOP
		//0x14ec		III_sideinfo_300
0x48281805,	//0x14ec		VoC_lw16i_set_inc(REG1,0x4828,0x1)
		//0x14ee		III_sideinfo_gr_loop_begin
0x1484DFC3,	//0x14ee		VoC_lw32_d(ACC0,0x4826)(lo)	|	VoC_push16(REG3,DEFAULT)
0x2E114826,	//0x14f0		VoC_loop_r(1,REG2)(lo)	|	VoC_lw32_d(ACC0,0x4826)(hi)
0xE240155F,	//0x14f2		VoC_lbinc_p(REG0)	|	VoC_loop_r(1,REG2)(hi)
0xE2B0E240,	//0x14f4		VoC_rbinc_i(REG4,0xc,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE240C1A6,	//0x14f6		VoC_lbinc_p(REG0)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xDC94E2A4,	//0x14f8		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_rbinc_i(REG4,0x9,DEFAULT)
0x6083E240,	//0x14fa		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE2A0DC94,	//0x14fc		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,IN_PARALLEL)
0xDC94F122,	//0x14fe		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x9,DEFAULT)
0x150331C5,	//0x1500		VoC_bnez16_r(III_sideinfo_ch_loop_100,REG5)
0xE310F082,	//0x1502		VoC_rbinc_r(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
		//0x1503		III_sideinfo_ch_loop_100
0x01200A82,	//0x1504		VoC_lw16i(REG2,0x120)
0x150C349A,	//0x1506		VoC_bngt16_rr(III_sideinfo_ch_loop_200,REG3,REG2)
0x150C3347,	//0x1508		VoC_bnez32_r(III_sideinfo_ch_loop_200,RL7)
0x02320A8E,	//0x150a		VoC_lw16i(RL7_LO,0x232)
		//0x150c		III_sideinfo_ch_loop_200
0xE240DC94,	//0x150c		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDC9F6284,	//0x150e		VoC_sw16inc_p(RL7_HI,REG1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x15463184,	//0x1510		VoC_bez16_r(III_sideinfo_ch_loop_300,REG4)
0xE288E240,	//0x1512		VoC_rbinc_i(REG4,0x2,DEFAULT)	|	VoC_lbinc_p(REG0)
0x151A31C4,	//0x1514		VoC_bnez16_r(III_sideinfo_ch_loop_1000,REG4)
0x151A3347,	//0x1516		VoC_bnez32_r(III_sideinfo_ch_loop_1000,RL7)
0x02330A8E,	//0x1518		VoC_lw16i(RL7_LO,0x233)
		//0x151a		III_sideinfo_ch_loop_1000
0x449CDC94,	//0x151a		VoC_bne16_rd(III_sideinfo_ch_loop_1100,REG4,0x44ea)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x31C544EA,	//0x151c		VoC_bnez16_r(III_sideinfo_ch_loop_1100,REG5)(lo)	|	VoC_bne16_rd(III_sideinfo_ch_loop_1100,REG4,0x44ea)(hi)
0x33471526,	//0x151e		VoC_bnez32_r(III_sideinfo_ch_loop_1100,RL7)(lo)	|	VoC_bnez16_r(III_sideinfo_ch_loop_1100,REG5)(hi)
0xE1031526,	//0x1520		VoC_movreg16(REG3,ACC0_LO,DEFAULT)	|	VoC_bnez32_r(III_sideinfo_ch_loop_1100,RL7)(hi)
0x15263143,	//0x1522		VoC_bngtz16_r(III_sideinfo_ch_loop_1100,REG3)
0x02340A8E,	//0x1524		VoC_lw16i(RL7_LO,0x234)
		//0x1526		III_sideinfo_ch_loop_1100
0x44EA078A,	//0x1526		VoC_sub16_rd(REG2,REG1,0x44ea)
0xF6836284,	//0x1528		VoC_movreg16(REG3,REG4,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x15313144,	//0x152a		VoC_bngtz16_r(III_sideinfo_ch_loop_2000,REG4)
0x1684D824,	//0x152c		VoC_or16_ri(REG4,0x8)(lo)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xFFC00008,	//0x152e		VoC_NOP	|	VoC_or16_ri(REG4,0x8)(hi)
0xF0E2DC24,	//0x1530		VoC_lw16i_short(REG2,0x7,DEFAULT)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
		//0x1531		III_sideinfo_ch_loop_2000
0x44EA441B,	//0x1532		VoC_bne16_rd(III_sideinfo_ch_loop_2100,REG3,0x44ea)
0xFFC0F102,	//0x1534		VoC_NOP	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x1535		III_sideinfo_ch_loop_2100
0xE843E240,	//0x1536		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lbinc_p(REG0)
0xF08AE294,	//0x1538		VoC_lw16i_short(ACC1_LO,0x4,DEFAULT)	|	VoC_rbinc_i(REG4,0x5,DEFAULT)
		//0x153a		VoC_endloop0
0xDC9ADC94,	//0x153a		VoC_sw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xE863E240,	//0x153c		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lbinc_p(REG0)
0xFFC0E28C,	//0x153e		VoC_NOP	|	VoC_rbinc_i(REG4,0x3,DEFAULT)
		//0x1540		VoC_endloop0
0x0A84DC94,	//0x1540		VoC_lw16i(REG4,0x24)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDC920024,	//0x1542		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i(REG4,0x24)(hi)
0xE5CFDC94,	//0x1544		VoC_jump(III_sideinfo_ch_loop_300_end)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1546		III_sideinfo_ch_loop_300
0xE240DC9F,	//0x1546		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(RL7_HI,REG1,DEFAULT)
0xE863E240,	//0x1548		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lbinc_p(REG0)
0xFFC0E294,	//0x154a		VoC_NOP	|	VoC_rbinc_i(REG4,0x5,DEFAULT)
		//0x154c		VoC_endloop0
0xE240DC94,	//0x154c		VoC_lbinc_p(REG0)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x42CB0709,	//0x154e		VoC_add16_rd(REG1,REG1,0x42cb)
0xE28CE290,	//0x1550		VoC_rbinc_i(REG4,0x3,DEFAULT)	|	VoC_rbinc_i(REG4,0x4,DEFAULT)
0xDC94DC94,	//0x1552		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1554		III_sideinfo_ch_loop_300_end
0x44DC078A,	//0x1554		VoC_sub16_rd(REG2,REG1,0x44dc)
0xD823F044,	//0x1556		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x155B3105,	//0x1558		VoC_bgtz16_r(III_sideinfo_ch_loop_400,REG5)
0xE320F064,	//0x155a		VoC_rbinc_r(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
		//0x155b		III_sideinfo_ch_loop_400
0xE2846463,	//0x155c		VoC_lw16i_short(REG4,0x28,IN_PARALLEL)	|	VoC_or16_rr(REG3,REG4,DEFAULT)
0x5C23C061,	//0x155e		VoC_sw16_p(REG3,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
		//0x155f		VoC_endloop1
0x1402F728,	//0x1560		VoC_lw16_d(REG2,0x4820)(lo)	|	VoC_movreg16(ACC0_LO,ACC0_HI,IN_PARALLEL)
0xDF834820,	//0x1562		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16_d(REG2,0x4820)(hi)
0x48941805,	//0x1564		VoC_lw16i_set_inc(REG1,0x4894,0x1)
0x040A079B,	//0x1566		VoC_sub16_rd(REG3,REG3,0x40a)
0x14EE31C3,	//0x1568		VoC_bnez16_r(III_sideinfo_gr_loop_begin,REG3)
0x48131500,	//0x156a		VoC_sw16_d(REG0,0x4813)
0x48141586,	//0x156c		VoC_sw32_d(RL6,0x4814)
0x4816151B,	//0x156e		VoC_sw16_d(BITCACHE,0x4816)
0xFFC0E580,	//0x1570		VoC_NAD	|	VoC_return
		//0x1572		CII_mad_layer_III
0xE0075FE9,	//0x1572		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x1507F025,	//0x1574		VoC_sw16_d(REG7,0x4904)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x6C034904,	//0x1576		VoC_bez16_d(NCHANNELS_100,0x47ff)(lo)	|	VoC_sw16_d(REG7,0x4904)(hi)
0xF04547FF,	//0x1578		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_bez16_d(NCHANNELS_100,0x47ff)(hi)
		//0x157a		NCHANNELS_100
0x10000A86,	//0x157a		VoC_lw16i(REG6,0x1000)
0x48201505,	//0x157c		VoC_sw16_d(REG5,0x4820)
0x48062806,	//0x157e		VoC_and16_rd(REG6,0x4806)
0x401DF127,	//0x1580		VoC_be16_rd(mad_layer_III_si_len_100,REG5,0x40a)(lo)	|	VoC_lw16i_short(REG7,0x9,DEFAULT)
0xF227040A,	//0x1582		VoC_lw16i_short(REG7,0x11,DEFAULT)	|	VoC_be16_rd(mad_layer_III_si_len_100,REG5,0x40a)(hi)
		//0x1584		mad_layer_III_si_len_100
0x158C31C6,	//0x1584		VoC_bnez16_r(mad_layer_III_si_len_500,REG6)
0x402DF227,	//0x1586		VoC_be16_rd(mad_layer_III_si_len_500,REG5,0x40a)(lo)	|	VoC_lw16i_short(REG7,0x11,DEFAULT)
0x0A87040A,	//0x1588		VoC_lw16i(REG7,0x20)(lo)	|	VoC_be16_rd(mad_layer_III_si_len_500,REG5,0x40a)(hi)
0xFFC00020,	//0x158a		VoC_NAD	|	VoC_lw16i(REG7,0x20)(hi)
		//0x158c		mad_layer_III_si_len_500
0x48131402,	//0x158c		VoC_lw16_d(REG2,0x4813)
0x78FADFC7,	//0x158e		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x1406E087,	//0x1590		VoC_lw16_d(REG6,0x4816)(lo)	|	VoC_lw16i_short(REG7,0x8,IN_PARALLEL)
0xFFC04816,	//0x1592		VoC_NAD	|	VoC_lw16_d(REG6,0x4816)(hi)
0x11162B80,	//0x1594		VoC_jal(CII_div_mode)
0xDF8742AA,	//0x1596		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)
0x48120B11,	//0x1598		VoC_sub16_dr(REG1,0x4812,REG2)
0x42D63821,	//0x159a		VoC_bgt16_rd(mad_layer_III101,REG1,0x42d6)
0x405E0709,	//0x159c		VoC_add16_rd(REG1,REG1,0x405e)
		//0x159e		mad_layer_III101
0x15AC34B9,	//0x159e		VoC_bngt16_rr(mad_layer_III_check_frame,REG7,REG1)
0xE0015FA9,	//0x15a0		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x02310A87,	//0x15a2		VoC_lw16i(REG7,0x231)
0x481C1501,	//0x15a4		VoC_sw16_d(REG1,0x481c)
0x1507F7E6,	//0x15a6		VoC_sw16_d(REG7,0x481e)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x1507481E,	//0x15a8		VoC_sw16_d(REG7,0x4904)(lo)	|	VoC_sw16_d(REG7,0x481e)(hi)
0xE5804904,	//0x15aa		VoC_return	|	VoC_sw16_d(REG7,0x4904)(hi)
		//0x15ac		mad_layer_III_check_frame
0xF4547201,	//0x15ac		VoC_lw16i_short(WRAP0,0xa,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x10,DEFAULT)
0x48062801,	//0x15ae		VoC_and16_rd(REG1,0x4806)
0x15D03181,	//0x15b0		VoC_bez16_r(mad_layer_III_check_CRC,REG1)
0x48041404,	//0x15b2		VoC_lw16_d(REG4,0x4804)
0x48132004,	//0x15b4		VoC_lw16d_set_inc(REG0,0x4813,0x1)
0x48141486,	//0x15b6		VoC_lw32_d(RL6,0x4814)
0x4816141B,	//0x15b8		VoC_lw16_d(BITCACHE,0x4816)
0xFFC0F8EF,	//0x15ba		VoC_NAD	|	VoC_shr16_ri(REG7,0xfffffffd,DEFAULT)
0x10502B80,	//0x15bc		VoC_jal(CII_mad_bit_crc)
0x4804150E,	//0x15be		VoC_sw16_d(RL7_LO,0x4804)
0x40BCE1C4,	//0x15c0		VoC_be16_rd(mad_layer_III_check_CRC,REG4,0x4805)(lo)	|	VoC_movreg16(REG4,RL7_LO,DEFAULT)
0x70244805,	//0x15c2		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_be16_rd(mad_layer_III_check_CRC,REG4,0x4805)(hi)
0x2804EFF7,	//0x15c4		VoC_and16_rd(REG4,0x480a)(lo)	|	VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)
0x0A86480A,	//0x15c6		VoC_lw16i(REG6,0x201)(lo)	|	VoC_and16_rd(REG4,0x480a)(hi)
0x31C40201,	//0x15c8		VoC_bnez16_r(mad_layer_III_check_CRC,REG4)(lo)	|	VoC_lw16i(REG6,0x201)(hi)
0x150615D0,	//0x15ca		VoC_sw16_d(REG6,0x481e)(lo)	|	VoC_bnez16_r(mad_layer_III_check_CRC,REG4)(hi)
0x1507481E,	//0x15cc		VoC_sw16_d(REG7,0x4904)(lo)	|	VoC_sw16_d(REG6,0x481e)(hi)
0xFFC04904,	//0x15ce		VoC_NAD	|	VoC_sw16_d(REG7,0x4904)(hi)
		//0x15d0		mad_layer_III_check_CRC
0x10000A85,	//0x15d0		VoC_lw16i(REG5,0x1000)
0x48062805,	//0x15d2		VoC_and16_rd(REG5,0x4806)
0x48132004,	//0x15d4		VoC_lw16d_set_inc(REG0,0x4813,0x1)
0x48141486,	//0x15d6		VoC_lw32_d(RL6,0x4814)
0x4816141B,	//0x15d8		VoC_lw16_d(BITCACHE,0x4816)
0x14CA2B80,	//0x15da		VoC_jal(CII_III_sideinfo)
0xEFF461C5,	//0x15dc		VoC_lw16i_short(REG4,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x3185F21C,	//0x15de		VoC_bez16_r(mad_layer_III_check_sideinfo,REG5)(lo)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0x6E0715E8,	//0x15e0		VoC_bnez16_d(mad_layer_III_check_sideinfo,0x4904)(lo)	|	VoC_bez16_r(mad_layer_III_check_sideinfo,REG5)(hi)
0x15054904,	//0x15e2		VoC_sw16_d(REG5,0x481e)(lo)	|	VoC_bnez16_d(mad_layer_III_check_sideinfo,0x4904)(hi)
0x1504481E,	//0x15e4		VoC_sw16_d(REG4,0x4904)(lo)	|	VoC_sw16_d(REG5,0x481e)(hi)
0xFFC04904,	//0x15e6		VoC_NAD	|	VoC_sw16_d(REG4,0x4904)(hi)
		//0x15e8		mad_layer_III_check_sideinfo
0x48061482,	//0x15e8		VoC_lw32_d(REG45,0x4806)
0xDFC6647C,	//0x15ea		VoC_push16(REG6,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG7,DEFAULT)
0x48252885,	//0x15ec		VoC_or16_rd(REG5,0x4825)
0x1582F01B,	//0x15ee		VoC_sw32_d(REG45,0x4806)(lo)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x20044806,	//0x15f0		VoC_lw16d_set_inc(REG0,0x4812,0x1)(lo)	|	VoC_sw32_d(REG45,0x4806)(hi)
0x7F464812,	//0x15f2		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16d_set_inc(REG0,0x4812,0x1)(hi)
0x1604F604,	//0x15f4		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG0,IN_PARALLEL)
0x79080001,	//0x15f6		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x4820E007,	//0x15f8		VoC_blt16_rd(mad_layer_III_beyond1,REG0,0x4065)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x07804065,	//0x15fa		VoC_sub16_rd(REG0,REG0,0x4065)(lo)	|	VoC_blt16_rd(mad_layer_III_beyond1,REG0,0x4065)(hi)
0xF15C4065,	//0x15fc		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x4065)(hi)
		//0x15fd		mad_layer_III_beyond1
0x16023184,	//0x15fe		VoC_bez16_r(mad_layer_III_peek_init_even,REG4)
0xE2A0E240,	//0x1600		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x1602		mad_layer_III_peek_init_even
0xE240FFC0,	//0x1602		VoC_lbinc_p(REG0)	|	VoC_NOP
0xFF476281,	//0x1604		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_rbinc_i(REG5,0x10,DEFAULT)
0x6280E240,	//0x1606		VoC_rbinc_i(REG4,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0xF4CFFF45,	//0x1608		VoC_lw16i_short(RL7_HI,0xffe6,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xE4D7F44B,	//0x160a		VoC_and32_rr(RL7,REG45,DEFAULT)	|	VoC_lw16i_short(ACC1_HI,0xffe2,DEFAULT)
0x161E37BD,	//0x160c		VoC_bne32_rr(mad_layer_III_find_main_data,RL7,ACC1)
0xE4D5F02B,	//0x160e		VoC_and32_rr(ACC1,REG45,DEFAULT)	|	VoC_lw16i_short(ACC1_HI,0x1,DEFAULT)
0x16143345,	//0x1610		VoC_bnez32_r(mad_layer_III_find_main_data_100,ACC1)
0xE282E240,	//0x1612		VoC_rbinc_i(REG6,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x1614		mad_layer_III_find_main_data_100
0xE240FFC0,	//0x1614		VoC_lbinc_p(REG0)	|	VoC_NOP
0xFF457126,	//0x1616		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0xE4EAF10B,	//0x1618		VoC_and32_rr(REG45,ACC1,DEFAULT)	|	VoC_lw16i_short(ACC1_HI,0x8,DEFAULT)
0x161D3282,	//0x161a		VoC_bgtz32_r(mad_layer_III_find_main_data_200,REG45)
0xE333F106,	//0x161c		VoC_rbinc_r(REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
		//0x161d		mad_layer_III_find_main_data_200
		//0x161e		mad_layer_III_find_main_data
0x1406F21C,	//0x161e		VoC_lw16_d(REG6,0x4816)(lo)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0x5FC74816,	//0x1620		VoC_push16(REG7,DEFAULT)	|	VoC_lw16_d(REG6,0x4816)(hi)
0xFFC0E087,	//0x1622		VoC_NAD	|	VoC_lw16i_short(REG7,0x8,IN_PARALLEL)
0x11162B80,	//0x1624		VoC_jal(CII_div_mode)
0x48131404,	//0x1626		VoC_lw16_d(REG4,0x4813)
0x432CF8FC,	//0x1628		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x0B26DF87,	//0x162a		VoC_sub16_dr(REG6,0x4812,REG4)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0x382E4812,	//0x162c		VoC_bgt16_rd(mad_layer_III102,REG6,0x42d6)(lo)	|	VoC_sub16_dr(REG6,0x4812,REG4)(hi)
0x073642D6,	//0x162e		VoC_add16_rd(REG6,REG6,0x405e)(lo)	|	VoC_bgt16_rd(mad_layer_III102,REG6,0x42d6)(hi)
0xFFC0405E,	//0x1630		VoC_NAD	|	VoC_add16_rd(REG6,REG6,0x405e)(hi)
		//0x1632		mad_layer_III102
0x48240735,	//0x1632		VoC_add16_rd(REG5,REG6,0x4824)
0x163834BD,	//0x1634		VoC_bngt16_rr(find_main_data_this_frame_100,REG7,REG5)
0xFFC0F007,	//0x1636		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1638		find_main_data_this_frame_100
0xE00443BD,	//0x1638		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG7,DEFAULT)
0x4824072D,	//0x163a		VoC_add16_rd(REG5,REG5,0x4824)
0x48246E16,	//0x163c		VoC_bnez16_d(find_main_data_this_frame_500,0x4824)
0x481C1504,	//0x163e		VoC_sw16_d(REG4,0x481c)
0xE01260A4,	//0x1640		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x48132004,	//0x1642		VoC_lw16d_set_inc(REG0,0x4813,0x1)
0x48141486,	//0x1644		VoC_lw32_d(RL6,0x4814)
0x4816141B,	//0x1646		VoC_lw16_d(BITCACHE,0x4816)
0x48231502,	//0x1648		VoC_sw16_d(REG2,0x4823)
0x49021500,	//0x164a		VoC_sw16_d(REG0,0x4902)
0x49001586,	//0x164c		VoC_sw32_d(RL6,0x4900)
0x4903151B,	//0x164e		VoC_sw16_d(BITCACHE,0x4903)
0x16C22B00,	//0x1650		VoC_jump_lg(find_main_data_this_frame_500_end)
		//0x1652		find_main_data_this_frame_500
0x48241403,	//0x1652		VoC_lw16_d(REG3,0x4824)
0x481C3D03,	//0x1654		VoC_bngt16_rd(find_main_data_this_frame_550,REG3,0x481c)
0x02350A83,	//0x1656		VoC_lw16i(REG3,0x235)
0x6C05F7E2,	//0x1658		VoC_bez16_d(find_main_data_this_frame_500_1,0x4904)(lo)	|	VoC_lw16i_short(REG2,0xffffffff,DEFAULT)
0x2B004904,	//0x165a		VoC_jump_lg(find_main_data_this_frame_500_end)(lo)	|	VoC_bez16_d(find_main_data_this_frame_500_1,0x4904)(hi)
0xFFC016C2,	//0x165c		VoC_NAD	|	VoC_jump_lg(find_main_data_this_frame_500_end)(hi)
		//0x165e		find_main_data_this_frame_500_1
0x481E1503,	//0x165e		VoC_sw16_d(REG3,0x481e)
0x49041502,	//0x1660		VoC_sw16_d(REG2,0x4904)
0x16C22B00,	//0x1662		VoC_jump_lg(find_main_data_this_frame_500_end)
		//0x1664		find_main_data_this_frame_550
0xFF46701B,	//0x1664		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x5A081804,	//0x1666		VoC_lw16i_set_inc(REG0,0x5a08,0x1)
0xDFC479F8,	//0x1668		VoC_push16(REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xffffffff,DEFAULT)
0x49050700,	//0x166a		VoC_add16_rd(REG0,REG0,0x4905)
0x481C0700,	//0x166c		VoC_add16_rd(REG0,REG0,0x481c)
0x0780E003,	//0x166e		VoC_sub16_rd(REG0,REG0,0x4824)(lo)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x79084824,	//0x1670		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x4824)(hi)
0x1604F604,	//0x1672		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG0,IN_PARALLEL)
0x31840001,	//0x1674		VoC_bez16_r(mad_layer_III_md_lent_even,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0xE240167A,	//0x1676		VoC_lbinc_p(REG0)	|	VoC_bez16_r(mad_layer_III_md_lent_even,REG4)(hi)
0xFFC0E2A0,	//0x1678		VoC_NAD	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
		//0x167a		mad_layer_III_md_lent_even
0xE0025F84,	//0x167a		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x49021500,	//0x167c		VoC_sw16_d(REG0,0x4902)
0x49001586,	//0x167e		VoC_sw32_d(RL6,0x4900)
0x4903151B,	//0x1680		VoC_sw16_d(BITCACHE,0x4903)
0x48231502,	//0x1682		VoC_sw16_d(REG2,0x4823)
0x48243825,	//0x1684		VoC_bgt16_rd(no_find_main_data_this_frame_500_end,REG5,0x4824)
0x16C22B00,	//0x1686		VoC_jump_lg(find_main_data_this_frame_500_end)
		//0x1688		no_find_main_data_this_frame_500_end
0x482407AC,	//0x1688		VoC_sub16_rd(REG4,REG5,0x4824)
0x481C0722,	//0x168a		VoC_add16_rd(REG2,REG4,0x481c)
0xDF42DF43,	//0x168c		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x48132004,	//0x168e		VoC_lw16d_set_inc(REG0,0x4813,0x1)
0x48141486,	//0x1690		VoC_lw32_d(RL6,0x4814)
0x4816141B,	//0x1692		VoC_lw16_d(BITCACHE,0x4816)
0xF90B6062,	//0x1694		VoC_shru16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x00011602,	//0x1696		VoC_and16_ri(REG2,0x1)
0x4828F15C,	//0x1698		VoC_blt16_rd(mad_layer_III_beyond3,REG0,0x4065)(lo)	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
0x07804065,	//0x169a		VoC_sub16_rd(REG0,REG0,0x4065)(lo)	|	VoC_blt16_rd(mad_layer_III_beyond3,REG0,0x4065)(hi)
0xFFC04065,	//0x169c		VoC_NAD	|	VoC_sub16_rd(REG0,REG0,0x4065)(hi)
		//0x169e		mad_layer_III_beyond3
0x16AA3182,	//0x169e		VoC_bez16_r(mad_layer_III_copy_500,REG2)
0x1606D836,	//0x16a0		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16_p(REG6,REG3,DEFAULT)
0xE2A300FF,	//0x16a2		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xE47EF9C7,	//0x16a4		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0x07A4E240,	//0x16a6		VoC_sub16_rd(REG4,REG4,0x40a)(lo)	|	VoC_lbinc_p(REG0)
0xDCB6040A,	//0x16a8		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x40a)(hi)
		//0x16aa		mad_layer_III_copy_500
0x040A0726,	//0x16aa		VoC_add16_rd(REG6,REG4,0x40a)
0x62A0E240,	//0x16ac		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x0736F816,	//0x16ae		VoC_add16_rd(REG6,REG6,0x40a)(lo)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0xE2A1040A,	//0x16b0		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x40a)(hi)
0xE240E78B,	//0x16b2		VoC_lbinc_p(REG0)	|	VoC_loop_r_short(REG6,DEFAULT)
0xF9C562A2,	//0x16b4		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x646CE2A3,	//0x16b6		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0xE47EF9C7,	//0x16b8		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)
0x62A0E240,	//0x16ba		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x62A1DCB4,	//0x16bc		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)
		//0x16bd		VoC_endloop0
0x721CDCB6,	//0x16be		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)
0xDF03DF02,	//0x16c0		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
		//0x16c2		find_main_data_this_frame_500_end
0xDF84C3A6,	//0x16c2		VoC_pop16(REG4,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xDF42DF43,	//0x16c4		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x49046E0B,	//0x16c6		VoC_bnez16_d(decode_main_data_end,0x4904)
0x17D42B80,	//0x16c8		VoC_jal(CII_III_decode)
0x3184F7E7,	//0x16ca		VoC_bez16_r(decode_main_data_end,REG4)(lo)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0x150416D1,	//0x16cc		VoC_sw16_d(REG4,0x481e)(lo)	|	VoC_bez16_r(decode_main_data_end,REG4)(hi)
0x1507481E,	//0x16ce		VoC_sw16_d(REG7,0x4904)(lo)	|	VoC_sw16_d(REG4,0x481e)(hi)
0xDF024904,	//0x16d0		VoC_pop32(REG45,DEFAULT)	|	VoC_sw16_d(REG7,0x4904)(hi)
		//0x16d1		decode_main_data_end
0x49021804,	//0x16d2		VoC_lw16i_set_inc(REG0,0x4902,0x1)
0x48171805,	//0x16d4		VoC_lw16i_set_inc(REG1,0x4817,0x1)
0xE882D883,	//0x16d6		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xDC93D883,	//0x16d8		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x16d9		VoC_endloop0
0xF8EBE0A3,	//0x16da		VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG3,REG5,DEFAULT)
0xDF03C2E3,	//0x16dc		VoC_pop32(REG67,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0x481B1503,	//0x16de		VoC_sw16_d(REG3,0x481b)
0x1703343E,	//0x16e0		VoC_bgt16_rr(preload_main_data,REG7,REG6)
0x481C1507,	//0x16e2		VoC_sw16_d(REG7,0x481c)
0x5A081809,	//0x16e4		VoC_lw16i_set_inc(REG1,0x5a08,0x2)
0x48120B38,	//0x16e6		VoC_sub16_dr(REG0,0x4812,REG7)
0x16EC3100,	//0x16e8		VoC_bgtz16_r(mad_layer_III103,REG0)
0x405E0700,	//0x16ea		VoC_add16_rd(REG0,REG0,0x405e)
		//0x16ec		mad_layer_III103
0x1604E004,	//0x16ec		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x79080001,	//0x16ee		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x4828F454,	//0x16f0		VoC_blt16_rd(mad_layer_III_beyond2,REG0,0x4065)(lo)	|	VoC_lw16i_short(WRAP0,0xa,IN_PARALLEL)
0x07804065,	//0x16f2		VoC_sub16_rd(REG0,REG0,0x4065)(lo)	|	VoC_blt16_rd(mad_layer_III_beyond2,REG0,0x4065)(hi)
0xFFC04065,	//0x16f4		VoC_NAD	|	VoC_sub16_rd(REG0,REG0,0x4065)(hi)
		//0x16f6		mad_layer_III_beyond2
0x49051504,	//0x16f6		VoC_sw16_d(REG4,0x4905)
0xD8847817,	//0x16f8		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0x040A073F,	//0x16fa		VoC_add16_rd(REG7,REG7,0x40a)
0xD88567C4,	//0x16fc		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDDCAD884,	//0x16fe		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x1700		VoC_endloop0
0x2B00D885,	//0x1700		VoC_jump_lg(preload_main_data_end)(lo)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xF21C1775,	//0x1702		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_jump_lg(preload_main_data_end)(hi)
		//0x1703		preload_main_data
0x482DF002,	//0x1704		VoC_blt16_rd(no_preload_main_data_100,REG5,0x4824)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x2B004824,	//0x1706		VoC_jump_lg(preload_main_data_100)(lo)	|	VoC_blt16_rd(no_preload_main_data_100,REG5,0x4824)(hi)
0xFFC0172E,	//0x1708		VoC_NAD	|	VoC_jump_lg(preload_main_data_100)(hi)
		//0x170a		no_preload_main_data_100
0x48240B2A,	//0x170a		VoC_sub16_dr(REG2,0x4824,REG5)
0x34A7C0B4,	//0x170c		VoC_bngt16_rr(preload_main_data_200,REG4,REG7)(lo)	|	VoC_add16_rr(REG4,REG2,REG6,DEFAULT)
0xC3F21710,	//0x170e		VoC_sub16_rr(REG2,REG7,REG6,DEFAULT)	|	VoC_bngt16_rr(preload_main_data_200,REG4,REG7)(hi)
		//0x1710		preload_main_data_200
0x481C4DA2,	//0x1710		VoC_bnlt16_rd(preload_main_data_1aa,REG2,0x481c)
0x5A08180B,	//0x1712		VoC_lw16i_set_inc(REG3,0x5a08,0x2)
0x1404DFC2,	//0x1714		VoC_lw16_d(REG4,0x4905)(lo)	|	VoC_push16(REG2,DEFAULT)
0x07204905,	//0x1716		VoC_add16_rd(REG0,REG4,0x481c)(lo)	|	VoC_lw16_d(REG4,0x4905)(hi)
0xC210481C,	//0x1718		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_add16_rd(REG0,REG4,0x481c)(hi)
0xF9086004,	//0x171a		VoC_shru16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x1604C018,	//0x171c		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xF8120001,	//0x171e		VoC_shr16_ri(REG2,0x2,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x040A0712,	//0x1720		VoC_add16_rd(REG2,REG2,0x40a)
0x49051504,	//0x1722		VoC_sw16_d(REG4,0x4905)
0x6684D884,	//0x1724		VoC_loop_r_short(REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD884D885,	//0x1726		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
0xD885DDDA,	//0x1728		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x1729		VoC_endloop0
0xE5C3DF82,	//0x172a		VoC_jump(preload_main_data_100)	|	VoC_pop16(REG2,DEFAULT)
		//0x172c		preload_main_data_1aa
0x481C1402,	//0x172c		VoC_lw16_d(REG2,0x481c)
		//0x172e		preload_main_data_100
0x5A081807,	//0x172e		VoC_lw16i_set_inc(REG3,0x5a08,0x1)
0x481C1502,	//0x1730		VoC_sw16_d(REG2,0x481c)
0x071BF9FB,	//0x1732		VoC_add16_rd(REG3,REG3,0x4905)(lo)	|	VoC_shru16_ri(REG3,0xffffffff,DEFAULT)
0xC0D34905,	//0x1734		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x4905)(hi)
0xF90B6062,	//0x1736		VoC_shru16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x48120B30,	//0x1738		VoC_sub16_dr(REG0,0x4812,REG6)
0x42D63820,	//0x173a		VoC_bgt16_rd(mad_layer_III104,REG0,0x42d6)
0x405E0700,	//0x173c		VoC_add16_rd(REG0,REG0,0x405e)
		//0x173e		mad_layer_III104
0x7F46F01B,	//0x173e		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x1604F604,	//0x1740		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG4,REG0,IN_PARALLEL)
0x79080001,	//0x1742		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
0x4828F454,	//0x1744		VoC_blt16_rd(mad_layer_III_beyond4,REG0,0x4065)(lo)	|	VoC_lw16i_short(WRAP0,0xa,IN_PARALLEL)
0x07804065,	//0x1746		VoC_sub16_rd(REG0,REG0,0x4065)(lo)	|	VoC_blt16_rd(mad_layer_III_beyond4,REG0,0x4065)(hi)
0xFFC04065,	//0x1748		VoC_NAD	|	VoC_sub16_rd(REG0,REG0,0x4065)(hi)
		//0x174a		mad_layer_III_beyond4
0x174E3184,	//0x174a		VoC_bez16_r(mad_layer_III_copy_200,REG4)
0xE2A0E240,	//0x174c		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x174e		mad_layer_III_copy_200
0x481C0734,	//0x174e		VoC_add16_rd(REG4,REG6,0x481c)
0x1504E240,	//0x1750		VoC_sw16_d(REG4,0x481c)(lo)	|	VoC_lbinc_p(REG0)
0x1602481C,	//0x1752		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_sw16_d(REG4,0x481c)(hi)
0x31820001,	//0x1754		VoC_bez16_r(mad_layer_III_copy_300,REG2)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0xD8341761,	//0x1756		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_bez16_r(mad_layer_III_copy_300,REG2)(hi)
0x00FF1604,	//0x1758		VoC_and16_ri(REG4,0xff)
0xF9C5E2A1,	//0x175a		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_rbinc_i(REG5,0x8,DEFAULT)
0xE240E46C,	//0x175c		VoC_lbinc_p(REG0)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x040A07B6,	//0x175e		VoC_sub16_rd(REG6,REG6,0x40a)
0xFFC0DCB4,	//0x1760		VoC_NOP	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1761		mad_layer_III_copy_300
0x62A0E240,	//0x1762		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x0736F816,	//0x1764		VoC_add16_rd(REG6,REG6,0x40a)(lo)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0xE2A1040A,	//0x1766		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x40a)(hi)
0xE240E78B,	//0x1768		VoC_lbinc_p(REG0)	|	VoC_loop_r_short(REG6,DEFAULT)
0xF9C562A2,	//0x176a		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x646CE2A3,	//0x176c		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_rbinc_i(REG7,0x8,DEFAULT)
0xE47EF9C7,	//0x176e		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)
0x62A0E240,	//0x1770		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x62A1DCB4,	//0x1772		VoC_rbinc_i(REG5,0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)
		//0x1773		VoC_endloop0
0xDFA9DCB6,	//0x1774		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)
		//0x1775		preload_main_data_end
0xE580F21C,	//0x1776		VoC_return	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
		//0x1778		CII_III_reorder
0x44EE073D,	//0x1778		VoC_add16_rd(REG5,REG7,0x44ee)
0x6382180A,	//0x177a		VoC_lw16i_set_inc(REG2,0x6382,0x2)
0xE0835856,	//0x177c		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG5,DEFAULT)
0xE007641E,	//0x177e		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG3,DEFAULT)
0x17873186,	//0x1780		VoC_bez16_r(III_reorder_L2,REG6)
0xE0067047,	//0x1782		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
		//0x1784		III_reorder_L1
0x4BBE838E,	//0x1784		VoC_blt16_rd(III_reorder_L1,REG6,0x44da)(lo)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
0xFF4244DA,	//0x1786		VoC_lw32z(REG45,DEFAULT)	|	VoC_blt16_rd(III_reorder_L1,REG6,0x44da)(hi)
		//0x1787		III_reorder_L2
0xF6496862,	//0x1788		VoC_movreg16(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x178a		VoC_endloop0
0xE1235DD2,	//0x178a		VoC_lw16i_short(REG3,0x12,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0xE122C5DB,	//0x178c		VoC_movreg16(REG2,ACC0_HI,DEFAULT)	|	VoC_mult16_rr(REG3,REG7,REG3,DEFAULT)
0xC0185895,	//0x178e		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x0B1FC018,	//0x1790		VoC_sub16_dr(REG7,0x4064,REG3)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xC1FF4064,	//0x1792		VoC_add16_rr(REG7,REG7,REG7,DEFAULT)	|	VoC_sub16_dr(REG7,0x4064,REG3)(hi)
0xF6EF600E,	//0x1794		VoC_movreg16(RL7_HI,REG7,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0x231A0A88,	//0x1796		VoC_lw16i(ACC0_LO,0x231a)
		//0x1798		III_reorder_L3
0x40644823,	//0x1798		VoC_blt16_rd(no_III_reorder_L4,REG3,0x4064)
0x17C62B00,	//0x179a		VoC_jump_lg(III_reorder_L4)
		//0x179c		no_III_reorder_L4
0x17A831C5,	//0x179c		VoC_bnez16_r(reorder_L3_1,REG5)
0xF6865895,	//0x179e		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x17A431C4,	//0x17a0		VoC_bnez16_r(III_reorder_Lw1,REG4)
0xE5C5F044,	//0x17a2		VoC_jump(reorder_L3_1)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x17a4		III_reorder_Lw1
0x441EF004,	//0x17a4		VoC_bne16_rd(reorder_L3_1,REG6,0x44ea)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF08444EA,	//0x17a6		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_bne16_rd(reorder_L3_1,REG6,0x44ea)(hi)
		//0x17a8		reorder_L3_1
0xDE184112,	//0x17a8		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG4,REG2,DEFAULT)
0x040A07AD,	//0x17aa		VoC_sub16_rd(REG5,REG5,0x40a)
0xD9937F16,	//0x17ac		VoC_lw32_p(REG67,REG2,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0x44F00824,	//0x17ae		VoC_mult16_rd(REG4,REG4,0x44f0)
0x44DA0835,	//0x17b0		VoC_mult16_rd(REG5,REG6,0x44da)
0xC12CFFC0,	//0x17b2		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0x412CE105,	//0x17b4		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,DEFAULT)
0xC13CE015,	//0x17b6		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0xC17F413C,	//0x17b8		VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x44F04427,	//0x17ba		VoC_bne16_rd(reorder_L3_2,REG7,0x44f0)
0xC1AE7007,	//0x17bc		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x17be		reorder_L3_2
0x5D93D9C5,	//0x17be		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0x5DA5F722,	//0x17c0		VoC_sw32_p(ACC1,REG4,DEFAULT)	|	VoC_movreg16(REG2,ACC0_HI,IN_PARALLEL)
0x2B00FF32,	//0x17c2		VoC_jump_lg(III_reorder_L3)(lo)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0xFFC01798,	//0x17c4		VoC_NAD	|	VoC_jump_lg(III_reorder_L3)(hi)
		//0x17c6		III_reorder_L4
0xFF386102,	//0x17c6		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_movreg16(REG2,ACC0_LO,DEFAULT)
0xF0087819,	//0x17c8		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x3,DEFAULT)
0x17D22C05,	//0x17ca		VoC_loop_i(0x1,0x2)
0x17D12E08,	//0x17cc		VoC_loop_r(0,REG1)
0xD9D2D9D3,	//0x17ce		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
0xDDC2DDC3,	//0x17d0		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x17d1		VoC_endloop0
		//0x17d2		VoC_endloop1
0xE580FFC0,	//0x17d2		VoC_return	|	VoC_NOP
		//0x17d4		CII_III_decode
0xE0075FE9,	//0x17d4		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x48031406,	//0x17d6		VoC_lw16_d(REG6,0x4803)
0x40000A83,	//0x17d8		VoC_lw16i(REG3,0x4000)
0x48062803,	//0x17da		VoC_and16_rd(REG3,0x4806)
0x17E03143,	//0x17dc		VoC_bngtz16_r(III_decode_sfreq,REG3)
0xFFC0FBFB,	//0x17de		VoC_NAD	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
		//0x17e0		III_decode_sfreq
0xFC3B7F1A,	//0x17e0		VoC_shru32_ri(REG67,0x7,IN_PARALLEL)	|	VoC_movreg32(REG45,REG67,DEFAULT)
0xFC7A7027,	//0x17e2		VoC_shru32_ri(REG45,0xf,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x000F1606,	//0x17e4		VoC_and16_ri(REG6,0xf)
0x00011604,	//0x17e6		VoC_and16_ri(REG4,0x1)
0x07B6C1A6,	//0x17e8		VoC_sub16_rd(REG6,REG6,0x44e8)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x314344E8,	//0x17ea		VoC_bngtz16_r(III_decode_sfreq_100,REG3)(lo)	|	VoC_sub16_rd(REG6,REG6,0x44e8)(hi)
0x073617F0,	//0x17ec		VoC_add16_rd(REG6,REG6,0x42cb)(lo)	|	VoC_bngtz16_r(III_decode_sfreq_100,REG3)(hi)
0xFFC042CB,	//0x17ee		VoC_NAD	|	VoC_add16_rd(REG6,REG6,0x42cb)(hi)
		//0x17f0		III_decode_sfreq_100
0x42CB0836,	//0x17f0		VoC_mult16_rd(REG6,REG6,0x42cb)
0x47960A83,	//0x17f2		VoC_lw16i(REG3,0x4796)
0x0A85C19B,	//0x17f4		VoC_lw16i(REG5,0x1000)(lo)	|	VoC_add16_rr(REG3,REG6,REG3,DEFAULT)
0x28051000,	//0x17f6		VoC_and16_rd(REG5,0x4806)(lo)	|	VoC_lw16i(REG5,0x1000)(hi)
0x31054806,	//0x17f8		VoC_bgtz16_r(III_decode_ngr,REG5)(lo)	|	VoC_and16_rd(REG5,0x4806)(hi)
0xF04717FC,	//0x17fa		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_bgtz16_r(III_decode_ngr,REG5)(hi)
		//0x17fc		III_decode_ngr
0x48281805,	//0x17fc		VoC_lw16i_set_inc(REG1,0x4828,0x1)
0x48221507,	//0x17fe		VoC_sw16_d(REG7,0x4822)
0xDFC1F007,	//0x1800		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1801		III_decode_ngr_loop_begin
0xE0075FC7,	//0x1802		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x1806DFC3,	//0x1804		VoC_lw16i_set_inc(REG2,0x6380,0x1)(lo)	|	VoC_push16(REG3,DEFAULT)
0x20046380,	//0x1806		VoC_lw16d_set_inc(REG0,0x4902,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x6380,0x1)(hi)
0x14864902,	//0x1808		VoC_lw32_d(RL6,0x4900)(lo)	|	VoC_lw16d_set_inc(REG0,0x4902,0x1)(hi)
0x141B4900,	//0x180a		VoC_lw16_d(BITCACHE,0x4903)(lo)	|	VoC_lw32_d(RL6,0x4900)(hi)
0x6C034903,	//0x180c		VoC_bez16_d(III_decode_nch_loop_begin,0x4823)(lo)	|	VoC_lw16_d(BITCACHE,0x4903)(hi)
0xF15C4823,	//0x180e		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_bez16_d(III_decode_nch_loop_begin,0x4823)(hi)
		//0x1810		III_decode_nch_loop_begin
0xDFC3DFC7,	//0x1810		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x44EE070D,	//0x1812		VoC_add16_rd(REG5,REG1,0x44ee)
0xD9ABD8B4,	//0x1814		VoC_lw32_p(REG67,REG5,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x44EA4487,	//0x1816		VoC_bne16_rd(III_decode_sfbwidth_100,REG7,0x44ea)
0x1606D8B4,	//0x1818		VoC_and16_ri(REG6,0x8)(lo)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x31460008,	//0x181a		VoC_bngtz16_r(III_decode_sfbwidth_100,REG6)(lo)	|	VoC_and16_ri(REG6,0x8)(hi)
0xD8B4181E,	//0x181c		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_bngtz16_r(III_decode_sfbwidth_100,REG6)(hi)
		//0x181e		III_decode_sfbwidth_100
0xDCA4DF83,	//0x181e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x10000A85,	//0x1820		VoC_lw16i(REG5,0x1000)
0x2805DF41,	//0x1822		VoC_and16_rd(REG5,0x4806)(lo)	|	VoC_push32(REG23,DEFAULT)
0xDFC14806,	//0x1824		VoC_push16(REG1,DEFAULT)	|	VoC_and16_rd(REG5,0x4806)(hi)
0xDFDBDFC0,	//0x1826		VoC_push16(BITCACHE,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x18343145,	//0x1828		VoC_bngtz16_r(III_decode_III_scalefactors,REG5)
0xD6477005,	//0x182a		VoC_lw16_sd(REG7,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x18303187,	//0x182c		VoC_bez16_r(III_decode_III_scalefactors_100,REG7)
0x48D80A85,	//0x182e		VoC_lw16i(REG5,0x48d8)
		//0x1830		III_decode_III_scalefactors_100
0x19CA2B80,	//0x1830		VoC_jal(CII_III_scalefactors_lsf)
0xFFC0E5D4,	//0x1832		VoC_NAD	|	VoC_jump(III_decode_III_scalefactors_end)
		//0x1834		III_decode_III_scalefactors
0x48281806,	//0x1834		VoC_lw16i_set_inc(REG2,0x4828,0x1)
0x3187D647,	//0x1836		VoC_bez16_r(III_decode_III_scalefactors_120,REG7)(lo)	|	VoC_lw16_sd(REG7,0x3,DEFAULT)
0x1806183B,	//0x1838		VoC_lw16i_set_inc(REG2,0x485e,0x1)(lo)	|	VoC_bez16_r(III_decode_III_scalefactors_120,REG7)(hi)
0xF00E485E,	//0x183a		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x485e,0x1)(hi)
		//0x183b		III_decode_III_scalefactors_120
0x48260A86,	//0x183c		VoC_lw16i(REG6,0x4826)
0xD66741BE,	//0x183e		VoC_lw16_sd(REG7,0x5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x18443187,	//0x1840		VoC_bez16_r(III_decode_III_scalefactors_110,REG7)
0xFFC0D86E,	//0x1842		VoC_NAD	|	VoC_lw16_p(RL7_LO,REG6,DEFAULT)
		//0x1844		III_decode_III_scalefactors_110
0x197E2B80,	//0x1844		VoC_jal(CII_III_scalefactors)
		//0x1846		III_decode_III_scalefactors_end
0x4903151B,	//0x1846		VoC_sw16_d(BITCACHE,0x4903)
0xDF85DF86,	//0x1848		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x3247C22F,	//0x184a		VoC_bnltz16_r(III_decode_III_scalefactors_part2_length,REG7)(lo)	|	VoC_sub16_rr(REG7,REG0,REG5,DEFAULT)
0x0B2D1850,	//0x184c		VoC_sub16_dr(REG5,0x4065,REG5)(lo)	|	VoC_bnltz16_r(III_decode_III_scalefactors_part2_length,REG7)(hi)
0xC1474065,	//0x184e		VoC_add16_rr(REG7,REG5,REG0,DEFAULT)	|	VoC_sub16_dr(REG5,0x4065,REG5)(hi)
		//0x1850		III_decode_III_scalefactors_part2_length
0x49030B36,	//0x1850		VoC_sub16_dr(REG6,0x4903,REG6)
0x43F3F8E7,	//0x1852		VoC_sub16_rr(REG3,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0xfffffffc,DEFAULT)
0x0A86D614,	//0x1854		VoC_lw16i(REG6,0xc9a)(lo)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x14050C9A,	//0x1856		VoC_lw16_d(REG5,0x6380)(lo)	|	VoC_lw16i(REG6,0xc9a)(hi)
0xD6226380,	//0x1858		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_d(REG5,0x6380)(hi)
0x18623182,	//0x185a		VoC_bez16_r(III_decode_III_huffdecode,REG2)
0x0C9A0A86,	//0x185c		VoC_lw16i(REG6,0xc9a)
0x40620736,	//0x185e		VoC_add16_rd(REG6,REG6,0x4062)
0x63811405,	//0x1860		VoC_lw16_d(REG5,0x6381)
		//0x1862		III_decode_III_huffdecode
0x1B7E2B80,	//0x1862		VoC_jal(CII_III_huffdecode)
0xF6E45F81,	//0x1864		VoC_movreg16(REG4,REG7,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x00360A87,	//0x1866		VoC_lw16i(REG7,0x36)
0x5F01C079,	//0x1868		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x073FDF87,	//0x186a		VoC_add16_rd(REG7,REG7,0x40a)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0x31C4040A,	//0x186c		VoC_bnez16_r(III_decode_L100,REG4)(lo)	|	VoC_add16_rd(REG7,REG7,0x40a)(hi)
0x4C2F1886,	//0x186e		VoC_bnlt16_rd(no_III_decode_nch_loop_begin,REG7,0x4820)(lo)	|	VoC_bnez16_r(III_decode_L100,REG4)(hi)
0x2B004820,	//0x1870		VoC_jump_lg(III_decode_nch_loop_begin)(lo)	|	VoC_bnlt16_rd(no_III_decode_nch_loop_begin,REG7,0x4820)(hi)
0xFFC01810,	//0x1872		VoC_NAD	|	VoC_jump_lg(III_decode_nch_loop_begin)(hi)
		//0x1874		no_III_decode_nch_loop_begin
0xF005721C,	//0x1874		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x10,DEFAULT)
0xD6317047,	//0x1876		VoC_lw16_sd(REG1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x47FF4527,	//0x1878		VoC_bne16_rd(III_decode_III_no_stereo,REG7,0x47ff)
0x48001407,	//0x187a		VoC_lw16_d(REG7,0x4800)
0x188C3147,	//0x187c		VoC_bngtz16_r(III_decode_III_no_stereo,REG7)
0x0C9A1804,	//0x187e		VoC_lw16i_set_inc(REG0,0xc9a,0x1)
0x63802007,	//0x1880		VoC_lw16d_set_inc(REG3,0x6380,0x1)
0x1F342B80,	//0x1882		VoC_jal(CII_III_stereo)
0x188C3184,	//0x1884		VoC_bez16_r(III_decode_III_no_stereo,REG4)
		//0x1886		III_decode_L100
0xDF87DF83,	//0x1886		VoC_pop16(REG7,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x2B00DF81,	//0x1888		VoC_jump_lg(III_decode_end)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xFFC0197A,	//0x188a		VoC_NAD	|	VoC_jump_lg(III_decode_end)(hi)
		//0x188c		III_decode_III_no_stereo
0xD6317007,	//0x188c		VoC_lw16_sd(REG1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0C9A180A,	//0x188e		VoC_lw16i_set_inc(REG2,0xc9a,0x2)
0x159A0A84,	//0x1890		VoC_lw16i(REG4,0x159a)
0x49080A85,	//0x1892		VoC_lw16i(REG5,0x4908)
		//0x1894		III_decode_nch_loop2_begin
0x0836D626,	//0x1894		VoC_mult16_rd(REG6,REG6,0x4062)(lo)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0xF0334062,	//0x1896		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_mult16_rd(REG6,REG6,0x4062)(hi)
0x070DC134,	//0x1898		VoC_add16_rd(REG5,REG1,0x44ee)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x5FC744EE,	//0x189a		VoC_push16(REG7,DEFAULT)	|	VoC_add16_rd(REG5,REG1,0x44ee)(hi)
0x73E7DF42,	//0x189c		VoC_lw16i_short(REG7,0x1f,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0x0710D9AA,	//0x189e		VoC_add16_rd(REG0,REG2,0x44da)(lo)	|	VoC_lw32_p(REG45,REG5,IN_PARALLEL)
0x5FC244DA,	//0x18a0		VoC_push16(REG2,DEFAULT)	|	VoC_add16_rd(REG0,REG2,0x44da)(hi)
0x459DDF42,	//0x18a2		VoC_bne16_rd(III_decode_nch_loop2_block_type,REG5,0x44ea)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0xDFC044EA,	//0x18a4		VoC_push16(REG0,DEFAULT)	|	VoC_bne16_rd(III_decode_nch_loop2_block_type,REG5,0x44ea)(hi)
0x5630DFC4,	//0x18a6		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x5646F627,	//0x18a8		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_movreg16(REG7,REG1,IN_PARALLEL)
0x2005F008,	//0x18aa		VoC_lw16d_set_inc(REG1,0x6380,0x1)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x31866380,	//0x18ac		VoC_bez16_r(III_reorder_ch0,REG6)(lo)	|	VoC_lw16d_set_inc(REG1,0x6380,0x1)(hi)
0x200518B2,	//0x18ae		VoC_lw16d_set_inc(REG1,0x6381,0x1)(lo)	|	VoC_bez16_r(III_reorder_ch0,REG6)(hi)
0xFFC06381,	//0x18b0		VoC_NAD	|	VoC_lw16d_set_inc(REG1,0x6381,0x1)(hi)
		//0x18b2		III_reorder_ch0
0x17782B80,	//0x18b2		VoC_jal(CII_III_reorder)
0xF0065F84,	//0x18b4		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xF0045F80,	//0x18b6		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x00081604,	//0x18b8		VoC_and16_ri(REG4,0x8)
0x18C03144,	//0x18ba		VoC_bngtz16_r(III_decode_nch_loop2_block_type_end,REG4)
0xFFC0F027,	//0x18bc		VoC_NAD	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x18be		III_decode_nch_loop2_block_type
0x21D22B80,	//0x18be		VoC_jal(CII_III_aliasreduce)
		//0x18c0		III_decode_nch_loop2_block_type_end
0xF0095611,	//0x18c0		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x00000ACC,	//0x18c2		VoC_lw16i(RL6_LO,0x8000)
0xDF46700D,	//0x18c4		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x01572B80,	//0x18c6		VoC_jal(vpp_AmjpAudioEqualizer)
0x5612DF06,	//0x18c8		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x1FBFF3FA,	//0x18ca		VoC_lw16i_set_inc(REG3,0x240,0xffffffff)(lo)	|	VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)
0x07120240,	//0x18cc		VoC_add16_rd(REG2,REG2,0x4062)(lo)	|	VoC_lw16i_set_inc(REG3,0x240,0xffffffff)(hi)
0xF2474062,	//0x18ce		VoC_lw16i_short(REG7,0x12,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x4062)(hi)
0xFFC0DE10,	//0x18d0		VoC_NAD	|	VoC_inc_p(REG2,DEFAULT)
0x18DC2C07,	//0x18d2		VoC_loop_i(0x1,0x3)
0x18DB2D80,	//0x18d4		VoC_loop_i(0x0,0xc0)
0x44DA3C83,	//0x18d6		VoC_bngt16_rd(III_decode_nch_loop2_sblimit,REG3,0x44da)
0x3344D9D4,	//0x18d8		VoC_bnez32_r(III_decode_nch_loop2_sblimit,ACC0)(lo)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xDE1818DE,	//0x18da		VoC_inc_p(REG3,DEFAULT)	|	VoC_bnez32_r(III_decode_nch_loop2_sblimit,ACC0)(hi)
		//0x18db		VoC_endloop0
		//0x18dc		VoC_endloop1
0xFFC0FFC0,	//0x18dc		VoC_NAD	|	VoC_NOP
		//0x18de		III_decode_nch_loop2_sblimit
0x40640B1E,	//0x18de		VoC_sub16_dr(REG6,0x4064,REG3)
0x11162B80,	//0x18e0		VoC_jal(CII_div_mode)
0x44EB0B2E,	//0x18e2		VoC_sub16_dr(REG6,0x44eb,REG5)
0x1506D90A,	//0x18e4		VoC_sw16_d(REG6,0x6382)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x60A66382,	//0x18e6		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_sw16_d(REG6,0x6382)(hi)
0x1604F6A7,	//0x18e8		VoC_and16_ri(REG4,0x8)(lo)	|	VoC_movreg16(REG7,REG5,IN_PARALLEL)
0x31440008,	//0x18ea		VoC_bngtz16_r(III_decode_nch_loop2_block_subbands_100,REG4)(lo)	|	VoC_and16_ri(REG4,0x8)(hi)
0xF00718EE,	//0x18ec		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bngtz16_r(III_decode_nch_loop2_block_subbands_100,REG4)(hi)
		//0x18ee		III_decode_nch_loop2_block_subbands_100
0x5610F005,	//0x18ee		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFFC0F008,	//0x18f0		VoC_NAD	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
		//0x18f2		III_decode_nch_loop2_blocks_begin
0x44EA4825,	//0x18f2		VoC_blt16_rd(III_decode_nch_loop2_blocks_100,REG5,0x44ea)
0xFFC0E0C7,	//0x18f4		VoC_NAD	|	VoC_movreg16(REG7,REG6,DEFAULT)
		//0x18f6		III_decode_nch_loop2_blocks_100
0x63841809,	//0x18f6		VoC_lw16i_set_inc(REG1,0x6384,0x2)
0x5FC5DFC0,	//0x18f8		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x402FDF43,	//0x18fa		VoC_be16_rd(III_decode_nch_loop2_short_blocks,REG7,0x44ea)(lo)	|	VoC_push32(REG67,IN_PARALLEL)
0x2B8044EA,	//0x18fc		VoC_jal(CII_III_imdct_l)(lo)	|	VoC_be16_rd(III_decode_nch_loop2_short_blocks,REG7,0x44ea)(hi)
0xE5C32108,	//0x18fe		VoC_jump(III_decode_nch_loop2_blocks_end)	|	VoC_jal(CII_III_imdct_l)(hi)
		//0x1900		III_decode_nch_loop2_short_blocks
0x21662B80,	//0x1900		VoC_jal(CII_III_imdct_s)
		//0x1902		III_decode_nch_loop2_blocks_end
0x6384180A,	//0x1902		VoC_lw16i_set_inc(REG2,0x6384,0x2)
0x63A8180B,	//0x1904		VoC_lw16i_set_inc(REG3,0x63a8,0x2)
0xD9185617,	//0x1906		VoC_lw32_sd(REG01,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x44DA083E,	//0x1908		VoC_mult16_rd(REG6,REG7,0x44da)
0xC0387051,	//0x190a		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF1004071,	//0x190c		VoC_lw16i_short(INC0,0x40,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x6A45C038,	//0x190e		VoC_loop_i_short(0x12,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD9DDD9D4,	//0x1910		VoC_lw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
0xD9D4910C,	//0x1912		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add32_rp(ACC0,ACC0,REG1,DEFAULT)
		//0x1914		VoC_endloop0
0xDDCD5DC4,	//0x1914		VoC_sw32inc_p(ACC1,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDF035F85,	//0x1916		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG5,DEFAULT)
0x040A072D,	//0x1918		VoC_add16_rd(REG5,REG5,0x40a)
0xF0085F80,	//0x191a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x44DA0700,	//0x191c		VoC_add16_rd(REG0,REG0,0x44da)
0x63824C25,	//0x191e		VoC_bnlt16_rd(no_III_decode_nch_loop2_blocks_begin,REG5,0x6382)
0x18F22B00,	//0x1920		VoC_jump_lg(III_decode_nch_loop2_blocks_begin)
		//0x1922		no_III_decode_nch_loop2_blocks_begin
0x60E1D913,	//0x1922		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x1407F009,	//0x1924		VoC_lw16_d(REG7,0x6382)(lo)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x083B6382,	//0x1926		VoC_mult16_rd(REG3,REG7,0x44da)(lo)	|	VoC_lw16_d(REG7,0x6382)(hi)
0x0B3D44DA,	//0x1928		VoC_sub16_dr(REG5,0x44eb,REG7)(lo)	|	VoC_mult16_rd(REG3,REG7,0x44da)(hi)
0x405944EB,	//0x192a		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_sub16_dr(REG5,0x44eb,REG7)(hi)
0x41BEFF44,	//0x192c		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xC1BFF100,	//0x192e		VoC_add16_rr(REG7,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(INC0,0x40,IN_PARALLEL)
0x193C3185,	//0x1930		VoC_bez16_r(III_decode_nch_loop2_overlap_z,REG5)
0x193A2E29,	//0x1932		VoC_loop_r(1,REG5)
0xD98D60E0,	//0x1934		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0xDDCCEA42,	//0x1936		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x12,DEFAULT)
		//0x1938		VoC_endloop0
0xD98D5DC5,	//0x1938		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
		//0x193a		VoC_endloop1
0x44EA073F,	//0x193a		VoC_add16_rd(REG7,REG7,0x44ea)
		//0x193c		III_decode_nch_loop2_overlap_z
0x01000A8D,	//0x193c		VoC_lw16i(RL6_HI,0x100)
0xF7AC5913,	//0x193e		VoC_movreg16(RL6_LO,RL6_HI,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0xE04E708F,	//0x1940		VoC_lw16i_short(RL7_LO,0x4,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x4,DEFAULT)
0x00C20A81,	//0x1942		VoC_lw16i(REG1,0xc2)
0x0A81C18F,	//0x1944		VoC_lw16i(REG1,0x42)(lo)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0xC18E0042,	//0x1946		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x42)(hi)
0xFF417F18,	//0x1948		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_movreg32(REG01,REG67,DEFAULT)
0x19562C21,	//0x194a		VoC_loop_i(0x1,0x10)
0xC9DB1444,	//0x194c		VoC_add32_rr(REG67,RL7,REG67,IN_PARALLEL)	|	VoC_sub32_rp(ACC0,REG23,REG0,DEFAULT)
0x944D6886,	//0x194e		VoC_sub32_rp(ACC1,REG23,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC8305D84,	//0x1950		VoC_add32_rr(REG01,REG01,RL6,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x9444DD8D,	//0x1952		VoC_sub32_rp(ACC0,REG23,REG0,DEFAULT)	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
		//0x1954		VoC_endloop0
0xFF18944D,	//0x1954		VoC_movreg32(REG01,REG67,DEFAULT)	|	VoC_sub32_rp(ACC1,REG23,REG1,DEFAULT)
		//0x1956		VoC_endloop1
0x5F02DD84,	//0x1956		VoC_pop32(REG45,DEFAULT)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x5F02DF82,	//0x1958		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x073FDF87,	//0x195a		VoC_add16_rd(REG7,REG7,0x40a)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0x1806040A,	//0x195c		VoC_lw16i_set_inc(REG2,0xc9a,0x1)(lo)	|	VoC_add16_rd(REG7,REG7,0x40a)(hi)
0x07120C9A,	//0x195e		VoC_add16_rd(REG2,REG2,0x4062)(lo)	|	VoC_lw16i_set_inc(REG2,0xc9a,0x1)(hi)
0xD6314062,	//0x1960		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x4062)(hi)
0x00360A84,	//0x1962		VoC_lw16i(REG4,0x36)
0x0A84C061,	//0x1964		VoC_lw16i(REG4,0x1e9a)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x0A851E9A,	//0x1966		VoC_lw16i(REG5,0x4d88)(lo)	|	VoC_lw16i(REG4,0x1e9a)(hi)
0x4C274D88,	//0x1968		VoC_bnlt16_rd(no_III_decode_nch_loop2_begin,REG7,0x4820)(lo)	|	VoC_lw16i(REG5,0x4d88)(hi)
0x2B004820,	//0x196a		VoC_jump_lg(III_decode_nch_loop2_begin)(lo)	|	VoC_bnlt16_rd(no_III_decode_nch_loop2_begin,REG7,0x4820)(hi)
0xDF831894,	//0x196c		VoC_pop16(REG3,DEFAULT)	|	VoC_jump_lg(III_decode_nch_loop2_begin)(hi)
		//0x196d		no_III_decode_nch_loop2_begin
0xF0075F87,	//0x196e		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x040A073F,	//0x1970		VoC_add16_rd(REG7,REG7,0x40a)
0x1805DF81,	//0x1972		VoC_lw16i_set_inc(REG1,0x4894,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x4C274894,	//0x1974		VoC_bnlt16_rd(no_III_decode_ngr_loop_begin,REG7,0x4822)(lo)	|	VoC_lw16i_set_inc(REG1,0x4894,0x1)(hi)
0x2B004822,	//0x1976		VoC_jump_lg(III_decode_ngr_loop_begin)(lo)	|	VoC_bnlt16_rd(no_III_decode_ngr_loop_begin,REG7,0x4822)(hi)
0xF0041801,	//0x1978		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jump_lg(III_decode_ngr_loop_begin)(hi)
		//0x1979		no_III_decode_ngr_loop_begin
		//0x197a		III_decode_end
0xFFC0DFA9,	//0x197a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x197c		VoC_NAD	|	VoC_return
		//0x197e		CII_III_scalefactors
0x42CB070C,	//0x197e		VoC_add16_rd(REG4,REG1,0x42cb)
0x429C180B,	//0x1980		VoC_lw16i_set_inc(REG3,0x429c,0x2)
0xF8FCD844,	//0x1982		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x070CC0E3,	//0x1984		VoC_add16_rd(REG4,REG1,0x44ee)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xD99B44EE,	//0x1986		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_add16_rd(REG4,REG1,0x44ee)(hi)
0xFF1D59A2,	//0x1988		VoC_movreg32(ACC1,REG67,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0x44D00709,	//0x198a		VoC_add16_rd(REG1,REG1,0x44d0)
0x44EA4585,	//0x198c		VoC_bne16_rd(III_scalefactors_block_type,REG5,0x44ea)
0x1604F223,	//0x198e		VoC_and16_ri(REG4,0x8)(lo)	|	VoC_lw16i_short(REG3,0x11,DEFAULT)
0x31C40008,	//0x1990		VoC_bnez16_r(III_scalefactors_100,REG4)(lo)	|	VoC_and16_ri(REG4,0x8)(hi)
0xF2431994,	//0x1992		VoC_lw16i_short(REG3,0x12,DEFAULT)	|	VoC_bnez16_r(III_scalefactors_100,REG4)(hi)
		//0x1994		III_scalefactors_100
0xE240FFC0,	//0x1994		VoC_lbinc_p(REG0)	|	VoC_NOP
0xE330E6C3,	//0x1996		VoC_rbinc_r(REG4,REG6,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xDC94E240,	//0x1998		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x1999		VoC_endloop0
0x6A44E240,	//0x199a		VoC_loop_i_short(0x12,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE338E003,	//0x199c		VoC_rbinc_r(REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xDC94E240,	//0x199e		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x199f		VoC_endloop0
0xDC93E861,	//0x19a0		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x19a1		VoC_endloop0
0x19C82B00,	//0x19a2		VoC_jump_lg(III_scalefactors_block_type_end)
		//0x19a4		III_scalefactors_block_type
0x44D00712,	//0x19a4		VoC_add16_rd(REG2,REG2,0x44d0)
0xF00A6023,	//0x19a6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x6A83F053,	//0x19a8		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9D4D9D4,	//0x19aa		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x19ac		VoC_endloop0
0xF033DDDC,	//0x19ac		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xE0667104,	//0x19ae		VoC_lw16i_short(REG6,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x00041FBE,	//0x19b0		VoC_lw16i_set_inc(REG2,0x4,0xffffffff)
0x19C52C09,	//0x19b2		VoC_loop_i(0x1,0x4)
0xF74761C5,	//0x19b4		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0xF80C6425,	//0x19b6		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0x44EA3822,	//0x19b8		VoC_bgt16_rd(III_scalefactors_block_type_else_10,REG2,0x44ea)
0xFFC0E167,	//0x19ba		VoC_NAD	|	VoC_movreg16(REG7,ACC1_HI,DEFAULT)
		//0x19bc		III_scalefactors_block_type_else_10
0x19C43105,	//0x19bc		VoC_bgtz16_r(III_scalefactors_block_type_else,REG5)
0x6784E240,	//0x19be		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE339F623,	//0x19c0		VoC_rbinc_r(REG5,REG7,DEFAULT)	|	VoC_movreg16(REG3,REG1,IN_PARALLEL)
0xDCB5E240,	//0x19c2		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x19c3		VoC_endloop0
		//0x19c4		III_scalefactors_block_type_else
0x70A6C071,	//0x19c4		VoC_lw16i_short(REG6,0x5,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
		//0x19c5		VoC_endloop1
0xDC12DE10,	//0x19c6		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
		//0x19c8		III_scalefactors_block_type_end
0xFFC0E580,	//0x19c8		VoC_NAD	|	VoC_return
		//0x19ca		CII_III_scalefactors_lsf
0xF0075FE9,	//0x19ca		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x42CB070B,	//0x19cc		VoC_add16_rd(REG3,REG1,0x42cb)
0x44D00709,	//0x19ce		VoC_add16_rd(REG1,REG1,0x44d0)
0xF00A6022,	//0x19d0		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xEA81FF44,	//0x19d2		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x19d4		VoC_endloop0
0x1806DDD4,	//0x19d4		VoC_lw16i_set_inc(REG2,0x6382,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD8B46382,	//0x19d6		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6382,0x1)(hi)
0xF66E599B,	//0x19d8		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0x1606F103,	//0x19da		VoC_and16_ri(REG6,0x8)(lo)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x31060008,	//0x19dc		VoC_bgtz16_r(III_scalefactors_lsf_100,REG6)(lo)	|	VoC_and16_ri(REG6,0x8)(hi)
0xF08319E0,	//0x19de		VoC_lw16i_short(REG3,0x4,DEFAULT)	|	VoC_bgtz16_r(III_scalefactors_lsf_100,REG6)(hi)
		//0x19e0		III_scalefactors_lsf_100
0x44EA401F,	//0x19e0		VoC_be16_rd(III_scalefactors_lsf_200,REG7,0x44ea)
0xF026F003,	//0x19e2		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x19e3		III_scalefactors_lsf_200
0x48002806,	//0x19e4		VoC_and16_rd(REG6,0x4800)
0x19EA3146,	//0x19e6		VoC_bngtz16_r(III_scalefactors_lsf_10000,REG6)
0x1A403105,	//0x19e8		VoC_bgtz16_r(III_scalefactors_lsf_half,REG5)
		//0x19ea		III_scalefactors_lsf_10000
0x01900A86,	//0x19ea		VoC_lw16i(REG6,0x190)
0x1A0434B4,	//0x19ec		VoC_bngt16_rr(III_scalefactors_lsf_1000,REG6,REG4)
0x7926E086,	//0x19ee		VoC_shru16_ri(REG6,0x4,DEFAULT)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0xFFC0E057,	//0x19f0		VoC_NAD	|	VoC_lw16i_short(REG7,0x5,IN_PARALLEL)
0x11162B80,	//0x19f2		VoC_jal(CII_div_mode)
0xF6855CA5,	//0x19f4		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xF6865CA6,	//0x19f6		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x000F1605,	//0x19f8		VoC_and16_ri(REG5,0xf)
0x1606F815,	//0x19fa		VoC_and16_ri(REG6,0x3)(lo)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0x0A870003,	//0x19fc		VoC_lw16i(REG7,0x42bc)(lo)	|	VoC_and16_ri(REG6,0x3)(hi)
0x5CA542BC,	//0x19fe		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16i(REG7,0x42bc)(hi)
0xDCA6C1DB,	//0x1a00		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)
0x1A302B00,	//0x1a02		VoC_jump_lg(III_scalefactors_lsf_1500)
		//0x1a04		III_scalefactors_lsf_1000
0x01F40A86,	//0x1a04		VoC_lw16i(REG6,0x1f4)
0x1A1C34B4,	//0x1a06		VoC_bngt16_rr(III_scalefactors_lsf_1100,REG6,REG4)
0x01900A86,	//0x1a08		VoC_lw16i(REG6,0x190)
0xE086C334,	//0x1a0a		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0xE0577816,	//0x1a0c		VoC_lw16i_short(REG7,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x11162B80,	//0x1a0e		VoC_jal(CII_div_mode)
0x00031604,	//0x1a10		VoC_and16_ri(REG4,0x3)
0xE0055CA5,	//0x1a12		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x0A87DCA6,	//0x1a14		VoC_lw16i(REG7,0x42c8)(lo)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x5CA442C8,	//0x1a16		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16i(REG7,0x42c8)(hi)
0xDCA5C1DB,	//0x1a18		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)
0xFFC0E5D6,	//0x1a1a		VoC_NAD	|	VoC_jump(III_scalefactors_lsf_1500)
		//0x1a1c		III_scalefactors_lsf_1100
0x01F40A87,	//0x1a1c		VoC_lw16i(REG7,0x1f4)
0x7067C33E,	//0x1a1e		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG7,DEFAULT)
0xFFC0E004,	//0x1a20		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x11162B80,	//0x1a22		VoC_jal(CII_div_mode)
0xF7C55CA5,	//0x1a24		VoC_movreg16(REG5,RL7_LO,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xD856DCA6,	//0x1a26		VoC_lw16_p(REG6,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x00041686,	//0x1a28		VoC_or16_ri(REG6,0x4)
0x42D40A87,	//0x1a2a		VoC_lw16i(REG7,0x42d4)
0xC1DB5CA4,	//0x1a2c		VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xDC56DCA4,	//0x1a2e		VoC_sw16_p(REG6,REG5,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x1a30		III_scalefactors_lsf_1500
0x63821806,	//0x1a30		VoC_lw16i_set_inc(REG2,0x6382,0x1)
0x2C09E240,	//0x1a32		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lbinc_p(REG0)
0xD8B71A3D,	//0x1a34		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0x1A3D3187,	//0x1a36		VoC_bez16_r(III_scalefactors_lsf_1510,REG7)
0xD8A667C4,	//0x1a38		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xE240E331,	//0x1a3a		VoC_lbinc_p(REG0)	|	VoC_rbinc_r(REG5,REG6,DEFAULT)
		//0x1a3c		VoC_endloop0
0xFFC0DC95,	//0x1a3c		VoC_NOP	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x1a3d		III_scalefactors_lsf_1510
		//0x1a3d		VoC_endloop1
0x1AA22B00,	//0x1a3e		VoC_jump_lg(III_scalefactors_lsf_end)
		//0x1a40		III_scalefactors_lsf_half
0xF6AF780C,	//0x1a40		VoC_movreg16(RL7_HI,REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x00B40A86,	//0x1a42		VoC_lw16i(REG6,0xb4)
0x1A5834B4,	//0x1a44		VoC_bngt16_rr(III_scalefactors_lsf_1600,REG6,REG4)
0x7004E086,	//0x1a46		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0xFFC0E247,	//0x1a48		VoC_NAD	|	VoC_lw16i_short(REG7,0x24,IN_PARALLEL)
0x11162B80,	//0x1a4a		VoC_jal(CII_div_mode)
0xE0675CA5,	//0x1a4c		VoC_lw16i_short(REG7,0x6,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x11162B80,	//0x1a4e		VoC_jal(CII_div_mode)
0x42E00A87,	//0x1a50		VoC_lw16i(REG7,0x42e0)
0xC1DB5CA5,	//0x1a52		VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xDCA4DCA6,	//0x1a54		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x1A802B00,	//0x1a56		VoC_jump_lg(III_scalefactors_lsf_2000)
		//0x1a58		III_scalefactors_lsf_1600
0x00F40A86,	//0x1a58		VoC_lw16i(REG6,0xf4)
0x1A7234B4,	//0x1a5a		VoC_bngt16_rr(III_scalefactors_lsf_1700,REG6,REG4)
0x00B40A86,	//0x1a5c		VoC_lw16i(REG6,0xb4)
0x6085C334,	//0x1a5e		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0x1605F686,	//0x1a60		VoC_and16_ri(REG5,0xff)(lo)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x160600FF,	//0x1a62		VoC_and16_ri(REG6,0xf)(lo)	|	VoC_and16_ri(REG5,0xff)(hi)
0x1604000F,	//0x1a64		VoC_and16_ri(REG4,0x3)(lo)	|	VoC_and16_ri(REG6,0xf)(hi)
0x79250003,	//0x1a66		VoC_shru16_ri(REG5,0x4,DEFAULT)	|	VoC_and16_ri(REG4,0x3)(hi)
0x0A87F916,	//0x1a68		VoC_lw16i(REG7,0x42ec)(lo)	|	VoC_shru16_ri(REG6,0x2,IN_PARALLEL)
0x5CA542EC,	//0x1a6a		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16i(REG7,0x42ec)(hi)
0x5CA6E005,	//0x1a6c		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xDCA4C1DB,	//0x1a6e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)
0xE5CFDCA5,	//0x1a70		VoC_jump(III_scalefactors_lsf_2000)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x1a72		III_scalefactors_lsf_1700
0x00F40A86,	//0x1a72		VoC_lw16i(REG6,0xf4)
0x7067C336,	//0x1a74		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)
0x2B80E004,	//0x1a76		VoC_jal(CII_div_mode)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xDCA51116,	//0x1a78		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_jal(CII_div_mode)(hi)
0x42F80A87,	//0x1a7a		VoC_lw16i(REG7,0x42f8)
0xC1DB5CA6,	//0x1a7c		VoC_add16_rr(REG3,REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xDCA4DCA4,	//0x1a7e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x1a80		III_scalefactors_lsf_2000
0xF00A61E2,	//0x1a80		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xE961FF44,	//0x1a82		VoC_loop_i_short(0xb,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x1a84		VoC_endloop0
0x1806DDD4,	//0x1a84		VoC_lw16i_set_inc(REG2,0x6382,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE2406382,	//0x1a86		VoC_lbinc_p(REG0)	|	VoC_lw16i_set_inc(REG2,0x6382,0x1)(hi)
0xFFC0F024,	//0x1a88		VoC_NAD	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x1AA02C09,	//0x1a8a		VoC_loop_i(0x1,0x4)
0xD8A77026,	//0x1a8c		VoC_lw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x42D60B3D,	//0x1a8e		VoC_sub16_dr(REG5,0x42d6,REG7)
0xD8B57E2E,	//0x1a90		VoC_lw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0x040A07B6,	//0x1a92		VoC_sub16_rd(REG6,REG6,0x40a)
0xF7E3606E,	//0x1a94		VoC_movreg16(REG3,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG3,DEFAULT)
0x1AA03185,	//0x1a96		VoC_bez16_r(III_scalefactors_lsf_2046,REG5)
0xE339E747,	//0x1a98		VoC_rbinc_r(REG5,REG7,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDC95E240,	//0x1a9a		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lbinc_p(REG0)
0x1A9F35AE,	//0x1a9c		VoC_bne16_rr(III_scalefactors_lsf_2050,REG5,REG6)
0xDE18DC34,	//0x1a9e		VoC_inc_p(REG3,DEFAULT)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
		//0x1a9f		III_scalefactors_lsf_2050
		//0x1a9f		VoC_endloop0
		//0x1aa0		III_scalefactors_lsf_2046
		//0x1aa0		VoC_endloop1
0xF7C3606F,	//0x1aa0		VoC_movreg16(REG3,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG3,DEFAULT)
		//0x1aa2		III_scalefactors_lsf_end
0xFFC0DFA9,	//0x1aa2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1aa4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1aa5		CII_huff_sub1
0xFF44F005,	//0x1aa6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1AAC31C2,	//0x1aa8		VoC_bnez16_r(huff_sub_L1,REG2)
0x1AFA2B00,	//0x1aaa		VoC_jump_lg(huff_sub_Lend)
		//0x1aac		huff_sub_L1
0x42DC4022,	//0x1aac		VoC_be16_rd(no_huff_sub_L2,REG2,0x42dc)
0x1AD32B00,	//0x1aae		VoC_jump_lg(huff_sub_L2)
		//0x1ab0		no_huff_sub_L2
0x63A5073F,	//0x1ab0		VoC_add16_rd(REG7,REG7,0x63a5)
0xD9175674,	//0x1ab2		VoC_lw32_sd(RL7,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0x1AC234BC,	//0x1ab4		VoC_bngt16_rr(huff_sub_L3,REG7,REG4)
0x6282E240,	//0x1ab6		VoC_rbinc_i(REG6,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0x56C3E101,	//0x1ab8		VoC_lw16_sd(REG3,0xb,DEFAULT)	|	VoC_lw16i_short(REG1,0x10,IN_PARALLEL)
0x7007FD87,	//0x1aba		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)
0x651FC2CB,	//0x1abc		VoC_or32_rr(RL7,REG67,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG1,IN_PARALLEL)
0xDAC3C10C,	//0x1abe		VoC_sw16_sd(REG3,0xb,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)
0xFFC0DD17,	//0x1ac0		VoC_NAD	|	VoC_sw32_sd(RL7,0x1,DEFAULT)
		//0x1ac2		huff_sub_L3
0x040A1483,	//0x1ac2		VoC_lw32_d(REG67,0x40a)
0x63A51403,	//0x1ac4		VoC_lw16_d(REG3,0x63a5)
0xC31C4359,	//0x1ac6		VoC_sub16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG5,REG3,DEFAULT)
0xFEE77E8B,	//0x1ac8		VoC_shru32_rr(RL7,REG4,IN_PARALLEL)	|	VoC_shr32_rr(REG67,REG1,DEFAULT)
0x040A099B,	//0x1aca		VoC_sub32_rd(REG67,REG67,0x40a)
0x40B4E4FB,	//0x1acc		VoC_add16_rr(REG4,REG2,REG6,DEFAULT)	|	VoC_and32_rr(REG67,RL7,DEFAULT)
0xD646DA74,	//0x1ace		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_sw16_sd(REG4,0x6,IN_PARALLEL)
0x1E0D2B80,	//0x1ad0		VoC_jal(CII_III_requantize)
0xE044E5DA,	//0x1ad2		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_jump(huff_sub_L4)
		//0x1ad3		huff_sub_L2
0x63840A81,	//0x1ad4		VoC_lw16i(REG1,0x6384)
0x63A71407,	//0x1ad6		VoC_lw16_d(REG7,0x63a7)
0x4051C051,	//0x1ad8		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x4352E016,	//0x1ada		VoC_sub16_rr(REG2,REG5,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0xFE56F6E3,	//0x1adc		VoC_shru16_rr(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0x31C3E433,	//0x1ade		VoC_bnez16_r(huff_sub_L5,REG3)(lo)	|	VoC_and16_rr(REG3,REG6,DEFAULT)
0xE4771AEB,	//0x1ae0		VoC_or16_rr(REG7,REG6,DEFAULT)	|	VoC_bnez16_r(huff_sub_L5,REG3)(hi)
0x1507D646,	//0x1ae2		VoC_sw16_d(REG7,0x63a7)(lo)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0xDFC163A7,	//0x1ae4		VoC_push16(REG1,DEFAULT)	|	VoC_sw16_d(REG7,0x63a7)(hi)
0x1E0D2B80,	//0x1ae6		VoC_jal(CII_III_requantize)
0xFFC0DF81,	//0x1ae8		VoC_NOP	|	VoC_pop16(REG1,DEFAULT)
0xD98CDD8C,	//0x1aea		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x1aeb		huff_sub_L5
		//0x1aec		huff_sub_L4
0xD6727024,	//0x1aec		VoC_lw16_sd(REG2,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC2A65917,	//0x1aee		VoC_sub16_rr(REG6,REG2,REG4,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x1,DEFAULT)
0xC3137005,	//0x1af0		VoC_sub16_rr(REG3,REG4,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFEDA5A76,	//0x1af2		VoC_shru32_rr(REG45,REG3,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x6,DEFAULT)
0x3307E4D7,	//0x1af4		VoC_bez32_r(huff_sub_Lend,RL7)(lo)	|	VoC_and32_rr(RL7,REG45,DEFAULT)
0x0BA41AFA,	//0x1af6		VoC_sub32_dr(ACC0,0x42d6,ACC0)(lo)	|	VoC_bez32_r(huff_sub_Lend,RL7)(hi)
0xFFC042D6,	//0x1af8		VoC_NAD	|	VoC_sub32_dr(ACC0,0x42d6,ACC0)(hi)
		//0x1afa		huff_sub_Lend
0xF0095621,	//0x1afa		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xDDCCDFA9,	//0x1afc		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE0175909,	//0x1afe		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xF6625A11,	//0x1b00		VoC_movreg16(REG2,REG3,IN_PARALLEL)	|	VoC_sw16_sd(REG1,0x0,DEFAULT)
0xDFE9E580,	//0x1b02		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1b03		CII_huff_sub2
0xFF447005,	//0x1b04		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1B2E3182,	//0x1b06		VoC_bez16_r(huff_sub2_Lend,REG2)
0x0A81E044,	//0x1b08		VoC_lw16i(REG1,0x6384)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x14076384,	//0x1b0a		VoC_lw16_d(REG7,0x63a7)(lo)	|	VoC_lw16i(REG1,0x6384)(hi)
0xC05163A7,	//0x1b0c		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16_d(REG7,0x63a7)(hi)
0xE0164051,	//0x1b0e		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0xF6E34352,	//0x1b10		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG5,REG2,DEFAULT)
0xE433FE56,	//0x1b12		VoC_and16_rr(REG3,REG6,DEFAULT)	|	VoC_shru16_rr(REG6,REG2,DEFAULT)
0x1B2031C3,	//0x1b14		VoC_bnez16_r(huff_sub2_L1,REG3)
0xD646E477,	//0x1b16		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0x63A71507,	//0x1b18		VoC_sw16_d(REG7,0x63a7)
0x2B80DFC1,	//0x1b1a		VoC_jal(CII_III_requantize)(lo)	|	VoC_push16(REG1,DEFAULT)
0xDF811E0D,	//0x1b1c		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_III_requantize)(hi)
0xDD8CFFC0,	//0x1b1e		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
		//0x1b20		huff_sub2_L1
0x7024D98C,	//0x1b20		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0x5917D672,	//0x1b22		VoC_lw32_sd(RL7,0x1,DEFAULT)	|	VoC_lw16_sd(REG2,0x6,IN_PARALLEL)
0x4313E005,	//0x1b24		VoC_sub16_rr(REG3,REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xFE9AC2A2,	//0x1b26		VoC_shr32_rr(REG45,REG3,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xDA7264D7,	//0x1b28		VoC_sw16_sd(REG2,0x6,IN_PARALLEL)	|	VoC_and32_rr(RL7,REG45,DEFAULT)
0x1B2E3307,	//0x1b2a		VoC_bez32_r(huff_sub2_Lend,RL7)
0x42D60BA4,	//0x1b2c		VoC_sub32_dr(ACC0,0x42d6,ACC0)
		//0x1b2e		huff_sub2_Lend
0xF0095621,	//0x1b2e		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xDDCCDFA9,	//0x1b30		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x5A11D909,	//0x1b32		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xE580F662,	//0x1b34		VoC_return	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
		//0x1b36		CII_huff_sub3
0xD621DFE9,	//0x1b36		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x63824581,	//0x1b38		VoC_bne16_rd(huff_sub3_L1,REG1,0x6382)
0x1406D6B2,	//0x1b3a		VoC_lw16_d(REG6,0x6382)(lo)	|	VoC_lw16_sd(REG2,0xa,DEFAULT)
0x81966382,	//0x1b3c		VoC_add16_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16_d(REG6,0x6382)(hi)
0xD6538396,	//0x1b3e		VoC_lw16_sd(REG3,0x4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x63821506,	//0x1b40		VoC_sw16_d(REG6,0x6382)
0xDAB2D8B5,	//0x1b42		VoC_sw16_sd(REG2,0xa,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xDA53D646,	//0x1b44		VoC_sw16_sd(REG3,0x4,DEFAULT)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0x1B50352E,	//0x1b46		VoC_be16_rr(huff_sub3_L1,REG5,REG6)
0xDFC4DA45,	//0x1b48		VoC_push16(REG4,DEFAULT)	|	VoC_sw16_sd(REG5,0x3,DEFAULT)
0xF6A67024,	//0x1b4a		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x1E0D2B80,	//0x1b4c		VoC_jal(CII_III_requantize)
0xFFC0DF84,	//0x1b4e		VoC_NAD	|	VoC_pop16(REG4,DEFAULT)
		//0x1b50		huff_sub3_L1
0xFF435911,	//0x1b50		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xE0055621,	//0x1b52		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x1B643183,	//0x1b54		VoC_bez16_r(huff_sub3_L2,REG3)
0x1485D91F,	//0x1b56		VoC_lw32_d(ACC1,0x40a)(lo)	|	VoC_lw32_sd(RL7,0x2,DEFAULT)
0x07A4040A,	//0x1b58		VoC_sub16_rd(REG4,REG4,0x40a)(lo)	|	VoC_lw32_d(ACC1,0x40a)(hi)
0xC363040A,	//0x1b5a		VoC_sub16_rr(REG3,REG5,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x40a)(hi)
0x64FDFE9D,	//0x1b5c		VoC_and32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0x3305FF23,	//0x1b5e		VoC_bez32_r(huff_sub3_L2,ACC1)(lo)	|	VoC_movreg32(REG67,ACC0,IN_PARALLEL)
0x0B9B1B64,	//0x1b60		VoC_sub32_dr(REG67,0x42d6,REG67)(lo)	|	VoC_bez32_r(huff_sub3_L2,ACC1)(hi)
0xFFC042D6,	//0x1b62		VoC_NAD	|	VoC_sub32_dr(REG67,0x42d6,REG67)(hi)
		//0x1b64		huff_sub3_L2
0xE0057051,	//0x1b64		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x040A1485,	//0x1b66		VoC_lw32_d(ACC1,0x40a)
0xFF435DCB,	//0x1b68		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x1B783182,	//0x1b6a		VoC_bez16_r(huff_sub3_L3,REG2)
0x040A07A4,	//0x1b6c		VoC_sub16_rd(REG4,REG4,0x40a)
0x7E9DC363,	//0x1b6e		VoC_shr32_rr(ACC1,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG5,REG4,DEFAULT)
0x64FDD91F,	//0x1b70		VoC_and32_rr(ACC1,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x2,IN_PARALLEL)
0xFF23F009,	//0x1b72		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x1B783305,	//0x1b74		VoC_bez32_r(huff_sub3_L3,ACC1)
0x42D60B9B,	//0x1b76		VoC_sub32_dr(REG67,0x42d6,REG67)
		//0x1b78		huff_sub3_L3
0xDDCBD909,	//0x1b78		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xDD115FA9,	//0x1b7a		VoC_sw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE580DA11,	//0x1b7c		VoC_return	|	VoC_sw16_sd(REG1,0x0,DEFAULT)
		//0x1b7e		CII_III_huffdecode
0xB919DFE9,	//0x1b7e		VoC_sub16_pr(REG1,REG4,REG3,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x02360A87,	//0x1b80		VoC_lw16i(REG7,0x236)
0x1B863241,	//0x1b82		VoC_bnltz16_r(huffdec_L1,REG1)
0x1D712B00,	//0x1b84		VoC_jump_lg(huffdec_Lend)
		//0x1b86		huffdec_L1
0xDFC5DFC1,	//0x1b86		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xF4845FC4,	//0x1b88		VoC_lw16i_short(WRAP0,0x10,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0x5FC0DFC6,	//0x1b8a		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xFFC0F007,	//0x1b8c		VoC_NAD	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x1D7A2B80,	//0x1b8e		VoC_jal(CII_III_exponents)
0x48236C04,	//0x1b90		VoC_bez16_d(huffdec_L1111,0x4823)
0xFFC0F15C,	//0x1b92		VoC_NAD	|	VoC_lw16i_short(WRAP0,0xa,DEFAULT)
		//0x1b94		huffdec_L1111
0xDF465610,	//0x1b94		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xE0F45FDB,	//0x1b96		VoC_lw16i_short(REG4,0xf,IN_PARALLEL)	|	VoC_push16(BITCACHE,DEFAULT)
0xD616D665,	//0x1b98		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16_sd(REG5,0x5,DEFAULT)
0x1BAA34AE,	//0x1b9a		VoC_bngt16_rr(huffdec_L2,REG5,REG6)
0xF4034373,	//0x1b9c		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG5,REG6,DEFAULT)
0xF8236065,	//0x1b9e		VoC_shr16_ri(REG3,0x4,IN_PARALLEL)	|	VoC_movreg16(REG5,REG3,DEFAULT)
0x6C06C018,	//0x1ba0		VoC_bez16_d(huffdec_L22,0x4823)(lo)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x48204823,	//0x1ba2		VoC_blt16_rd(huffdec_L22,REG0,0x4065)(lo)	|	VoC_bez16_d(huffdec_L22,0x4823)(hi)
0x07804065,	//0x1ba4		VoC_sub16_rd(REG0,REG0,0x4065)(lo)	|	VoC_blt16_rd(huffdec_L22,REG0,0x4065)(hi)
0xE4254065,	//0x1ba6		VoC_and16_rr(REG5,REG4,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x4065)(hi)
		//0x1ba7		huffdec_L22
0xFFC0E240,	//0x1ba8		VoC_NAD	|	VoC_lbinc_p(REG0)
		//0x1baa		huffdec_L2
0x44E23C2D,	//0x1baa		VoC_bngt16_rd(huffdec_L21111,REG5,0x44e2)
0x07ADE282,	//0x1bac		VoC_sub16_rd(REG5,REG5,0x44e2)(lo)	|	VoC_rbinc_i(REG6,0x10,DEFAULT)
0xE32A44E2,	//0x1bae		VoC_rbinc_r(REG6,REG5,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x44e2)(hi)
		//0x1baf		huffdec_L21111
0x49021500,	//0x1bb0		VoC_sw16_d(REG0,0x4902)
0x49001586,	//0x1bb2		VoC_sw32_d(RL6,0x4900)
0x4903151B,	//0x1bb4		VoC_sw16_d(BITCACHE,0x4903)
0xDF065620,	//0x1bb6		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xE1045F83,	//0x1bb8		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xE1F5607B,	//0x1bba		VoC_lw16i_short(REG5,0x1f,IN_PARALLEL)	|	VoC_movreg16(BITCACHE,REG3,DEFAULT)
0x44E23C23,	//0x1bbc		VoC_bngt16_rd(huffdec_L2a,REG3,0x44e2)
0xFFC0C2E3,	//0x1bbe		VoC_NAD	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
		//0x1bc0		huffdec_L2a
0x44E83C23,	//0x1bc0		VoC_bngt16_rd(huffdec_L2b,REG3,0x44e8)
0x44E8079B,	//0x1bc2		VoC_sub16_rd(REG3,REG3,0x44e8)
		//0x1bc4		huffdec_L2b
0x1645C35D,	//0x1bc4		VoC_and16_ri(REG5,0xfff8)(lo)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
0x40EB7FF8,	//0x1bc6		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_and16_ri(REG5,0xfff8)(hi)
0x5621F007,	//0x1bc8		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xE240C2E5,	//0x1bca		VoC_lbinc_p(REG0)	|	VoC_sub16_rr(REG5,REG3,REG4,IN_PARALLEL)
0xD642632B,	//0x1bcc		VoC_lw16_sd(REG2,0x3,IN_PARALLEL)	|	VoC_rbinc_r(REG7,REG5,DEFAULT)
0x5655E240,	//0x1bce		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_lbinc_p(REG0)
0x6282FF44,	//0x1bd0		VoC_rbinc_i(REG6,0x10,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xC35DDFC3,	//0x1bd2		VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0x63A81509,	//0x1bd4		VoC_sw16_d(ACC0_HI,0x63a8)
0xF0095A65,	//0x1bd6		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_sw16_sd(REG5,0x5,DEFAULT)
0x03148054,	//0x1bd8		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rp(REG4,REG1,REG2,DEFAULT)
0x5F43D643,	//0x1bda		VoC_push32(REG67,DEFAULT)	|	VoC_lw16_sd(REG3,0x3,IN_PARALLEL)
0x071FDA52,	//0x1bdc		VoC_add16_rd(REG7,REG3,0x44f0)(lo)	|	VoC_sw16_sd(REG2,0x4,IN_PARALLEL)
0x071E44F0,	//0x1bde		VoC_add16_rd(REG6,REG3,0x44d6)(lo)	|	VoC_add16_rd(REG7,REG3,0x44f0)(hi)
0xF04244D6,	//0x1be0		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_add16_rd(REG6,REG3,0x44d6)(hi)
0x071A88BF,	//0x1be2		VoC_add16_rd(REG2,REG3,0x40a)(lo)	|	VoC_mult16_rp(REG7,REG2,REG7,DEFAULT)
0x0036040A,	//0x1be4		VoC_add16_pd(REG6,REG6,0x40a)(lo)	|	VoC_add16_rd(REG2,REG3,0x40a)(hi)
0xD822040A,	//0x1be6		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_add16_pd(REG6,REG6,0x40a)(hi)
0x47B20A85,	//0x1be8		VoC_lw16i(REG5,0x47b2)
0x1504C17B,	//0x1bea		VoC_sw16_d(REG4,0x6382)(lo)	|	VoC_add16_rr(REG3,REG5,REG7,DEFAULT)
0xD8B46382,	//0x1bec		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x6382)(hi)
0x1BF431C4,	//0x1bee		VoC_bnez16_r(huffdec_L3,REG4)
0x02370A87,	//0x1bf0		VoC_lw16i(REG7,0x237)
0x1D692B00,	//0x1bf2		VoC_jump_lg(huffdec_Lpopend2)
		//0x1bf4		huffdec_L3
0xE0A7D8B5,	//0x1bf4		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x00FF1605,	//0x1bf6		VoC_and16_ri(REG5,0xff)
0x1582F847,	//0x1bf8		VoC_sw32_d(REG45,0x63a4)(lo)	|	VoC_shr16_ri(REG7,0x8,DEFAULT)
0x0A8363A4,	//0x1bfa		VoC_lw16i(REG3,0x63aa)(lo)	|	VoC_sw32_d(REG45,0x63a4)(hi)
0x150763AA,	//0x1bfc		VoC_sw16_d(REG7,0x63a6)(lo)	|	VoC_lw16i(REG3,0x63aa)(hi)
0x58B763A6,	//0x1bfe		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16_d(REG7,0x63a6)(hi)
0xDFC6E004,	//0x1c00		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xDFC7DFC3,	//0x1c02		VoC_push16(REG7,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x63A71504,	//0x1c04		VoC_sw16_d(REG4,0x63a7)
0xDFC1DFC2,	//0x1c06		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
		//0x1c08		huffdec_L4
0x0792D622,	//0x1c08		VoC_sub16_rd(REG2,REG2,0x40a)(lo)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x3202040A,	//0x1c0a		VoC_bltz16_r(huffdec_L5,REG2)(lo)	|	VoC_sub16_rd(REG2,REG2,0x40a)(hi)
0xD6661C12,	//0x1c0c		VoC_lw16_sd(REG6,0x5,DEFAULT)	|	VoC_bltz16_r(huffdec_L5,REG2)(hi)
0xC1BDD6B7,	//0x1c0e		VoC_add16_rr(REG5,REG6,REG7,DEFAULT)	|	VoC_lw16_sd(REG7,0xa,DEFAULT)
0x1C143105,	//0x1c10		VoC_bgtz16_r(huffdec_L6,REG5)
		//0x1c12		huffdec_L5
0x1CBF2B00,	//0x1c12		VoC_jump_lg(huffdec_LbgEnd)
		//0x1c14		huffdec_L6
0xD6A2DA22,	//0x1c14		VoC_lw16_sd(REG2,0x9,DEFAULT)	|	VoC_sw16_sd(REG2,0x1,DEFAULT)
0x63824021,	//0x1c16		VoC_be16_rd(no_huffdec_L7,REG1,0x6382)
0x1C592B00,	//0x1c18		VoC_jump_lg(huffdec_L7)
		//0x1c1a		no_huffdec_L7
0x63821405,	//0x1c1a		VoC_lw16_d(REG5,0x6382)
0x83558155,	//0x1c1c		VoC_add16inc_rp(REG5,REG5,REG2,DEFAULT)	|	VoC_add16_rp(REG5,REG5,REG2,DEFAULT)
0x07A4D654,	//0x1c1e		VoC_sub16_rd(REG4,REG4,0x40a)(lo)	|	VoC_lw16_sd(REG4,0x4,DEFAULT)
0x1505040A,	//0x1c20		VoC_sw16_d(REG5,0x6382)(lo)	|	VoC_sub16_rd(REG4,REG4,0x40a)(hi)
0xDAA26382,	//0x1c22		VoC_sw16_sd(REG2,0x9,DEFAULT)	|	VoC_sw16_d(REG5,0x6382)(hi)
0x1C4E31C4,	//0x1c24		VoC_bnez16_r(huffdec_L8,REG4)
0x6E07D695,	//0x1c26		VoC_bnez16_d(huffdec_L9,0x63a8)(lo)	|	VoC_lw16_sd(REG5,0x8,DEFAULT)
0xF1A463A8,	//0x1c28		VoC_lw16i_short(REG4,0xd,DEFAULT)	|	VoC_bnez16_d(huffdec_L9,0x63a8)(hi)
0xF023C164,	//0x1c2a		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0xFFC080E4,	//0x1c2c		VoC_NAD	|	VoC_add16_rp(REG4,REG3,REG4,DEFAULT)
		//0x1c2e		huffdec_L9
0x63A81402,	//0x1c2e		VoC_lw16_d(REG2,0x63a8)
0x44F0072D,	//0x1c30		VoC_add16_rd(REG5,REG5,0x44f0)
0xC155DE10,	//0x1c32		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0x63A81502,	//0x1c34		VoC_sw16_d(REG2,0x63a8)
0x88EDF043,	//0x1c36		VoC_mult16_rp(REG5,REG3,REG5,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x47B20A83,	//0x1c38		VoC_lw16i(REG3,0x47b2)
0x1806C0EB,	//0x1c3a		VoC_lw16i_set_inc(REG2,0x63a4,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0xD8B163A4,	//0x1c3c		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x63a4,0x1)(hi)
0x1C4431C1,	//0x1c3e		VoC_bnez16_r(huffdec_L10,REG1)
0x02370A87,	//0x1c40		VoC_lw16i(REG7,0x237)
0x1D642B00,	//0x1c42		VoC_jump_lg(huffdec_Lpopend)
		//0x1c44		huffdec_L10
0xDCA1D8B9,	//0x1c44		VoC_sw16inc_p(REG1,REG2,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG3,DEFAULT)
0x1601E121,	//0x1c46		VoC_and16_ri(REG1,0xff)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0xE12100FF,	//0x1c48		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_and16_ri(REG1,0xff)(hi)
0xF8415CA1,	//0x1c4a		VoC_shr16_ri(REG1,0x8,IN_PARALLEL)	|	VoC_sw16inc_p(REG1,REG2,DEFAULT)
0xDCA1FFC0,	//0x1c4c		VoC_sw16inc_p(REG1,REG2,DEFAULT)	|	VoC_NOP
		//0x1c4e		huffdec_L8
0xD642DA54,	//0x1c4e		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_sw16_sd(REG4,0x4,DEFAULT)
0x58A5D634,	//0x1c50		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0x3525E003,	//0x1c52		VoC_be16_rr(huffdec_L11,REG4,REG5)(lo)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xDA351C58,	//0x1c54		VoC_sw16_sd(REG5,0x2,DEFAULT)	|	VoC_be16_rr(huffdec_L11,REG4,REG5)(hi)
0x63A71503,	//0x1c56		VoC_sw16_d(REG3,0x63a7)
		//0x1c58		huffdec_L11
0xF2A3DA42,	//0x1c58		VoC_lw16i_short(REG3,0x15,DEFAULT)	|	VoC_sw16_sd(REG2,0x3,DEFAULT)
		//0x1c59		huffdec_L7
0x1C75349E,	//0x1c5a		VoC_bngt16_rr(huffdec_L12,REG3,REG6)
0xC2F3F3E3,	//0x1c5c		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16i_short(REG3,0x1f,DEFAULT)
0x7FF81643,	//0x1c5e		VoC_and16_ri(REG3,0xfff8)
0xC3DF590F,	//0x1c60		VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0x42D60B1C,	//0x1c62		VoC_sub16_dr(REG4,0x42d6,REG3)
0xFEE7419E,	//0x1c64		VoC_shru32_rr(RL7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0xE240FF42,	//0x1c66		VoC_lbinc_p(REG0)	|	VoC_lw32z(REG45,DEFAULT)
0x44E23823,	//0x1c68		VoC_bgt16_rd(huffdec_L13,REG3,0x44e2)
0xE5C6E318,	//0x1c6a		VoC_jump(huffdec_L14)	|	VoC_rbinc_r(REG4,REG3,DEFAULT)
		//0x1c6c		huffdec_L13
0x44E2079B,	//0x1c6c		VoC_sub16_rd(REG3,REG3,0x44e2)
0xE240E319,	//0x1c6e		VoC_lbinc_p(REG0)	|	VoC_rbinc_r(REG5,REG3,DEFAULT)
0xE517E280,	//0x1c70		VoC_or32_rr(RL7,REG45,DEFAULT)	|	VoC_rbinc_i(REG4,0x10,DEFAULT)
		//0x1c71		huffdec_L14
0x5AB7DA66,	//0x1c72		VoC_sw16_sd(REG7,0xa,DEFAULT)	|	VoC_sw16_sd(REG6,0x5,DEFAULT)
0xD90FDD0F,	//0x1c74		VoC_lw32_sd(RL7,0x0,DEFAULT)	|	VoC_sw32_sd(RL7,0x0,IN_PARALLEL)
		//0x1c75		huffdec_L12
0x040A1484,	//0x1c76		VoC_lw32_d(ACC0,0x40a)
0x63A61405,	//0x1c78		VoC_lw16_d(REG5,0x63a6)
0x0B2CC3AB,	//0x1c7a		VoC_sub16_dr(REG4,0x42d6,REG5)(lo)	|	VoC_sub16_rr(REG3,REG6,REG5,DEFAULT)
0x7EA442D6,	//0x1c7c		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_sub16_dr(REG4,0x42d6,REG5)(hi)
0x09A1FEDF,	//0x1c7e		VoC_sub32_rd(REG23,ACC0,0x40a)(lo)	|	VoC_shru32_rr(RL7,REG3,IN_PARALLEL)
0xE4F9040A,	//0x1c80		VoC_and32_rr(REG23,RL7,DEFAULT)	|	VoC_sub32_rd(REG23,ACC0,0x40a)(hi)
0x63A40717,	//0x1c82		VoC_add16_rd(REG7,REG2,0x63a4)
		//0x1c84		huffdec_L15
0x5874D90F,	//0x1c84		VoC_lw16_p(REG4,REG7,DEFAULT)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xE423E013,	//0x1c86		VoC_and16_rr(REG3,REG4,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x1CA131C3,	//0x1c88		VoC_bnez16_r(huffdec_L16,REG3)
0xF68543AE,	//0x1c8a		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
0xF824780D,	//0x1c8c		VoC_shr16_ri(REG4,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x00071605,	//0x1c8e		VoC_and16_ri(REG5,0x7)
0x0FFF0A82,	//0x1c90		VoC_lw16i(REG2,0xfff)
0xC3AB6414,	//0x1c92		VoC_sub16_rr(REG3,REG6,REG5,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG2,DEFAULT)
0x040A1484,	//0x1c94		VoC_lw32_d(ACC0,0x40a)
0x42D60B2A,	//0x1c96		VoC_sub16_dr(REG2,0x42d6,REG5)
0xFEDF7E94,	//0x1c98		VoC_shru32_rr(RL7,REG3,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG2,DEFAULT)
0x040A09A1,	//0x1c9a		VoC_sub32_rd(REG23,ACC0,0x40a)
0xC0A2E4F9,	//0x1c9c		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_and32_rr(REG23,RL7,DEFAULT)
0x63A40717,	//0x1c9e		VoC_add16_rd(REG7,REG2,0x63a4)
0xE083E5E4,	//0x1ca0		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_jump(huffdec_L15)
		//0x1ca1		huffdec_L16
0xE0F7780C,	//0x1ca2		VoC_lw16i_short(REG7,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x00071604,	//0x1ca4		VoC_and16_ri(REG4,0x7)
0xF66243A6,	//0x1ca6		VoC_movreg16(REG2,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x643AF822,	//0x1ca8		VoC_and16_rr(REG2,REG7,DEFAULT)	|	VoC_shr16_ri(REG2,0x4,DEFAULT)
0x643BF843,	//0x1caa		VoC_and16_rr(REG3,REG7,DEFAULT)	|	VoC_shr16_ri(REG3,0x8,IN_PARALLEL)
0xF047DA66,	//0x1cac		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_sw16_sd(REG6,0x5,IN_PARALLEL)
0x6C09DF41,	//0x1cae		VoC_bez16_d(huffdec_L20,0x63a5)(lo)	|	VoC_push32(REG23,DEFAULT)
0xFFC063A5,	//0x1cb0		VoC_NAD	|	VoC_bez16_d(huffdec_L20,0x63a5)(hi)
0x1AA52B80,	//0x1cb2		VoC_jal(CII_huff_sub1)
0x1AA52B80,	//0x1cb4		VoC_jal(CII_huff_sub1)
0xFFC0E5C6,	//0x1cb6		VoC_NAD	|	VoC_jump(huffdec_L30)
		//0x1cb8		huffdec_L20
0x1B032B80,	//0x1cb8		VoC_jal(CII_huff_sub2)
0x1B032B80,	//0x1cba		VoC_jal(CII_huff_sub2)
		//0x1cbc		huffdec_L30
0x2B00DF01,	//0x1cbc		VoC_jump_lg(huffdec_L4)(lo)	|	VoC_pop32(REG23,DEFAULT)
0xD6641C08,	//0x1cbe		VoC_lw16_sd(REG4,0x5,DEFAULT)	|	VoC_jump_lg(huffdec_L4)(hi)
		//0x1cbf		huffdec_LbgEnd
0xC12ED6B5,	//0x1cc0		VoC_add16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_lw16_sd(REG5,0xa,DEFAULT)
0x1CC83246,	//0x1cc2		VoC_bnltz16_r(huffdec_L39,REG6)
0x02380A87,	//0x1cc4		VoC_lw16i(REG7,0x238)
0x1D642B00,	//0x1cc6		VoC_jump_lg(huffdec_Lpopend)
		//0x1cc8		huffdec_L39
0xF024D636,	//0x1cc8		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x1E0D2B80,	//0x1cca		VoC_jal(CII_III_requantize)
0xE0445696,	//0x1ccc		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x8,DEFAULT)
0xD68241A6,	//0x1cce		VoC_lw16_sd(REG2,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x04780A85,	//0x1cd0		VoC_lw16i(REG5,0x478)
0xD865C0AA,	//0x1cd2		VoC_lw16_p(REG5,REG6,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0x00011605,	//0x1cd4		VoC_and16_ri(REG5,0x1)
0x0C6E0A86,	//0x1cd6		VoC_lw16i(REG6,0xc6e)
0x1CDC3185,	//0x1cd8		VoC_bez16_r(TABLE_hufftabA,REG5)
0x0C8A0A86,	//0x1cda		VoC_lw16i(REG6,0xc8a)
		//0x1cdc		TABLE_hufftabA
0x1502D664,	//0x1cdc		VoC_sw16_d(REG2,0x63a9)(lo)	|	VoC_lw16_sd(REG4,0x5,DEFAULT)
0xD6B563A9,	//0x1cde		VoC_lw16_sd(REG5,0xa,DEFAULT)	|	VoC_sw16_d(REG2,0x63a9)(hi)
0x63A41506,	//0x1ce0		VoC_sw16_d(REG6,0x63a4)
0xD611412E,	//0x1ce2		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG5,DEFAULT)
		//0x1ce4		huffdec_L40
0x63A93831,	//0x1ce4		VoC_bgt16_rd(huffdec_L41,REG1,0x63a9)
0x1CEA3146,	//0x1ce6		VoC_bngtz16_r(huffdec_L41,REG6)
0xFFC0E5C4,	//0x1ce8		VoC_NAD	|	VoC_jump(huffdec_L42)
		//0x1cea		huffdec_L41
0x1D442B00,	//0x1cea		VoC_jump_lg(huffdec_L50)
		//0x1cec		huffdec_L42
0x4CACD90F,	//0x1cec		VoC_bnlt16_rd(huffdec_L43,REG4,0x44dc)(lo)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xE24044DC,	//0x1cee		VoC_lbinc_p(REG0)	|	VoC_bnlt16_rd(huffdec_L43,REG4,0x44dc)(hi)
0xFF416282,	//0x1cf0		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x10,DEFAULT)
0xFD8760C2,	//0x1cf2		VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xE101650F,	//0x1cf4		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_or32_rr(RL7,REG23,DEFAULT)
0xC34D410C,	//0x1cf6		VoC_sub16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xDAB5DD0F,	//0x1cf8		VoC_sw16_sd(REG5,0xa,DEFAULT)	|	VoC_sw32_sd(RL7,0x0,DEFAULT)
		//0x1cfa		huffdec_L43
0xFF477F39,	//0x1cfa		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x44EE07A5,	//0x1cfc		VoC_sub16_rd(REG5,REG4,0x44ee)
0x7025F1EE,	//0x1cfe		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0xf,DEFAULT)
0xE4F9FEE9,	//0x1d00		VoC_and32_rr(REG23,RL7,DEFAULT)	|	VoC_shru32_rr(REG23,REG5,IN_PARALLEL)
0x63A40712,	//0x1d02		VoC_add16_rd(REG2,REG2,0x63a4)
0xD823FFC0,	//0x1d04		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_NOP
0xE012641D,	//0x1d06		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG3,DEFAULT)
0x1D2231C5,	//0x1d08		VoC_bnez16_r(huffdec_L44,REG5)
0x44EE07A4,	//0x1d0a		VoC_sub16_rd(REG4,REG4,0x44ee)
0xF80B6066,	//0x1d0c		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG3,DEFAULT)
0x00071603,	//0x1d0e		VoC_and16_ri(REG3,0x7)
0x1606F826,	//0x1d10		VoC_and16_ri(REG6,0xfff)(lo)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0x07360FFF,	//0x1d12		VoC_add16_rd(REG6,REG6,0x63a4)(lo)	|	VoC_and16_ri(REG6,0xfff)(hi)
0x590F63A4,	//0x1d14		VoC_lw32_sd(RL7,0x0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x63a4)(hi)
0x0B1BC31D,	//0x1d16		VoC_sub16_dr(REG3,0x42d6,REG3)(lo)	|	VoC_sub16_rr(REG5,REG4,REG3,IN_PARALLEL)
0x7E5A42D6,	//0x1d18		VoC_shru16_rr(REG2,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x42d6,REG3)(hi)
0x0792FEEF,	//0x1d1a		VoC_sub16_rd(REG2,REG2,0x40a)(lo)	|	VoC_shru32_rr(RL7,REG5,IN_PARALLEL)
0xF003040A,	//0x1d1c		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x40a)(hi)
0xC0B2E4F9,	//0x1d1e		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_and32_rr(REG23,RL7,DEFAULT)
0xD823FFC0,	//0x1d20		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_NOP
		//0x1d22		huffdec_L44
0x780DE065,	//0x1d22		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_movreg16(REG5,REG3,DEFAULT)
0x1605F661,	//0x1d24		VoC_and16_ri(REG5,0x7)(lo)	|	VoC_movreg16(REG1,REG3,IN_PARALLEL)
0x432C0007,	//0x1d26		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_and16_ri(REG5,0x7)(hi)
0x7821F666,	//0x1d28		VoC_shr16_ri(REG1,0x4,DEFAULT)	|	VoC_movreg16(REG6,REG3,IN_PARALLEL)
0x5A64F662,	//0x1d2a		VoC_sw16_sd(REG4,0x5,DEFAULT)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x7833F82E,	//0x1d2c		VoC_shr16_ri(REG3,0x6,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,IN_PARALLEL)
0x6429E015,	//0x1d2e		VoC_and16_rr(REG1,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x642EF83A,	//0x1d30		VoC_and16_rr(REG6,REG5,DEFAULT)	|	VoC_shr16_ri(REG2,0x7,IN_PARALLEL)
0x642AF62B,	//0x1d32		VoC_and16_rr(REG2,REG5,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG1,IN_PARALLEL)
0xE42BF6CA,	//0x1d34		VoC_and16_rr(REG3,REG5,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG6,IN_PARALLEL)
0xDF41DF45,	//0x1d36		VoC_push32(REG23,DEFAULT)	|	VoC_push32(ACC1,DEFAULT)
0x1B362B80,	//0x1d38		VoC_jal(CII_huff_sub3)
0x1B362B80,	//0x1d3a		VoC_jal(CII_huff_sub3)
0xDF055A64,	//0x1d3c		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x5,DEFAULT)
0xDF0556B5,	//0x1d3e		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0xa,DEFAULT)
0xD611412E,	//0x1d40		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG5,DEFAULT)
0x1CE42B00,	//0x1d42		VoC_jump_lg(huffdec_L40)
		//0x1d44		huffdec_L50
0x3246FF44,	//0x1d44		VoC_bnltz16_r(huffdec_L49,REG6)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x07891D4C,	//0x1d46		VoC_sub16_rd(REG1,REG1,0x44e8)(lo)	|	VoC_bnltz16_r(huffdec_L49,REG6)(hi)
0xFFC044E8,	//0x1d48		VoC_NOP	|	VoC_sub16_rd(REG1,REG1,0x44e8)(hi)
0xFFC0DA11,	//0x1d4a		VoC_NAD	|	VoC_sw16_sd(REG1,0x0,DEFAULT)
		//0x1d4c		huffdec_L49
0xE0247106,	//0x1d4c		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x63A90736,	//0x1d4e		VoC_add16_rd(REG6,REG6,0x63a9)
0xC38E7051,	//0x1d50		VoC_sub16_rr(REG6,REG6,REG1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF8166434,	//0x1d52		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG6,DEFAULT)
0x1D5E3146,	//0x1d54		VoC_bngtz16_r(huffdec_L51_1,REG6)
		//0x1d56		huffdec_L51_2
0x1D5E3146,	//0x1d56		VoC_bngtz16_r(huffdec_L51_1,REG6)
0xDDCCDDCC,	//0x1d58		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x040A07B6,	//0x1d5a		VoC_sub16_rd(REG6,REG6,0x40a)
0xFFC0E5FA,	//0x1d5c		VoC_NAD	|	VoC_jump(huffdec_L51_2)
		//0x1d5e		huffdec_L51_1
0x1D623184,	//0x1d5e		VoC_bez16_r(huffdec_L51,REG4)
0xFFC0DDCC,	//0x1d60		VoC_NAD	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x1d62		huffdec_L51
0x00000A87,	//0x1d62		VoC_lw16i(REG7,0x0)
		//0x1d64		huffdec_Lpopend
0xDF85DF85,	//0x1d64		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xDF85DF85,	//0x1d66		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xDF85DF85,	//0x1d68		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
		//0x1d69		huffdec_Lpopend2
0xDF81DF85,	//0x1d6a		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x5F85DF85,	//0x1d6c		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x5F85F005,	//0x1d6e		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDFA9DF07,	//0x1d70		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL7,IN_PARALLEL)
		//0x1d71		huffdec_Lend
0x49031405,	//0x1d72		VoC_lw16_d(REG5,0x4903)
0x49021400,	//0x1d74		VoC_lw16_d(REG0,0x4902)
0x49001486,	//0x1d76		VoC_lw32_d(RL6,0x4900)
0xE580E0BB,	//0x1d78		VoC_return	|	VoC_movreg16(BITCACHE,REG5,DEFAULT)
		//0x1d7a		CII_III_exponents
0xF00660A2,	//0x1d7a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0x44EA0726,	//0x1d7c		VoC_add16_rd(REG6,REG4,0x44ea)
0x44EE0727,	//0x1d7e		VoC_add16_rd(REG7,REG4,0x44ee)
0x00D20A80,	//0x1d80		VoC_lw16i(REG0,0xd2)
0x59B8B986,	//0x1d82		VoC_lw32_p(REG01,REG7,DEFAULT)	|	VoC_sub16_pr(REG6,REG6,REG0,DEFAULT)
0x6403E023,	//0x1d84		VoC_and16_rr(REG3,REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0x31C3EFE7,	//0x1d86		VoC_bnez16_r(exponents_L1,REG3)(lo)	|	VoC_lw16i_short(REG7,0xfffffffe,IN_PARALLEL)
0xF7E71D8A,	//0x1d88		VoC_lw16i_short(REG7,0xffffffff,DEFAULT)	|	VoC_bnez16_r(exponents_L1,REG3)(hi)
		//0x1d8a		exponents_L1
0xFF037F1D,	//0x1d8a		VoC_movreg32(REG67,REG01,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG67,DEFAULT)
0x44D00723,	//0x1d8c		VoC_add16_rd(REG3,REG4,0x44d0)
0x43041805,	//0x1d8e		VoC_lw16i_set_inc(REG1,0x4304,0x1)
0x63AA1804,	//0x1d90		VoC_lw16i_set_inc(REG0,0x63aa,0x1)
0x44EA4027,	//0x1d92		VoC_be16_rd(no_exponents_L2,REG7,0x44ea)
0x1DE32B00,	//0x1d94		VoC_jump_lg(exponents_L2)
		//0x1d96		no_exponents_L2
0xE0857007,	//0x1d96		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFF476435,	//0x1d98		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x1DB63185,	//0x1d9a		VoC_bez16_r(exponents_L3,REG5)
0x00041606,	//0x1d9c		VoC_and16_ri(REG6,0x4)
0x1DA23186,	//0x1d9e		VoC_bez16_r(exponents_L5,REG6)
0xFFC0E387,	//0x1da0		VoC_NAD	|	VoC_not16_r(REG7,DEFAULT)
		//0x1da2		exponents_L5
0xF00760EE,	//0x1da2		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG7,DEFAULT)
0xFF2B7004,	//0x1da4		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x1da6		exponents_L4
0x00230A85,	//0x1da6		VoC_lw16i(REG5,0x23)
0x1DB63425,	//0x1da8		VoC_bgt16_rr(exponents_L3,REG4,REG5)
0xF7C45895,	//0x1daa		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x035DE425,	//0x1dac		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0x7E3DF68E,	//0x1dae		VoC_shr16_rr(REG5,REG7,DEFAULT)	|	VoC_movreg16(RL7_LO,REG4,IN_PARALLEL)
0xC3ADF7E4,	//0x1db0		VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0x5C858314,	//0x1db2		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE5F1F68F,	//0x1db4		VoC_jump(exponents_L4)	|	VoC_movreg16(RL7_HI,REG4,IN_PARALLEL)
		//0x1db6		exponents_L3
0xFF2B5635,	//0x1db6		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x2,DEFAULT)
0xC149F121,	//0x1db8		VoC_add16_rr(REG1,REG5,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x9,DEFAULT)
0xD894DF41,	//0x1dba		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xF8EC5895,	//0x1dbc		VoC_shr16_ri(REG4,0xfffffffd,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xF8ED43A4,	//0x1dbe		VoC_shr16_ri(REG5,0xfffffffd,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
0xD89243AD,	//0x1dc0		VoC_lw16inc_p(REG2,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
0xFF1478EA,	//0x1dc2		VoC_movreg32(ACC0,REG45,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)
0xC3965F01,	//0x1dc4		VoC_sub16_rr(REG6,REG6,REG2,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0E1E5,	//0x1dc6		VoC_NAD	|	VoC_movreg16(REG5,RL7_HI,DEFAULT)
		//0x1dc8		exponents_L20
0x023F0A81,	//0x1dc8		VoC_lw16i(REG1,0x23f)
0x1DCE34A9,	//0x1dca		VoC_bngt16_rr(no_exponents_Lend,REG5,REG1)
0x1DF92B00,	//0x1dcc		VoC_jump_lg(exponents_Lend)
		//0x1dce		no_exponents_Lend
0xFF2258B1,	//0x1dce		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
0xF00E7E39,	//0x1dd0		VoC_lw16i_short(INC2,0x3,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG7,DEFAULT)
0xD8B44309,	//0x1dd2		VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG4,REG1,DEFAULT)
0x4364FE3C,	//0x1dd4		VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_shr16_rr(REG4,REG7,DEFAULT)
0xD8B1DC81,	//0x1dd6		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,IN_PARALLEL)
0xDC847E39,	//0x1dd8		VoC_sw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG7,DEFAULT)
0xE0344389,	//0x1dda		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG6,REG1,DEFAULT)
0x8B1461E5,	//0x1ddc		VoC_mult16inc_rp(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_HI,DEFAULT)
0xC165DC81,	//0x1dde		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0xF00660AF,	//0x1de0		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG5,DEFAULT)
0xF085E5E6,	//0x1de2		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_jump(exponents_L20)
		//0x1de3		exponents_L2
0xFF2B6435,	//0x1de4		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0x1DF23185,	//0x1de6		VoC_bez16_r(exponents_L6,REG5)
0x831CD894,	//0x1de8		VoC_add16inc_rp(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xFE3C6AC5,	//0x1dea		VoC_shr16_rr(REG4,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0x16,DEFAULT)
0xD89543A4,	//0x1dec		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
0x5C84835C,	//0x1dee		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG5,REG3,DEFAULT)
		//0x1def		VoC_endloop0
0xE5C8FE3C,	//0x1df0		VoC_jump(exponents_Lend)	|	VoC_shr16_rr(REG4,REG7,IN_PARALLEL)
		//0x1df2		exponents_L6
0x6AC4D8B4,	//0x1df2		VoC_loop_i_short(0x16,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xC3A4FE3C,	//0x1df4		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_shr16_rr(REG4,REG7,IN_PARALLEL)
0x5C84D8B4,	//0x1df6		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
		//0x1df7		VoC_endloop0
0xFFC0FE3C,	//0x1df8		VoC_NOP	|	VoC_shr16_rr(REG4,REG7,IN_PARALLEL)
		//0x1df9		exponents_Lend
0xFFC0E580,	//0x1dfa		VoC_NAD	|	VoC_return
		//0x1dfc		CII_bitoff
0x00081FBD,	//0x1dfc		VoC_lw16i_set_inc(REG1,0x8,0xffffffff)
0x1E0231C6,	//0x1dfe		VoC_bnez16_r(bitoff_L1,REG6)
0xFFC0E5CA,	//0x1e00		VoC_NAD	|	VoC_jump(bitoff_end)
		//0x1e02		bitoff_L1
0x1E063106,	//0x1e02		VoC_bgtz16_r(bitoff_L2,REG6)
0xFFC0E5C6,	//0x1e04		VoC_NAD	|	VoC_jump(bitoff_end)
		//0x1e06		bitoff_L2
0xDE08780E,	//0x1e06		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xFFC0E5FA,	//0x1e08		VoC_NAD	|	VoC_jump(bitoff_L1)
		//0x1e0a		bitoff_end
0xF0056026,	//0x1e0a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0xDFE9E580,	//0x1e0c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1e0d		CII_III_requantize
0xE00560C7,	//0x1e0e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x1E143247,	//0x1e10		VoC_bnltz16_r(III_requantize_L1,REG7)
0xFFC0C37F,	//0x1e12		VoC_NAD	|	VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)
		//0x1e14		III_requantize_L1
0xF48460E3,	//0x1e14		VoC_lw16i_short(WRAP0,0x10,IN_PARALLEL)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x1607F813,	//0x1e16		VoC_and16_ri(REG7,0x3)(lo)	|	VoC_shr16_ri(REG3,0x2,DEFAULT)
0x32460003,	//0x1e18		VoC_bnltz16_r(III_requantize_L2,REG6)(lo)	|	VoC_and16_ri(REG7,0x3)(hi)
0x437F1E1D,	//0x1e1a		VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_bnltz16_r(III_requantize_L2,REG6)(hi)
0xE066C35B,	//0x1e1c		VoC_movreg16(REG6,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG5,REG3,IN_PARALLEL)
		//0x1e1d		III_requantize_L2
0xDF467003,	//0x1e1e		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xDFC05F43,	//0x1e20		VoC_push16(REG0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x3184FF47,	//0x1e22		VoC_bez16_r(rq_compute_L0,REG4)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x443C1E2A,	//0x1e24		VoC_bne16_rd(rq_compute_L1,REG4,0x40a)(lo)	|	VoC_bez16_r(rq_compute_L0,REG4)(hi)
0xF043040A,	//0x1e26		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_bne16_rd(rq_compute_L1,REG4,0x40a)(hi)
0x04000A8F,	//0x1e28		VoC_lw16i(RL7_HI,0x400)
		//0x1e2a		rq_compute_L0
0x1ECC2B00,	//0x1e2a		VoC_jump_lg(rq_compute_Lend)
		//0x1e2c		rq_compute_L1
0xFF42608F,	//0x1e2c		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG4,DEFAULT)
0x40000A8B,	//0x1e2e		VoC_lw16i(ACC1_HI,0x4000)
0xF472700A,	//0x1e30		VoC_lw16i_short(FORMATX,0xe,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0xF5F97F2B,	//0x1e32		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC1,DEFAULT)
0xCDF8E9CD,	//0x1e34		VoC_multf32_rr(REG01,REG7,REG7,DEFAULT)	|	VoC_loop_i_short(0xe,DEFAULT)
0x4DCCFA0D,	//0x1e36		VoC_multf32_rr(ACC0,REG7,REG1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x1,DEFAULT)
0xCE71F908,	//0x1e38		VoC_macX_rr(REG6,REG1,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,IN_PARALLEL)
0x7F13CE78,	//0x1e3a		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_macX_rr(REG7,REG0,DEFAULT)
0x3627FF1E,	//0x1e3c		VoC_bgt32_rr(rq_compute_L2,ACC0,RL7)(lo)	|	VoC_movreg32(RL6,REG67,IN_PARALLEL)
0x7F321E41,	//0x1e3e		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_bgt32_rr(rq_compute_L2,ACC0,RL7)(hi)
0xE52BFF33,	//0x1e40		VoC_or32_rr(REG67,ACC1,DEFAULT)	|	VoC_movreg32(REG67,RL6,IN_PARALLEL)
		//0x1e41		rq_compute_L2
		//0x1e41		VoC_endloop0
0xEA32FFC0,	//0x1e42		VoC_loop_i_short(0x11,DEFAULT)	|	VoC_NAD
0xFF1E71BA,	//0x1e44		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xd,DEFAULT)
0xF90E4DFC,	//0x1e46		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0xFA0DCE7E,	//0x1e48		VoC_shr32_ri(ACC1,0x1,DEFAULT)	|	VoC_macX_rr(REG7,REG6,DEFAULT)
0xF4727F20,	//0x1e4a		VoC_lw16i_short(FORMATX,0xe,IN_PARALLEL)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xF9084DCC,	//0x1e4c		VoC_shru16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG1,DEFAULT)
0xCE78CE71,	//0x1e4e		VoC_macX_rr(REG7,REG0,DEFAULT)	|	VoC_macX_rr(REG6,REG1,DEFAULT)
0x3627FF13,	//0x1e50		VoC_bgt32_rr(rq_compute_L2_bis,ACC0,RL7)(lo)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x7F321E55,	//0x1e52		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_bgt32_rr(rq_compute_L2_bis,ACC0,RL7)(hi)
0xE52BFF33,	//0x1e54		VoC_or32_rr(REG67,ACC1,DEFAULT)	|	VoC_movreg32(REG67,RL6,IN_PARALLEL)
		//0x1e55		rq_compute_L2_bis
		//0x1e55		VoC_endloop0
0xE0007F3B,	//0x1e56		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x1E6633C3,	//0x1e58		VoC_bnltz32_r(gsm_norm_L1,REG67)
0x0AC9FF44,	//0x1e5a		VoC_lw16i(ACC0_HI,0xc000)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x361C4000,	//0x1e5c		VoC_bgt32_rr(gsm_norm_L2,REG67,ACC0)(lo)	|	VoC_lw16i(ACC0_HI,0xc000)(hi)
0x0A861E64,	//0x1e5e		VoC_lw16i(REG6,0x42d6)(lo)	|	VoC_bgt32_rr(gsm_norm_L2,REG67,ACC0)(hi)
0x2B0042D6,	//0x1e60		VoC_jump_lg(gsm_norm_Lend)(lo)	|	VoC_lw16i(REG6,0x42d6)(hi)
0xFFC01E85,	//0x1e62		VoC_NAD	|	VoC_jump_lg(gsm_norm_Lend)(hi)
		//0x1e64		gsm_norm_L2
0x42D60B9B,	//0x1e64		VoC_sub32_dr(REG67,0x42d6,REG67)
		//0x1e66		gsm_norm_L1
0xF7E9FF44,	//0x1e66		VoC_lw16i_short(ACC0_HI,0xffff,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x3304E4DC,	//0x1e68		VoC_bez32_r(gsm_norm_L3,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0xFF441E77,	//0x1e6a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bez32_r(gsm_norm_L3,ACC0)(hi)
0x7F000AC9,	//0x1e6c		VoC_lw16i(ACC0_HI,0xff00)
0x3304E4DC,	//0x1e6e		VoC_bez32_r(gsm_norm_L4,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7AC31E74,	//0x1e70		VoC_shr32_ri(REG67,0x18,DEFAULT)	|	VoC_bez32_r(gsm_norm_L4,ACC0)(hi)
0xE5CFEFF0,	//0x1e72		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
		//0x1e74		gsm_norm_L4
0xE0707A83,	//0x1e74		VoC_lw16i_short(REG0,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFF44E5CC,	//0x1e76		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jump(gsm_norm_L6)
		//0x1e77		gsm_norm_L3
0x7F000AC8,	//0x1e78		VoC_lw16i(ACC0_LO,0xff00)
0x3304E4DC,	//0x1e7a		VoC_bez32_r(gsm_norm_L5,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7A431E80,	//0x1e7c		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_bez32_r(gsm_norm_L5,ACC0)(hi)
0xE5C3E0F0,	//0x1e7e		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xf,IN_PARALLEL)
		//0x1e80		gsm_norm_L5
0xFFC0F2E0,	//0x1e80		VoC_NAD	|	VoC_lw16i_short(REG0,0x17,DEFAULT)
		//0x1e82		gsm_norm_L6
0x00FF0A81,	//0x1e82		VoC_lw16i(REG1,0xff)
0xF002E40E,	//0x1e84		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_and16_rr(REG6,REG1,DEFAULT)
		//0x1e85		gsm_norm_Lend
0x1DFC2B80,	//0x1e86		VoC_jal(CII_bitoff)
0x42B6C186,	//0x1e88		VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0x7EB7F90C,	//0x1e8a		VoC_shr32_rr(RL7,REG6,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0xFF3BF6C3,	//0x1e8c		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_movreg16(REG3,REG6,IN_PARALLEL)
0xCDECF90E,	//0x1e8e		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x4E75CE7C,	//0x1e90		VoC_macX_rr(REG6,REG5,DEFAULT)	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xF000E042,	//0x1e92		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,IN_PARALLEL)
0x33C7FF27,	//0x1e94		VoC_bnltz32_r(gsm_norm_L1a,RL7)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFF441EA2,	//0x1e96		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bnltz32_r(gsm_norm_L1a,RL7)(hi)
0x40000AC9,	//0x1e98		VoC_lw16i(ACC0_HI,0xc000)
0x1EA0363C,	//0x1e9a		VoC_bgt32_rr(gsm_norm_L2a,RL7,ACC0)
0x42D60A86,	//0x1e9c		VoC_lw16i(REG6,0x42d6)
0x1EC42B00,	//0x1e9e		VoC_jump_lg(gsm_norm_Lenda)
		//0x1ea0		gsm_norm_L2a
0x42D60BBC,	//0x1ea0		VoC_sub32_dr(ACC0,0x42d6,RL7)
		//0x1ea2		gsm_norm_L1a
0xFF44FF23,	//0x1ea2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xE4DCF7E9,	//0x1ea4		VoC_and32_rr(ACC0,REG67,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xffff,DEFAULT)
0x1EB53304,	//0x1ea6		VoC_bez32_r(gsm_norm_L3a,ACC0)
0x0AC9FF44,	//0x1ea8		VoC_lw16i(ACC0_HI,0xff00)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xE4DC7F00,	//0x1eaa		VoC_and32_rr(ACC0,REG67,DEFAULT)	|	VoC_lw16i(ACC0_HI,0xff00)(hi)
0x1EB23304,	//0x1eac		VoC_bez32_r(gsm_norm_L4a,ACC0)
0xEFF07AC3,	//0x1eae		VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x18,DEFAULT)
0xFFC0E5D0,	//0x1eb0		VoC_NAD	|	VoC_jump(gsm_norm_L6a)
		//0x1eb2		gsm_norm_L4a
0xE0707A83,	//0x1eb2		VoC_lw16i_short(REG0,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFF44E5CC,	//0x1eb4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jump(gsm_norm_L6a)
		//0x1eb5		gsm_norm_L3a
0x7F000AC8,	//0x1eb6		VoC_lw16i(ACC0_LO,0xff00)
0x3304E4DC,	//0x1eb8		VoC_bez32_r(gsm_norm_L5a,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7A431EBE,	//0x1eba		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_bez32_r(gsm_norm_L5a,ACC0)(hi)
0xE5C3E0F0,	//0x1ebc		VoC_jump(gsm_norm_L6a)	|	VoC_lw16i_short(REG0,0xf,IN_PARALLEL)
		//0x1ebe		gsm_norm_L5a
0xFFC0F2E0,	//0x1ebe		VoC_NAD	|	VoC_lw16i_short(REG0,0x17,DEFAULT)
		//0x1ec0		gsm_norm_L6a
0x00FF0A81,	//0x1ec0		VoC_lw16i(REG1,0xff)
0xFFC0E40E,	//0x1ec2		VoC_NAD	|	VoC_and16_rr(REG6,REG1,DEFAULT)
		//0x1ec4		gsm_norm_Lenda
0x4063071B,	//0x1ec4		VoC_add16_rd(REG3,REG3,0x4063)
0x1DFC2B80,	//0x1ec6		VoC_jal(CII_bitoff)
0xC2B6C186,	//0x1ec8		VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0xC19B7EB7,	//0x1eca		VoC_add16_rr(REG3,REG6,REG3,IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG6,DEFAULT)
		//0x1ecc		rq_compute_Lend
0xE0055F03,	//0x1ecc		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xE014419E,	//0x1ece		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0x1EE03246,	//0x1ed0		VoC_bnltz16_r(III_requantize_L3,REG6)
0x7FE10AC3,	//0x1ed2		VoC_lw16i(REG3,0xffffffe1)
0x1ED8349E,	//0x1ed4		VoC_bngt16_rr(III_requantize_L5,REG3,REG6)
0xE5D5FF47,	//0x1ed6		VoC_jump(III_requantize_L4)	|	VoC_lw32z(RL7,DEFAULT)
		//0x1ed8		III_requantize_L5
0xFE9AC133,	//0x1ed8		VoC_shr32_rr(REG45,REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG6,DEFAULT)
0x0B33C9D7,	//0x1eda		VoC_sub16_dr(REG3,0x42d6,REG6)(lo)	|	VoC_add32_rr(RL7,RL7,REG45,DEFAULT)
0xFE9F42D6,	//0x1edc		VoC_shr32_rr(RL7,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x42d6,REG6)(hi)
0xE5CDC333,	//0x1ede		VoC_jump(III_requantize_L4)	|	VoC_sub16_rr(REG3,REG4,REG6,DEFAULT)
		//0x1ee0		III_requantize_L3
0x341EF0A3,	//0x1ee0		VoC_bgt16_rr(III_requantize_L6,REG3,REG6)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x0A8F1EE8,	//0x1ee2		VoC_lw16i(RL7_HI,0x7fff)(lo)	|	VoC_bgt16_rr(III_requantize_L6,REG3,REG6)(hi)
0xF7EE7FFF,	//0x1ee4		VoC_lw16i_short(RL7_LO,0xffff,DEFAULT)	|	VoC_lw16i(RL7_HI,0x7fff)(hi)
0xFFC0E5C6,	//0x1ee6		VoC_NAD	|	VoC_jump(III_requantize_L4)
		//0x1ee8		III_requantize_L6
0x42D60B33,	//0x1ee8		VoC_sub16_dr(REG3,0x42d6,REG6)
0xFFC0FE9F,	//0x1eea		VoC_NAD	|	VoC_shr32_rr(RL7,REG3,DEFAULT)
		//0x1eec		III_requantize_L4
0x09830A83,	//0x1eec		VoC_lw16i(REG3,0x983)
0xEFE577A4,	//0x1eee		VoC_lw16i_short(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xfffffffd,DEFAULT)
0x1F08353C,	//0x1ef0		VoC_be16_rr(root_table_end,REG7,REG4)
0x0B500A83,	//0x1ef2		VoC_lw16i(REG3,0xb50)
0x1F08353D,	//0x1ef4		VoC_be16_rr(root_table_end,REG7,REG5)
0x0D740A83,	//0x1ef6		VoC_lw16i(REG3,0xd74)
0x40604107,	//0x1ef8		VoC_be16_rd(root_table_end,REG7,0x4060)
0x10000A83,	//0x1efa		VoC_lw16i(REG3,0x1000)
0x42D640A7,	//0x1efc		VoC_be16_rd(root_table_end,REG7,0x42d6)
0x13070A83,	//0x1efe		VoC_lw16i(REG3,0x1307)
0x040A4087,	//0x1f00		VoC_be16_rd(root_table_end,REG7,0x40a)
0x16A10A83,	//0x1f02		VoC_lw16i(REG3,0x16a1)
0x44EA4027,	//0x1f04		VoC_be16_rd(root_table_end,REG7,0x44ea)
0x1AE90A83,	//0x1f06		VoC_lw16i(REG3,0x1ae9)
		//0x1f08		root_table_end
0x701AFF3A,	//0x1f08		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x0912F401,	//0x1f0a		VoC_add32_rd(REG45,REG45,0x405e)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xF964405E,	//0x1f0c		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x405e)(hi)
0xF032CD5C,	//0x1f0e		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)
0xCE63FDE4,	//0x1f10		VoC_macX_rr(REG4,REG3,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0x1F1631C7,	//0x1f12		VoC_bnez16_r(III_requantize_Lend,REG7)
0xFFC0FF3C,	//0x1f14		VoC_NAD	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x1f16		III_requantize_Lend
0xDF065F80,	//0x1f16		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x6C03DFA9,	//0x1f18		VoC_bez16_d(III_requantize_exit,0x4823)(lo)	|	VoC_pop16(RA,DEFAULT)
0xF15C4823,	//0x1f1a		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_bez16_d(III_requantize_exit,0x4823)(hi)
		//0x1f1c		III_requantize_exit
0xDFE9E580,	//0x1f1c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f1d		CII_decode_error
0xF15CF007,	//0x1f1e		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x02350A80,	//0x1f20		VoC_lw16i(REG0,0x235)
0x1F2635B0,	//0x1f22		VoC_bne16_rr(no_decode_error_exit,REG6,REG0)
0xFFC0E5CC,	//0x1f24		VoC_NAD	|	VoC_jump(decode_error_exit)
		//0x1f26		no_decode_error_exit
0x02010A80,	//0x1f26		VoC_lw16i(REG0,0x201)
0x1F3035B0,	//0x1f28		VoC_bne16_rr(decode_error_exit,REG6,REG0)
0xFFC0F01C,	//0x1f2a		VoC_NAD	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0x0DF82B80,	//0x1f2c		VoC_jal(CII_mad_frame_mute)
0x00200A87,	//0x1f2e		VoC_lw16i(REG7,0x20)
		//0x1f30		decode_error_exit
0xF21CDFA9,	//0x1f30		VoC_lw16i_short(WRAP0,0x10,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x1f32		VoC_NAD	|	VoC_return
		//0x1f34		CII_III_stereo
0xF401701A,	//0x1f34		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0x44EE070C,	//0x1f36		VoC_add16_rd(REG4,REG1,0x44ee)
0x003A0A85,	//0x1f38		VoC_lw16i(REG5,0x3a)
0x59A2C069,	//0x1f3a		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD98BE082,	//0x1f3c		VoC_lw32_p(REG67,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,IN_PARALLEL)
0x1F4435AF,	//0x1f3e		VoC_bne16_rr(III_stereo_Lerr,REG5,REG7)
0xE416E414,	//0x1f40		VoC_and16_rr(REG6,REG2,DEFAULT)	|	VoC_and16_rr(REG4,REG2,DEFAULT)
0x1F483526,	//0x1f42		VoC_be16_rr(III_stereo_Lbeg,REG4,REG6)
		//0x1f44		III_stereo_Lerr
0x02390A84,	//0x1f44		VoC_lw16i(REG4,0x239)
0x21072B00,	//0x1f46		VoC_jump_lg(III_stereo_L52)
		//0x1f48		III_stereo_Lbeg
0x5FC3DFC0,	//0x1f48		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x180AFF45,	//0x1f4a		VoC_lw16i_set_inc(REG2,0x6382,0x2)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x14046382,	//0x1f4c		VoC_lw16_d(REG4,0x4800)(lo)	|	VoC_lw16i_set_inc(REG2,0x6382,0x2)(hi)
0x60854800,	//0x1f4e		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x4800)(hi)
0xFFC0DFC1,	//0x1f50		VoC_NAD	|	VoC_push16(REG1,IN_PARALLEL)
0xFF476A62,	//0x1f52		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_loop_i_short(0x13,DEFAULT)
		//0x1f54		VoC_endloop0
0xF68C5DD2,	//0x1f54		VoC_movreg16(RL6_LO,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x1604DC24,	//0x1f56		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0x31C40001,	//0x1f58		VoC_bnez16_r(III_stereo_Le0,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0x2B001F5E,	//0x1f5a		VoC_jump_lg(III_stereo_L44)(lo)	|	VoC_bnez16_r(III_stereo_Le0,REG4)(hi)
0xFFC020B4,	//0x1f5c		VoC_NAD	|	VoC_jump_lg(III_stereo_L44)(hi)
		//0x1f5e		III_stereo_Le0
0x48061404,	//0x1f5e		VoC_lw16_d(REG4,0x4806)
0x01001684,	//0x1f60		VoC_or16_ri(REG4,0x100)
0x40620702,	//0x1f62		VoC_add16_rd(REG2,REG0,0x4062)
0x48061504,	//0x1f64		VoC_sw16_d(REG4,0x4806)
0xFF42604A,	//0x1f66		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG2,DEFAULT)
0x44EA4027,	//0x1f68		VoC_be16_rd(no_III_stereo_L18,REG7,0x44ea)
0x1FD82B00,	//0x1f6a		VoC_jump_lg(III_stereo_L18)
		//0x1f6c		no_III_stereo_L18
0x63AA1587,	//0x1f6c		VoC_sw32_d(RL7,0x63aa)
0x63AC150E,	//0x1f6e		VoC_sw16_d(RL7_LO,0x63ac)
0xE000700D,	//0x1f70		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x1F893186,	//0x1f72		VoC_bez16_r(III_stereo_L7,REG6)
		//0x1f74		III_stereo_L3
0xDE0058B6,	//0x1f74		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC13440B1,	//0x1f76		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG2,REG6,DEFAULT)
0xF6884071,	//0x1f78		VoC_movreg16(ACC0_LO,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xFFC0D9D2,	//0x1f7a		VoC_NAD	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x1F822E30,	//0x1f7c		VoC_loop_r(0,REG6)
0x1F823302,	//0x1f7e		VoC_bez32_r(III_stereo_L4,REG45)
0xE5C3E00E,	//0x1f80		VoC_jump(III_stereo_L5)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
		//0x1f82		III_stereo_L4
		//0x1f82		VoC_endloop0
0xFFC0D9D2,	//0x1f82		VoC_NAD	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x1f84		III_stereo_L5
0xF7046022,	//0x1f84		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x44DA4AB4,	//0x1f86		VoC_blt16_rd(III_stereo_L3,REG4,0x44da)
0xF001E00F,	//0x1f88		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_movreg16(RL7_HI,REG0,DEFAULT)
		//0x1f89		III_stereo_L7
0x63AA0A87,	//0x1f8a		VoC_lw16i(REG7,0x63aa)
		//0x1f8c		III_stereo_L8
0xDE0058B6,	//0x1f8c		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC1954134,	//0x1f8e		VoC_add16_rr(REG5,REG6,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC1756088,	//0x1f90		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0xD9D260AD,	//0x1f92		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG5,DEFAULT)
0x1F9C2E30,	//0x1f94		VoC_loop_r(0,REG6)
0x1F9C3302,	//0x1f96		VoC_bez32_r(III_stereo_L9,REG45)
0xE00BC1CD,	//0x1f98		VoC_movreg16(ACC1_HI,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG1,DEFAULT)
0xE5C3DC50,	//0x1f9a		VoC_jump(III_stereo_L10)	|	VoC_sw16_p(REG0,REG5,DEFAULT)
		//0x1f9c		III_stereo_L9
		//0x1f9c		VoC_endloop0
0xFFC0D9D2,	//0x1f9c		VoC_NAD	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x1f9e		III_stereo_L10
0xF70461A2,	//0x1f9e		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG2,RL6_HI,DEFAULT)
0x31C1E026,	//0x1fa0		VoC_bnez16_r(III_stereo_Lw1,REG1)(lo)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0xF0211FA5,	//0x1fa2		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_bnez16_r(III_stereo_Lw1,REG1)(hi)
0xF001E5C6,	//0x1fa4		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_jump(III_stereo_Lw2)
		//0x1fa5		III_stereo_Lw1
0x040A4426,	//0x1fa6		VoC_bne16_rd(III_stereo_Lw2,REG6,0x40a)
0xFFC0F041,	//0x1fa8		VoC_NAD	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
		//0x1faa		III_stereo_Lw2
0x40644A14,	//0x1faa		VoC_blt16_rd(III_stereo_L8,REG4,0x4064)
0x3184E164,	//0x1fac		VoC_bez16_r(III_stereo_L12,REG4)(lo)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0xE1EE1FB0,	//0x1fae		VoC_movreg16(RL7_LO,RL7_HI,DEFAULT)	|	VoC_bez16_r(III_stereo_L12,REG4)(hi)
		//0x1fb0		III_stereo_L12
0xF7C46185,	//0x1fb0		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x7FFE1645,	//0x1fb2		VoC_and16_ri(REG5,0xfffe)
0x63821805,	//0x1fb4		VoC_lw16i_set_inc(REG1,0x6382,0x1)
0x1FBA3144,	//0x1fb6		VoC_bngtz16_r(III_stereo_L12_1,REG4)
0xDC95E701,	//0x1fb8		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x1fb9		VoC_endloop0
		//0x1fba		III_stereo_L12_1
0x6160F006,	//0x1fba		VoC_movreg16(REG0,ACC1_HI,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1805F7E4,	//0x1fbc		VoC_lw16i_set_inc(REG1,0x6382,0x1)(lo)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0xFFC06382,	//0x1fbe		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x6382,0x1)(hi)
		//0x1fc0		III_stereo_L13
0x1FD63484,	//0x1fc0		VoC_bngt16_rr(III_stereo_L17,REG0,REG4)
0xC063C1F2,	//0x1fc2		VoC_add16_rr(REG3,REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG7,REG6,DEFAULT)
0x3494D822,	//0x1fc4		VoC_bngt16_rr(III_stereo_L16,REG2,REG4)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xDCB51FC8,	//0x1fc6		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_bngt16_rr(III_stereo_L16,REG2,REG4)(hi)
		//0x1fc8		III_stereo_L16
0x31C6E0C3,	//0x1fc8		VoC_bnez16_r(III_stereo_Lw3,REG6)(lo)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xF0261FCD,	//0x1fca		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_bnez16_r(III_stereo_Lw3,REG6)(hi)
0xF006E5C6,	//0x1fcc		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jump(III_stereo_Lw4)
		//0x1fcd		III_stereo_Lw3
0x040A4423,	//0x1fce		VoC_bne16_rd(III_stereo_Lw4,REG3,0x40a)
0xFFC0F046,	//0x1fd0		VoC_NAD	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
		//0x1fd2		III_stereo_Lw4
0x040A0724,	//0x1fd2		VoC_add16_rd(REG4,REG4,0x40a)
0xFFC0E5EC,	//0x1fd4		VoC_NAD	|	VoC_jump(III_stereo_L13)
		//0x1fd6		III_stereo_L17
0x1FF92B00,	//0x1fd6		VoC_jump_lg(III_stereo_L23)
		//0x1fd8		III_stereo_L18
0x7007F000,	//0x1fd8		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xD8B6E004,	//0x1fda		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
		//0x1fdb		III_stereo_L19
0xDE0040B1,	//0x1fdc		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG2,REG6,DEFAULT)
0xC1344071,	//0x1fde		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xD9D26088,	//0x1fe0		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0x1FE82E30,	//0x1fe2		VoC_loop_r(0,REG6)
0x1FE83302,	//0x1fe4		VoC_bez32_r(III_stereo_L20,REG45)
0xE5C3E007,	//0x1fe6		VoC_jump(III_stereo_L21)	|	VoC_movreg16(REG7,REG0,DEFAULT)
		//0x1fe8		III_stereo_L20
		//0x1fe8		VoC_endloop0
0xFFC0D9D2,	//0x1fe8		VoC_NAD	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x1fea		III_stereo_L21
0xF7046022,	//0x1fea		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x40644ABC,	//0x1fec		VoC_blt16_rd(III_stereo_L19,REG4,0x4064)
0x0A82E185,	//0x1fee		VoC_lw16i(REG2,0x6382)(lo)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x16456382,	//0x1ff0		VoC_and16_ri(REG5,0xfffe)(lo)	|	VoC_lw16i(REG2,0x6382)(hi)
0x31477FFE,	//0x1ff2		VoC_bngtz16_r(III_stereo_L23,REG7)(lo)	|	VoC_and16_ri(REG5,0xfffe)(hi)
0xF0321FF9,	//0x1ff4		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_bngtz16_r(III_stereo_L23,REG7)(hi)
0xDCA5E7C1,	//0x1ff6		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x1ff7		VoC_endloop0
0xD623F052,	//0x1ff8		VoC_lw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
		//0x1ff9		III_stereo_L23
0x0A84D610,	//0x1ffa		VoC_lw16i(REG4,0x1000)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x28041000,	//0x1ffc		VoC_and16_rd(REG4,0x4806)(lo)	|	VoC_lw16i(REG4,0x1000)(hi)
0x31844806,	//0x1ffe		VoC_bez16_r(III_stereo_L35,REG4)(lo)	|	VoC_and16_rd(REG4,0x4806)(hi)
0x07852063,	//0x2000		VoC_sub16_rd(REG5,REG0,0x40a)(lo)	|	VoC_bez16_r(III_stereo_L35,REG4)(hi)
0x0A86040A,	//0x2002		VoC_lw16i(REG6,0x4386)(lo)	|	VoC_sub16_rd(REG5,REG0,0x40a)(hi)
0x07004386,	//0x2004		VoC_add16_rd(REG0,REG0,0x44dc)(lo)	|	VoC_lw16i(REG6,0x4386)(hi)
0x180544DC,	//0x2006		VoC_lw16i_set_inc(REG1,0x48d8,0x1)(lo)	|	VoC_add16_rd(REG0,REG0,0x44dc)(hi)
0x180648D8,	//0x2008		VoC_lw16i_set_inc(REG2,0x6382,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x48d8,0x1)(hi)
0xD8556382,	//0x200a		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6382,0x1)(hi)
0x00011605,	//0x200c		VoC_and16_ri(REG5,0x1)
0x4175F8E5,	//0x200e		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
0xE0ADE004,	//0x2010		VoC_movreg16(RL6_HI,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
		//0x2012		III_stereo_L24
0x40644824,	//0x2012		VoC_blt16_rd(III_stereo_L25,REG4,0x4064)
0x20B42B00,	//0x2014		VoC_jump_lg(III_stereo_L44)
		//0x2016		III_stereo_L25
0xF68C58B6,	//0x2016		VoC_movreg16(RL6_LO,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x5825E0CA,	//0x2018		VoC_lw16_p(REG5,REG2,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG6,DEFAULT)
0x642CE014,	//0x201a		VoC_and16_rr(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x3184D897,	//0x201c		VoC_bez16_r(III_stereo_La10,REG4)(lo)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x1645205C,	//0x201e		VoC_and16_ri(REG5,0xfffe)(lo)	|	VoC_bez16_r(III_stereo_La10,REG4)(hi)
0x31877FFE,	//0x2020		VoC_bez16_r(III_stereo_L26,REG7)(lo)	|	VoC_and16_ri(REG5,0xfffe)(hi)
0xDC252026,	//0x2022		VoC_sw16_p(REG5,REG2,DEFAULT)	|	VoC_bez16_r(III_stereo_L26,REG7)(hi)
0x205C2B00,	//0x2024		VoC_jump_lg(III_stereo_La10)
		//0x2026		III_stereo_L26
0x3146D807,	//0x2026		VoC_bngtz16_r(III_stereo_La10,REG6)(lo)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xDF45205C,	//0x2028		VoC_push32(ACC1,DEFAULT)	|	VoC_bngtz16_r(III_stereo_La10,REG6)(hi)
0xF7845F40,	//0x202a		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xF0097050,	//0x202c		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD6307021,	//0x202e		VoC_lw16_sd(REG0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF6EF43CD,	//0x2030		VoC_movreg16(RL7_HI,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG7,REG1,DEFAULT)
0xF80D640F,	//0x2032		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG1,DEFAULT)
0x4020C020,	//0x2034		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x61A1F6EE,	//0x2036		VoC_movreg16(REG1,RL6_HI,DEFAULT)	|	VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)
0x5983F6C4,	//0x2038		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_movreg16(REG4,REG6,IN_PARALLEL)
0x0701C14D,	//0x203a		VoC_add16_rd(REG1,REG0,0x4062)(lo)	|	VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)
0x58554062,	//0x203c		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0x4062)(hi)
0x2E20F68A,	//0x203e		VoC_loop_r(0,REG4)(lo)	|	VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)
0xE1E42056,	//0x2040		VoC_movreg16(REG4,RL7_HI,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0x20543184,	//0x2042		VoC_bez16_r(III_stereo_La11,REG4)
0x1485DF43,	//0x2044		VoC_lw32_d(ACC1,0x405e)(lo)	|	VoC_push32(REG67,DEFAULT)
0xC95B405E,	//0x2046		VoC_add32_rr(REG67,ACC1,REG67,DEFAULT)	|	VoC_lw32_d(ACC1,0x405e)(hi)
0xF966CD7C,	//0x2048		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xCE6EFDE4,	//0x204a		VoC_macX_rr(REG5,REG6,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0x61C4FFC0,	//0x204c		VoC_movreg16(REG4,RL7_LO,DEFAULT)	|	VoC_NOP
0x3184DF03,	//0x204e		VoC_bez16_r(III_stereo_La12,REG4)(lo)	|	VoC_pop32(REG67,IN_PARALLEL)
0xDD842053,	//0x2050		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_bez16_r(III_stereo_La12,REG4)(hi)
0xFF23E5C2,	//0x2052		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_jump(III_stereo_La11)
		//0x2053		III_stereo_La12
		//0x2054		III_stereo_La11
0xDDCBDE00,	//0x2054		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x2056		VoC_endloop0
0xF7E45983,	//0x2056		VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xF0045F00,	//0x2058		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xF0055F05,	//0x205a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
		//0x205c		III_stereo_La10
0xDE106184,	//0x205c		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0x4134E146,	//0x205e		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC1_LO,DEFAULT)
0x2B00DE00,	//0x2060		VoC_jump_lg(III_stereo_L24)(lo)	|	VoC_inc_p(REG0,IN_PARALLEL)
0xF0062012,	//0x2062		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jump_lg(III_stereo_L24)(hi)
		//0x2063		III_stereo_L35
0x63821805,	//0x2064		VoC_lw16i_set_inc(REG1,0x6382,0x1)
0x44DC0700,	//0x2066		VoC_add16_rd(REG0,REG0,0x44dc)
		//0x2068		III_stereo_Lb01
0x40644826,	//0x2068		VoC_blt16_rd(III_stereo_Lb,REG6,0x4064)
0x20B42B00,	//0x206a		VoC_jump_lg(III_stereo_L44)
		//0x206c		III_stereo_Lb
0xE01458B5,	//0x206c		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xF6CF5812,	//0x206e		VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)	|	VoC_lw16_p(REG2,REG1,DEFAULT)
0xD8876414,	//0x2070		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG2,DEFAULT)
0x20AE3184,	//0x2072		VoC_bez16_r(III_stereo_Lb10,REG4)
0x42CA4887,	//0x2074		VoC_blt16_rd(III_stereo_Lb0,REG7,0x42ca)
0x7FFE1642,	//0x2076		VoC_and16_ri(REG2,0xfffe)
0xDC12FFC0,	//0x2078		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_NOP
0x20AE2B00,	//0x207a		VoC_jump_lg(III_stereo_Lb10)
		//0x207c		III_stereo_Lb0
0x20AE3145,	//0x207c		VoC_bngtz16_r(III_stereo_Lb10,REG5)
0xDF405FC3,	//0x207e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xD64060E3,	//0x2080		VoC_lw16_sd(REG0,0x3,IN_PARALLEL)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x437E0A84,	//0x2082		VoC_lw16i(REG4,0x437e)
0x4030C030,	//0x2084		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x6002C11E,	//0x2086		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG3,IN_PARALLEL)
0x071BC31B,	//0x2088		VoC_add16_rd(REG3,REG3,0x44f0)(lo)	|	VoC_sub16_rr(REG3,REG4,REG3,IN_PARALLEL)
0x070144F0,	//0x208a		VoC_add16_rd(REG1,REG0,0x4062)(lo)	|	VoC_add16_rd(REG3,REG3,0x44f0)(hi)
0x58644062,	//0x208c		VoC_lw16_p(REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0x4062)(hi)
0x5833F008,	//0x208e		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xFFC0F009,	//0x2090		VoC_NAD	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x20AA2E28,	//0x2092		VoC_loop_r(0,REG5)
0x405E1484,	//0x2094		VoC_lw32_d(ACC0,0x405e)
0xC92BD9D5,	//0x2096		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG2,DEFAULT)
0xCD3CF966,	//0x2098		VoC_multf32_rr(ACC0,REG4,REG7,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFDE4FFC0,	//0x209a		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0CE66,	//0x209c		VoC_NOP	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xDDC4FFC0,	//0x209e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_NOP
0x405E1484,	//0x20a0		VoC_lw32_d(ACC0,0x405e)
0xF966C92B,	//0x20a2		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0xFFC0CCFC,	//0x20a4		VoC_NOP	|	VoC_multf32_rr(ACC0,REG3,REG7,DEFAULT)
0xCE5EFDE4,	//0x20a6		VoC_macX_rr(REG3,REG6,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xFFC0FFC0,	//0x20a8		VoC_NOP	|	VoC_NOP
		//0x20aa		VoC_endloop0
0x5F00DDCC,	//0x20aa		VoC_pop32(REG01,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xF030DF83,	//0x20ac		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(REG3,IN_PARALLEL)
		//0x20ae		III_stereo_Lb10
0xF00561E6,	//0x20ae		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_HI,DEFAULT)
0xDE08C1AE,	//0x20b0		VoC_inc_p(REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x20682B00,	//0x20b2		VoC_jump_lg(III_stereo_Lb01)
		//0x20b4		III_stereo_L44
0xE0275F81,	//0x20b4		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x48001401,	//0x20b6		VoC_lw16_d(REG1,0x4800)
0xE439DF83,	//0x20b8		VoC_and16_rr(REG1,REG7,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x3181DF80,	//0x20ba		VoC_bez16_r(III_stereo_L50,REG1)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x0A872106,	//0x20bc		VoC_lw16i(REG7,0xb50)(lo)	|	VoC_bez16_r(III_stereo_L50,REG1)(hi)
0x14060B50,	//0x20be		VoC_lw16_d(REG6,0x4806)(lo)	|	VoC_lw16i(REG7,0xb50)(hi)
0x16864806,	//0x20c0		VoC_or16_ri(REG6,0x200)(lo)	|	VoC_lw16_d(REG6,0x4806)(hi)
0x07010200,	//0x20c2		VoC_add16_rd(REG1,REG0,0x4062)(lo)	|	VoC_or16_ri(REG6,0x200)(hi)
0x7F074062,	//0x20c4		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0x4062)(hi)
0xFF42F661,	//0x20c6		VoC_lw32z(REG45,DEFAULT)	|	VoC_movreg16(REG1,REG3,IN_PARALLEL)
0x48061506,	//0x20c8		VoC_sw16_d(REG6,0x4806)
0x63821804,	//0x20ca		VoC_lw16i_set_inc(REG0,0x6382,0x1)
		//0x20cc		III_stereo_L45
0x40644824,	//0x20cc		VoC_blt16_rd(III_stereo_L45_1,REG4,0x4064)
0x21062B00,	//0x20ce		VoC_jump_lg(III_stereo_L50)
		//0x20d0		III_stereo_L45_1
0xF68A58B6,	//0x20d0		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xF68B5885,	//0x20d2		VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x44EA4025,	//0x20d4		VoC_be16_rd(III_stereo_L45_2,REG5,0x44ea)
0x21022B00,	//0x20d6		VoC_jump_lg(III_stereo_L49)
		//0x20d8		III_stereo_L45_2
0x21023146,	//0x20d8		VoC_bngtz16_r(III_stereo_L49,REG6)
0xF00B5FC3,	//0x20da		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xFDF9FF29,	//0x20dc		VoC_shru32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xDF4049C9,	//0x20de		VoC_push32(REG01,IN_PARALLEL)	|	VoC_add32_rr(REG23,RL7,REG23,DEFAULT)
0xF00A6040,	//0x20e0		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x20FE2E30,	//0x20e2		VoC_loop_r(0,REG6)
0xD99CD996,	//0x20e4		VoC_lw32_p(ACC0,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xCBA049A6,	//0x20e6		VoC_sub32_rr(REG01,RL6,ACC0,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0x405E1484,	//0x20e8		VoC_lw32_d(ACC0,0x405e)
0xF964C932,	//0x20ea		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0xFFC0CDEC,	//0x20ec		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xFDE4FFC0,	//0x20ee		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_NOP
0xFFC0CE7C,	//0x20f0		VoC_NOP	|	VoC_macX_rr(REG7,REG4,DEFAULT)
0xDDD4FFC0,	//0x20f2		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x405E1484,	//0x20f4		VoC_lw32_d(ACC0,0x405e)
0xF964C902,	//0x20f6		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rr(REG45,ACC0,REG01,DEFAULT)
0xFFC0CDEC,	//0x20f8		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xCE7CFDE4,	//0x20fa		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xFFC0FFC0,	//0x20fc		VoC_NOP	|	VoC_NOP
		//0x20fe		VoC_endloop0
0xDF83DDDC,	//0x20fe		VoC_pop16(REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xDF006164,	//0x2100		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
		//0x2102		III_stereo_L49
0xF0074134,	//0x2102		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x20CC2B00,	//0x2104		VoC_jump_lg(III_stereo_L45)
		//0x2106		III_stereo_L50
0xE580F004,	//0x2106		VoC_return	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x2107		III_stereo_L52
		//0x2108		CII_III_imdct_l
0xDF405FE9,	//0x2108		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF5E1701A,	//0x210a		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0xF6245FC7,	//0x210c		VoC_movreg16(REG4,REG1,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x22022B80,	//0x210e		VoC_jal(CII_imdct36)
0xDF875F00,	//0x2110		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xF6205FA9,	//0x2112		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x434E1806,	//0x2114		VoC_lw16i_set_inc(REG2,0x434e,0x1)
0x405E1486,	//0x2116		VoC_lw32_d(RL6,0x405e)
0xFF477019,	//0x2118		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x212C31C7,	//0x211a		VoC_bnez16_r(III_imdct_l_100,REG7)
0x99D5938B,	//0x211c		VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)
0x7DE5F966,	//0x211e		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFFC0D132,	//0x2120		VoC_NAD	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
0x938B6C87,	//0x2122		VoC_add32inc_rp(REG67,RL6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x24,DEFAULT)
0x99D57966,	//0x2124		VoC_multf32_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x7DE5DDC5,	//0x2126		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x938BD132,	//0x2128		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
		//0x2129		VoC_endloop0
0x21652B00,	//0x212a		VoC_jump_lg(III_imdct_l_end)
		//0x212c		III_imdct_l_100
0x040A45A7,	//0x212c		VoC_bne16_rd(III_imdct_l_200,REG7,0x40a)
0x2C05F245,	//0x212e		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_short(REG5,0x12,DEFAULT)
0xE0202143,	//0x2130		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x99D5938B,	//0x2132		VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)
0x7DE5F966,	//0x2134		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFFC0D132,	//0x2136		VoC_NAD	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
0x938B6748,	//0x2138		VoC_add32inc_rp(REG67,RL6,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x99D57966,	//0x213a		VoC_multf32_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x7DE5DDC5,	//0x213c		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x938BD132,	//0x213e		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
		//0x2140		VoC_endloop0
0x1806F0C5,	//0x2140		VoC_lw16i_set_inc(REG2,0x4378,0x1)(lo)	|	VoC_lw16i_short(REG5,0x6,DEFAULT)
0x07094378,	//0x2142		VoC_add16_rd(REG1,REG1,0x44e8)(lo)	|	VoC_lw16i_set_inc(REG2,0x4378,0x1)(hi)
		//0x2143		VoC_endloop1
0xE8C144E8,	//0x2144		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x44e8)(hi)
		//0x2146		VoC_endloop0
0xE5DEDDC7,	//0x2146		VoC_jump(III_imdct_l_end)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
		//0x2148		III_imdct_l_200
0x42CB45AF,	//0x2148		VoC_bne16_rd(III_imdct_l_end,REG7,0x42cb)
0xE06568C2,	//0x214a		VoC_lw16i_short(REG5,0x6,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
		//0x214c		VoC_endloop0
0x1806DDCF,	//0x214c		VoC_lw16i_set_inc(REG2,0x4372,0x1)(lo)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0x2C054372,	//0x214e		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x4372,0x1)(hi)
0xE0202163,	//0x2150		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x99D5938B,	//0x2152		VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)
0x7DE5F966,	//0x2154		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xFFC0D132,	//0x2156		VoC_NAD	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
0x938B6748,	//0x2158		VoC_add32inc_rp(REG67,RL6,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x99D57966,	//0x215a		VoC_multf32_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x7DE5DDC5,	//0x215c		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x938BD132,	//0x215e		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
		//0x2160		VoC_endloop0
0x1806F245,	//0x2160		VoC_lw16i_set_inc(REG2,0x4360,0x1)(lo)	|	VoC_lw16i_short(REG5,0x12,DEFAULT)
0x07094360,	//0x2162		VoC_add16_rd(REG1,REG1,0x44e8)(lo)	|	VoC_lw16i_set_inc(REG2,0x4360,0x1)(hi)
		//0x2163		VoC_endloop1
0xE58044E8,	//0x2164		VoC_return	|	VoC_add16_rd(REG1,REG1,0x44e8)(hi)
		//0x2165		III_imdct_l_end
		//0x2166		CII_III_imdct_s
0x432A1805,	//0x2166		VoC_lw16i_set_inc(REG1,0x432a,0x1)
0x405E1487,	//0x2168		VoC_lw32_d(RL7,0x405e)
0xFF445F40,	//0x216a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x27A6180A,	//0x216c		VoC_lw16i_set_inc(REG2,0x27a6,0x2)
0x27B01FBB,	//0x216e		VoC_lw16i_set_inc(REG3,0x27b0,0xfffffffe)
0xF4027085,	//0x2170		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0x279A0A8C,	//0x2172		VoC_lw16i(RL6_LO,0x279a)
0x27A40A8D,	//0x2174		VoC_lw16i(RL6_HI,0x27a4)
0xFFC0F019,	//0x2176		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
		//0x2178		III_imdcdt_loop_100
0x21922C07,	//0x2178		VoC_loop_i(0x1,0x3)
0xFFC0F044,	//0x217a		VoC_NAD	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x217c		III_imdcdt_loop_110
0xF90C7F44,	//0x217c		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x93C368C7,	//0x217e		VoC_add32inc_rp(REG67,RL7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xF96699CD,	//0x2180		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,DEFAULT)
0xD1717DE5,	//0x2182		VoC_macXinc_rp(REG6,REG1,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xC92C93C3,	//0x2184		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)
		//0x2185		VoC_endloop0
0xFF0E7F31,	//0x2186		VoC_movreg32(RL6,REG23,IN_PARALLEL)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0x218C3184,	//0x2188		VoC_bez16_r(III_imdcdt_loop_120,REG4)
0x42D60BA4,	//0x218a		VoC_sub32_dr(ACC0,0x42d6,ACC0)
		//0x218c		III_imdcdt_loop_120
0xD90B5DD4,	//0x218c		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xF6C05DDC,	//0x218e		VoC_movreg16(REG0,REG6,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x217C31C4,	//0x2190		VoC_bnez16_r(III_imdcdt_loop_110,REG4)
		//0x2192		VoC_endloop1
0x7248FFC0,	//0x2192		VoC_lw16i_short(ACC0_LO,0x12,DEFAULT)	|	VoC_NAD
0xDF03E1E9,	//0x2194		VoC_pop32(REG67,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0x1e,IN_PARALLEL)
0x44D60736,	//0x2196		VoC_add16_rd(REG6,REG6,0x44d6)
0xF6C060E1,	//0x2198		VoC_movreg16(REG0,REG6,IN_PARALLEL)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xF90D5F43,	//0x219a		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xC9A64861,	//0x219c		VoC_add32_rr(RL6,RL6,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,ACC0,DEFAULT)
0x217831C5,	//0x219e		VoC_bnez16_r(III_imdcdt_loop_100,REG5)
0x63841831,	//0x21a0		VoC_lw16i_set_inc(REG1,0x6384,0xc)
0x279A1830,	//0x21a2		VoC_lw16i_set_inc(REG0,0x279a,0xc)
0x43721802,	//0x21a4		VoC_lw16i_set_inc(REG2,0x4372,0x0)
0x43781803,	//0x21a6		VoC_lw16i_set_inc(REG3,0x4378,0x0)
0x2C0DFF06,	//0x21a8		VoC_loop_i(0x1,0x6)(lo)	|	VoC_movreg32(RL6,REG01,DEFAULT)
0xFF4421CE,	//0x21aa		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x6)(hi)
0x99D593C3,	//0x21ac		VoC_multf32_rp(ACC1,REG7,REG2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)
0x7DE5F966,	//0x21ae		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0x93C3D072,	//0x21b0		VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)	|	VoC_macX_rp(REG6,REG2,IN_PARALLEL)
0xDDCDDDCC,	//0x21b2		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x99DD7966,	//0x21b4		VoC_multf32_rp(ACC1,REG7,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xE84DFFC0,	//0x21b6		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
0x93C27DE5,	//0x21b8		VoC_add32inc_rp(REG45,RL7,REG0,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xFFC09954,	//0x21ba		VoC_NOP	|	VoC_multf32_rp(ACC0,REG5,REG2,DEFAULT)
0x7DE4F964,	//0x21bc		VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_shru16_ri(REG4,0xc,DEFAULT)
0xD062D073,	//0x21be		VoC_macX_rp(REG4,REG2,DEFAULT)	|	VoC_macX_rp(REG6,REG3,IN_PARALLEL)
0xC92C93C3,	//0x21c0		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG0,DEFAULT)
0x99DD7966,	//0x21c2		VoC_multf32_rp(ACC1,REG7,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
		//0x21c4		VoC_endloop0
0xFF445DCC,	//0x21c4		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xD0737DE5,	//0x21c6		VoC_macX_rp(REG6,REG3,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)
0xE0177026,	//0x21c8		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC99E4859,	//0x21ca		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,REG67,DEFAULT)
0xC99E5DCD,	//0x21cc		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x21ce		VoC_endloop1
0xFF305DCC,	//0x21ce		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE580DF00,	//0x21d0		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x21d2		CII_III_aliasreduce
0xF799F01A,	//0x21d2		VoC_lw16i_short(FORMAT32,0xfffffffc,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,DEFAULT)
0x431A1806,	//0x21d4		VoC_lw16i_set_inc(REG2,0x431a,0x1)
0x43221807,	//0x21d6		VoC_lw16i_set_inc(REG3,0x4322,0x1)
0xF050F7D1,	//0x21d8		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0x1486DF41,	//0x21da		VoC_lw32_d(RL6,0x405e)(lo)	|	VoC_push32(REG23,DEFAULT)
0x0781405E,	//0x21dc		VoC_sub16_rd(REG1,REG0,0x44ea)(lo)	|	VoC_lw32_d(RL6,0x405e)(hi)
0x2E3944EA,	//0x21de		VoC_loop_r(1,REG7)(lo)	|	VoC_sub16_rd(REG1,REG0,0x44ea)(hi)
0xD90921FD,	//0x21e0		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0xFF457F44,	//0x21e2		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x21F92C10,	//0x21e4		VoC_loop_i(0x0,0x8)
0xFF07118B,	//0x21e6		VoC_movreg32(RL7,REG01,IN_PARALLEL)	|	VoC_add32_rp(REG67,RL6,REG1,DEFAULT)
0x91801582,	//0x21e8		VoC_add32_rp(REG01,RL6,REG0,IN_PARALLEL)	|	VoC_sub32_rp(REG45,RL6,REG0,DEFAULT)
0xD00A7966,	//0x21ea		VoC_mac32_rp(REG1,REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xF9607964,	//0x21ec		VoC_shru16_ri(REG0,0xc,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xc,DEFAULT)
0xD03B502B,	//0x21ee		VoC_mac32_rp(REG7,REG3,IN_PARALLEL)	|	VoC_mac32_rp(REG5,REG3,DEFAULT)
0xD0425072,	//0x21f0		VoC_macX_rp(REG0,REG2,IN_PARALLEL)	|	VoC_macX_rp(REG6,REG2,DEFAULT)
0xD1735063,	//0x21f2		VoC_macXinc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG3,DEFAULT)
0xFF38513A,	//0x21f4		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
0x5DC5FFC0,	//0x21f6		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_NOP
0x5DCCFF45,	//0x21f8		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
		//0x21f9		VoC_endloop0
0x0700FF44,	//0x21fa		VoC_add16_rd(REG0,REG0,0x44d1)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x078144D1,	//0x21fc		VoC_sub16_rd(REG1,REG0,0x44ea)(lo)	|	VoC_add16_rd(REG0,REG0,0x44d1)(hi)
		//0x21fd		VoC_endloop1
0xF01944EA,	//0x21fe		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_sub16_rd(REG1,REG0,0x44ea)(hi)
0xE580DF01,	//0x2200		VoC_return	|	VoC_pop32(REG23,DEFAULT)
		//0x2202		CII_imdct36
0xDFC4DFC0,	//0x2202		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x406A1805,	//0x2204		VoC_lw16i_set_inc(REG1,0x406a,0x1)
0x279A1806,	//0x2206		VoC_lw16i_set_inc(REG2,0x279a,0x1)
0x27AC1807,	//0x2208		VoC_lw16i_set_inc(REG3,0x27ac,0x1)
0x820D820C,	//0x220a		VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)
0x405E1486,	//0x220c		VoC_lw32_d(RL6,0x405e)
0x91A3E929,	//0x220e		VoC_add32_rp(REG67,RL6,REG4,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0x796691AA,	//0x2210		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_add32_rp(REG45,RL6,REG5,DEFAULT)
0x7964DCA7,	//0x2212		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)
0x5CB6DCA5,	//0x2214		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)
0x5CB4820C,	//0x2216		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,IN_PARALLEL)
		//0x2217		VoC_endloop0
0x1805820D,	//0x2218		VoC_lw16i_set_inc(REG1,0x406c,0x1)(lo)	|	VoC_add16inc_rp(REG5,REG0,REG1,IN_PARALLEL)
0xFFC0406C,	//0x221a		VoC_NOP	|	VoC_lw16i_set_inc(REG1,0x406c,0x1)(hi)
0x820B820A,	//0x221c		VoC_add16inc_rp(REG3,REG0,REG1,DEFAULT)	|	VoC_add16inc_rp(REG2,REG0,REG1,DEFAULT)
0x9192020A,	//0x221e		VoC_add32_rp(REG45,RL6,REG2,IN_PARALLEL)	|	VoC_add16inc_rp(REG2,REG0,REG1,DEFAULT)
0x919B020B,	//0x2220		VoC_add32_rp(REG67,RL6,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG0,REG1,DEFAULT)
0x27BE0A82,	//0x2222		VoC_lw16i(REG2,0x27be)
0x0A839492,	//0x2224		VoC_lw16i(REG3,0x27c6)(lo)	|	VoC_sub32_rp(REG45,REG45,REG2,DEFAULT)
0x796427C6,	//0x2226		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_lw16i(REG3,0x27c6)(hi)
0x796690DB,	//0x2228		VoC_shru16_ri(REG6,0xc,DEFAULT)	|	VoC_add32_rp(REG67,REG67,REG3,IN_PARALLEL)
0x020CDCA5,	//0x222a		VoC_add16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)
0x020DDCA7,	//0x222c		VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)
0x5CB6DCB4,	//0x222e		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)
0x59A4820C,	//0x2230		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,IN_PARALLEL)
0x59AD820D,	//0x2232		VoC_lw32_p(ACC1,REG5,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,IN_PARALLEL)
0x59A7820C,	//0x2234		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,IN_PARALLEL)
0x59AB820D,	//0x2236		VoC_lw32_p(REG67,REG5,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,IN_PARALLEL)
0x14E3820C,	//0x2238		VoC_sub32_rp(REG67,REG67,REG4,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,IN_PARALLEL)
0x15EF820D,	//0x223a		VoC_sub32_rp(RL7,RL7,REG5,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,IN_PARALLEL)
0x1565820C,	//0x223c		VoC_sub32_rp(ACC1,ACC1,REG4,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,IN_PARALLEL)
0x152C820D,	//0x223e		VoC_sub32_rp(ACC0,ACC0,REG5,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG1,IN_PARALLEL)
0x1524C975,	//0x2240		VoC_sub32_rp(ACC0,ACC0,REG4,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)
0x4934820C,	//0x2242		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_add16inc_rp(REG4,REG0,REG1,IN_PARALLEL)
0x020D956D,	//0x2244		VoC_add16inc_rp(REG5,REG0,REG1,DEFAULT)	|	VoC_sub32_rp(ACC1,ACC1,REG5,IN_PARALLEL)
0xCB3A95E7,	//0x2246		VoC_sub32_rr(REG45,ACC0,RL7,DEFAULT)	|	VoC_sub32_rp(RL7,RL7,REG4,IN_PARALLEL)
0xF96414EB,	//0x2248		VoC_shru16_ri(REG4,0xc,IN_PARALLEL)	|	VoC_sub32_rp(REG67,REG67,REG5,DEFAULT)
0xC95B5CA5,	//0x224a		VoC_add32_rr(REG67,ACC1,REG67,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xDF435CB4,	//0x224c		VoC_push32(REG67,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xFF227966,	//0x224e		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xc,DEFAULT)
0xF9645CA7,	//0x2250		VoC_shru16_ri(REG4,0xc,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0x5CA5DCB6,	//0x2252		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x5CB4FF2B,	//0x2254		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_movreg32(REG67,ACC1,IN_PARALLEL)
0x5CA7F966,	//0x2256		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0xc,IN_PARALLEL)
0x5CB6FF3A,	//0x2258		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_movreg32(REG45,RL7,IN_PARALLEL)
0x7964C8B2,	//0x225a		VoC_shru16_ri(REG4,0xc,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL6,IN_PARALLEL)
0x5CA5DF03,	//0x225c		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0x5CB4C8F3,	//0x225e		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)
0x1808F966,	//0x2260		VoC_lw16i_set_inc(REG0,0x279a,0x2)(lo)	|	VoC_shru16_ri(REG6,0xc,IN_PARALLEL)
0x1809279A,	//0x2262		VoC_lw16i_set_inc(REG1,0x27ac,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x279a,0x2)(hi)
0x180B27AC,	//0x2264		VoC_lw16i_set_inc(REG3,0x43f4,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x27ac,0x2)(hi)
0x7F4443F4,	//0x2266		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x43f4,0x2)(hi)
0x59DADC36,	//0x2268		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw16_p(REG6,REG3,IN_PARALLEL)
0xD220DCA7,	//0x226a		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)
0x0A80D261,	//0x226c		VoC_lw16i(REG0,0x27be)(lo)	|	VoC_bimacXinc_rp(REG45,REG1)
0x0A8127BE,	//0x226e		VoC_lw16i(REG1,0x27c6)(lo)	|	VoC_lw16i(REG0,0x27be)(hi)
0xDF4427C6,	//0x2270		VoC_push32(ACC0,DEFAULT)	|	VoC_lw16i(REG1,0x27c6)(hi)
0xD220D9DA,	//0x2272		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x5E00D261,	//0x2274		VoC_inc_p(REG0,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xD9DADE08,	//0x2276		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0xD220DF44,	//0x2278		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_push32(ACC0,DEFAULT)
0xD9DAD261,	//0x227a		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xD261D220,	//0x227c		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0x44D00A82,	//0x227e		VoC_lw16i(REG2,0x44d0)
0x63840A87,	//0x2280		VoC_lw16i(REG7,0x6384)
0xFF4503D6,	//0x2282		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0x27C20A80,	//0x2284		VoC_lw16i(REG0,0x27c2)
0xDDB44B65,	//0x2286		VoC_sw32_p(ACC0,REG6,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x0A8183D6,	//0x2288		VoC_lw16i(REG1,0x27ca)(lo)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0xDDB527CA,	//0x228a		VoC_sw32_p(ACC1,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x27ca)(hi)
0xFF4459DA,	//0x228c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD261D220,	//0x228e		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0xD220D9DA,	//0x2290		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD90FD261,	//0x2292		VoC_lw32_sd(RL7,0x0,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x83D54B3C,	//0x2294		VoC_add16inc_rp(REG5,REG7,REG2,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL7,DEFAULT)
0x0A8083D6,	//0x2296		VoC_lw16i(REG0,0x27c0)(lo)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0x0A8127C0,	//0x2298		VoC_lw16i(REG1,0x27c8)(lo)	|	VoC_lw16i(REG0,0x27c0)(hi)
0xDDAC27C8,	//0x229a		VoC_sw32_p(ACC0,REG5,DEFAULT)	|	VoC_lw16i(REG1,0x27c8)(hi)
0x59DADDB4,	//0x229c		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xD220FF44,	//0x229e		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x0A81D261,	//0x22a0		VoC_lw16i(REG1,0x27ae)(lo)	|	VoC_bimacXinc_rp(REG45,REG1)
0x493C27AE,	//0x22a2		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw16i(REG1,0x27ae)(hi)
0x83D683D5,	//0x22a4		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG5,REG7,REG2,IN_PARALLEL)
0x279C0A80,	//0x22a6		VoC_lw16i(REG0,0x279c)
0xDDB4DDAC,	//0x22a8		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
0xFF4459DA,	//0x22aa		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD261D220,	//0x22ac		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0xD220D9DA,	//0x22ae		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD917D261,	//0x22b0		VoC_lw32_sd(RL7,0x1,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x68C4C9E7,	//0x22b2		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xD9DAFF44,	//0x22b4		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xD261D220,	//0x22b6		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
		//0x22b7		VoC_endloop0
0xFF4503D6,	//0x22b8		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0xC93C03D5,	//0x22ba		VoC_add32_rr(ACC0,ACC0,RL7,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)
0x27A00A80,	//0x22bc		VoC_lw16i(REG0,0x27a0)
0xDDB44B65,	//0x22be		VoC_sw32_p(ACC0,REG6,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x27B20A81,	//0x22c0		VoC_lw16i(REG1,0x27b2)
0x68C4DDAD,	//0x22c2		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
0xD9DAFF44,	//0x22c4		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xD261D220,	//0x22c6		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
		//0x22c7		VoC_endloop0
0x03D583D6,	//0x22c8		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0x0A80C93C,	//0x22ca		VoC_lw16i(REG0,0x27a0)(lo)	|	VoC_add32_rr(ACC0,ACC0,RL7,IN_PARALLEL)
0xDDB427A0,	//0x22cc		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_lw16i(REG0,0x27a0)(hi)
0x0A81DDAC,	//0x22ce		VoC_lw16i(REG1,0x27b2)(lo)	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
0x68C427B2,	//0x22d0		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i(REG1,0x27b2)(hi)
0xD9DAFF44,	//0x22d2		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xD261D220,	//0x22d4		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
		//0x22d5		VoC_endloop0
0x03D583D6,	//0x22d6		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0x0A80CB3C,	//0x22d8		VoC_lw16i(REG0,0x279a)(lo)	|	VoC_sub32_rr(ACC0,ACC0,RL7,IN_PARALLEL)
0xDDB4279A,	//0x22da		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_lw16i(REG0,0x279a)(hi)
0x0A81DDAC,	//0x22dc		VoC_lw16i(REG1,0x27ac)(lo)	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
0x59DA27AC,	//0x22de		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw16i(REG1,0x27ac)(hi)
0xD220FF44,	//0x22e0		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xD9DAD261,	//0x22e2		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xD220FF27,	//0x22e4		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xD9DAD261,	//0x22e6		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xD261D220,	//0x22e8		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0x68C4FFC0,	//0x22ea		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_NOP
0xD9DAFF26,	//0x22ec		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0xD261D220,	//0x22ee		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
		//0x22ef		VoC_endloop0
0xFF4503D6,	//0x22f0		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0xCB6503D5,	//0x22f2		VoC_sub32_rr(ACC1,ACC1,ACC0,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)
0x27A00A80,	//0x22f4		VoC_lw16i(REG0,0x27a0)
0xDDADDDB4,	//0x22f6		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x27B20A81,	//0x22f8		VoC_lw16i(REG1,0x27b2)
0xFF4468C4,	//0x22fa		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x22fc		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x22fe		VoC_endloop0
0x03D6D261,	//0x22fe		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x03D5FF45,	//0x2300		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xCB65C934,	//0x2302		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x27A00A80,	//0x2304		VoC_lw16i(REG0,0x27a0)
0xDDADDDB4,	//0x2306		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x27B20A81,	//0x2308		VoC_lw16i(REG1,0x27b2)
0xFF4468C4,	//0x230a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x230c		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x230e		VoC_endloop0
0x83D6D261,	//0x230e		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xC93503D5,	//0x2310		VoC_add32_rr(ACC1,ACC0,RL6,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)
0x279C0A80,	//0x2312		VoC_lw16i(REG0,0x279c)
0xDDADDDB5,	//0x2314		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0x27AE0A81,	//0x2316		VoC_lw16i(REG1,0x27ae)
0xFF4459DA,	//0x2318		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD261D220,	//0x231a		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0xD220D9DA,	//0x231c		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x0A80D261,	//0x231e		VoC_lw16i(REG0,0x27a0)(lo)	|	VoC_bimacXinc_rp(REG45,REG1)
0xC93E27A0,	//0x2320		VoC_add32_rr(RL6,ACC0,RL7,DEFAULT)	|	VoC_lw16i(REG0,0x27a0)(hi)
0x27B20A81,	//0x2322		VoC_lw16i(REG1,0x27b2)
0xFF4468C4,	//0x2324		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x2326		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x2328		VoC_endloop0
0x03D6D261,	//0x2328		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x03D5FF45,	//0x232a		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x0A80C934,	//0x232c		VoC_lw16i(REG0,0x27a0)(lo)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x4B6527A0,	//0x232e		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_lw16i(REG0,0x27a0)(hi)
0x0A81DDB4,	//0x2330		VoC_lw16i(REG1,0x27b2)(lo)	|	VoC_sw32_p(ACC0,REG6,IN_PARALLEL)
0xDDAD27B2,	//0x2332		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_lw16i(REG1,0x27b2)(hi)
0xFF4468C4,	//0x2334		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x2336		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x2338		VoC_endloop0
0x83D6D261,	//0x2338		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xC93403D5,	//0x233a		VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)
0x27A00A80,	//0x233c		VoC_lw16i(REG0,0x27a0)
0xDDACDDB4,	//0x233e		VoC_sw32_p(ACC0,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x27B20A81,	//0x2340		VoC_lw16i(REG1,0x27b2)
0xFF4468C4,	//0x2342		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x2344		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x2346		VoC_endloop0
0x83D6D261,	//0x2346		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xCB3403D5,	//0x2348		VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)
0x27BE0A80,	//0x234a		VoC_lw16i(REG0,0x27be)
0xDDACDDB4,	//0x234c		VoC_sw32_p(ACC0,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x27C60A81,	//0x234e		VoC_lw16i(REG1,0x27c6)
0xFF4459DA,	//0x2350		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD261D220,	//0x2352		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0x4B3ED9DA,	//0x2354		VoC_sub32_rr(RL6,ACC0,RL7,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD220FF44,	//0x2356		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x03D6D261,	//0x2358		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x03D5FF45,	//0x235a		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x4B65C934,	//0x235c		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0xDDB4FF07,	//0x235e		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_movreg32(RL7,REG01,IN_PARALLEL)
0xFF445DAD,	//0x2360		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
0xD220D9DA,	//0x2362		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD9DAD261,	//0x2364		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xD261D220,	//0x2366		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0xFF4503D6,	//0x2368		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)
0xC93403D5,	//0x236a		VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)
0xFF384B65,	//0x236c		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x5DADDDB4,	//0x236e		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xD9DAFF44,	//0x2370		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xD261D220,	//0x2372		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0xD220D9DA,	//0x2374		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x83D6D261,	//0x2376		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xC93403D5,	//0x2378		VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)
0x279C0A80,	//0x237a		VoC_lw16i(REG0,0x279c)
0x5DACDDB4,	//0x237c		VoC_sw32_p(ACC0,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x0A81FF44,	//0x237e		VoC_lw16i(REG1,0x27ae)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xD9DA27AE,	//0x2380		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw16i(REG1,0x27ae)(hi)
0xD261D220,	//0x2382		VoC_bimacXinc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0xD220D9DA,	//0x2384		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xDF06D261,	//0x2386		VoC_pop32(RL6,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0xCB36DF06,	//0x2388		VoC_sub32_rr(RL6,ACC0,RL6,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xFF4468C4,	//0x238a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x238c		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x238e		VoC_endloop0
0x03D6D261,	//0x238e		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x03D5FF45,	//0x2390		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xCB65C934,	//0x2392		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x27A00A80,	//0x2394		VoC_lw16i(REG0,0x27a0)
0xDDADDDB4,	//0x2396		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x27B20A81,	//0x2398		VoC_lw16i(REG1,0x27b2)
0xFF4468C4,	//0x239a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x239c		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x239e		VoC_endloop0
0x03D6D261,	//0x239e		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x03D5FF45,	//0x23a0		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xCB65C934,	//0x23a2		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x27A00A80,	//0x23a4		VoC_lw16i(REG0,0x27a0)
0xDDADDDB4,	//0x23a6		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x27B20A81,	//0x23a8		VoC_lw16i(REG1,0x27b2)
0xFF4468C4,	//0x23aa		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD220D9DA,	//0x23ac		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
		//0x23ae		VoC_endloop0
0x03D6D261,	//0x23ae		VoC_add16inc_rp(REG6,REG7,REG2,DEFAULT)	|	VoC_bimacXinc_rp(REG45,REG1)
0x03D5F007,	//0x23b0		VoC_add16inc_rp(REG5,REG7,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x7051C934,	//0x23b2		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0xDF80DF84,	//0x23b4		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG4,IN_PARALLEL)
0xDDB4F050,	//0x23b6		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xE580DDAC,	//0x23b8		VoC_return	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
