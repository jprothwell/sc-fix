		//0x1200		VoC_code_section_2
		//0x1200		vpp_AmjrAmrEncode
0xF4035FE9,	//0x1200		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF5F977F8,	//0x1202		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0xF405701C,	//0x1204		VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF407701E,	//0x1206		VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x003F0A96,	//0x1208		VoC_lw16i(STATUS,0x3f)
0xE2047005,	//0x120a		VoC_lw16i_short(REG4,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x01400A84,	//0x120c		VoC_lw16i(REG4,0x140)
0x40201582,	//0x120e		VoC_sw32_d(REG45,0x4020)
0x40221582,	//0x1210		VoC_sw32_d(REG45,0x4022)
0x40021484,	//0x1212		VoC_lw32_d(ACC0,0x4002)
0x00001781,	//0x1214		VoC_cfg_lg(0x0,CFG_DMA_WRAP)
0x00501782,	//0x1216		VoC_cfg_lg(0x50,CFG_DMA_SIZE)
0x03061783,	//0x1218		VoC_cfg_lg(0x306,CFG_DMA_LADDR)
0x7FC415C4,	//0x121a		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x121c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x121e		VoC_cfg_lg(0x8,)
0x060C0A80,	//0x1220		VoC_lw16i(REG0,0x60c)
0x40016C04,	//0x1222		VoC_bez16_d(NO_RESET_ENC,0x4001)
0x12B52B80,	//0x1224		VoC_jal(CII_encoder_reset)
		//0x1226		NO_RESET_ENC
0x1809F706,	//0x1226		VoC_lw16i_set_inc(REG1,0x20c,0x2)(lo)	|	VoC_lw16i_short(REG6,0xfff8,DEFAULT)
0xE0C7020C,	//0x1228		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x20c,0x2)(hi)
0x060C1808,	//0x122a		VoC_lw16i_set_inc(REG0,0x60c,0x2)
0x12312CA0,	//0x122c		VoC_loop_i(0x0,0x50)
0xE4DED9C6,	//0x122e		VoC_and32_rr(RL6,REG67,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDDCEFFC0,	//0x1230		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_NOP
		//0x1231		VoC_endloop0
0x020C1808,	//0x1232		VoC_lw16i_set_inc(REG0,0x20c,0x2)
0x12762B80,	//0x1234		VoC_jal(CII_encoder_homing_frame_test)
0x40011504,	//0x1236		VoC_sw16_d(REG4,0x4001)
0x182E2B80,	//0x1238		VoC_jal(CII_Pre_Process)
0x56FA0A87,	//0x123a		VoC_lw16i(REG7,0x56fa)
0x1A662B80,	//0x123c		VoC_jal(CII_COD_AMR_122)
0x40041484,	//0x123e		VoC_lw32_d(ACC0,0x4004)
0x00081782,	//0x1240		VoC_cfg_lg(0x8,CFG_DMA_SIZE)
0x03561783,	//0x1242		VoC_cfg_lg(0x356,CFG_DMA_LADDR)
0x7FC415C4,	//0x1244		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x1246		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x1248		VoC_cfg_lg(0x8,)
0xFFC0DFA9,	//0x124a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x124c		VoC_NAD	|	VoC_return
		//0x124e		CII_NORM_L_ACC0
0x00001805,	//0x124e		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xFF255F45,	//0x1250		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
0x125D3304,	//0x1252		VoC_bez32_r(G_PITCH_NORM_L_3_EXIT,ACC0)
0x125733C4,	//0x1254		VoC_bnltz32_r(G_PITCH_NORM_L_3_1,ACC0)
0xEBE5E3C4,	//0x1256		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_not32_r(ACC0,DEFAULT)
		//0x1257		G_PITCH_NORM_L_3_1
0x000E642C,	//0x1258		VoC_bnlt32_rd(G_PITCH_NORM_L_3_EXIT,ACC0,0xe)
0xDE087BFC,	//0x125a		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
		//0x125c		VoC_endloop0
0xFF2CFBFD,	//0x125c		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
		//0x125d		G_PITCH_NORM_L_3_EXIT
0xE580DF05,	//0x125e		VoC_return	|	VoC_pop32(ACC1,DEFAULT)
		//0x1260		CII_DIV_S
0x7FFF0A82,	//0x1260		VoC_lw16i(REG2,0x7fff)
0x12753508,	//0x1262		VoC_be16_rr(SCHUR1_DIV_S_11,REG1,REG0)
0x00001806,	//0x1264		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xF62E600C,	//0x1266		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
0xE00F700D,	//0x1268		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0xFBFE69C6,	//0x126a		VoC_shr32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_loop_i_short(0xe,DEFAULT)
0x1270363E,	//0x126c		VoC_bgt32_rr(SCHUR1_DIV_S_1,RL7,RL6)
0xDE104BBE,	//0x126e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
		//0x1270		SCHUR1_DIV_S_1
		//0x1270		VoC_endloop0
0xFBFE78FA,	//0x1270		VoC_shr32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x1275363E,	//0x1272		VoC_bgt32_rr(SCHUR1_DIV_S_11,RL7,RL6)
0xE580DE10,	//0x1274		VoC_return	|	VoC_inc_p(REG2,DEFAULT)
		//0x1275		SCHUR1_DIV_S_11
		//0x1276		CII_encoder_homing_frame_test
0x2CA0F004,	//0x1276		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xD9C3127C,	//0x1278		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0x000C5C23,	//0x127a		VoC_bne32_rd(CII_encoder_homing_frame_test_01,REG67,0xc)
		//0x127c		VoC_endloop0
0xF024FFC0,	//0x127c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_NAD
		//0x127e		CII_encoder_homing_frame_test_01
0xD9C4E580,	//0x127e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_return
		//0x127f		CII_Copy_M
0xD9C4E8A2,	//0x1280		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1282		VoC_endloop0
0xE580DDCC,	//0x1282		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x1284		CII_scale
0xF8FBD9C2,	//0x1284		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xFE14E6C4,	//0x1286		VoC_shr16_rr(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xD9C2FE15,	//0x1288		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_rr(REG5,REG2,DEFAULT)
		//0x128a		VoC_endloop0
0xE580DDCA,	//0x128a		VoC_return	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x128c		CII_copy_xy
0xF8FE59C4,	//0x128c		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C4E782,	//0x128e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x1290		VoC_endloop0
0xF80EDDCC,	//0x1290		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xC490E580,	//0x1292		VoC_mult16_rr(REG0,REG2,REG2,DEFAULT)	|	VoC_return
		//0x1293		CII_SEARCH_COPY
0x7030F032,	//0x1294		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xC210F641,	//0x1296		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0x0900F808,	//0x1298		VoC_add32_rd(REG01,REG01,0x5a9c)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x31825A9C,	//0x129a		VoC_bez16_r(SEARCH_COPY_label_100,REG2)(lo)	|	VoC_add32_rd(REG01,REG01,0x5a9c)(hi)
0xD88412A4,	//0x129c		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_bez16_r(SEARCH_COPY_label_100,REG2)(hi)
0xD8846682,	//0x129e		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x12a0		VoC_endloop0
0xDCB45884,	//0x12a0		VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x000A0780,	//0x12a2		VoC_sub16_rd(REG0,REG0,0xa)
		//0x12a4		SEARCH_COPY_label_100
0xC0105811,	//0x12a4		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x00230B11,	//0x12a6		VoC_sub16_dr(REG1,0x23,REG2)
0xDE105CB1,	//0x12a8		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
0x12B43181,	//0x12aa		VoC_bez16_r(SEARCH_COPY_label2_200,REG1)
0xC0105804,	//0x12ac		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xDE106644,	//0x12ae		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG1,DEFAULT)
0xC0105804,	//0x12b0		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
		//0x12b2		VoC_endloop0
0xDE105CB4,	//0x12b2		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x12b4		SEARCH_COPY_label2_200
0xDFE9E580,	//0x12b4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x12b5		CII_encoder_reset
0x7F46FF47,	//0x12b6		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0xFF45FF44,	//0x12b8		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x01201808,	//0x12ba		VoC_lw16i_set_inc(REG0,0x120,0x2)
0x12C12D3B,	//0x12bc		VoC_loop_i(0x1,0x9d)
0xDDC6DDC7,	//0x12be		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xDDC5DDC4,	//0x12c0		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x12c1		VoC_endloop1
0x56AA1808,	//0x12c2		VoC_lw16i_set_inc(REG0,0x56aa,0x2)
0x12C62CE1,	//0x12c4		VoC_loop_i(0x1,0x70)
		//0x12c6		VoC_endloop1
0xFFC0DDC7,	//0x12c6		VoC_NAD	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x1A552B80,	//0x12c8		VoC_jal(CII_RESET_AMR_CONSTANT)
0x56721804,	//0x12ca		VoC_lw16i_set_inc(REG0,0x5672,0x1)
0xD882F032,	//0x12cc		VoC_lw16inc_p(REG2,REG0,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x12D52C0D,	//0x12ce		VoC_loop_i(0x1,0x6)
0x6743D885,	//0x12d0		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xD883D883,	//0x12d2		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)
		//0x12d4		VoC_endloop0
0xE062DCA3,	//0x12d4		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
		//0x12d5		VoC_endloop1
0xFFC0DFA9,	//0x12d6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x12d8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x12d9		CII_DIV_32
0x33C2FF15,	//0x12da		VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)(lo)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x0B9212DF,	//0x12dc		VoC_sub32_dr(REG45,0x0,REG45)(lo)	|	VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)(hi)
0xF0230000,	//0x12de		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_sub32_dr(REG45,0x0,REG45)(hi)
		//0x12df		DIV_32_L_ABS_IN
0x3FFF0A80,	//0x12e0		VoC_lw16i(REG0,0x3fff)
0x2B80E0E1,	//0x12e2		VoC_jal(CII_DIV_S)(lo)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xC7901260,	//0x12e4		VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)	|	VoC_jal(CII_DIV_S)(hi)
0xCE03CDD4,	//0x12e6		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0x0BA3F90C,	//0x12e8		VoC_sub32_dr(REG67,0x10,ACC0)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF90E0010,	//0x12ea		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_sub32_dr(REG67,0x10,ACC0)(hi)
0xCDD4C790,	//0x12ec		VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)
0xFFC0CE03,	//0x12ee		VoC_NOP	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0xF90EFF23,	//0x12f0		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xC7704D7C,	//0x12f2		VoC_multf16_rr(REG0,REG5,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xCE03C73E,	//0x12f4		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf16_rr(REG6,REG4,REG7,DEFAULT)
0xDFA9CE33,	//0x12f6		VoC_pop16(RA,DEFAULT)	|	VoC_mac32_rr(REG6,REG3,DEFAULT)
0xFF23FBF4,	//0x12f8		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x12FE32C5,	//0x12fa		VoC_bngtz32_r(DIV_32_L_ABS_OUT,ACC1)
0x00000B9B,	//0x12fc		VoC_sub32_dr(REG67,0x0,REG67)
		//0x12fe		DIV_32_L_ABS_OUT
0xF026E580,	//0x12fe		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_return
		//0x12ff		CII_Inv_sqrt
0x00005030,	//0x1300		VoC_bgt32_rd(INV_SQRT101,REG01,0x0)
0x0A81F7E0,	//0x1302		VoC_lw16i(REG1,0x3fff)(lo)	|	VoC_lw16i_short(REG0,0xffff,DEFAULT)
0xE5803FFF,	//0x1304		VoC_return	|	VoC_lw16i(REG1,0x3fff)(hi)
		//0x1306		INV_SQRT101
0x00001806,	//0x1306		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xEBE3FFC0,	//0x1308		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x000E6420,	//0x130a		VoC_bnlt32_rd(NORM_L105,REG01,0xe)
		//0x130c		VoC_endloop0
0xFBF85E10,	//0x130c		VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
		//0x130e		NORM_L105
0x001F0B12,	//0x130e		VoC_sub16_dr(REG2,0x1f,REG2)
0xF80A6416,	//0x1310		VoC_shr16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG2,DEFAULT)
0x131531C6,	//0x1312		VoC_bnez16_r(INV_SQRT102,REG6)
0xFA48FA08,	//0x1314		VoC_shr32_ri(REG01,0x9,DEFAULT)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
		//0x1315		INV_SQRT102
0x001C078E,	//0x1316		VoC_sub16_rd(REG6,REG1,0x1c)
0xFA085E10,	//0x1318		VoC_shr32_ri(REG01,0x1,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x45DA1805,	//0x131a		VoC_lw16i_set_inc(REG1,0x45da,0x1)
0xE0084189,	//0x131c		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x7FFF1600,	//0x131e		VoC_and16_ri(REG0,0x7fff)
0x60C9D896,	//0x1320		VoC_movreg16(ACC0_HI,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xCE888589,	//0x1322		VoC_msu32_rr(REG1,REG0,DEFAULT)	|	VoC_sub16_rp(REG1,REG6,REG1,IN_PARALLEL)
0xFF20FFC0,	//0x1324		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xE580FE90,	//0x1326		VoC_return	|	VoC_shr32_rr(REG01,REG2,DEFAULT)
		//0x1328		CII_Lag_window
0x096D1804,	//0x1328		VoC_lw16i_set_inc(REG0,0x96d,0x1)
0x09791805,	//0x132a		VoC_lw16i_set_inc(REG1,0x979,0x1)
0x45C61806,	//0x132c		VoC_lw16i_set_inc(REG2,0x45c6,0x1)
0x45D01807,	//0x132e		VoC_lw16i_set_inc(REG3,0x45d0,0x1)
0x00081482,	//0x1330		VoC_lw32_d(REG45,0x8)
0xAC56E949,	//0x1332		VoC_multf16_pp(REG6,REG1,REG2,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x9C5CAC1F,	//0x1334		VoC_multf32_pp(ACC0,REG1,REG3,DEFAULT)	|	VoC_multf16_pp(REG7,REG0,REG3,DEFAULT)
0xC851CF26,	//0x1336		VoC_add32_rr(REG23,REG23,REG45,DEFAULT)	|	VoC_bimac32_rr(REG45,REG67)
0xF90EFF23,	//0x1338		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xDC86DC97,	//0x133a		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x133b		VoC_endloop0
0xDFE9E580,	//0x133c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x133d		CII_Levinson
0x09781805,	//0x133e		VoC_lw16i_set_inc(REG1,0x978,0x1)
0x096C1804,	//0x1340		VoC_lw16i_set_inc(REG0,0x96c,0x1)
0xDF40F023,	//0x1342		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xD886D897,	//0x1344		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDF4398C2,	//0x1346		VoC_push32(REG67,DEFAULT)	|	VoC_multf32_rp(REG45,REG3,REG0,DEFAULT)
0x2B80D815,	//0x1348		VoC_jal(CII_DIV_32)(lo)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0xFF1A12D9,	//0x134a		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_jal(CII_DIV_32)(hi)
0x00101481,	//0x134c		VoC_lw32_d(REG23,0x10)
0x0006091C,	//0x134e		VoC_add32_rd(ACC0,REG67,0x6)
0x641EF80E,	//0x1350		VoC_and16_rr(REG6,REG3,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF90CFA22,	//0x1352		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0x4,IN_PARALLEL)
0xC7F04DFC,	//0x1354		VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0x098A1509,	//0x1356		VoC_sw16_d(ACC0_HI,0x98a)
0x00020E00,	//0x1358		VoC_mac32_rd(REG0,0x2)
0x00020E00,	//0x135a		VoC_mac32_rd(REG0,0x2)
0x573C1582,	//0x135c		VoC_sw32_d(REG45,0x573c)
0x136233C4,	//0x135e		VoC_bnltz32_r(LEVINSON_L_ABS_2,ACC0)
0x00000BA4,	//0x1360		VoC_sub32_dr(ACC0,0x0,ACC0)
		//0x1362		LEVINSON_L_ABS_2
0xF80CCA62,	//0x1362		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_sub32_rr(REG45,REG23,ACC0,DEFAULT)
0xDF03641C,	//0x1364		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0xC7E04DEC,	//0x1366		VoC_multf16_rr(REG0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xCE82C7A8,	//0x1368		VoC_msu32_rr(REG0,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG5,DEFAULT)
0x2B80CE82,	//0x136a		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_msu32_rr(REG0,REG2,DEFAULT)
0xFF22124E,	//0x136c		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x641CF80C,	//0x136e		VoC_and16_rr(REG4,REG3,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xF046DFC1,	//0x1370		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0xDFC6DF42,	//0x1372		VoC_push16(REG6,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x13FD2C13,	//0x1374		VoC_loop_i(0x1,0x9)
0xF025D910,	//0x1376		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0x57391FBE,	//0x1378		VoC_lw16i_set_inc(REG2,0x5739,0xffffffff)
0xE0145616,	//0x137a		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xF8FE43A7,	//0x137c		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG6,REG4,DEFAULT)
0xC81040B2,	//0x137e		VoC_add32_rr(REG01,REG01,REG45,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xFF4467C6,	//0x1380		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xAE16D30A,	//0x1382		VoC_multf16inc_pp(REG6,REG0,REG2,DEFAULT)	|	VoC_mac32_pp(REG1,REG2,DEFAULT)
0xFFC0AE57,	//0x1384		VoC_NOP	|	VoC_multf16inc_pp(REG7,REG1,REG2,DEFAULT)
		//0x1386		VoC_endloop0
0x5910CF34,	//0x1386		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_bimac32_rr(REG67,REG45)
0x4030D616,	//0x1388		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,IN_PARALLEL)
0xFBE4C071,	//0x138a		VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)
0xD90B9902,	//0x138c		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_multf32_rp(REG45,REG4,REG0,DEFAULT)
0xC8A2D815,	//0x138e		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x12D92B80,	//0x1390		VoC_jal(CII_DIV_32)
0x0B12D622,	//0x1392		VoC_sub16_dr(REG2,0x0,REG2)(lo)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0xFE930000,	//0x1394		VoC_shr32_rr(REG67,REG2,DEFAULT)	|	VoC_sub16_dr(REG2,0x0,REG2)(hi)
0x0006091C,	//0x1396		VoC_add32_rd(ACC0,REG67,0x6)
0xF90E7F1D,	//0x1398		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG67,DEFAULT)
0x09890A80,	//0x139a		VoC_lw16i(REG0,0x989)
0xC020D614,	//0x139c		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x00184C1C,	//0x139e		VoC_bnlt16_rd(LEVINSON_03,REG4,0x18)
0xE0E5DC09,	//0x13a0		VoC_movreg16(REG5,REG7,DEFAULT)	|	VoC_sw16_p(ACC0_HI,REG0,DEFAULT)
		//0x13a1		LEVINSON_03
0x13A63245,	//0x13a2		VoC_bnltz16_r(LEVINSON_ABS_S_1,REG5)
0x00000B2D,	//0x13a4		VoC_sub16_dr(REG5,0x0,REG5)
		//0x13a6		LEVINSON_ABS_S_1
0x7FEE0A84,	//0x13a6		VoC_lw16i(REG4,0x7fee)
0x13B934AC,	//0x13a8		VoC_bngt16_rr(LEVINSON_04,REG5,REG4)
0x05530A80,	//0x13aa		VoC_lw16i(REG0,0x553)
0x57391401,	//0x13ac		VoC_lw16_d(REG1,0x5739)
0x6963FF46,	//0x13ae		VoC_loop_i_short(0xb,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0xD886D886,	//0x13b0		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
		//0x13b2		VoC_endloop0
0x1586DC96,	//0x13b2		VoC_sw32_d(RL6,0x98a)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x1586098A,	//0x13b4		VoC_sw32_d(RL6,0x98c)(lo)	|	VoC_sw32_d(RL6,0x98a)(hi)
0x2B00098C,	//0x13b6		VoC_jump_lg(LEVINSON_EXIT)(lo)	|	VoC_sw32_d(RL6,0x98c)(hi)
0xD6141412,	//0x13b8		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jump_lg(LEVINSON_EXIT)(hi)
		//0x13b9		LEVINSON_04
0x57391FBE,	//0x13ba		VoC_lw16i_set_inc(REG2,0x5739,0xffffffff)
0x180BC0A2,	//0x13bc		VoC_lw16i_set_inc(REG3,0x932,0x2)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x18010932,	//0x13be		VoC_lw16i_set_inc(REG1,0x8,0x0)(lo)	|	VoC_lw16i_set_inc(REG3,0x932,0x2)(hi)
0x18040008,	//0x13c0		VoC_lw16i_set_inc(REG0,0x573c,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x8,0x0)(hi)
0x40A2573C,	//0x13c2		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x573c,0x1)(hi)
0x9E0E850C,	//0x13c4		VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)	|	VoC_sub16_rp(REG4,REG4,REG1,IN_PARALLEL)
0xE70AFFC0,	//0x13c6		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_NAD
0x8F9519D4,	//0x13c8		VoC_multf16inc_rp(REG5,REG6,REG2,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
0xFFC08FD4,	//0x13ca		VoC_NOP	|	VoC_multf16inc_rp(REG4,REG7,REG2,DEFAULT)
0xD88DD221,	//0x13cc		VoC_lw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG1)
0xF90CC9A2,	//0x13ce		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0xDDDA9E0E,	//0x13d0		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)
		//0x13d1		VoC_endloop0
0xC7F04DFC,	//0x13d2		VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0x00101483,	//0x13d4		VoC_lw32_d(REG67,0x10)
0xFA22FF2A,	//0x13d6		VoC_shr32_ri(REG45,0x4,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0xE43CF80C,	//0x13d8		VoC_and16_rr(REG4,REG7,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xD001D001,	//0x13da		VoC_mac32_rp(REG0,REG1,DEFAULT)	|	VoC_mac32_rp(REG0,REG1,DEFAULT)
0x33C4DDDA,	//0x13dc		VoC_bnltz32_r(LEVINSON_L_ABS_4,ACC0)(lo)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0x0BA413E1,	//0x13de		VoC_sub32_dr(ACC0,0x0,ACC0)(lo)	|	VoC_bnltz32_r(LEVINSON_L_ABS_4,ACC0)(hi)
0xCAE10000,	//0x13e0		VoC_sub32_rr(REG23,REG67,ACC0,DEFAULT)	|	VoC_sub32_dr(ACC0,0x0,ACC0)(hi)
		//0x13e1		LEVINSON_L_ABS_4
0x643AF80A,	//0x13e2		VoC_and16_rr(REG2,REG7,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xC752D90A,	//0x13e4		VoC_multf16_rr(REG2,REG5,REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x0,IN_PARALLEL)
0xCD5CC71B,	//0x13e6		VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)	|	VoC_multf16_rr(REG3,REG4,REG3,DEFAULT)
0x2B80D211,	//0x13e8		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_rp(REG23,REG1)
0xFF22124E,	//0x13ea		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x643CF80C,	//0x13ec		VoC_and16_rr(REG4,REG7,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC0CBD623,	//0x13ee		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,IN_PARALLEL)
0xDA23DD0A,	//0x13f0		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
0x0932180A,	//0x13f2		VoC_lw16i_set_inc(REG2,0x932,0x2)
0x573C180B,	//0x13f4		VoC_lw16i_set_inc(REG3,0x573c,0x2)
0x0735D616,	//0x13f6		VoC_add16_rd(REG5,REG6,0x2)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x67830002,	//0x13f8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add16_rd(REG5,REG6,0x2)(hi)
0xD9D4D9D4,	//0x13fa		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x13fc		VoC_endloop0
0xDA15DDDC,	//0x13fc		VoC_sw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x13fd		VoC_endloop1
0x10000A84,	//0x13fe		VoC_lw16i(REG4,0x1000)
0x57392004,	//0x1400		VoC_lw16d_set_inc(REG0,0x5739,0x1)
0x05541805,	//0x1402		VoC_lw16i_set_inc(REG1,0x554,0x1)
0x573C1806,	//0x1404		VoC_lw16i_set_inc(REG2,0x573c,0x1)
0x0692DC84,	//0x1406		VoC_multf32inc_pd(REG45,REG2,0x2)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE9480002,	//0x1408		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_multf32inc_pd(REG45,REG2,0x2)(hi)
0xFBFAD8A5,	//0x140a		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x00060913,	//0x140c		VoC_add32_rd(REG67,REG45,0x6)
0x00020692,	//0x140e		VoC_multf32inc_pd(REG45,REG2,0x2)
0xDC97DC87,	//0x1410		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x1411		VoC_endloop0
		//0x1412		LEVINSON_EXIT
0xDF86E842,	//0x1412		VoC_pop16(REG6,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x1414		VoC_endloop0
0xDFA9DF04,	//0x1414		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0xE580FFC0,	//0x1416		VoC_return	|	VoC_NOP
		//0x1418		CII_Get_lsp_pol
0xFF44F045,	//0x1418		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x01000A89,	//0x141a		VoC_lw16i(ACC0_HI,0x100)
0xE0477040,	//0x141c		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xFF445DD4,	//0x141e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x14402C0B,	//0x1420		VoC_loop_i(0x1,0x5)
0x000A4180,	//0x1422		VoC_be16_rd(Get_lsp_pol_L1,REG0,0xa)
0xC22E59A4,	//0x1424		VoC_sub16_rr(REG6,REG0,REG5,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x6791F80E,	//0x1426		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xC2AEDD94,	//0x1428		VoC_sub16_rr(REG6,REG2,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,IN_PARALLEL)
0xD99442BC,	//0x142a		VoC_lw32_p(ACC0,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
0x790ED9B3,	//0x142c		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32_p(REG67,REG6,DEFAULT)
0x8D8E99CD,	//0x142e		VoC_multf16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,IN_PARALLEL)
0x1124F027,	//0x1430		VoC_add32_rp(ACC0,ACC0,REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE046CE37,	//0x1432		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_mac32_rr(REG6,REG7,IN_PARALLEL)
0x4B2CFBFD,	//0x1434		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0xC2AAE047,	//0x1436		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
		//0x1438		VoC_endloop0
0xD994DDB4,	//0x1438		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x143a		Get_lsp_pol_L1
0x02000A84,	//0x143a		VoC_lw16i(REG4,0x200)
0xE012D1A1,	//0x143c		VoC_movreg16(INC2,REG0,DEFAULT)	|	VoC_msu32inc_rp(REG4,REG1,DEFAULT)
0xDDD4C028,	//0x143e		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
		//0x1440		VoC_endloop1
0xE580C2BC,	//0x1440		VoC_return	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
		//0x1442		CII_Lsp_Az
0xDF40DFE9,	//0x1442		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x5740180A,	//0x1444		VoC_lw16i_set_inc(REG2,0x5740,0x2)
0x14182B80,	//0x1446		VoC_jal(CII_Get_lsp_pol)
0x180AD908,	//0x1448		VoC_lw16i_set_inc(REG2,0x574c,0x2)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x0709574C,	//0x144a		VoC_add16_rd(REG1,REG1,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x574c,0x2)(hi)
0xFFC00002,	//0x144c		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x2)(hi)
0x14182B80,	//0x144e		VoC_jal(CII_Get_lsp_pol)
0x574A1FB8,	//0x1450		VoC_lw16i_set_inc(REG0,0x574a,0xfffffffe)
0x57481FBA,	//0x1452		VoC_lw16i_set_inc(REG2,0x5748,0xfffffffe)
0x57561FB9,	//0x1454		VoC_lw16i_set_inc(REG1,0x5756,0xfffffffe)
0x57541FBB,	//0x1456		VoC_lw16i_set_inc(REG3,0x5754,0xfffffffe)
0xE0A768A7,	//0x1458		VoC_lw16i_short(REG7,0xa,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x9314D984,	//0x145a		VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x975DD98D,	//0x145c		VoC_sub32inc_rp(ACC1,ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xDDCDDDC4,	//0x145e		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x145f		VoC_endloop0
0x10000A84,	//0x1460		VoC_lw16i(REG4,0x1000)
0xF3FF5F01,	//0x1462		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xF00640BB,	//0x1464		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG7,DEFAULT)
0x57421808,	//0x1466		VoC_lw16i_set_inc(REG0,0x5742,0x2)
0x574E1809,	//0x1468		VoC_lw16i_set_inc(REG1,0x574e,0x2)
0xDCA468B0,	//0x146a		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD9CED9C7,	//0x146c		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFA64C9F4,	//0x146e		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,RL7,RL6,DEFAULT)
0x00020924,	//0x1470		VoC_add32_rd(ACC0,ACC0,0x2)
0xCBF4FA0C,	//0x1472		VoC_sub32_rr(ACC0,RL7,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFA64DCA8,	//0x1474		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0x00020924,	//0x1476		VoC_add32_rd(ACC0,ACC0,0x2)
0xFFC0FA0C,	//0x1478		VoC_NOP	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
		//0x147a		VoC_endloop0
0xDFA9DCB8,	//0x147a		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
0xE580F033,	//0x147c		VoC_return	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
		//0x147e		CII_Lsf_lsp
0xF0047033,	//0x147e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x45621806,	//0x1480		VoC_lw16i_set_inc(REG2,0x4562,0x1)
0xF0055883,	//0x1482		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE067E94D,	//0x1484		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC0D3F843,	//0x1486		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG3,0x8,DEFAULT)
0x00FF1607,	//0x1488		VoC_and16_ri(REG7,0xff)
0xB8EED8B5,	//0x148a		VoC_sub16_pr(REG6,REG3,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xFFC0CDBB,	//0x148c		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC176FA4B,	//0x148e		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0x9,DEFAULT)
0xDC96D883,	//0x1490		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x1491		VoC_endloop0
0xF126E580,	//0x1492		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_return
		//0x1493		CII_Lsp_lsf
0xC0714030,	//0x1494		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x003F1FBE,	//0x1496		VoC_lw16i_set_inc(REG2,0x3f,0xffffffff)
0x45A11FBF,	//0x1498		VoC_lw16i_set_inc(REG3,0x45a1,0xffffffff)
0x45610A84,	//0x149a		VoC_lw16i(REG4,0x4561)
0xD886E953,	//0x149c		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x14A42C81,	//0x149e		VoC_loop_i(0x1,0x40)
0x3147879F,	//0x14a0		VoC_bngtz16_r(LSP_LSF_02,REG7)(lo)	|	VoC_sub16inc_rp(REG7,REG6,REG3,DEFAULT)
0xDE1014A6,	//0x14a2		VoC_inc_p(REG2,DEFAULT)	|	VoC_bngtz16_r(LSP_LSF_02,REG7)(hi)
		//0x14a4		VoC_endloop1
0x000207A4,	//0x14a4		VoC_sub16_rd(REG4,REG4,0x2)
		//0x14a6		LSP_LSF_02
0xE04599E3,	//0x14a6		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_multf32_rp(REG67,REG7,REG4,DEFAULT)
0xF8C57BEB,	//0x14a8		VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)
0x0006091B,	//0x14aa		VoC_add32_rd(REG67,REG67,0x6)
0x071BC1EF,	//0x14ac		VoC_add16_rd(REG3,REG3,0x2)(lo)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
0xDC970002,	//0x14ae		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x2)(hi)
		//0x14af		VoC_endloop0
0xFF03E580,	//0x14b0		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_return
		//0x14b1		CII_Convolve
0x00001806,	//0x14b2		VoC_lw16i_set_inc(REG2,0x0,0x1)
0x0002079B,	//0x14b4		VoC_sub16_rd(REG3,REG3,0x2)
0xE00C702D,	//0x14b6		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
0xE01E77EF,	//0x14b8		VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0xffffffff,DEFAULT)
0xFFC09C0C,	//0x14ba		VoC_NAD	|	VoC_multf32_pp(ACC0,REG0,REG1,DEFAULT)
0x14D22C29,	//0x14bc		VoC_loop_i(0x1,0x14)
0x14C23142,	//0x14be		VoC_bngtz16_r(Convolve100,REG2)
0xD501E681,	//0x14c0		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x14c1		VoC_endloop0
		//0x14c2		Convolve100
0xDCB548F0,	//0x14c2		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG67,RL6,DEFAULT)
0xC8F37F22,	//0x14c4		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDE106201,	//0x14c6		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xFF447BEA,	//0x14c8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0xD501E681,	//0x14ca		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x14cb		VoC_endloop0
0xDCB548F3,	//0x14cc		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xC8F87F22,	//0x14ce		VoC_add32_rr(REG01,REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xE201FBEA,	//0x14d0		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
		//0x14d2		VoC_endloop1
0xDCB59DBC,	//0x14d2		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_multf32_pp(ACC0,REG6,REG7,DEFAULT)
0xFF42E580,	//0x14d4		VoC_lw32z(REG45,DEFAULT)	|	VoC_return
		//0x14d5		CII_Log2
0x2B80DFE9,	//0x14d6		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_push16(RA,DEFAULT)
0xDF40124E,	//0x14d8		VoC_push32(REG01,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3284FF21,	//0x14da		VoC_bgtz32_r(LOG1001,ACC0)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0xFF4214DF,	//0x14dc		VoC_lw32z(REG45,DEFAULT)	|	VoC_bgtz32_r(LOG1001,ACC0)(hi)
0xFF25E5D5,	//0x14de		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_jump(LOG1002)
		//0x14df		LOG1001
0x001F0B09,	//0x14e0		VoC_sub16_dr(REG1,0x1f,REG1)
0x0798FA49,	//0x14e2		VoC_sub16_rd(REG0,REG3,0x21)(lo)	|	VoC_shr32_ri(REG23,0x9,DEFAULT)
0x7A090021,	//0x14e4		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG3,0x21)(hi)
0x2802F004,	//0x14e6		VoC_and16_rd(REG2,0x11)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x0A840011,	//0x14e8		VoC_lw16i(REG4,0x45a4)(lo)	|	VoC_and16_rd(REG2,0x11)(hi)
0xC10045A4,	//0x14ea		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x45a4)(hi)
0xD885F004,	//0x14ec		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xCCD18543,	//0x14ee		VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)	|	VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)
0xCA8AFFC0,	//0x14f0		VoC_sub32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_NOP
0xDFA9E024,	//0x14f2		VoC_pop16(RA,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
		//0x14f3		LOG1002
0xE580DF00,	//0x14f4		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x14f6		CII_Lsf_wt
0x7030FF01,	//0x14f6		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x7032F007,	//0x14f8		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x5E00F005,	//0x14fa		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE923E006,	//0x14fc		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0xD8A6BA37,	//0x14fe		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sub16inc_pr(REG7,REG0,REG6,DEFAULT)
		//0x1500		VoC_endloop0
0x0B36DC97,	//0x1500		VoC_sub16_dr(REG6,0xf,REG6)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0A84000F,	//0x1502		VoC_lw16i(REG4,0x733)(lo)	|	VoC_sub16_dr(REG6,0xf,REG6)(hi)
0xDC160733,	//0x1504		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_lw16i(REG4,0x733)(hi)
0x0D630A85,	//0x1506		VoC_lw16i(REG5,0xd63)
0x6E000A86,	//0x1508		VoC_lw16i(REG6,0x6e00)
0x18620A87,	//0x150a		VoC_lw16i(REG7,0x1862)
0x8D98E94B,	//0x150c		VoC_multf16_rp(REG0,REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC340B8E1,	//0x150e		VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)	|	VoC_sub16_pr(REG1,REG3,REG4,DEFAULT)
0x15153201,	//0x1510		VoC_bltz16_r(Lsf_wt101,REG1)
0xFFC0C678,	//0x1512		VoC_NOP	|	VoC_multf16_rr(REG0,REG1,REG7,DEFAULT)
0xF8E8C300,	//0x1514		VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG0,REG4,REG0,DEFAULT)
		//0x1515		Lsf_wt101
0xDCB0FFC0,	//0x1516		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_NOP
		//0x1517		VoC_endloop0
0xD886E580,	//0x1518		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_return
		//0x1519		CII_Residu_new
0xF3FD600E,	//0x151a		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0x15292C51,	//0x151c		VoC_loop_i(0x1,0x28)
0x07999B9C,	//0x151e		VoC_sub16_rd(REG1,REG3,0xa)(lo)	|	VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)
0xE942000A,	//0x1520		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_sub16_rd(REG1,REG3,0xa)(hi)
0xD139D887,	//0x1522		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x1523		VoC_endloop0
0xFBECE1C0,	//0x1524		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x00060922,	//0x1526		VoC_add32_rd(REG45,ACC0,0x6)
0xDCA5FFC0,	//0x1528		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_NOP
		//0x1529		VoC_endloop1
0xDFE9E580,	//0x152a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x152b		CII_subframePostProc
0x07AC1483,	//0x152c		VoC_lw32_d(REG67,0x7ac)
0x06040A81,	//0x152e		VoC_lw16i(REG1,0x604)
0x15363180,	//0x1530		VoC_bez16_r(subframePostProc103,REG0)
0x08160A81,	//0x1532		VoC_lw16i(REG1,0x816)
0x57781483,	//0x1534		VoC_lw32_d(REG67,0x5778)
		//0x1536		subframePostProc103
0xDF43E0C3,	//0x1536		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x32D9180A,	//0x1538		VoC_lw16i_set_inc(REG2,0x32d9,0x2)
0x153D349A,	//0x153a		VoC_bngt16_rr(subframePostProc102,REG3,REG2)
0xF7D9E043,	//0x153c		VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
		//0x153d		subframePostProc102
0xDC13F7C5,	//0x153e		VoC_sw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
0x780EF7B9,	//0x1540		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffd,DEFAULT)
0xDFC0EFC5,	//0x1542		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffc,IN_PARALLEL)
0x047E1804,	//0x1544		VoC_lw16i_set_inc(REG0,0x47e,0x1)
0x1486DFC5,	//0x1546		VoC_lw32_d(RL6,0x6)(lo)	|	VoC_push16(REG5,DEFAULT)
0x56420006,	//0x1548		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_lw32_d(RL6,0x6)(hi)
0x1805FF34,	//0x154a		VoC_lw16i_set_inc(REG1,0x818,0x1)(lo)	|	VoC_movreg32(ACC0,RL6,IN_PARALLEL)
0x56250818,	//0x154c		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x818,0x1)(hi)
0x3185FF35,	//0x154e		VoC_bez16_r(subframePostProc105,REG5)(lo)	|	VoC_movreg32(ACC1,RL6,IN_PARALLEL)
0x14021556,	//0x1550		VoC_lw16_d(REG2,0x5776)(lo)	|	VoC_bez16_r(subframePostProc105,REG5)(hi)
0x18055776,	//0x1552		VoC_lw16i_set_inc(REG1,0x56fa,0x1)(lo)	|	VoC_lw16_d(REG2,0x5776)(hi)
0xFFC056FA,	//0x1554		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x56fa,0x1)(hi)
		//0x1556		subframePostProc105
0xDFC24010,	//0x1556		VoC_push16(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0xD030ED06,	//0x1558		VoC_mac32_rp(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xFFC09BCA,	//0x155a		VoC_NOP	|	VoC_multf32inc_rp(REG45,REG7,REG1,DEFAULT)
0xFF34C8A2,	//0x155c		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x155e		VoC_endloop0
0xF7F9DC85,	//0x155e		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x047E1807,	//0x1560		VoC_lw16i_set_inc(REG3,0x47e,0x1)
0xD675D652,	//0x1562		VoC_lw16_sd(REG5,0x6,DEFAULT)	|	VoC_lw16_sd(REG2,0x4,DEFAULT)
0x3180D630,	//0x1564		VoC_bez16_r(subframePostProc106,REG0)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x07AD156B,	//0x1566		VoC_sub16_rd(REG5,REG5,0x1b)(lo)	|	VoC_bez16_r(subframePostProc106,REG0)(hi)
0x1402001B,	//0x1568		VoC_lw16_d(REG2,0x5776)(lo)	|	VoC_sub16_rd(REG5,REG5,0x1b)(hi)
0xC0D35776,	//0x156a		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16_d(REG2,0x5776)(hi)
		//0x156b		subframePostProc106
0x58620A87,	//0x156c		VoC_lw16i(REG7,0x5862)
0x7020C1D7,	//0x156e		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,DEFAULT)
0x61E1E286,	//0x1570		VoC_movreg16(REG1,RL7_HI,DEFAULT)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x2B80F005,	//0x1572		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF811907,	//0x1574		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0x58621806,	//0x1576		VoC_lw16i_set_inc(REG2,0x5862,0x1)
0x01E41807,	//0x1578		VoC_lw16i_set_inc(REG3,0x1e4,0x1)
0x001F0708,	//0x157a		VoC_add16_rd(REG0,REG1,0x1f)
0xC0C34082,	//0x157c		VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x05D21804,	//0x157e		VoC_lw16i_set_inc(REG0,0x5d2,0x1)
0xD8B46944,	//0x1580		VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD8B48714,	//0x1582		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sub16inc_rp(REG4,REG4,REG2,DEFAULT)
		//0x1584		VoC_endloop0
0xDF8CDC84,	//0x1584		VoC_pop16(RL6_LO,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x1804DF81,	//0x1586		VoC_lw16i_set_inc(REG0,0x6da,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x180606DA,	//0x1588		VoC_lw16i_set_inc(REG2,0x752,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x6da,0x1)(hi)
0x31810752,	//0x158a		VoC_bez16_r(subframePostProc107,REG1)(lo)	|	VoC_lw16i_set_inc(REG2,0x752,0x1)(hi)
0x18041591,	//0x158c		VoC_lw16i_set_inc(REG0,0x5742,0x1)(lo)	|	VoC_bez16_r(subframePostProc107,REG1)(hi)
0x18065742,	//0x158e		VoC_lw16i_set_inc(REG2,0x576a,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x5742,0x1)(hi)
0xE1C3576A,	//0x1590		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x576a,0x1)(hi)
		//0x1591		subframePostProc107
0x072A1805,	//0x1592		VoC_lw16i_set_inc(REG1,0x72a,0x1)
0x694AF033,	//0x1594		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x9B8AD90B,	//0x1596		VoC_multf32inc_rp(REG45,REG6,REG1,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,IN_PARALLEL)
0xFBFA9BD3,	//0x1598		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG7,REG2,DEFAULT)
0xFEA3E184,	//0x159a		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0xBA3CC17F,	//0x159c		VoC_sub16inc_pr(REG4,REG0,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG7,DEFAULT)
0xDCB4D90B,	//0x159e		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
		//0x159f		VoC_endloop0
0xDF03DFA9,	//0x15a0		VoC_pop32(REG67,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD885E580,	//0x15a2		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_return
		//0x15a3		CII_Weight_Ai
0x9E0AE963,	//0x15a4		VoC_multf32inc_pp(REG45,REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0x0912DCA5,	//0x15a6		VoC_add32_rd(REG45,REG45,0x6)(lo)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x15a7		VoC_endloop0
0xE5800006,	//0x15a8		VoC_return	|	VoC_add32_rd(REG45,REG45,0x6)(hi)
		//0x15aa		CII_Int_lpc_only
0xF052F053,	//0x15aa		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9D2D9DB,	//0x15ac		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xF80CE8A9,	//0x15ae		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x780EF80D,	//0x15b0		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x4134F80F,	//0x15b2		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0xD9DBC17D,	//0x15b4		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xD9D2DDCA,	//0x15b6		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x15b7		VoC_endloop0
0xF004E580,	//0x15b8		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_return
		//0x15b9		CII_Pow2
0x00210A01,	//0x15ba		VoC_multf32_rd(REG23,REG0,0x21)
0x464A1804,	//0x15bc		VoC_lw16i_set_inc(REG0,0x464a,0x1)
0xFA094018,	//0x15be		VoC_shr32_ri(REG23,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x7FFF1602,	//0x15c0		VoC_and16_ri(REG2,0x7fff)
0x8543D885,	//0x15c2		VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x0B08CCD1,	//0x15c4		VoC_sub16_dr(REG0,0x1f,REG1)(lo)	|	VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)
0xCA89001F,	//0x15c6		VoC_sub32_rr(REG23,REG45,REG23,DEFAULT)	|	VoC_sub16_dr(REG0,0x1f,REG1)(hi)
0x00203C20,	//0x15c8		VoC_bngt16_rd(POW2101,REG0,0x20)
0xE580FF41,	//0x15ca		VoC_return	|	VoC_lw32z(REG23,DEFAULT)
		//0x15cc		POW2101
0x00020780,	//0x15cc		VoC_sub16_rd(REG0,REG0,0x2)
0x3C20FE81,	//0x15ce		VoC_bngt16_rd(POW2102,REG0,0x2)(lo)	|	VoC_shr32_rr(REG23,REG0,DEFAULT)
0x09090002,	//0x15d0		VoC_add32_rd(REG23,REG23,0x2)(lo)	|	VoC_bngt16_rd(POW2102,REG0,0x2)(hi)
0xFA090002,	//0x15d2		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x2)(hi)
		//0x15d3		POW2102
0xF043E580,	//0x15d4		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_return
		//0x15d5		CII_gc_pred_update
0xF023C158,	//0x15d6		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG0,REG5,REG3,DEFAULT)
0x0019072A,	//0x15d8		VoC_add16_rd(REG2,REG5,0x19)
0xC09BC019,	//0x15da		VoC_add16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG3,DEFAULT)
0xF3FD77F0,	//0x15dc		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF3FF77F2,	//0x15de		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xD884E864,	//0x15e0		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC94D8A5,	//0x15e2		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x15e4		VoC_endloop0
0xDC37DCB5,	//0x15e4		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xE580DC16,	//0x15e6		VoC_return	|	VoC_sw16_p(REG6,REG1,DEFAULT)
		//0x15e8		CII_Autocorr
0x1806DFE9,	//0x15e8		VoC_lw16i_set_inc(REG2,0x840,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x14860840,	//0x15ea		VoC_lw32_d(RL6,0x6)(lo)	|	VoC_lw16i_set_inc(REG2,0x840,0x1)(hi)
0xFFC00006,	//0x15ec		VoC_NAD	|	VoC_lw32_d(RL6,0x6)(hi)
0x15F52CF2,	//0x15ee		VoC_loop_i(0x0,0x79)
0x9E0C4932,	//0x15f0		VoC_multf32inc_pp(ACC0,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0x9E0D4973,	//0x15f2		VoC_multf32inc_pp(ACC1,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC1,RL6,DEFAULT)
0xDCA7DCA5,	//0x15f4		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x15f5		VoC_endloop0
0xE04E700C,	//0x15f6		VoC_lw16i_short(RL7_LO,0x4,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
		//0x15f8		AUTOCORR_01
0x1809FF44,	//0x15f8		VoC_lw16i_set_inc(REG1,0x842,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x2CF00842,	//0x15fa		VoC_loop_i(0x0,0x78)(lo)	|	VoC_lw16i_set_inc(REG1,0x842,0x2)(hi)
0xD50915FD,	//0x15fc		VoC_bimac32inc_pp(REG1,REG1)	|	VoC_loop_i(0x0,0x78)(hi)
		//0x15fd		VoC_endloop0
0x5C9CFFC0,	//0x15fe		VoC_bne32_rd(AUTOCORR_01_END,ACC0,0x10)(lo)	|	VoC_NOP
0xC9BE0010,	//0x1600		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_bne32_rd(AUTOCORR_01_END,ACC0,0x10)(hi)
0x08421808,	//0x1602		VoC_lw16i_set_inc(REG0,0x842,0x2)
0x7042E001,	//0x1604		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x2B80E3C3,	//0x1606		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0x3c,IN_PARALLEL)
0xE5EF1284,	//0x1608		VoC_jump(AUTOCORR_01)	|	VoC_jal(CII_scale)(hi)
		//0x160a		AUTOCORR_01_END
0x00020924,	//0x160a		VoC_add32_rd(ACC0,ACC0,0x2)
0x124E2B80,	//0x160c		VoC_jal(CII_NORM_L_ACC0)
0xFF236185,	//0x160e		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0xF90E426D,	//0x1610		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG1,REG5,DEFAULT)
0x09781507,	//0x1612		VoC_sw16_d(REG7,0x978)
0x096C1506,	//0x1614		VoC_sw16_d(REG6,0x96c)
0x01581505,	//0x1616		VoC_sw16_d(REG5,0x158)
0x00000B0C,	//0x1618		VoC_sub16_dr(REG4,0x0,REG1)
0x08421808,	//0x161a		VoC_lw16i_set_inc(REG0,0x842,0x2)
0x573A1809,	//0x161c		VoC_lw16i_set_inc(REG1,0x573a,0x2)
0xE3C67F46,	//0x161e		VoC_lw16i_short(REG6,0x3c,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x128C2B80,	//0x1620		VoC_jal(CII_copy_xy)
0x7052DD8E,	//0x1622		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_sw32_p(RL6,REG1,DEFAULT)
0x1804F00B,	//0x1624		VoC_lw16i_set_inc(REG0,0x96d,0x1)(lo)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0x1805096D,	//0x1626		VoC_lw16i_set_inc(REG1,0x979,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x96d,0x1)(hi)
0x0A8D0979,	//0x1628		VoC_lw16i(RL6_HI,0x573b)(lo)	|	VoC_lw16i_set_inc(REG1,0x979,0x1)(hi)
0x0A8C573B,	//0x162a		VoC_lw16i(RL6_LO,0xf0)(lo)	|	VoC_lw16i(RL6_HI,0x573b)(hi)
0x148700F0,	//0x162c		VoC_lw32_d(RL7,0x4)(lo)	|	VoC_lw16i(RL6_LO,0xf0)(hi)
0xDFA90004,	//0x162e		VoC_pop16(RA,DEFAULT)	|	VoC_lw32_d(RL7,0x4)(hi)
0xF7A37F44,	//0x1630		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x08420A82,	//0x1632		VoC_lw16i(REG2,0x842)
0x6213E185,	//0x1634		VoC_aligninc_pp(REG2,REG3,DEFAULT)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x2C15F80D,	//0x1636		VoC_loop_i(0x1,0xa)(lo)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0xE7411646,	//0x1638		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
		//0x163a		VoC_endloop0
0xC9BED513,	//0x163a		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG3)
0x08420A82,	//0x163c		VoC_lw16i(REG2,0x842)
0xF7A37EA4,	//0x163e		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xFF447F23,	//0x1640		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xF90E6213,	//0x1642		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0xF7855C97,	//0x1644		VoC_movreg16(REG5,RL6_LO,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x1646		VoC_endloop1
0xF80D5C86,	//0x1646		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xFF45E580,	//0x1648		VoC_lw32z(ACC1,DEFAULT)	|	VoC_return
		//0x1649		CII_Chebps
0x20000A81,	//0x164a		VoC_lw16i(REG1,0x2000)
0x57400A86,	//0x164c		VoC_lw16i(REG6,0x5740)
0x00140A87,	//0x164e		VoC_lw16i(REG7,0x14)
0x02000A80,	//0x1650		VoC_lw16i(REG0,0x200)
0x01000A8B,	//0x1652		VoC_lw16i(ACC1_HI,0x100)
0x9A54CCC2,	//0x1654		VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)	|	VoC_multf32_rr(REG45,REG3,REG0,DEFAULT)
0xC8A2DDB5,	//0x1656		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0x7FFF0A80,	//0x1658		VoC_lw16i(REG0,0x7fff)
0xE404F80C,	//0x165a		VoC_and16_rr(REG4,REG0,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xCD1DE86B,	//0x165c		VoC_multf32_rr(ACC1,REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xFA859A54,	//0x165e		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)
0xCE2B7BFD,	//0x1660		VoC_mac32_rr(REG5,REG3,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0x5DB2D537,	//0x1662		VoC_sw32_p(REG45,REG6,DEFAULT)	|	VoC_bimac32inc_pp(REG6,REG7)
0xC962FBFD,	//0x1664		VoC_add32_rr(REG45,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xE404F80C,	//0x1666		VoC_and16_rr(REG4,REG0,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x1667		VoC_endloop0
0xFFC0CD1C,	//0x1668		VoC_NOP	|	VoC_multf32_rr(ACC0,REG4,REG3,DEFAULT)
0xD537FA7C,	//0x166a		VoC_bimac32inc_pp(REG6,REG7)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x43301010,	//0x166c		VoC_mac32_pd(REG2,0x4330)
0xFFC0CD5B,	//0x166e		VoC_NOP	|	VoC_multf32_rr(REG67,REG5,REG3,DEFAULT)
0xFBD3C8E3,	//0x1670		VoC_shr32_ri(REG67,0xfffffffa,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0xDF40E580,	//0x1672		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x1673		CII_Az_lsp
0x07C01804,	//0x1674		VoC_lw16i_set_inc(REG0,0x7c0,0x1)
0xE0954030,	//0x1676		VoC_lw16i_short(REG5,0x9,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xDFE94029,	//0x1678		VoC_push16(RA,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG5,DEFAULT)
0x04000A86,	//0x167a		VoC_lw16i(REG6,0x400)
0x08681806,	//0x167c		VoC_lw16i_set_inc(REG2,0x868,0x1)
0x08721807,	//0x167e		VoC_lw16i_set_inc(REG3,0x872,0x1)
0xF3FD5C26,	//0x1680		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
0x0A84DC36,	//0x1682		VoC_lw16i(REG4,0x2000)(lo)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
0xE8AA2000,	//0x1684		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw16i(REG4,0x2000)(hi)
0x9B0B9B04,	//0x1686		VoC_multf32inc_rp(REG67,REG4,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0x4B1BFFC0,	//0x1688		VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)	|	VoC_NOP
0x6125C91C,	//0x168a		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0x875583DF,	//0x168c		VoC_sub16inc_rp(REG5,REG5,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG3,IN_PARALLEL)
0xDC25DC37,	//0x168e		VoC_sw16_p(REG5,REG2,DEFAULT)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
		//0x168f		VoC_endloop0
0x0A82F004,	//0x1690		VoC_lw16i(REG2,0x869)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x15040869,	//0x1692		VoC_sw16_d(REG4,0x840)(lo)	|	VoC_lw16i(REG2,0x869)(hi)
0x0A860840,	//0x1694		VoC_lw16i(REG6,0x460c)(lo)	|	VoC_sw16_d(REG4,0x840)(hi)
0x0A87460C,	//0x1696		VoC_lw16i(REG7,0x4649)(lo)	|	VoC_lw16i(REG6,0x460c)(hi)
0xD8634649,	//0x1698		VoC_lw16_p(REG3,REG6,DEFAULT)	|	VoC_lw16i(REG7,0x4649)(hi)
0xDF435FC4,	//0x169a		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xDF415FC4,	//0x169c		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0x16492B80,	//0x169e		VoC_jal(CII_Chebps)
0xFFC0DA27,	//0x16a0		VoC_NAD	|	VoC_sw16_sd(REG7,0x1,DEFAULT)
		//0x16a2		AZ_LSP_LOOP
0xE0A05909,	//0x16a2		VoC_lw16i_short(REG0,0xa,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xD6145913,	//0x16a4		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x00020736,	//0x16a6		VoC_add16_rd(REG6,REG6,0x2)
0x170934BE,	//0x16a8		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG7,REG6)
0x17093484,	//0x16aa		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG0,REG4)
0xF6645625,	//0x16ac		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0xDD13D863,	//0x16ae		VoC_sw32_sd(REG67,0x1,DEFAULT)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0xDF42DD09,	//0x16b0		VoC_push32(REG45,DEFAULT)	|	VoC_sw32_sd(REG23,0x0,DEFAULT)
0x16492B80,	//0x16b2		VoC_jal(CII_Chebps)
0xD90A5A27,	//0x16b4		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x1,DEFAULT)
0xFFC0CDEC,	//0x16b6		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0x17063284,	//0x16b8		VoC_bgtz32_r(AZ_LSP_NOLOOP1,ACC0)
0x16CD2C09,	//0x16ba		VoC_loop_i(0x1,0x4)
0x780BD911,	//0x16bc		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC0E3F80C,	//0x16be		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0x16492B80,	//0x16c0		VoC_jal(CII_Chebps)
0xCDE4D624,	//0x16c2		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0x3284E066,	//0x16c4		VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(lo)	|	VoC_movreg16(REG6,REG3,DEFAULT)
0xDD0B16C9,	//0x16c6		VoC_sw32_sd(REG67,0x0,DEFAULT)	|	VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(hi)
0xD911E5C5,	//0x16c8		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_jump(AZ_LSP_03_01_END)
		//0x16c9		AZ_LSP_03_01_ELSE
0xDA27E0C3,	//0x16ca		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xD90ADD11,	//0x16cc		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
		//0x16cd		AZ_LSP_03_01_END
		//0x16cd		VoC_endloop1
0xD6275911,	//0x16ce		VoC_lw16_sd(REG7,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC37F431E,	//0x16d0		VoC_sub16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG3,DEFAULT)
0x16F23187,	//0x16d2		VoC_bez16_r(AZ_LSP_03_02_END,REG7)
0xE0065F43,	//0x16d4		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x16D93247,	//0x16d6		VoC_bnltz16_r(AZ_LSP_ABS_S_1,REG7)
0xFF1CC3BF,	//0x16d8		VoC_movreg32(ACC0,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
		//0x16d9		AZ_LSP_ABS_S_1
0x124E2B80,	//0x16da		VoC_jal(CII_NORM_L_ACC0)
0x001D0B09,	//0x16dc		VoC_sub16_dr(REG1,0x1d,REG1)
0x3FFF0A80,	//0x16de		VoC_lw16i(REG0,0x3fff)
0xF7215FC1,	//0x16e0		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x12602B80,	//0x16e2		VoC_jal(CII_DIV_S)
0xCD94DF03,	//0x16e4		VoC_multf32_rr(ACC0,REG6,REG2,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xFEACDF85,	//0x16e6		VoC_shr32_rr(ACC0,REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x3247E106,	//0x16e8		VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(lo)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x0B3616ED,	//0x16ea		VoC_sub16_dr(REG6,0x0,REG6)(lo)	|	VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(hi)
0xD6270000,	//0x16ec		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_sub16_dr(REG6,0x0,REG6)(hi)
		//0x16ed		AZ_LSP_04_01_ELSE
0xD911CDBB,	//0x16ee		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC2F3FA5B,	//0x16f0		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
		//0x16f2		AZ_LSP_03_02_END
0xD610D923,	//0x16f2		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x3,DEFAULT)
0xDE00C03F,	//0x16f4		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG0,REG7,DEFAULT)
0xDA10DC73,	//0x16f6		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_p(REG3,REG7,DEFAULT)
0x0A82F026,	//0x16f8		VoC_lw16i(REG2,0x873)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x6C050873,	//0x16fa		VoC_bez16_d(AZ_LSP_03_03_ELSE,0x840)(lo)	|	VoC_lw16i(REG2,0x873)(hi)
0xF0060840,	//0x16fc		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bez16_d(AZ_LSP_03_03_ELSE,0x840)(hi)
0x08690A82,	//0x16fe		VoC_lw16i(REG2,0x869)
		//0x1700		AZ_LSP_03_03_ELSE
0x08401506,	//0x1700		VoC_sw16_d(REG6,0x840)
0x2B80DD11,	//0x1702		VoC_jal(CII_Chebps)(lo)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
0xDA271649,	//0x1704		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_jal(CII_Chebps)(hi)
		//0x1706		AZ_LSP_NOLOOP1
0x2B00DF02,	//0x1706		VoC_jump_lg(AZ_LSP_LOOP)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xDF8416A2,	//0x1708		VoC_pop16(REG4,DEFAULT)	|	VoC_jump_lg(AZ_LSP_LOOP)(hi)
		//0x1709		AZ_LSP_LOOP_END
0x5F85DF01,	//0x170a		VoC_pop16(REG5,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xD908DF03,	//0x170c		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0x001A4C34,	//0x170e		VoC_bnlt16_rd(AZ_LSP_01_02,REG4,0x1a)
0xF0097050,	//0x1710		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x127F2B80,	//0x1712		VoC_jal(CII_Copy_M)
		//0x1714		AZ_LSP_01_02
0xDF00DFA9,	//0x1714		VoC_pop32(REG01,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF8FBE580,	//0x1716		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_return
		//0x1717		CII_cbseach_subr1
0x07AA1404,	//0x1718		VoC_lw16_d(REG4,0x7aa)
0x00240B25,	//0x171a		VoC_sub16_dr(REG5,0x24,REG4)
0xF0054021,	//0x171c		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
0x17253145,	//0x171e		VoC_bngtz16_r(cbsearch_10000,REG5)
0xE7438EC4,	//0x1720		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)
0x8EC4810C,	//0x1722		VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
		//0x1724		VoC_endloop0
0xE580DC94,	//0x1724		VoC_return	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1725		cbsearch_10000
		//0x1726		CII_cor_h_x
0xE2805FE9,	//0x1726		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4456AB,	//0x1728		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16_sd(ACC1_HI,0x9,DEFAULT)
0xF00756B6,	//0x172a		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0xa,DEFAULT)
0xFF417F47,	//0x172c		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xF69270AE,	//0x172e		VoC_movreg16(INC2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x5,DEFAULT)
		//0x1730		cor_h_x_loop_begin
0xC2177F46,	//0x1730		VoC_sub16_rr(REG7,REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x17482E29,	//0x1732		VoC_loop_r(1,REG5)
0xF76140B0,	//0x1734		VoC_movreg16(REG1,ACC1_HI,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG2,REG6,DEFAULT)
0xC09767C2,	//0x1736		VoC_add16_rr(REG7,REG2,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x1738		VoC_endloop0
0x0A80D401,	//0x1738		VoC_lw16i(REG0,0x840)(lo)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0x5E100840,	//0x173a		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i(REG0,0x840)(hi)
0x0A80C1C7,	//0x173c		VoC_lw16i(REG0,0x28)(lo)	|	VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)
0xDDBC0028,	//0x173e		VoC_sw32_p(ACC0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x28)(hi)
0x174433C4,	//0x1740		VoC_bnltz32_r(cor_h_x_250,ACC0)
0x00000BA4,	//0x1742		VoC_sub32_dr(ACC0,0x0,ACC0)
		//0x1744		cor_h_x_250
0x36A6C217,	//0x1744		VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(lo)	|	VoC_sub16_rr(REG7,REG0,REG2,DEFAULT)
0xFF261748,	//0x1746		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(hi)
		//0x1748		cor_h_x_200
		//0x1748		VoC_endloop1
0x7A0EFF44,	//0x1748		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x49BFDE18,	//0x174a		VoC_add32_rr(RL7,RL6,RL7,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x3423F662,	//0x174c		VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(lo)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x61471730,	//0x174e		VoC_movreg16(REG7,ACC1_LO,DEFAULT)	|	VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(hi)
0x2B80FF3C,	//0x1750		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xDFA9124E,	//0x1752		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x1808C3CA,	//0x1754		VoC_lw16i_set_inc(REG0,0x840,0x2)(lo)	|	VoC_sub16_rr(REG2,REG7,REG1,DEFAULT)
0x18050840,	//0x1756		VoC_lw16i_set_inc(REG1,0x5736,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x840,0x2)(hi)
0x14855736,	//0x1758		VoC_lw32_d(ACC1,0x6)(lo)	|	VoC_lw16i_set_inc(REG1,0x5736,0x1)(hi)
0xD9C20006,	//0x175a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32_d(ACC1,0x6)(hi)
0xFE926D05,	//0x175c		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD9C248AC,	//0x175e		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG45,ACC1,DEFAULT)
0xDC99FE92,	//0x1760		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
		//0x1761		VoC_endloop0
0xDFE9E580,	//0x1762		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1763		CII_cor_h
0x56A2F048,	//0x1764		VoC_lw16_sd(REG2,0x9,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
0x6A82F00A,	//0x1766		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xD512E009,	//0x1768		VoC_bimac32inc_pp(REG2,REG2)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
		//0x1769		VoC_endloop0
0x00061486,	//0x176a		VoC_lw32_d(RL6,0x6)
0xF0087F20,	//0x176c		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x00114491,	//0x176e		VoC_bne16_rd(COR_H101,REG1,0x11)
0x1809D6A0,	//0x1770		VoC_lw16i_set_inc(REG1,0x840,0x2)(lo)	|	VoC_lw16_sd(REG0,0x9,DEFAULT)
0x70220840,	//0x1772		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x840,0x2)(hi)
0x2B80E0A3,	//0x1774		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0xa,IN_PARALLEL)
0xE5DB1284,	//0x1776		VoC_jump(COR_H102)	|	VoC_jal(CII_scale)(hi)
		//0x1778		COR_H101
0x2B80FA08,	//0x1778		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
0xFBC812FF,	//0x177a		VoC_shr32_ri(REG01,0xfffffff9,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
0x0A80F030,	//0x177c		VoC_lw16i(REG0,0x7eb8)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x46457EB8,	//0x177e		VoC_multf16_rr(REG5,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG0,0x7eb8)(hi)
0x1809D6A0,	//0x1780		VoC_lw16i_set_inc(REG1,0x840,0x2)(lo)	|	VoC_lw16_sd(REG0,0x9,IN_PARALLEL)
0xF6D90840,	//0x1782		VoC_lw16i_short(FORMAT32,0xfffffff6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x840,0x2)(hi)
0x9B459B44,	//0x1784		VoC_multf32inc_rp(ACC1,REG5,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)
0xFFC0C934,	//0x1786		VoC_NAD	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xC9756A88,	//0x1788		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF72A1B44,	//0x178a		VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)
0x4934FFC0,	//0x178c		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_NOP
0xDDCD9B45,	//0x178e		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)
		//0x1790		VoC_endloop0
0xF7F9C975,	//0x1790		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)
		//0x1792		COR_H102
0x1808F146,	//0x1792		VoC_lw16i_set_inc(REG0,0x840,0x2)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0x18090840,	//0x1794		VoC_lw16i_set_inc(REG1,0x5abc,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x840,0x2)(hi)
0xFFC05ABC,	//0x1796		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x5abc,0x2)(hi)
0x128C2B80,	//0x1798		VoC_jal(CII_copy_xy)
0x08401804,	//0x179a		VoC_lw16i_set_inc(REG0,0x840,0x1)
0x5ABC1805,	//0x179c		VoC_lw16i_set_inc(REG1,0x5abc,0x1)
0x57851FBE,	//0x179e		VoC_lw16i_set_inc(REG2,0x5785,0xffffffff)
0xDFA99E0C,	//0x17a0		VoC_pop16(RA,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG0,REG1,DEFAULT)
0xD401C933,	//0x17a2		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xEA86FFC0,	//0x17a4		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0xDCA74932,	//0x17a6		VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0xD401D401,	//0x17a8		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xDCA5C933,	//0x17aa		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
		//0x17ab		VoC_endloop0
0x08400A8A,	//0x17ac		VoC_lw16i(ACC1_LO,0x840)
0x5ABC0A8B,	//0x17ae		VoC_lw16i(ACC1_HI,0x5abc)
0x5A6B1FBF,	//0x17b0		VoC_lw16i_set_inc(REG3,0x5a6b,0xffffffff)
0xE26E702F,	//0x17b2		VoC_lw16i_short(RL7_LO,0x26,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x1,DEFAULT)
0xDFC35F45,	//0x17b4		VoC_push16(REG3,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
0x09EF0A8A,	//0x17b6		VoC_lw16i(ACC1_LO,0x9ef)
0x09C80A8B,	//0x17b8		VoC_lw16i(ACC1_HI,0x9c8)
0x17D42C4F,	//0x17ba		VoC_loop_i(0x1,0x27)
0xD9087F3A,	//0x17bc		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xFF294069,	//0x17be		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD61640E3,	//0x17c0		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x00240B2F,	//0x17c2		VoC_sub16_dr(REG7,0x24,REG5)
0xE2754134,	//0x17c4		VoC_lw16i_short(REG5,0x27,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFF345401,	//0x17c6		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xDF46702D,	//0x17c8		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
0xD8A7E7C8,	//0x17ca		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xF6AC0FDE,	//0x17cc		VoC_movreg16(RL6_LO,REG5,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG7,REG3,DEFAULT)
0xC7F7E127,	//0x17ce		VoC_multf16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC0_HI,DEFAULT)
0xCAB2D401,	//0x17d0		VoC_sub32_rr(REG45,REG45,RL6,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
		//0x17d2		VoC_endloop0
0xDF06DC47,	//0x17d2		VoC_pop32(RL6,DEFAULT)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
		//0x17d4		VoC_endloop1
0x0004093F,	//0x17d4		VoC_add32_rd(RL7,RL7,0x4)
0xDF835F05,	//0x17d6		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
0xDFE9E580,	//0x17d8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x17d9		CII_G_pitch
0x575E1808,	//0x17da		VoC_lw16i_set_inc(REG0,0x575e,0x2)
0x57361809,	//0x17dc		VoC_lw16i_set_inc(REG1,0x5736,0x2)
0x070C180A,	//0x17de		VoC_lw16i_set_inc(REG2,0x70c,0x2)
0x00021485,	//0x17e0		VoC_lw32_d(ACC1,0x2)
0xF62F600D,	//0x17e2		VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG0,DEFAULT)
0xF62E600C,	//0x17e4		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
0xD9D26A85,	//0x17e6		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF8157814,	//0x17e8		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x5DCADDC2,	//0x17ea		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x17eb		VoC_endloop0
0x7F30D9D2,	//0x17ec		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)
0xFFC0E047,	//0x17ee		VoC_NAD	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
0x180C2C05,	//0x17f0		VoC_loop_i(0x1,0x2)
0x00010A96,	//0x17f2		VoC_lw16i(STATUS,0x1)
0xFF2C6A82,	//0x17f4		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x17f6		VoC_endloop0
0xFFC0D501,	//0x17f6		VoC_NOP	|	VoC_bimac32inc_pp(REG0,REG1)
0x17FD2F00,	//0x17f8		VoC_bnoe0z16_r(G_PITCH_01_ELSE)
0x124E2B80,	//0x17fa		VoC_jal(CII_NORM_L_ACC0)
0xFF38E5C8,	//0x17fc		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_jump(G_PITCH_01_END)
		//0x17fd		G_PITCH_01_ELSE
0xEA81FF2C,	//0x17fe		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x1800		VoC_endloop0
0x2B80D501,	//0x1800		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG1)
0xC279124E,	//0x1802		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
		//0x1804		G_PITCH_01_END
0x00060924,	//0x1804		VoC_add32_rd(ACC0,ACC0,0x6)
0xF6287047,	//0x1806		VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0xFF217F0A,	//0x1808		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_movreg32(REG45,REG23,DEFAULT)
0x06BC1809,	//0x180a		VoC_lw16i_set_inc(REG1,0x6bc,0x2)
		//0x180c		VoC_endloop1
0xF62F61A0,	//0x180c		VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x1804F1E1,	//0x180e		VoC_lw16i_set_inc(REG0,0x7a2,0x1)(lo)	|	VoC_lw16i_short(REG1,0xf,DEFAULT)
0xC26607A2,	//0x1810		VoC_sub16_rr(REG6,REG1,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x7a2,0x1)(hi)
0xC2575C85,	//0x1812		VoC_sub16_rr(REG7,REG1,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xC2A65C86,	//0x1814		VoC_sub16_rr(REG6,REG2,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xE0025C83,	//0x1816		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0x00170799,	//0x1818		VoC_sub16_rd(REG1,REG3,0x17)
0xF80B5C87,	//0x181a		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x182A3201,	//0x181c		VoC_bltz16_r(G_PITCH_03_END1,REG1)
0xF6A16060,	//0x181e		VoC_movreg16(REG1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x12602B80,	//0x1820		VoC_jal(CII_DIV_S)
0x0A81FE32,	//0x1822		VoC_lw16i(REG1,0x4ccd)(lo)	|	VoC_shr16_rr(REG2,REG6,DEFAULT)
0x34914CCD,	//0x1824		VoC_bngt16_rr(G_PITCH_03_END,REG2,REG1)(lo)	|	VoC_lw16i(REG1,0x4ccd)(hi)
0xE0221828,	//0x1826		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_bngt16_rr(G_PITCH_03_END,REG2,REG1)(hi)
		//0x1828		G_PITCH_03_END
0x7FFC1642,	//0x1828		VoC_and16_ri(REG2,0xfffc)
		//0x182a		G_PITCH_03_END1
0x1502DFA9,	//0x182a		VoC_sw16_d(REG2,0x7ac)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE58007AC,	//0x182c		VoC_return	|	VoC_sw16_d(REG2,0x7ac)(hi)
		//0x182e		CII_Pre_Process
0x020C1807,	//0x182e		VoC_lw16i_set_inc(REG3,0x20c,0x1)
0x016A1480,	//0x1830		VoC_lw32_d(REG01,0x16a)
0x01681806,	//0x1832		VoC_lw16i_set_inc(REG2,0x168,0x1)
0x01661483,	//0x1834		VoC_lw32_d(REG67,0x166)
0xFFC0D992,	//0x1836		VoC_NAD	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0x18572D40,	//0x1838		VoC_loop_i(0x0,0xa0)
0x716B0AC2,	//0x183a		VoC_lw16i(REG2,0xf16b)
0xC796CDD4,	//0x183c		VoC_multf16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0x0E30E022,	//0x183e		VoC_mac32_rd(REG6,0x2)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x0A810002,	//0x1840		VoC_lw16i(REG1,0x1e7f)(lo)	|	VoC_mac32_rd(REG6,0x2)(hi)
0xCE291E7F,	//0x1842		VoC_mac32_rr(REG5,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x1e7f)(hi)
0x6001C70E,	//0x1844		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_multf16_rr(REG6,REG4,REG1,DEFAULT)
0x0E30D830,	//0x1846		VoC_mac32_rd(REG6,0x2)(lo)	|	VoC_lw16_p(REG0,REG3,IN_PARALLEL)
0x0A860002,	//0x1848		VoC_lw16i(REG6,0x76b)(lo)	|	VoC_mac32_rd(REG6,0x2)(hi)
0x0AC7076B,	//0x184a		VoC_lw16i(REG7,0xf12a)(lo)	|	VoC_lw16i(REG6,0x76b)(hi)
0xCE06712A,	//0x184c		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_lw16i(REG7,0xf12a)(hi)
0xCE16CE0F,	//0x184e		VoC_mac32_rr(REG2,REG6,DEFAULT)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0xFBECFF13,	//0x1850		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x00060922,	//0x1852		VoC_add32_rd(REG45,ACC0,0x6)
0x5CB5E104,	//0x1854		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xE125F90C,	//0x1856		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
		//0x1857		VoC_endloop0
0x016A1580,	//0x1858		VoC_sw32_d(REG01,0x16a)
0x01661583,	//0x185a		VoC_sw32_d(REG67,0x166)
0x01681582,	//0x185c		VoC_sw32_d(REG45,0x168)
0xDFE9E580,	//0x185e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x185f		CII_subframePreProc
0xF0045FCF,	//0x1860		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push16(RL7_HI,DEFAULT)
0x46DE1805,	//0x1862		VoC_lw16i_set_inc(REG1,0x46de,0x1)
0x084A1806,	//0x1864		VoC_lw16i_set_inc(REG2,0x84a,0x1)
0x186E2C05,	//0x1866		VoC_loop_i(0x1,0x2)
0xFFC0D660,	//0x1868		VoC_NAD	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x15A32B80,	//0x186a		VoC_jal(CII_Weight_Ai)
0x46D41805,	//0x186c		VoC_lw16i_set_inc(REG1,0x46d4,0x1)
		//0x186e		VoC_endloop1
0x085E1806,	//0x186e		VoC_lw16i_set_inc(REG2,0x85e,0x1)
0x084A1804,	//0x1870		VoC_lw16i_set_inc(REG0,0x84a,0x1)
0x051F1805,	//0x1872		VoC_lw16i_set_inc(REG1,0x51f,0x1)
0xD8866963,	//0x1874		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDC96D886,	//0x1876		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x1877		VoC_endloop0
0xE2865655,	//0x1878		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x051F1807,	//0x187a		VoC_lw16i_set_inc(REG3,0x51f,0x1)
0x56D20A87,	//0x187c		VoC_lw16i(REG7,0x56d2)
0x1805F000,	//0x187e		VoC_lw16i_set_inc(REG1,0x52a,0x1)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xFFC0052A,	//0x1880		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x52a,0x1)(hi)
0x19072B80,	//0x1882		VoC_jal(CII_Syn_filt)
0x085E0A85,	//0x1884		VoC_lw16i(REG5,0x85e)
0x56D21807,	//0x1886		VoC_lw16i_set_inc(REG3,0x56d2,0x1)
0x7000E067,	//0x1888		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0x1805E286,	//0x188a		VoC_lw16i_set_inc(REG1,0x52a,0x1)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0xFFC0052A,	//0x188c		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x52a,0x1)(hi)
0x19072B80,	//0x188e		VoC_jal(CII_Syn_filt)
0xF0045650,	//0x1890		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x075C1806,	//0x1892		VoC_lw16i_set_inc(REG2,0x75c,0x1)
0x1807D636,	//0x1894		VoC_lw16i_set_inc(REG3,0x1e4,0x1)(lo)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0xC19B01E4,	//0x1896		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1e4,0x1)(hi)
0x15192B80,	//0x1898		VoC_jal(CII_Residu_new)
0x075C1808,	//0x189a		VoC_lw16i_set_inc(REG0,0x75c,0x2)
0x047E1809,	//0x189c		VoC_lw16i_set_inc(REG1,0x47e,0x2)
0xC189D636,	//0x189e		VoC_add16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x2B80F146,	//0x18a0		VoC_jal(CII_copy_xy)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0xD655128C,	//0x18a2		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_jal(CII_copy_xy)(hi)
0x047E1807,	//0x18a4		VoC_lw16i_set_inc(REG3,0x47e,0x1)
0xC19BD636,	//0x18a6		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x05DC0A87,	//0x18a8		VoC_lw16i(REG7,0x5dc)
0xE2867000,	//0x18aa		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x05D21805,	//0x18ac		VoC_lw16i_set_inc(REG1,0x5d2,0x1)
0x19072B80,	//0x18ae		VoC_jal(CII_Syn_filt)
0x084A1804,	//0x18b0		VoC_lw16i_set_inc(REG0,0x84a,0x1)
0x06BC1806,	//0x18b2		VoC_lw16i_set_inc(REG2,0x6bc,0x1)
0x05DC1807,	//0x18b4		VoC_lw16i_set_inc(REG3,0x5dc,0x1)
0x15192B80,	//0x18b6		VoC_jal(CII_Residu_new)
0x085E0A85,	//0x18b8		VoC_lw16i(REG5,0x85e)
0x06BC1807,	//0x18ba		VoC_lw16i_set_inc(REG3,0x6bc,0x1)
0xE2866067,	//0x18bc		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0xDF817000,	//0x18be		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x2B80F031,	//0x18c0		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDFA91907,	//0x18c2		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0xE580FFC0,	//0x18c4		VoC_return	|	VoC_NOP
		//0x18c6		CII_build_code_com2
0x09BE1805,	//0x18c6		VoC_lw16i_set_inc(REG1,0x9be,0x1)
0x57361807,	//0x18c8		VoC_lw16i_set_inc(REG3,0x5736,0x1)
0x08401806,	//0x18ca		VoC_lw16i_set_inc(REG2,0x840,0x1)
0xFF0E6785,	//0x18cc		VoC_movreg32(RL6,REG23,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x148487CD,	//0x18ce		VoC_lw32_d(ACC0,0x6)(lo)	|	VoC_sub16inc_rp(REG5,REG7,REG1,DEFAULT)
0xDCB50006,	//0x18d0		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw32_d(ACC0,0x6)(hi)
		//0x18d1		VoC_endloop0
0xFF317F27,	//0x18d2		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x18DD2C51,	//0x18d4		VoC_loop_i(0x1,0x28)
0xD831E784,	//0x18d6		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD129D8A5,	//0x18d8		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x18da		VoC_endloop0
0x7F3CDCB1,	//0x18da		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
0xDC89FF31,	//0x18dc		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_movreg32(REG23,RL6,IN_PARALLEL)
		//0x18dd		VoC_endloop1
0xC376E580,	//0x18de		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_return
		//0x18df		CII_Pred_lt_3or6
0xF00577F0,	//0x18e0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF01B70D2,	//0x18e2		VoC_lw16i_short(INC3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x00000B39,	//0x18e4		VoC_sub16_dr(REG1,0x0,REG7)
0x18EA3182,	//0x18e6		VoC_bez16_r(PRED_IT_3OR6_001,REG2)
0xFFC0F8F9,	//0x18e8		VoC_NAD	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
		//0x18ea		PRED_IT_3OR6_001
0xE0637024,	//0x18ea		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x18F03241,	//0x18ec		VoC_bnltz16_r(PRED_IT6_003,REG1)
0xC3A64059,	//0x18ee		VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x18f0		PRED_IT6_003
0x467C0A87,	//0x18f0		VoC_lw16i(REG7,0x467c)
0xC2CB41CA,	//0x18f2		VoC_sub16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG7,REG1,DEFAULT)
0x1484C0FB,	//0x18f4		VoC_lw32_d(ACC0,0x6)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x7F0F0006,	//0x18f6		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_lw32_d(ACC0,0x6)(hi)
0xFFC0FF26,	//0x18f8		VoC_NAD	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x19042C51,	//0x18fa		VoC_loop_i(0x1,0x28)
0xC1A660C0,	//0x18fc		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0xF6C16943,	//0x18fe		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD40BD402,	//0x1900		VoC_mac32inc_pp(REG1,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
		//0x1901		VoC_endloop0
0xC165FF39,	//0x1902		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_movreg32(REG23,RL7,DEFAULT)
		//0x1904		VoC_endloop1
0xFF345C59,	//0x1904		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG5,DEFAULT)
0xDF40E580,	//0x1906		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x1907		CII_Syn_filt
0x57361806,	//0x1908		VoC_lw16i_set_inc(REG2,0x5736,0x1)
0xD8946944,	//0x190a		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xE0105894,	//0x190c		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x190e		VoC_endloop0
0xF0085CA4,	//0x190e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC1455854,	//0x1910		VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG5,DEFAULT)
0xDFE960A0,	//0x1912		VoC_push16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x573F1FB9,	//0x1914		VoC_lw16i_set_inc(REG1,0x573f,0xfffffffe)
0x19212E31,	//0x1916		VoC_loop_r(1,REG6)
0x68A2E201,	//0x1918		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD5819B1C,	//0x191a		VoC_bimsu32inc_pp(REG0,REG1)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,IN_PARALLEL)
		//0x191b		VoC_endloop0
0xFBECE0A0,	//0x191c		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x00060924,	//0x191e		VoC_add32_rd(ACC0,ACC0,0x6)
0xDCA9E041,	//0x1920		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x1921		VoC_endloop1
0x57401808,	//0x1922		VoC_lw16i_set_inc(REG0,0x5740,0x2)
0xF00960C5,	//0x1924		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF6E17816,	//0x1926		VoC_movreg16(REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x128C2B80,	//0x1928		VoC_jal(CII_copy_xy)
0x0018441E,	//0x192a		VoC_bne16_rd(SYN_FILT_01,REG6,0x18)
0xD908DD8C,	//0x192c		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x192d		SYN_FILT_01
0x19353180,	//0x192e		VoC_bez16_r(Syn_filt103,REG0)
0x57360A80,	//0x1930		VoC_lw16i(REG0,0x5736)
0x2B80C028,	//0x1932		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xDFA9127F,	//0x1934		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
		//0x1935		Syn_filt103
0xE580DF00,	//0x1936		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x1938		CII_Reorder_lsf
0x00CD0A85,	//0x1938		VoC_lw16i(REG5,0xcd)
0xD804E948,	//0x193a		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x194034AC,	//0x193c		VoC_bngt16_rr(Reord_L,REG5,REG4)
0xFFC0DC05,	//0x193e		VoC_NAD	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x1940		Reord_L
0x00CD0A84,	//0x1940		VoC_lw16i(REG4,0xcd)
		//0x1942		VoC_endloop0
0xE5808305,	//0x1942		VoC_return	|	VoC_add16inc_rp(REG5,REG4,REG0,DEFAULT)
		//0x1944		CII_Vq_subvec
0x1486FF42,	//0x1944		VoC_lw32_d(RL6,0x10)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0x5FC30010,	//0x1946		VoC_push16(REG3,DEFAULT)	|	VoC_lw32_d(RL6,0x10)(hi)
0x7002D910,	//0x1948		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,IN_PARALLEL)
0x7050FF44,	//0x194a		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xFFC0F009,	//0x194c		VoC_NAD	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x197E2E31,	//0x194e		VoC_loop_r(1,REG6)
0x197C2C40,	//0x1950		VoC_loop_i(0x0,0x20)
0xA61F261E,	//0x1952		VoC_sub16inc_pp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG3,DEFAULT)
0x8FCF0F8E,	//0x1954		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36D908,	//0x1956		VoC_bimac32_rr(REG67,REG67)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xA61F261E,	//0x1958		VoC_sub16inc_pp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG3,DEFAULT)
0x8FCF0F8E,	//0x195a		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36FFC0,	//0x195c		VoC_bimac32_rr(REG67,REG67)	|	VoC_NOP
0x36B4D910,	//0x195e		VoC_bngt32_rr(Vq_subvec_s_new_01,RL6,ACC0)(lo)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0xF0051964,	//0x1960		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bngt32_rr(Vq_subvec_s_new_01,RL6,ACC0)(hi)
0xF6447F26,	//0x1962		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
		//0x1964		Vq_subvec_s_new_01
0x197C3307,	//0x1964		VoC_bez32_r(Vq_subvec_s_new_02,RL7)
0x0017079B,	//0x1966		VoC_sub16_rd(REG3,REG3,0x17)
0x221EFF44,	//0x1968		VoC_add16inc_pp(REG6,REG0,REG3,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x0F8EA21F,	//0x196a		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_pp(REG7,REG0,REG3,IN_PARALLEL)
0xD9088FCF,	//0x196c		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0x221ECF36,	//0x196e		VoC_add16inc_pp(REG6,REG0,REG3,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x0F8EA21F,	//0x1970		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_pp(REG7,REG0,REG3,IN_PARALLEL)
0xFFC08FCF,	//0x1972		VoC_NOP	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0xD910CF36,	//0x1974		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x197C36B4,	//0x1976		VoC_bngt32_rr(Vq_subvec_s_new_02,RL6,ACC0)
0x7F26F025,	//0x1978		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xFFC0F644,	//0x197a		VoC_NAD	|	VoC_movreg16(REG4,REG2,IN_PARALLEL)
		//0x197c		Vq_subvec_s_new_02
		//0x197c		VoC_endloop0
0xDE107F44,	//0x197c		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x197e		VoC_endloop1
0x5F83FFC0,	//0x197e		VoC_pop16(REG3,DEFAULT)	|	VoC_NOP
0x5612F686,	//0x1980		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x3307F8F4,	//0x1982		VoC_bez32_r(Vq_subvec_LEnd,RL7)(lo)	|	VoC_shr16_ri(REG4,0xfffffffe,IN_PARALLEL)
0xF8FE1987,	//0x1984		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_bez32_r(Vq_subvec_LEnd,RL7)(hi)
0xD914C1AE,	//0x1986		VoC_lw32_sd(ACC0,0x1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
		//0x1987		Vq_subvec_LEnd
0xDCA640E3,	//0x1988		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x000A1486,	//0x198a		VoC_lw32_d(RL6,0xa)
0x590DD9DB,	//0x198c		VoC_lw32_sd(ACC1,0x0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0x6141F700,	//0x198e		VoC_movreg16(REG1,ACC1_LO,DEFAULT)	|	VoC_movreg16(REG0,ACC0_LO,IN_PARALLEL)
0x4975C934,	//0x1990		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x5D14DA12,	//0x1992		VoC_sw32_sd(ACC0,0x1,DEFAULT)	|	VoC_sw16_sd(REG2,0x0,IN_PARALLEL)
0xDD0DE002,	//0x1994		VoC_sw32_sd(ACC1,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0x199C31C5,	//0x1996		VoC_bnez16_r(Vq_subvec_s_new_05,REG5)
0xDD83D9DA,	//0x1998		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xE580DD8A,	//0x199a		VoC_return	|	VoC_sw32_p(REG45,REG1,DEFAULT)
		//0x199c		Vq_subvec_s_new_05
0x59DAC2B6,	//0x199c		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)
0x42A4C2BF,	//0x199e		VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_sub16_rr(REG7,REG2,REG7,IN_PARALLEL)
0xDD83C2AD,	//0x19a0		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG5,REG2,REG5,IN_PARALLEL)
0xE580DD8A,	//0x19a2		VoC_return	|	VoC_sw32_p(REG45,REG1,DEFAULT)
		//0x19a4		CII_prm2bits_amr_efr
0x08540A81,	//0x19a4		VoC_lw16i(REG1,0x854)
0x56FA1806,	//0x19a6		VoC_lw16i_set_inc(REG2,0x56fa,0x1)
0xE00477F3,	//0x19a8		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x19BE2C73,	//0x19aa		VoC_loop_i(0x1,0x39)
0x1606D806,	//0x19ac		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x160400FF,	//0x19ae		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_and16_ri(REG6,0xff)(hi)
0x31840001,	//0x19b0		VoC_bez16_r(prm2bits_amr_efr_even,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0xD88619B5,	//0x19b2		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_bez16_r(prm2bits_amr_efr_even,REG4)(hi)
0xD8A7F946,	//0x19b4		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
		//0x19b5		prm2bits_amr_efr_even
0x078BC071,	//0x19b6		VoC_sub16_rd(REG3,REG1,0x2)(lo)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE7840002,	//0x19b8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG3,REG1,0x2)(hi)
0xE43DF025,	//0x19ba		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xDCB5F80F,	//0x19bc		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x19bd		VoC_endloop0
		//0x19be		VoC_endloop1
0x00020724,	//0x19be		VoC_add16_rd(REG4,REG4,0x2)
0x002C1809,	//0x19c0		VoC_lw16i_set_inc(REG1,0x2c,0x2)
0x08540A82,	//0x19c2		VoC_lw16i(REG2,0x854)
0x828F028E,	//0x19c4		VoC_add16inc_rp(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG2,REG1,DEFAULT)
0x06BC1808,	//0x19c6		VoC_lw16i_set_inc(REG0,0x6bc,0x2)
0x19CF2CF5,	//0x19c8		VoC_loop_i(0x1,0x7a)
0x58F5D8E4,	//0x19ca		VoC_lw16inc_p(REG5,REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG6,DEFAULT)
0x028EFF44,	//0x19cc		VoC_add16inc_rp(REG6,REG2,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x5DC2828F,	//0x19ce		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_add16inc_rp(REG7,REG2,REG1,IN_PARALLEL)
		//0x19cf		VoC_endloop1
0x5DC4E004,	//0x19d0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x0A85EF01,	//0x19d2		VoC_lw16i(REG5,0x3c)(lo)	|	VoC_lw16i_short(REG1,0xfffffff0,IN_PARALLEL)
0x1808003C,	//0x19d4		VoC_lw16i_set_inc(REG0,0x6bc,0x2)(lo)	|	VoC_lw16i(REG5,0x3c)(hi)
0x5D8406BC,	//0x19d6		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6bc,0x2)(hi)
0x1806F005,	//0x19d8		VoC_lw16i_set_inc(REG2,0x6ac,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xFFC006AC,	//0x19da		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x6ac,0x1)(hi)
0xD9C36887,	//0x19dc		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFE4E5E08,	//0x19de		VoC_shru16_rr(REG6,REG1,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0xDE086474,	//0x19e0		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0x647CFE4F,	//0x19e2		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_shru16_rr(REG7,REG1,DEFAULT)
		//0x19e3		VoC_endloop0
0x6465D9C3,	//0x19e4		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0xF701DFC2,	//0x19e6		VoC_lw16i_short(REG1,0xfffffff8,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0xFFC0DCA5,	//0x19e8		VoC_NAD	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x1A012C1F,	//0x19ea		VoC_loop_i(0x1,0xf)
0xFF426887,	//0x19ec		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFE4E5E08,	//0x19ee		VoC_shru16_rr(REG6,REG1,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0xDE086475,	//0x19f0		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG6,DEFAULT)
0x647DFE4F,	//0x19f2		VoC_or16_rr(REG5,REG7,DEFAULT)	|	VoC_shru16_rr(REG7,REG1,DEFAULT)
		//0x19f3		VoC_endloop0
0xF601D9C3,	//0x19f4		VoC_lw16i_short(REG1,0xfffffff0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0xE886FFC0,	//0x19f6		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xFE4E5E08,	//0x19f8		VoC_shru16_rr(REG6,REG1,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x5E08E474,	//0x19fa		VoC_inc_p(REG1,DEFAULT)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0x647CFE4F,	//0x19fc		VoC_or16_rr(REG4,REG7,DEFAULT)	|	VoC_shru16_rr(REG7,REG1,IN_PARALLEL)
		//0x19fd		VoC_endloop0
0xE465D9C3,	//0x19fe		VoC_or16_rr(REG5,REG4,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0xDCA5F701,	//0x1a00		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16i_short(REG1,0xfffffff8,DEFAULT)
		//0x1a01		VoC_endloop1
0xF90BDF83,	//0x1a02		VoC_shru16_ri(REG3,0x1,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xDF83E580,	//0x1a04		VoC_pop16(REG3,DEFAULT)	|	VoC_return
		//0x1a05		CII_PRM2_BITS_POST_PROCESS
0xE2865FE9,	//0x1a06		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x020C1808,	//0x1a08		VoC_lw16i_set_inc(REG0,0x20c,0x2)
0x016C1809,	//0x1a0a		VoC_lw16i_set_inc(REG1,0x16c,0x2)
0x128C2B80,	//0x1a0c		VoC_jal(CII_copy_xy)
0x034D1804,	//0x1a0e		VoC_lw16i_set_inc(REG0,0x34d,0x1)
0x02AD1805,	//0x1a10		VoC_lw16i_set_inc(REG1,0x2ad,0x1)
0x2D1ED886,	//0x1a12		VoC_loop_i(0x0,0x8f)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xD8861A16,	//0x1a14		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x8f)(hi)
		//0x1a16		VoC_endloop0
0x1804DC96,	//0x1a16		VoC_lw16i_set_inc(REG0,0x55f0,0x1)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xFFC055F0,	//0x1a18		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x55f0,0x1)(hi)
0x19A42B80,	//0x1a1a		VoC_jal(CII_prm2bits_amr_efr)
0xDFA97006,	//0x1a1c		VoC_pop16(RA,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xE580FFC0,	//0x1a1e		VoC_return	|	VoC_NOP
		//0x1a20		CII_check_lsp
0x1804F045,	//0x1a20		VoC_lw16i_set_inc(REG0,0x55f,0x1)(lo)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xFFC0055F,	//0x1a22		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x55f,0x1)(hi)
0x1A2F2C05,	//0x1a24		VoC_loop_i(0x1,0x2)
0x7FFF0A84,	//0x1a26		VoC_lw16i(REG4,0x7fff)
0xD885E746,	//0x1a28		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0x34A58545,	//0x1a2a		VoC_bngt16_rr(CHECK_LSP_02,REG4,REG5)(lo)	|	VoC_sub16_rp(REG5,REG5,REG0,DEFAULT)
0xE0A41A2E,	//0x1a2c		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_bngt16_rr(CHECK_LSP_02,REG4,REG5)(hi)
		//0x1a2e		CHECK_LSP_02
		//0x1a2e		VoC_endloop0
0x60C7F0A5,	//0x1a2e		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
		//0x1a2f		VoC_endloop1
0x0A84F686,	//0x1a30		VoC_lw16i(REG4,0x7d00)(lo)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x0A857D00,	//0x1a32		VoC_lw16i(REG5,0x258)(lo)	|	VoC_lw16i(REG4,0x7d00)(hi)
0x48940258,	//0x1a34		VoC_blt16_rd(CHECK_LSP_03,REG4,0x55f)(lo)	|	VoC_lw16i(REG5,0x258)(hi)
0x0A84055F,	//0x1a36		VoC_lw16i(REG4,0x7724)(lo)	|	VoC_blt16_rd(CHECK_LSP_03,REG4,0x55f)(hi)
0x0A857724,	//0x1a38		VoC_lw16i(REG5,0x320)(lo)	|	VoC_lw16i(REG4,0x7724)(hi)
0x48240320,	//0x1a3a		VoC_blt16_rd(CHECK_LSP_03,REG4,0x55f)(lo)	|	VoC_lw16i(REG5,0x320)(hi)
0x0A85055F,	//0x1a3c		VoC_lw16i(REG5,0x44c)(lo)	|	VoC_blt16_rd(CHECK_LSP_03,REG4,0x55f)(hi)
0xF020044C,	//0x1a3e		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i(REG5,0x44c)(hi)
		//0x1a3f		CHECK_LSP_03
0x0A84F001,	//0x1a40		VoC_lw16i(REG4,0x5dc)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x342605DC,	//0x1a42		VoC_bgt16_rr(CHECK_LSP_04,REG4,REG6)(lo)	|	VoC_lw16i(REG4,0x5dc)(hi)
0x34AF1A48,	//0x1a44		VoC_bngt16_rr(CHECK_LSP_05,REG5,REG7)(lo)	|	VoC_bgt16_rr(CHECK_LSP_04,REG4,REG6)(hi)
0xFFC01A4A,	//0x1a46		VoC_NAD	|	VoC_bngt16_rr(CHECK_LSP_05,REG5,REG7)(hi)
		//0x1a48		CHECK_LSP_04
0x05B30701,	//0x1a48		VoC_add16_rd(REG1,REG0,0x5b3)
		//0x1a4a		CHECK_LSP_05
0xE0067187,	//0x1a4a		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x1A503439,	//0x1a4c		VoC_bgt16_rr(CHECK_LSP_RET,REG7,REG1)
0xF026E0E1,	//0x1a4e		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG7,DEFAULT)
		//0x1a50		CHECK_LSP_RET
0x05B31501,	//0x1a50		VoC_sw16_d(REG1,0x5b3)
0x07B01506,	//0x1a52		VoC_sw16_d(REG6,0x7b0)
0xF003E580,	//0x1a54		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_return
		//0x1a55		CII_RESET_AMR_CONSTANT
0x015C1808,	//0x1a56		VoC_lw16i_set_inc(REG0,0x15c,0x2)
0xE0757024,	//0x1a58		VoC_lw16i_short(REG5,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xE0277066,	//0x1a5a		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0xDDC3DDC2,	//0x1a5c		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE04570C4,	//0x1a5e		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x6,DEFAULT)
0xE0877186,	//0x1a60		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xc,DEFAULT)
0xDDC3DDC2,	//0x1a62		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE580DC03,	//0x1a64		VoC_return	|	VoC_sw16_p(REG3,REG0,DEFAULT)
		//0x1a66		CII_COD_AMR_122
0xDFC7DFE9,	//0x1a66		VoC_push16(REG7,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1F772B80,	//0x1a68		VoC_jal(CII_lpc_M122)
0x21B72B80,	//0x1a6a		VoC_jal(CII_lsp_122)
0x1A202B80,	//0x1a6c		VoC_jal(CII_check_lsp)
0x1804FF43,	//0x1a6e		VoC_lw16i_set_inc(REG0,0x7b4,0x1)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0x180707B4,	//0x1a70		VoC_lw16i_set_inc(REG3,0x1e4,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x7b4,0x1)(hi)
0x180601E4,	//0x1a72		VoC_lw16i_set_inc(REG2,0x33c,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x1e4,0x1)(hi)
0xF030033C,	//0x1a74		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x33c,0x1)(hi)
		//0x1a75		cod_amr105
0x07A61583,	//0x1a76		VoC_sw32_d(REG67,0x7a6)
0x00174826,	//0x1a78		VoC_blt16_rd(cod_amr1041,REG6,0x17)
0x1ABC2B00,	//0x1a7a		VoC_jump_lg(cod_amr104)
		//0x1a7c		cod_amr1041
0x5FC0F0A4,	//0x1a7c		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x5,DEFAULT)
0x1805DF41,	//0x1a7e		VoC_lw16i_set_inc(REG1,0x46de,0x1)(lo)	|	VoC_push32(REG23,IN_PARALLEL)
0x180646DE,	//0x1a80		VoC_lw16i_set_inc(REG2,0x84a,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x46de,0x1)(hi)
0x2B80084A,	//0x1a82		VoC_jal(CII_Weight_Ai)(lo)	|	VoC_lw16i_set_inc(REG2,0x84a,0x1)(hi)
0xD61015A3,	//0x1a84		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jal(CII_Weight_Ai)(hi)
0x46D41805,	//0x1a86		VoC_lw16i_set_inc(REG1,0x46d4,0x1)
0x085E1806,	//0x1a88		VoC_lw16i_set_inc(REG2,0x85e,0x1)
0x15A32B80,	//0x1a8a		VoC_jal(CII_Weight_Ai)
0x084A1804,	//0x1a8c		VoC_lw16i_set_inc(REG0,0x84a,0x1)
0x2B80D909,	//0x1a8e		VoC_jal(CII_Residu_new)(lo)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xD9091519,	//0x1a90		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_jal(CII_Residu_new)(hi)
0x085E0A85,	//0x1a92		VoC_lw16i(REG5,0x85e)
0xE2867020,	//0x1a94		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x05C81805,	//0x1a96		VoC_lw16i_set_inc(REG1,0x5c8,0x1)
0xF6476043,	//0x1a98		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x19072B80,	//0x1a9a		VoC_jal(CII_Syn_filt)
0x07A61406,	//0x1a9c		VoC_lw16_d(REG6,0x7a6)
0x00004036,	//0x1a9e		VoC_be16_rd(cod_amr106,REG6,0x0)
0x000A4026,	//0x1aa0		VoC_be16_rd(cod_amr106,REG6,0xa)
0x1FF02B80,	//0x1aa2		VoC_jal(CII_Pitch_ol_M122)
		//0x1aa4		cod_amr106
0x07A80A86,	//0x1aa4		VoC_lw16i(REG6,0x7a8)
0x07A61407,	//0x1aa6		VoC_lw16_d(REG7,0x7a6)
0xC1BEF80F,	//0x1aa8		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xDF015F80,	//0x1aaa		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x7164DC64,	//0x1aac		VoC_lw16i_short(REG4,0xb,DEFAULT)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0x40AAE285,	//0x1aae		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x28,IN_PARALLEL)
0x1483C0EB,	//0x1ab0		VoC_lw32_d(REG67,0x7a6)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x073607A6,	//0x1ab2		VoC_add16_rd(REG6,REG6,0x2)(lo)	|	VoC_lw32_d(REG67,0x7a6)(hi)
0x44260002,	//0x1ab4		VoC_bne16_rd(cod_amr601,REG6,0x16)(lo)	|	VoC_add16_rd(REG6,REG6,0x2)(hi)
0x073F0016,	//0x1ab6		VoC_add16_rd(REG7,REG7,0x26)(lo)	|	VoC_bne16_rd(cod_amr601,REG6,0x16)(hi)
0xC0200026,	//0x1ab8		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x26)(hi)
		//0x1ab9		cod_amr601
0x1A752B00,	//0x1aba		VoC_jump_lg(cod_amr105)
		//0x1abc		cod_amr104
0xF026F007,	//0x1abc		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x07B40A80,	//0x1abe		VoC_lw16i(REG0,0x7b4)
0x07E00A81,	//0x1ac0		VoC_lw16i(REG1,0x7e0)
0xDFC0DFC7,	//0x1ac2		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xDFC6DFC1,	//0x1ac4		VoC_push16(REG6,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFFC0DFC7,	//0x1ac6		VoC_NAD	|	VoC_push16(REG7,DEFAULT)
		//0x1ac8		cod_amr112
0x00294827,	//0x1ac8		VoC_blt16_rd(cod_amr1111,REG7,0x29)
0x1CA02B00,	//0x1aca		VoC_jump_lg(cod_amr111)
		//0x1acc		cod_amr1111
0x05BE0A8F,	//0x1acc		VoC_lw16i(RL7_HI,0x5be)
0x185F2B80,	//0x1ace		VoC_jal(CII_subframePreProc)
0x0A85D617,	//0x1ad0		VoC_lw16i(REG5,0x47e)(lo)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0xC1EF047E,	//0x1ad2		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x47e)(hi)
0x1507F005,	//0x1ad4		VoC_sw16_d(REG7,0x7ae)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x561707AE,	//0x1ad6		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG7,0x7ae)(hi)
0x1400E121,	//0x1ad8		VoC_lw16_d(REG0,0x7a8)(lo)	|	VoC_lw16i_short(REG1,0x12,IN_PARALLEL)
0x706207A8,	//0x1ada		VoC_lw16i_short(REG2,0x3,DEFAULT)	|	VoC_lw16_d(REG0,0x7a8)(hi)
0x3187E063,	//0x1adc		VoC_bez16_r(AMR_PITCH_FR201,REG7)(lo)	|	VoC_lw16i_short(REG3,0x6,IN_PARALLEL)
0x14001AE8,	//0x1ade		VoC_lw16_d(REG0,0x7a9)(lo)	|	VoC_bez16_r(AMR_PITCH_FR201,REG7)(hi)
0x403F07A9,	//0x1ae0		VoC_be16_rd(AMR_PITCH_FR201,REG7,0x26)(lo)	|	VoC_lw16_d(REG0,0x7a9)(hi)
0xF0250026,	//0x1ae2		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_be16_rd(AMR_PITCH_FR201,REG7,0x26)(hi)
0x057C1400,	//0x1ae4		VoC_lw16_d(REG0,0x57c)
0xE09370A2,	//0x1ae6		VoC_lw16i_short(REG3,0x9,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x5,DEFAULT)
		//0x1ae8		AMR_PITCH_FR201
0x1505C214,	//0x1ae8		VoC_sw16_d(REG5,0x844)(lo)	|	VoC_sub16_rr(REG4,REG0,REG2,DEFAULT)
0x34210844,	//0x1aea		VoC_bgt16_rr(GET_RANGE1,REG4,REG1)(lo)	|	VoC_sw16_d(REG5,0x844)(hi)
0xE0241AEE,	//0x1aec		VoC_movreg16(REG4,REG1,DEFAULT)	|	VoC_bgt16_rr(GET_RANGE1,REG4,REG1)(hi)
		//0x1aee		GET_RANGE1
0x3C2DC11D,	//0x1aee		VoC_bngt16_rd(GET_RANGE2,REG5,0x28)(lo)	|	VoC_add16_rr(REG5,REG4,REG3,DEFAULT)
0x0A850028,	//0x1af0		VoC_lw16i(REG5,0x8f)(lo)	|	VoC_bngt16_rd(GET_RANGE2,REG5,0x28)(hi)
0xC35C008F,	//0x1af2		VoC_sub16_rr(REG4,REG5,REG3,DEFAULT)	|	VoC_lw16i(REG5,0x8f)(hi)
		//0x1af4		GET_RANGE2
0x09081808,	//0x1af4		VoC_lw16i_set_inc(REG0,0x908,0x2)
0x08421582,	//0x1af6		VoC_sw32_d(REG45,0x842)
0x4314F082,	//0x1af8		VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x1FB9C155,	//0x1afa		VoC_lw16i_set_inc(REG1,0x56d2,0xfffffffe)(lo)	|	VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)
0x422256D2,	//0x1afc		VoC_sub16_rr(REG2,REG0,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x56d2,0xfffffffe)(hi)
0x0B20DF42,	//0x1afe		VoC_sub16_dr(REG0,0x7ae,REG4)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0x180707AE,	//0x1b00		VoC_lw16i_set_inc(REG3,0x5736,0x1)(lo)	|	VoC_sub16_dr(REG0,0x7ae,REG4)(hi)
0xDFC25736,	//0x1b02		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5736,0x1)(hi)
0x2B80DFC0,	//0x1b04		VoC_jal(CII_Convolve)(lo)	|	VoC_push16(REG0,DEFAULT)
0xFF4414B1,	//0x1b06		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_Convolve)(hi)
0x57361808,	//0x1b08		VoC_lw16i_set_inc(REG0,0x5736,0x2)
0xD500EA81,	//0x1b0a		VoC_bimac32inc_pp(REG0,REG0)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1b0b		VoC_endloop0
0x0A83F002,	//0x1b0c		VoC_lw16i(REG3,0x400)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x77A40400,	//0x1b0e		VoC_lw16i_short(REG4,0xfffffffd,DEFAULT)	|	VoC_lw16i(REG3,0x400)(hi)
0x36A1E005,	//0x1b10		VoC_bngt32_rr(PITCH_F6_1001,ACC0,REG23)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x18081B1D,	//0x1b12		VoC_lw16i_set_inc(REG0,0x5736,0x2)(lo)	|	VoC_bngt32_rr(PITCH_F6_1001,ACC0,REG23)(hi)
0x18095736,	//0x1b14		VoC_lw16i_set_inc(REG1,0x5736,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x5736,0x2)(hi)
0x70425736,	//0x1b16		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x5736,0x2)(hi)
0x2B80E0A3,	//0x1b18		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0xa,IN_PARALLEL)
0xF7E41284,	//0x1b1a		VoC_lw16i_short(REG4,0xffffffff,DEFAULT)	|	VoC_jal(CII_scale)(hi)
0xD622F045,	//0x1b1c		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
		//0x1b1d		PITCH_F6_1001
0xC0BBD90B,	//0x1b1e		VoC_add16_rr(REG3,REG2,REG7,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x1503F032,	//0x1b20		VoC_sw16_d(REG3,0x840)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x40B20840,	//0x1b22		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_sw16_d(REG3,0x840)(hi)
0xFF44D613,	//0x1b24		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16_sd(REG3,0x0,IN_PARALLEL)
		//0x1b25		PITCH_F6_1002
0x57361808,	//0x1b26		VoC_lw16i_set_inc(REG0,0x5736,0x2)
0xDF426A82,	//0x1b28		VoC_push32(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1b2a		VoC_endloop0
0xDF41D500,	//0x1b2a		VoC_push32(REG23,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG0)
0x2B80FF20,	//0x1b2c		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFF0312FF,	//0x1b2e		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
0x57361808,	//0x1b30		VoC_lw16i_set_inc(REG0,0x5736,0x2)
0x06BC1809,	//0x1b32		VoC_lw16i_set_inc(REG1,0x6bc,0x2)
0xFF446A82,	//0x1b34		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1b36		VoC_endloop0
0xF90ED501,	//0x1b36		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0xF90CFF22,	//0x1b38		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xC7E04DEC,	//0x1b3a		VoC_multf16_rr(REG0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xE01347A9,	//0x1b3c		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_multf16_rr(REG1,REG6,REG5,DEFAULT)
0xCE0BCE03,	//0x1b3e		VoC_mac32_rr(REG1,REG3,DEFAULT)	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0xFB84DF01,	//0x1b40		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDCA9F7F3,	//0x1b42		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x393ADF02,	//0x1b44		VoC_bgt16_rd(PITCH_F6_1003,REG2,0x840)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xDE180840,	//0x1b46		VoC_inc_p(REG3,DEFAULT)	|	VoC_bgt16_rd(PITCH_F6_1003,REG2,0x840)(hi)
0x56F91FBC,	//0x1b48		VoC_lw16i_set_inc(REG0,0x56f9,0xffffffff)
0x575C1805,	//0x1b4a		VoC_lw16i_set_inc(REG1,0x575c,0x1)
0xDF41D836,	//0x1b4c		VoC_push32(REG23,DEFAULT)	|	VoC_lw16_p(REG6,REG3,DEFAULT)
0xECE59B81,	//0x1b4e		VoC_loop_i_short(0x27,DEFAULT)	|	VoC_multf32inc_rp(REG23,REG6,REG0,DEFAULT)
0x82CBFEA1,	//0x1b50		VoC_add16inc_rp(REG3,REG3,REG1,DEFAULT)	|	VoC_shr32_rr(REG23,REG4,DEFAULT)
0xDC139B81,	//0x1b52		VoC_sw16_p(REG3,REG1,DEFAULT)	|	VoC_multf32inc_rp(REG23,REG6,REG0,DEFAULT)
		//0x1b54		VoC_endloop0
0x000A0789,	//0x1b54		VoC_sub16_rd(REG1,REG1,0xa)
0xDF01FE2E,	//0x1b56		VoC_pop32(REG23,DEFAULT)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0x57361506,	//0x1b58		VoC_sw16_d(REG6,0x5736)
0x1B252B00,	//0x1b5a		VoC_jump_lg(PITCH_F6_1002)
		//0x1b5c		PITCH_F6_1003
0x5F02F030,	//0x1b5c		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xD610DF82,	//0x1b5e		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x08421482,	//0x1b60		VoC_lw32_d(REG45,0x842)
0xE081C020,	//0x1b62		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xC3665887,	//0x1b64		VoC_sub16_rr(REG6,REG5,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xE01560E2,	//0x1b66		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0x3146C12C,	//0x1b68		VoC_bngtz16_r(AMR_PITCH_FR103,REG6)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xD8871B74,	//0x1b6a		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_bngtz16_r(AMR_PITCH_FR103,REG6)(hi)
0xC3D3E787,	//0x1b6c		VoC_sub16_rr(REG3,REG7,REG2,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0x1B723203,	//0x1b6e		VoC_bltz16_r(AMR_PITCH_FR104,REG3)
0xE081E0E2,	//0x1b70		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_movreg16(REG2,REG7,DEFAULT)
		//0x1b72		AMR_PITCH_FR104
0xD887C12C,	//0x1b72		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
		//0x1b73		VoC_endloop0
		//0x1b74		AMR_PITCH_FR103
0xE5E4700C,	//0x1b74		VoC_lw16i_short(REG4,0x5e,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0x08446E04,	//0x1b76		VoC_bnez16_d(AMR_PITCH_FR105,0x844)
0x1BAD340C,	//0x1b78		VoC_bgt16_rr(AMR_PITCH_FR106,REG1,REG4)
		//0x1b7a		AMR_PITCH_FR105
0x77A4F7F2,	//0x1b7a		VoC_lw16i_short(REG4,0xfffd,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xD612E035,	//0x1b7c		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x3,IN_PARALLEL)
0xDFC14052,	//0x1b7e		VoC_push16(REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG2,DEFAULT)
0x46BA1807,	//0x1b80		VoC_lw16i_set_inc(REG3,0x46ba,0x1)
0x00000ACD,	//0x1b82		VoC_lw16i(RL6_HI,0x8000)
0xF01970D0,	//0x1b84		VoC_lw16i_short(INC1,0x6,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x6,DEFAULT)
		//0x1b86		SEARCHFRAC102
0x1BA53425,	//0x1b86		VoC_bgt16_rr(SEARCHFRAC100,REG4,REG5)
0xDF416086,	//0x1b88		VoC_push32(REG23,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x1B903246,	//0x1b8a		VoC_bnltz16_r(INTERPOL_3OR6_101,REG6)
0x00190736,	//0x1b8c		VoC_add16_rd(REG6,REG6,0x19)
0x00020792,	//0x1b8e		VoC_sub16_rd(REG2,REG2,0x2)
		//0x1b90		INTERPOL_3OR6_101
0xC2F1C0F0,	//0x1b90		VoC_sub16_rr(REG1,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG0,REG3,REG6,DEFAULT)
0x00190709,	//0x1b92		VoC_add16_rd(REG1,REG1,0x19)
0x00020713,	//0x1b94		VoC_add16_rd(REG3,REG2,0x2)
0xFF446883,	//0x1b96		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xD40BD402,	//0x1b98		VoC_mac32inc_pp(REG1,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
		//0x1b99		VoC_endloop0
0x0921E1A0,	//0x1b9a		VoC_add32_rd(REG23,ACC0,0x6)(lo)	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x34980006,	//0x1b9c		VoC_bngt16_rr(SEARCHFRAC101,REG3,REG0)(lo)	|	VoC_add32_rd(REG23,ACC0,0x6)(hi)
0x608C1BA1,	//0x1b9e		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_bngt16_rr(SEARCHFRAC101,REG3,REG0)(hi)
0xDF01F66D,	//0x1ba0		VoC_pop32(REG23,DEFAULT)	|	VoC_movreg16(RL6_HI,REG3,IN_PARALLEL)
		//0x1ba1		SEARCHFRAC101
0x00020724,	//0x1ba2		VoC_add16_rd(REG4,REG4,0x2)
0xF024E5E2,	//0x1ba4		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_jump(SEARCHFRAC102)
		//0x1ba5		SEARCHFRAC100
0xF7805F81,	//0x1ba6		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x00274420,	//0x1ba8		VoC_bne16_rd(SEARCHFRAC104,REG0,0x27)
0xC2617060,	//0x1baa		VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x1bac		SEARCHFRAC104
0xDF82E00C,	//0x1bac		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
		//0x1bad		AMR_PITCH_FR106
0x0842078B,	//0x1bae		VoC_sub16_rd(REG3,REG1,0x842)
0x0019081B,	//0x1bb0		VoC_mult16_rd(REG3,REG3,0x19)
0x071BE187,	//0x1bb2		VoC_add16_rd(REG3,REG3,0x16)(lo)	|	VoC_movreg16(REG7,RL6_LO,DEFAULT)
0xC0FA0016,	//0x1bb4		VoC_add16_rr(REG2,REG3,REG7,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x16)(hi)
0x08446E10,	//0x1bb6		VoC_bnez16_d(ENC_LAG6_100,0x844)
0x01700A86,	//0x1bb8		VoC_lw16i(REG6,0x170)
0x0A86C072,	//0x1bba		VoC_lw16i(REG6,0x5e)(lo)	|	VoC_add16_rr(REG2,REG1,REG6,DEFAULT)
0x340E005E,	//0x1bbc		VoC_bgt16_rr(ENC_LAG6_100,REG1,REG6)(lo)	|	VoC_lw16i(REG6,0x5e)(hi)
0xC04B1BC6,	//0x1bbe		VoC_add16_rr(REG3,REG1,REG1,DEFAULT)	|	VoC_bgt16_rr(ENC_LAG6_100,REG1,REG6)(hi)
0x0A86C0CB,	//0x1bc0		VoC_lw16i(REG6,0x69)(lo)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0xC0DB0069,	//0x1bc2		VoC_add16_rr(REG3,REG3,REG3,DEFAULT)	|	VoC_lw16i(REG6,0x69)(hi)
0xC0FAC2F3,	//0x1bc4		VoC_add16_rr(REG2,REG3,REG7,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)
		//0x1bc6		ENC_LAG6_100
0x1501D667,	//0x1bc6		VoC_sw16_d(REG1,0x57c)(lo)	|	VoC_lw16_sd(REG7,0x5,DEFAULT)
0xDC72057C,	//0x1bc8		VoC_sw16_p(REG2,REG7,DEFAULT)	|	VoC_sw16_d(REG1,0x57c)(hi)
0xC1D7F022,	//0x1bca		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x07AA1501,	//0x1bcc		VoC_sw16_d(REG1,0x7aa)
0x150CDA67,	//0x1bce		VoC_sw16_d(RL6_LO,0x7ab)(lo)	|	VoC_sw16_sd(REG7,0x5,DEFAULT)
0x140507AB,	//0x1bd0		VoC_lw16_d(REG5,0x7ae)(lo)	|	VoC_sw16_d(RL6_LO,0x7ab)(hi)
0x148307AE,	//0x1bd2		VoC_lw32_d(REG67,0x7aa)(lo)	|	VoC_lw16_d(REG5,0x7ae)(hi)
0xF00207AA,	//0x1bd4		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw32_d(REG67,0x7aa)(hi)
0x18DF2B80,	//0x1bd6		VoC_jal(CII_Pred_lt_3or6)
0x07AE2008,	//0x1bd8		VoC_lw16d_set_inc(REG0,0x7ae,0x2)
0x070C1807,	//0x1bda		VoC_lw16i_set_inc(REG3,0x70c,0x1)
0x56D21FB9,	//0x1bdc		VoC_lw16i_set_inc(REG1,0x56d2,0xfffffffe)
0x14B12B80,	//0x1bde		VoC_jal(CII_Convolve)
0x17D92B80,	//0x1be0		VoC_jal(CII_G_pitch)
0x07B01400,	//0x1be2		VoC_lw16_d(REG0,0x7b0)
0xF64E7007,	//0x1be4		VoC_movreg16(RL7_LO,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x7FFF0A8F,	//0x1be6		VoC_lw16i(RL7_HI,0x7fff)
0x07B06C0C,	//0x1be8		VoC_bez16_d(cl_ltp101,0x7b0)
0x002A3C92,	//0x1bea		VoC_bngt16_rd(cl_ltp101,REG2,0x2a)
0x1807F81A,	//0x1bec		VoC_lw16i_set_inc(REG3,0x5ac,0x1)(lo)	|	VoC_shr16_ri(REG2,0x3,DEFAULT)
0xE8E105AC,	//0x1bee		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5ac,0x1)(hi)
		//0x1bf0		VoC_endloop0
0x3C1A829A,	//0x1bf0		VoC_bngt16_rd(cl_ltp101,REG2,0x2a)(lo)	|	VoC_add16inc_rp(REG2,REG2,REG3,DEFAULT)
0xF027002A,	//0x1bf2		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bngt16_rd(cl_ltp101,REG2,0x2a)(hi)
		//0x1bf4		cl_ltp101
0x3CCD0A86,	//0x1bf4		VoC_lw16i(REG6,0x3ccd)
0x1BFA3187,	//0x1bf6		VoC_bez16_r(cl_ltp202,REG7)
0xE0CFE0CE,	//0x1bf8		VoC_movreg16(RL7_HI,REG6,DEFAULT)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
		//0x1bfa		cl_ltp202
0x07AC150E,	//0x1bfa		VoC_sw16_d(RL7_LO,0x7ac)
0x07B1150F,	//0x1bfc		VoC_sw16_d(RL7_HI,0x7b1)
0x1804F004,	//0x1bfe		VoC_lw16i_set_inc(REG0,0x466c,0x1)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x1806466C,	//0x1c00		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x466c,0x1)(hi)
0x0A830000,	//0x1c02		VoC_lw16i(REG3,0x7fff)(lo)	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
0xFFC07FFF,	//0x1c04		VoC_NAD	|	VoC_lw16i(REG3,0x7fff)(hi)
0xD8816A0E,	//0x1c06		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x07B138A1,	//0x1c08		VoC_bgt16_rd(q_gain_pitch_110,REG1,0x7b1)
0x07AC0B09,	//0x1c0a		VoC_sub16_dr(REG1,0x7ac,REG1)
0x1C103101,	//0x1c0c		VoC_bgtz16_r(q_gain_pitch_111,REG1)
0x00000B09,	//0x1c0e		VoC_sub16_dr(REG1,0x0,REG1)
		//0x1c10		q_gain_pitch_111
0x1C143499,	//0x1c10		VoC_bngt16_rr(q_gain_pitch_110,REG3,REG1)
0xF6446023,	//0x1c12		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x1c14		q_gain_pitch_110
		//0x1c14		VoC_endloop0
0xD8815E10,	//0x1c14		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x466C1804,	//0x1c16		VoC_lw16i_set_inc(REG0,0x466c,0x1)
0xE083C021,	//0x1c18		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
0x1645D895,	//0x1c1a		VoC_and16_ri(REG5,0xfffc)(lo)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xD6677FFC,	//0x1c1c		VoC_lw16_sd(REG7,0x5,DEFAULT)	|	VoC_and16_ri(REG5,0xfffc)(hi)
0x0002073F,	//0x1c1e		VoC_add16_rd(REG7,REG7,0x2)
0xDA67DC74,	//0x1c20		VoC_sw16_sd(REG7,0x5,DEFAULT)	|	VoC_sw16_p(REG4,REG7,DEFAULT)
0x07AC1505,	//0x1c22		VoC_sw16_d(REG5,0x7ac)
0x07AC1403,	//0x1c24		VoC_lw16_d(REG3,0x7ac)
0x070C1808,	//0x1c26		VoC_lw16i_set_inc(REG0,0x70c,0x2)
0x06BC1809,	//0x1c28		VoC_lw16i_set_inc(REG1,0x6bc,0x2)
0x06E4180A,	//0x1c2a		VoC_lw16i_set_inc(REG2,0x6e4,0x2)
0x1C3D2C05,	//0x1c2c		VoC_loop_i(0x1,0x2)
0x9AC31AC2,	//0x1c2e		VoC_multf32inc_rp(REG67,REG3,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(REG45,REG3,REG0,DEFAULT)
0xEA87FFC0,	//0x1c30		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0xFBFB7BFA,	//0x1c32		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xBA7D3A6C,	//0x1c34		VoC_sub16inc_pr(REG5,REG1,REG7,IN_PARALLEL)	|	VoC_sub16inc_pr(REG4,REG1,REG5,DEFAULT)
0x9AC31AC2,	//0x1c36		VoC_multf32inc_rp(REG67,REG3,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(REG45,REG3,REG0,DEFAULT)
		//0x1c38		VoC_endloop0
0x1400DDD2,	//0x1c38		VoC_lw16_d(REG0,0x7ae)(lo)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x0A8107AE,	//0x1c3a		VoC_lw16i(REG1,0x75c)(lo)	|	VoC_lw16_d(REG0,0x7ae)(hi)
0xE022075C,	//0x1c3c		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x75c)(hi)
		//0x1c3d		VoC_endloop1
0x1407D656,	//0x1c3e		VoC_lw16_d(REG7,0x7aa)(lo)	|	VoC_lw16_sd(REG6,0x4,DEFAULT)
0x31C607AA,	//0x1c40		VoC_bnez16_r(cod_amr116,REG6)(lo)	|	VoC_lw16_d(REG7,0x7aa)(hi)
0x6A051C48,	//0x1c42		VoC_bngtz16_d(cod_amr116,0x3e2)(lo)	|	VoC_bnez16_r(cod_amr116,REG6)(hi)
0x150703E2,	//0x1c44		VoC_sw16_d(REG7,0x3dd)(lo)	|	VoC_bngtz16_d(cod_amr116,0x3e2)(hi)
0xFFC003DD,	//0x1c46		VoC_NAD	|	VoC_sw16_d(REG7,0x3dd)(hi)
		//0x1c48		cod_amr116
0x00164436,	//0x1c48		VoC_bne16_rd(cod_amr117,REG6,0x16)
0x03E36A04,	//0x1c4a		VoC_bngtz16_d(cod_amr117,0x3e3)
0x03DC1507,	//0x1c4c		VoC_sw16_d(REG7,0x3dc)
		//0x1c4e		cod_amr117
0x06E41804,	//0x1c4e		VoC_lw16i_set_inc(REG0,0x6e4,0x1)
0x07A61506,	//0x1c50		VoC_sw16_d(REG6,0x7a6)
0x56D21805,	//0x1c52		VoC_lw16i_set_inc(REG1,0x56d2,0x1)
0x06042006,	//0x1c54		VoC_lw16d_set_inc(REG2,0x604,0x1)
0x07AC2007,	//0x1c56		VoC_lw16d_set_inc(REG3,0x7ac,0x1)
0x075C0A84,	//0x1c58		VoC_lw16i(REG4,0x75c)
0x08180A85,	//0x1c5a		VoC_lw16i(REG5,0x818)
0xDFC1DFC0,	//0x1c5c		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDFC3DFC2,	//0x1c5e		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xDFC5DFC4,	//0x1c60		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x07340A80,	//0x1c62		VoC_lw16i(REG0,0x734)
0x07A61401,	//0x1c64		VoC_lw16_d(REG1,0x7a6)
0xDFC0D6C2,	//0x1c66		VoC_push16(REG0,DEFAULT)	|	VoC_lw16_sd(REG2,0xb,DEFAULT)
0xDFC2DFC1,	//0x1c68		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xD663D680,	//0x1c6a		VoC_lw16_sd(REG3,0x5,DEFAULT)	|	VoC_lw16_sd(REG0,0x7,DEFAULT)
0x17172B80,	//0x1c6c		VoC_jal(CII_cbseach_subr1)
0x1D0D2B80,	//0x1c6e		VoC_jal(CII_code_10i40_35bits)
0xD663D640,	//0x1c70		VoC_lw16_sd(REG3,0x5,DEFAULT)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0x17172B80,	//0x1c72		VoC_jal(CII_cbseach_subr1)
0x21652B80,	//0x1c74		VoC_jal(CII_gainQuant_M122)
0xDF80E901,	//0x1c76		VoC_pop16(REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x1c77		VoC_endloop0
0x07AC1406,	//0x1c78		VoC_lw16_d(REG6,0x7ac)
0xF81E5A65,	//0x1c7a		VoC_shr16_ri(REG6,0x3,IN_PARALLEL)	|	VoC_sw16_sd(REG5,0x5,DEFAULT)
0x05AD1805,	//0x1c7c		VoC_lw16i_set_inc(REG1,0x5ad,0x1)
0x05AC1804,	//0x1c7e		VoC_lw16i_set_inc(REG0,0x5ac,0x1)
0xD89768C3,	//0x1c80		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xDC87D897,	//0x1c82		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
		//0x1c83		VoC_endloop0
0xF000DC06,	//0x1c84		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0x05BE0A8E,	//0x1c86		VoC_lw16i(RL7_LO,0x5be)
0x05B40A8F,	//0x1c88		VoC_lw16i(RL7_HI,0x5b4)
0x152B2B80,	//0x1c8a		VoC_jal(CII_subframePostProc)
0xE2805617,	//0x1c8c		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0xD63541C7,	//0x1c8e		VoC_lw16_sd(REG5,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG0,DEFAULT)
0xD6267021,	//0x1c90		VoC_lw16_sd(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x5A17C276,	//0x1c92		VoC_sw16_sd(REG7,0x0,DEFAULT)	|	VoC_sub16_rr(REG6,REG1,REG6,DEFAULT)
0x5A26E0B2,	//0x1c94		VoC_sw16_sd(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0xb,IN_PARALLEL)
0xD644C155,	//0x1c96		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)
0xC1145A35,	//0x1c98		VoC_add16_rr(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_sw16_sd(REG5,0x2,DEFAULT)
0xC0CBD653,	//0x1c9a		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x4,DEFAULT)
0xDA53DA44,	//0x1c9c		VoC_sw16_sd(REG3,0x4,DEFAULT)	|	VoC_sw16_sd(REG4,0x3,DEFAULT)
0x1AC82B00,	//0x1c9e		VoC_jump_lg(cod_amr112)
		//0x1ca0		cod_amr111
0xDF87E8A1,	//0x1ca0		VoC_pop16(REG7,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1ca1		VoC_endloop0
0x04841808,	//0x1ca2		VoC_lw16i_set_inc(REG0,0x484,0x2)
0x03E41809,	//0x1ca4		VoC_lw16i_set_inc(REG1,0x3e4,0x2)
0x2C9BD9C7,	//0x1ca6		VoC_loop_i(0x1,0x4d)(lo)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xD9C71CAA,	//0x1ca8		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x4d)(hi)
		//0x1caa		VoC_endloop1
0x2B80DDCF,	//0x1caa		VoC_jal(CII_PRM2_BITS_POST_PROCESS)(lo)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xDFA91A05,	//0x1cac		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_PRM2_BITS_POST_PROCESS)(hi)
0xE580FFC0,	//0x1cae		VoC_return	|	VoC_NOP
		//0x1cb0		CII_set_sign12k2_122
0xD670DFE9,	//0x1cb0		VoC_lw16_sd(REG0,0x6,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1CBE2C05,	//0x1cb2		VoC_loop_i(0x1,0x2)
0x0A88F009,	//0x1cb4		VoC_lw16i(ACC0_LO,0x100)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xEA810100,	//0x1cb6		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x100)(hi)
		//0x1cb8		VoC_endloop0
0xE024D500,	//0x1cb8		VoC_movreg16(REG4,REG1,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG0)
0x2B80FF20,	//0x1cba		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFBD812FF,	//0x1cbc		VoC_shr32_ri(REG01,0xfffffffb,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
		//0x1cbe		VoC_endloop1
0x57361808,	//0x1cbe		VoC_lw16i_set_inc(REG0,0x5736,0x2)
0xF6026025,	//0x1cc0		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_movreg16(REG5,REG1,DEFAULT)
0x7FFF0A8A,	//0x1cc2		VoC_lw16i(ACC1_LO,0x7fff)
0x00010ACB,	//0x1cc4		VoC_lw16i(ACC1_HI,0xffff8001)
0x09C71804,	//0x1cc6		VoC_lw16i_set_inc(REG0,0x9c7,0x1)
0x0A81D673,	//0x1cc8		VoC_lw16i(REG1,0x840)(lo)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0x14860840,	//0x1cca		VoC_lw32_d(RL6,0x6)(lo)	|	VoC_lw16i(REG1,0x840)(hi)
0xF6B90006,	//0x1ccc		VoC_lw16i_short(FORMAT32,0xfffffff5,DEFAULT)	|	VoC_lw32_d(RL6,0x6)(hi)
0xFF346D10,	//0x1cce		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xDE005123,	//0x1cd0		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_mac32inc_rp(REG4,REG3,DEFAULT)
0x7006D02A,	//0x1cd2		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_mac32_rp(REG5,REG2,DEFAULT)
0x6127DC0A,	//0x1cd4		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_sw16_p(ACC1_LO,REG0,IN_PARALLEL)
0x3247FF34,	//0x1cd6		VoC_bnltz16_r(SET_SIGN101,REG7)(lo)	|	VoC_movreg32(ACC0,RL6,IN_PARALLEL)
0x43BF1CDD,	//0x1cd8		VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)	|	VoC_bnltz16_r(SET_SIGN101,REG7)(hi)
0xDC0B8596,	//0x1cda		VoC_sw16_p(ACC1_HI,REG0,DEFAULT)	|	VoC_sub16_rp(REG6,REG6,REG2,IN_PARALLEL)
0xDC97DC26,	//0x1cdc		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
		//0x1cdd		SET_SIGN101
		//0x1cde		VoC_endloop0
0xF7F9DE10,	//0x1cde		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0xE00061C6,	//0x1ce0		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x09B41805,	//0x1ce2		VoC_lw16i_set_inc(REG1,0x9b4,0x1)
0xE00360D2,	//0x1ce4		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(INC2,REG6,DEFAULT)
0xFFC0F7E4,	//0x1ce6		VoC_NAD	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
0x1CFC2E31,	//0x1ce8		VoC_loop_r(1,REG6)
0x08400A82,	//0x1cea		VoC_lw16i(REG2,0x840)
0xF7E64082,	//0x1cec		VoC_movreg16(REG6,RL7_HI,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0xEFF56789,	//0x1cee		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x34B5D826,	//0x1cf0		VoC_bngt16_rr(SET_SIGN107,REG6,REG5)(lo)	|	VoC_lw16_p(REG6,REG2,DEFAULT)
0x0A831CF7,	//0x1cf2		VoC_lw16i(REG3,0x840)(lo)	|	VoC_bngt16_rr(SET_SIGN107,REG6,REG5)(hi)
0x60C50840,	//0x1cf4		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_lw16i(REG3,0x840)(hi)
0xDE10C29B,	//0x1cf6		VoC_inc_p(REG2,DEFAULT)	|	VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)
		//0x1cf7		SET_SIGN107
		//0x1cf7		VoC_endloop0
0x1CFC34AC,	//0x1cf8		VoC_bngt16_rr(SET_SIGN104,REG5,REG4)
0xF60760A4,	//0x1cfa		VoC_movreg16(REG7,REG0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x1cfc		SET_SIGN104
		//0x1cfc		VoC_endloop1
0xDC935E00,	//0x1cfc		VoC_sw16inc_p(REG3,REG1,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0x09AA1805,	//0x1cfe		VoC_lw16i_set_inc(REG1,0x9aa,0x1)
0xF7C45FA9,	//0x1d00		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xC0636709,	//0x1d02		VoC_add16_rr(REG3,REG1,REG4,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xDCB7DC97,	//0x1d04		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0002073F,	//0x1d06		VoC_add16_rd(REG7,REG7,0x2)
0x1D0B3427,	//0x1d08		VoC_bgt16_rr(SET_SIGN106,REG4,REG7)
0xFFC0F007,	//0x1d0a		VoC_NOP	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1d0b		SET_SIGN106
		//0x1d0b		VoC_endloop0
0xDFE9E580,	//0x1d0c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1d0d		CII_code_10i40_35bits
0xF0A4F04A,	//0x1d0e		VoC_lw16i_short(REG4,0x5,DEFAULT)	|	VoC_lw16i_short(ACC1_LO,0x2,DEFAULT)
0xFFC0F105,	//0x1d10		VoC_NAD	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x17262B80,	//0x1d12		VoC_jal(CII_cor_h_x)
0xE08F70AE,	//0x1d14		VoC_lw16i_short(RL7_HI,0x8,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x5,DEFAULT)
0x1CB02B80,	//0x1d16		VoC_jal(CII_set_sign12k2_122)
0x17632B80,	//0x1d18		VoC_jal(CII_cor_h)
0x1D852B80,	//0x1d1a		VoC_jal(CII_search_M122)
0x1D312B80,	//0x1d1c		VoC_jal(CII_build_code_M122)
0xE0015620,	//0x1d1e		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xE085694D,	//0x1d20		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xE0765807,	//0x1d22		VoC_lw16i_short(REG6,0x7,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xC0B6E43E,	//0x1d24		VoC_add16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_and16_rr(REG6,REG7,DEFAULT)
0xD866E42F,	//0x1d26		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
0x4C19E477,	//0x1d28		VoC_bnlt16_rd(q_p_100,REG1,0x18)(lo)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0xE0E60018,	//0x1d2a		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bnlt16_rd(q_p_100,REG1,0x18)(hi)
		//0x1d2c		q_p_100
0xDC86DE08,	//0x1d2c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
		//0x1d2d		VoC_endloop0
0xDA10DFA9,	//0x1d2e		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1d30		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1d31		CII_build_code_M122
0xF0085660,	//0x1d32		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x6A82FF44,	//0x1d34		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xDDC4EFF2,	//0x1d36		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)
		//0x1d37		VoC_endloop0
0x09C80A8A,	//0x1d38		VoC_lw16i(ACC1_LO,0x9c8)
0xF0075633,	//0x1d3a		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x2,DEFAULT)
0xD66B68A2,	//0x1d3c		VoC_lw16_sd(ACC1_HI,0x5,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1d3e		VoC_endloop0
0x0ACCDCB2,	//0x1d3e		VoC_lw16i(RL6_LO,0xffffe000)(lo)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
0x0A8D6000,	//0x1d40		VoC_lw16i(RL6_HI,0x2000)(lo)	|	VoC_lw16i(RL6_LO,0xffffe000)(hi)
0x18042000,	//0x1d42		VoC_lw16i_set_inc(REG0,0x9be,0x1)(lo)	|	VoC_lw16i(RL6_HI,0x2000)(hi)
0x180509BE,	//0x1d44		VoC_lw16i_set_inc(REG1,0x840,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x9be,0x1)(hi)
0xFFC00840,	//0x1d46		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x840,0x1)(hi)
0x1D7B2C14,	//0x1d48		VoC_loop_i(0x0,0xa)
0x199A0A84,	//0x1d4a		VoC_lw16i(REG4,0x199a)
0xD8848D06,	//0x1d4c		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_multf16_rp(REG6,REG4,REG0,DEFAULT)
0x00180A31,	//0x1d4e		VoC_multf32_rd(REG23,REG6,0x18)
0xFA09DC1D,	//0x1d50		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_sw16_p(RL6_HI,REG1,DEFAULT)
0xFF294315,	//0x1d52		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)
0xC0E3C0A2,	//0x1d54		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x001FD822,	//0x1d56		VoC_add16_pd(REG7,REG3,0x4330)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x31024330,	//0x1d58		VoC_bgtz16_r(build_code_M122_100_end,REG2)(lo)	|	VoC_add16_pd(REG7,REG3,0x4330)(hi)
0x07BF1D60,	//0x1d5a		VoC_sub16_rd(REG7,REG7,0x432e)(lo)	|	VoC_bgtz16_r(build_code_M122_100_end,REG2)(hi)
0xDC1C432E,	//0x1d5c		VoC_sw16_p(RL6_LO,REG1,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x432e)(hi)
0x000C0736,	//0x1d5e		VoC_add16_rd(REG6,REG6,0xc)
		//0x1d60		build_code_M122_100_end
0xDE085632,	//0x1d60		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xC0AA5C37,	//0x1d62		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
0x00180713,	//0x1d64		VoC_add16_rd(REG3,REG2,0x18)
0x3207D827,	//0x1d66		VoC_bltz16_r(build_code_M122_200_end,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xE0C51D7B,	//0x1d68		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_bltz16_r(build_code_M122_200_end,REG7)(hi)
0xC3F464BD,	//0x1d6a		VoC_sub16_rr(REG4,REG7,REG6,IN_PARALLEL)	|	VoC_xor16_rr(REG5,REG7,DEFAULT)
0x00081605,	//0x1d6c		VoC_and16_ri(REG5,0x8)
0x1D7431C5,	//0x1d6e		VoC_bnez16_r(build_code_M122_300,REG5)
0x1D7A3104,	//0x1d70		VoC_bgtz16_r(build_code_M122_400,REG4)
		//0x1d72		build_code_M122_500
0xE5C8E062,	//0x1d72		VoC_jump(build_code_M122_200_end)	|	VoC_movreg16(REG2,REG3,DEFAULT)
		//0x1d74		build_code_M122_300
0xF0E5F0E4,	//0x1d74		VoC_lw16i_short(REG5,0x7,DEFAULT)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0xC364E4DA,	//0x1d76		VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_and32_rr(REG45,REG67,DEFAULT)
0x1D723104,	//0x1d78		VoC_bgtz16_r(build_code_M122_500,REG4)
		//0x1d7a		build_code_M122_400
0xDC26DC37,	//0x1d7a		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
		//0x1d7b		build_code_M122_200_end
		//0x1d7b		VoC_endloop0
0x5650D6A7,	//0x1d7c		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_lw16_sd(REG7,0x9,DEFAULT)
0x2B80E0A6,	//0x1d7e		VoC_jal(CII_build_code_com2)(lo)	|	VoC_lw16i_short(REG6,0xa,IN_PARALLEL)
0xDFA918C6,	//0x1d80		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_build_code_com2)(hi)
0x46E81806,	//0x1d82		VoC_lw16i_set_inc(REG2,0x46e8,0x1)
0xDFE9E580,	//0x1d84		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1d85		CII_search_M122
0x08681805,	//0x1d86		VoC_lw16i_set_inc(REG1,0x868,0x1)
0x57860A84,	//0x1d88		VoC_lw16i(REG4,0x5786)
0x575E0A85,	//0x1d8a		VoC_lw16i(REG5,0x575e)
0x57361806,	//0x1d8c		VoC_lw16i_set_inc(REG2,0x5736,0x1)
0x5A9C1582,	//0x1d8e		VoC_sw32_d(REG45,0x5a9c)
0x1807E0A0,	//0x1d90		VoC_lw16i_set_inc(REG3,0x840,0x1)(lo)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x15800840,	//0x1d92		VoC_sw32_d(REG01,0x5a98)(lo)	|	VoC_lw16i_set_inc(REG3,0x840,0x1)(hi)
0x0A805A98,	//0x1d94		VoC_lw16i(REG0,0x9b4)(lo)	|	VoC_sw32_d(REG01,0x5a98)(hi)
0x070009B4,	//0x1d96		VoC_add16_rd(REG0,REG0,0x9aa)(lo)	|	VoC_lw16i(REG0,0x9b4)(hi)
0x158109AA,	//0x1d98		VoC_sw32_d(REG23,0x5a9a)(lo)	|	VoC_add16_rd(REG0,REG0,0x9aa)(hi)
0xD8025A9A,	//0x1d9a		VoC_lw16_p(REG2,REG0,DEFAULT)	|	VoC_sw32_d(REG23,0x5a9a)(hi)
0x5A9A0710,	//0x1d9c		VoC_add16_rd(REG0,REG2,0x5a9a)
0x5AA61502,	//0x1d9e		VoC_sw16_d(REG2,0x5aa6)
0x5A9D0711,	//0x1da0		VoC_add16_rd(REG1,REG2,0x5a9d)
0x1403D806,	//0x1da2		VoC_lw16_d(REG3,0x4332)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x98CC4332,	//0x1da4		VoC_multf32_rp(ACC0,REG3,REG1,DEFAULT)	|	VoC_lw16_d(REG3,0x4332)(hi)
0x08681823,	//0x1da6		VoC_lw16i_set_inc(REG3,0x868,0x8)
0x00060924,	//0x1da8		VoC_add32_rd(ACC0,ACC0,0x6)
0x09A81506,	//0x1daa		VoC_sw16_d(REG6,0x9a8)
0x5AA41584,	//0x1dac		VoC_sw32_d(ACC0,0x5aa4)
0x12932B80,	//0x1dae		VoC_jal(CII_SEARCH_COPY)
0xE00277E4,	//0x1db0		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
0x09BE1805,	//0x1db2		VoC_lw16i_set_inc(REG1,0x9be,0x1)
0xE0156942,	//0x1db4		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1db6		VoC_endloop0
0xDE105C92,	//0x1db6		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0x1582F0A2,	//0x1db8		VoC_sw32_d(REG45,0x5a96)(lo)	|	VoC_lw16i_short(REG2,0x5,DEFAULT)
0xFFC05A96,	//0x1dba		VoC_NAD	|	VoC_sw32_d(REG45,0x5a96)(hi)
		//0x1dbc		SEARCH_10I40_LOOP
0x09B40A83,	//0x1dbc		VoC_lw16i(REG3,0x9b4)
0x09AB071B,	//0x1dbe		VoC_add16_rd(REG3,REG3,0x9ab)
0xD832DFC2,	//0x1dc0		VoC_lw16_p(REG2,REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x08691823,	//0x1dc2		VoC_lw16i_set_inc(REG3,0x869,0x8)
0x5AA71502,	//0x1dc4		VoC_sw16_d(REG2,0x5aa7)
0x12932B80,	//0x1dc6		VoC_jal(CII_SEARCH_COPY)
0x432E1803,	//0x1dc8		VoC_lw16i_set_inc(REG3,0x432e,0x0)
0xE2677024,	//0x1dca		VoC_lw16i_short(REG7,0x26,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x10000A85,	//0x1dcc		VoC_lw16i(REG5,0x1000)
0x09AD1400,	//0x1dce		VoC_lw16_d(REG0,0x9ad)
0x1EA02B80,	//0x1dd0		VoC_jal(CII_COMPUTE_RRV_M122)
0x5AA72005,	//0x1dd2		VoC_lw16d_set_inc(REG1,0x5aa7,0x1)
0x5A9A0708,	//0x1dd4		VoC_add16_rd(REG0,REG1,0x5a9a)
0x000C0809,	//0x1dd6		VoC_mult16_rd(REG1,REG1,0xc)
0x09A80007,	//0x1dd8		VoC_add16_pd(REG7,REG0,0x9a8)
0x5A990709,	//0x1dda		VoC_add16_rd(REG1,REG1,0x5a99)
0x5AA41484,	//0x1ddc		VoC_lw32_d(ACC0,0x5aa4)
0x1108D129,	//0x1dde		VoC_mac32inc_pd(REG1,0x4332)(lo)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0x15074332,	//0x1de0		VoC_sw16_d(REG7,0x9a9)(lo)	|	VoC_mac32inc_pd(REG1,0x4332)(hi)
0x180309A9,	//0x1de2		VoC_lw16i_set_inc(REG3,0x4330,0x0)(lo)	|	VoC_sw16_d(REG7,0x9a9)(hi)
0xF0224330,	//0x1de4		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x4330,0x0)(hi)
0xE2A55F44,	//0x1de6		VoC_lw16i_short(REG5,0x2a,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x09AC1406,	//0x1de8		VoC_lw16_d(REG6,0x9ac)
0x08000A87,	//0x1dea		VoC_lw16i(REG7,0x800)
0x1EB62B80,	//0x1dec		VoC_jal(CII_COMPUTE_ALP1_M122)
0x40000A80,	//0x1dee		VoC_lw16i(REG0,0x4000)
0x10000A81,	//0x1df0		VoC_lw16i(REG1,0x1000)
0x09AC1487,	//0x1df2		VoC_lw32_d(RL7,0x9ac)
0x1ECB2B80,	//0x1df4		VoC_jal(CII_SEARCH_LOOP_M122)
0x5AA81587,	//0x1df6		VoC_sw32_d(RL7,0x5aa8)
0x09A9150C,	//0x1df8		VoC_sw16_d(RL6_LO,0x9a9)
0xF7C25F44,	//0x1dfa		VoC_movreg16(REG2,RL7_LO,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x086A1823,	//0x1dfc		VoC_lw16i_set_inc(REG3,0x86a,0x8)
0x12932B80,	//0x1dfe		VoC_jal(CII_SEARCH_COPY)
0x1823E1E2,	//0x1e00		VoC_lw16i_set_inc(REG3,0x86b,0x8)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xFFC0086B,	//0x1e02		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x86b,0x8)(hi)
0x12932B80,	//0x1e04		VoC_jal(CII_SEARCH_COPY)
0x432E1803,	//0x1e06		VoC_lw16i_set_inc(REG3,0x432e,0x0)
0xE2477044,	//0x1e08		VoC_lw16i_short(REG7,0x24,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x10000A85,	//0x1e0a		VoC_lw16i(REG5,0x1000)
0x09AF1400,	//0x1e0c		VoC_lw16_d(REG0,0x9af)
0x1EA02B80,	//0x1e0e		VoC_jal(CII_COMPUTE_RRV_M122)
0x43321803,	//0x1e10		VoC_lw16i_set_inc(REG3,0x4332,0x0)
0xE2C57042,	//0x1e12		VoC_lw16i_short(REG5,0x2c,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x09AE1406,	//0x1e14		VoC_lw16_d(REG6,0x9ae)
0x04000A87,	//0x1e16		VoC_lw16i(REG7,0x400)
0x1EB62B80,	//0x1e18		VoC_jal(CII_COMPUTE_ALP1_M122)
0x20000A80,	//0x1e1a		VoC_lw16i(REG0,0x2000)
0x08000A81,	//0x1e1c		VoC_lw16i(REG1,0x800)
0x09AE1487,	//0x1e1e		VoC_lw32_d(RL7,0x9ae)
0x1ECB2B80,	//0x1e20		VoC_jal(CII_SEARCH_LOOP_M122)
0x5AAA1587,	//0x1e22		VoC_sw32_d(RL7,0x5aaa)
0x09A9150C,	//0x1e24		VoC_sw16_d(RL6_LO,0x9a9)
0xF7C25F44,	//0x1e26		VoC_movreg16(REG2,RL7_LO,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x086C1823,	//0x1e28		VoC_lw16i_set_inc(REG3,0x86c,0x8)
0x12932B80,	//0x1e2a		VoC_jal(CII_SEARCH_COPY)
0x1823E1E2,	//0x1e2c		VoC_lw16i_set_inc(REG3,0x86d,0x8)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xFFC0086D,	//0x1e2e		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x86d,0x8)(hi)
0x12932B80,	//0x1e30		VoC_jal(CII_SEARCH_COPY)
0x43301803,	//0x1e32		VoC_lw16i_set_inc(REG3,0x4330,0x0)
0xE2277064,	//0x1e34		VoC_lw16i_short(REG7,0x22,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x08000A85,	//0x1e36		VoC_lw16i(REG5,0x800)
0x09B11400,	//0x1e38		VoC_lw16_d(REG0,0x9b1)
0x1EA02B80,	//0x1e3a		VoC_jal(CII_COMPUTE_RRV_M122)
0x43341803,	//0x1e3c		VoC_lw16i_set_inc(REG3,0x4334,0x0)
0xE2E57062,	//0x1e3e		VoC_lw16i_short(REG5,0x2e,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0x09B01406,	//0x1e40		VoC_lw16_d(REG6,0x9b0)
0x02000A87,	//0x1e42		VoC_lw16i(REG7,0x200)
0x1EB62B80,	//0x1e44		VoC_jal(CII_COMPUTE_ALP1_M122)
0x20000A80,	//0x1e46		VoC_lw16i(REG0,0x2000)
0x04000A81,	//0x1e48		VoC_lw16i(REG1,0x400)
0x09B01487,	//0x1e4a		VoC_lw32_d(RL7,0x9b0)
0x1ECB2B80,	//0x1e4c		VoC_jal(CII_SEARCH_LOOP_M122)
0x5AAC1587,	//0x1e4e		VoC_sw32_d(RL7,0x5aac)
0x09A9150C,	//0x1e50		VoC_sw16_d(RL6_LO,0x9a9)
0xF7C25F44,	//0x1e52		VoC_movreg16(REG2,RL7_LO,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x086E1823,	//0x1e54		VoC_lw16i_set_inc(REG3,0x86e,0x8)
0x12932B80,	//0x1e56		VoC_jal(CII_SEARCH_COPY)
0x1823E1E2,	//0x1e58		VoC_lw16i_set_inc(REG3,0x86f,0x8)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xFFC0086F,	//0x1e5a		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x86f,0x8)(hi)
0x12932B80,	//0x1e5c		VoC_jal(CII_SEARCH_COPY)
0x43301803,	//0x1e5e		VoC_lw16i_set_inc(REG3,0x4330,0x0)
0xE2077084,	//0x1e60		VoC_lw16i_short(REG7,0x20,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x08000A85,	//0x1e62		VoC_lw16i(REG5,0x800)
0x09B31400,	//0x1e64		VoC_lw16_d(REG0,0x9b3)
0x1EA02B80,	//0x1e66		VoC_jal(CII_COMPUTE_RRV_M122)
0x43361803,	//0x1e68		VoC_lw16i_set_inc(REG3,0x4336,0x0)
0xE3057082,	//0x1e6a		VoC_lw16i_short(REG5,0x30,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x09B21406,	//0x1e6c		VoC_lw16_d(REG6,0x9b2)
0x01000A87,	//0x1e6e		VoC_lw16i(REG7,0x100)
0x1EB62B80,	//0x1e70		VoC_jal(CII_COMPUTE_ALP1_M122)
0x10000A80,	//0x1e72		VoC_lw16i(REG0,0x1000)
0x02000A81,	//0x1e74		VoC_lw16i(REG1,0x200)
0x09B21487,	//0x1e76		VoC_lw32_d(RL7,0x9b2)
0x1ECB2B80,	//0x1e78		VoC_jal(CII_SEARCH_LOOP_M122)
0x5A970A34,	//0x1e7a		VoC_multf32_rd(ACC0,REG6,0x5a97)
0x5A960F38,	//0x1e7c		VoC_msu32_rd(REG7,0x5a96)
0x5AAE1587,	//0x1e7e		VoC_sw32_d(RL7,0x5aae)
0x1E8C32C4,	//0x1e80		VoC_bngtz32_r(SEARCH_CODE_NOMEMORISE,ACC0)
0x5A961583,	//0x1e82		VoC_sw32_d(REG67,0x5a96)
0x5AA61808,	//0x1e84		VoC_lw16i_set_inc(REG0,0x5aa6,0x2)
0x09BE1809,	//0x1e86		VoC_lw16i_set_inc(REG1,0x9be,0x2)
0xD9C468A3,	//0x1e88		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDCCD9C4,	//0x1e8a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1e8b		VoC_endloop0
		//0x1e8c		SEARCH_CODE_NOMEMORISE
0x09AB1805,	//0x1e8c		VoC_lw16i_set_inc(REG1,0x9ab,0x1)
0x09AC1804,	//0x1e8e		VoC_lw16i_set_inc(REG0,0x9ac,0x1)
0x6903D816,	//0x1e90		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xD887D887,	//0x1e92		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)
		//0x1e94		VoC_endloop0
0xDC16DC97,	//0x1e94		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0792DF82,	//0x1e96		VoC_sub16_rd(REG2,REG2,0x2)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x3C220002,	//0x1e98		VoC_bngt16_rd(SEARCH_10I40_LOOP1,REG2,0x2)(lo)	|	VoC_sub16_rd(REG2,REG2,0x2)(hi)
0x2B000002,	//0x1e9a		VoC_jump_lg(SEARCH_10I40_LOOP)(lo)	|	VoC_bngt16_rd(SEARCH_10I40_LOOP1,REG2,0x2)(hi)
0xDFA91DBC,	//0x1e9c		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(SEARCH_10I40_LOOP)(hi)
		//0x1e9d		SEARCH_10I40_LOOP1
0xE580F050,	//0x1e9e		VoC_return	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
		//0x1ea0		CII_COMPUTE_RRV_M122
0x0801F051,	//0x1ea0		VoC_mult16_rd(REG1,REG0,0xc)(lo)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x0702000C,	//0x1ea2		VoC_add16_rd(REG2,REG0,0x5a9b)(lo)	|	VoC_mult16_rd(REG1,REG0,0xc)(hi)
0x09005A9B,	//0x1ea4		VoC_add32_rd(REG01,REG01,0x5a98)(lo)	|	VoC_add16_rd(REG2,REG0,0x5a9b)(hi)
0xF0B05A98,	//0x1ea6		VoC_lw16i_short(INC0,0x5,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x5a98)(hi)
0x00061484,	//0x1ea8		VoC_lw32_d(ACC0,0x6)
0xF0165128,	//0x1eaa		VoC_lw16i_short(INC2,0x5,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG0,DEFAULT)
0x1EB32C11,	//0x1eac		VoC_loop_i(0x1,0x8)
0xD519E701,	//0x1eae		VoC_bimac32inc_pp(REG3,REG1)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x1eaf		VoC_endloop0
0x1484C079,	//0x1eb0		VoC_lw32_d(ACC0,0x6)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x51280006,	//0x1eb2		VoC_mac32inc_rp(REG5,REG0,DEFAULT)	|	VoC_lw32_d(ACC0,0x6)(hi)
		//0x1eb3		VoC_endloop1
0xE580DCA9,	//0x1eb4		VoC_return	|	VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)
		//0x1eb6		CII_COMPUTE_ALP1_M122
0x1FACDF06,	//0x1eb6		VoC_lw16i_set_inc(REG0,0x5781,0xfffffffb)(lo)	|	VoC_pop32(RL6,DEFAULT)
0xC1805781,	//0x1eb8		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5781,0xfffffffb)(hi)
0x000C0836,	//0x1eba		VoC_mult16_rd(REG6,REG6,0xc)
0x09801809,	//0x1ebc		VoC_lw16i_set_inc(REG1,0x980,0x2)
0xFFC0C189,	//0x1ebe		VoC_NAD	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x1EC62C11,	//0x1ec0		VoC_loop_i(0x1,0x8)
0x9BC46682,	//0x1ec2		VoC_multf32inc_rp(ACC0,REG7,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x1ec4		VoC_endloop0
0xDF47D519,	//0x1ec4		VoC_push32(RL7,DEFAULT)	|	VoC_bimac32inc_pp(REG3,REG1)
		//0x1ec6		VoC_endloop1
0xC9374269,	//0x1ec6		VoC_add32_rr(RL7,ACC0,RL6,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG5,DEFAULT)
0xDF47FFC0,	//0x1ec8		VoC_push32(RL7,DEFAULT)	|	VoC_NOP
0xFF39E580,	//0x1eca		VoC_movreg32(REG23,RL7,DEFAULT)	|	VoC_return
		//0x1ecb		CII_SEARCH_LOOP_M122
0xF3FD61E0,	//0x1ecc		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_HI,DEFAULT)
0x5A921580,	//0x1ece		VoC_sw32_d(REG01,0x5a92)
0x0900E1E1,	//0x1ed0		VoC_add32_rd(REG01,REG01,0x5a9a)(lo)	|	VoC_movreg16(REG1,RL7_HI,DEFAULT)
0x77E65A9A,	//0x1ed2		VoC_lw16i_short(REG6,0xffffffff,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x5a9a)(hi)
0x1580E017,	//0x1ed4		VoC_sw32_d(REG01,0x5aa2)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xFFC05AA2,	//0x1ed6		VoC_NAD	|	VoC_sw32_d(REG01,0x5aa2)(hi)
0x1F432C11,	//0x1ed8		VoC_loop_i(0x1,0x8)
0x086F1823,	//0x1eda		VoC_lw16i_set_inc(REG3,0x86f,0x8)
0x5A9A0715,	//0x1edc		VoC_add16_rd(REG5,REG2,0x5a9a)
0x5AA01502,	//0x1ede		VoC_sw16_d(REG2,0x5aa0)
0xC490F0B0,	//0x1ee0		VoC_mult16_rr(REG0,REG2,REG2,DEFAULT)	|	VoC_lw16i_short(INC0,0x5,DEFAULT)
0xC210E041,	//0x1ee2		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0xDFC57808,	//0x1ee4		VoC_push16(REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x5A9C0900,	//0x1ee6		VoC_add32_rd(REG01,REG01,0x5a9c)
0x0700C014,	//0x1ee8		VoC_add16_rd(REG0,REG0,0x5aa3)(lo)	|	VoC_add16_rr(REG4,REG0,REG2,DEFAULT)
0x0A855AA3,	//0x1eea		VoC_lw16i(REG5,0x840)(lo)	|	VoC_add16_rd(REG0,REG0,0x5aa3)(hi)
0x42280840,	//0x1eec		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x840)(hi)
0x412CE055,	//0x1eee		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x5,IN_PARALLEL)
0x7101F625,	//0x1ef0		VoC_lw16i_short(REG1,0x8,DEFAULT)	|	VoC_movreg16(REG5,REG1,IN_PARALLEL)
0x1504D884,	//0x1ef2		VoC_sw16_d(REG4,0x5a9f)(lo)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0x4C885A9F,	//0x1ef4		VoC_bnlt16_rd(SEARCH_COPY_label1,REG0,0x5a9f)(lo)	|	VoC_sw16_d(REG4,0x5a9f)(hi)
0xE9045A9F,	//0x1ef6		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_bnlt16_rd(SEARCH_COPY_label1,REG0,0x5a9f)(hi)
0x5A9F4C30,	//0x1ef8		VoC_bnlt16_rd(SEARCH_COPY_label1,REG0,0x5a9f)
0x5E08DCB4,	//0x1efa		VoC_inc_p(REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1efb		VoC_endloop0
0xFFC0D884,	//0x1efc		VoC_NAD	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x1efe		SEARCH_COPY_label1
0x5A9F4428,	//0x1efe		VoC_bne16_rd(SEARCH_COPY_label2,REG0,0x5a9f)
0xDE08D854,	//0x1f00		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw16_p(REG4,REG5,DEFAULT)
0xF332DCB4,	//0x1f02		VoC_lw16i_short(INC2,0x19,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1f03		SEARCH_COPY_label2
0x5A9F0784,	//0x1f04		VoC_sub16_rd(REG4,REG0,0x5a9f)
0xC520C114,	//0x1f06		VoC_mult16_rr(REG0,REG4,REG4,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x4220F0A5,	//0x1f08		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x3181F015,	//0x1f0a		VoC_bez16_r(SEARCH_COPY_label_end,REG1)(lo)	|	VoC_lw16i_short(INC1,0x5,IN_PARALLEL)
0xF8081F1C,	//0x1f0c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_bez16_r(SEARCH_COPY_label_end,REG1)(hi)
0x5A9C0700,	//0x1f0e		VoC_add16_rd(REG0,REG0,0x5a9c)
0xC52AC010,	//0x1f10		VoC_mult16_rr(REG2,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x0712D804,	//0x1f12		VoC_add16_rd(REG2,REG2,0x1a)(lo)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xC010001A,	//0x1f14		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x1a)(hi)
0xDE106644,	//0x1f16		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG1,DEFAULT)
0xC0105804,	//0x1f18		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
		//0x1f1a		VoC_endloop0
0xDE105CB4,	//0x1f1a		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x1f1c		SEARCH_COPY_label_end
0x1480DF85,	//0x1f1c		VoC_lw32_d(REG01,0x5aa2)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x002B5AA2,	//0x1f1e		VoC_add16_pd(REG3,REG5,0x9a9)(lo)	|	VoC_lw32_d(REG01,0x5aa2)(hi)
0x182209A9,	//0x1f20		VoC_lw16i_set_inc(REG2,0x86f,0x8)(lo)	|	VoC_add16_pd(REG3,REG5,0x9a9)(hi)
0xFFC0086F,	//0x1f22		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x86f,0x8)(hi)
0xD90C691A,	//0x1f24		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x5A921008,	//0x1f26		VoC_mac32_pd(REG1,0x5a92)
0x5A931110,	//0x1f28		VoC_mac32inc_pd(REG2,0x5a93)
0xE08D82C4,	//0x1f2a		VoC_movreg16(RL6_HI,REG4,DEFAULT)	|	VoC_add16inc_rp(REG4,REG3,REG0,DEFAULT)
0xE125C724,	//0x1f2c		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_multf16_rr(REG4,REG4,REG4,DEFAULT)
0xCDE44DAD,	//0x1f2e		VoC_multf32_rr(ACC0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC1,REG6,REG5,DEFAULT)
0x36A5FFC0,	//0x1f30		VoC_bngt32_rr(SEARCH_CODE_I3_END,ACC0,ACC1)(lo)	|	VoC_NOP
0xDFC11F3E,	//0x1f32		VoC_push16(REG1,DEFAULT)	|	VoC_bngt32_rr(SEARCH_CODE_I3_END,ACC0,ACC1)(hi)
0x08400A87,	//0x1f34		VoC_lw16i(REG7,0x840)
0x7F13C279,	//0x1f36		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)
0xDF81F62F,	//0x1f38		VoC_pop16(REG1,DEFAULT)	|	VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)
0x5AA0140E,	//0x1f3a		VoC_lw16_d(RL7_LO,0x5aa0)
0xFFC0E1AC,	//0x1f3c		VoC_NAD	|	VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)
		//0x1f3e		SEARCH_CODE_I3_END
		//0x1f3e		VoC_endloop0
0xD90C5E08,	//0x1f3e		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x70A2DF05,	//0x1f40		VoC_lw16i_short(REG2,0x5,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0x0712F3FD,	//0x1f42		VoC_add16_rd(REG2,REG2,0x5aa0)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
		//0x1f43		VoC_endloop1
0x0A3C5AA0,	//0x1f44		VoC_multf32_rd(ACC0,REG7,0xf)(lo)	|	VoC_add16_rd(REG2,REG2,0x5aa0)(hi)
0xDF00000F,	//0x1f46		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rd(ACC0,REG7,0xf)(hi)
0x00060924,	//0x1f48		VoC_add32_rd(ACC0,ACC0,0x6)
0xDFE9E580,	//0x1f4a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f4b		CII_q_gain_code
0x15B92B80,	//0x1f4c		VoC_jal(CII_Pow2)
0x07AD1406,	//0x1f4e		VoC_lw16_d(REG6,0x7ad)
0xF8E2F80E,	//0x1f50		VoC_shr16_ri(REG2,0xfffffffc,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x560E180C,	//0x1f52		VoC_lw16i_set_inc(REG0,0x560e,0x3)
0x7FFF0A85,	//0x1f54		VoC_lw16i(REG5,0x7fff)
0x00001807,	//0x1f56		VoC_lw16i_set_inc(REG3,0x0,0x1)
0x8E847F46,	//0x1f58		VoC_multf16inc_rp(REG4,REG2,REG0,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xC3A1EC0B,	//0x1f5a		VoC_sub16_rr(REG1,REG6,REG4,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0x1F603241,	//0x1f5c		VoC_bnltz16_r(q_gain_code_L140,REG1)
0x00000B09,	//0x1f5e		VoC_sub16_dr(REG1,0x0,REG1)
		//0x1f60		q_gain_code_L140
0x1F6434A9,	//0x1f60		VoC_bngt16_rr(q_gain_code_L150,REG5,REG1)
0xF66C6025,	//0x1f62		VoC_movreg16(RL6_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG5,REG1,DEFAULT)
		//0x1f64		q_gain_code_L150
0xDE188E84,	//0x1f64		VoC_inc_p(REG3,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG2,REG0,DEFAULT)
		//0x1f65		VoC_endloop0
0x081CE183,	//0x1f66		VoC_mult16_rd(REG4,REG3,0x16)(lo)	|	VoC_movreg16(REG3,RL6_LO,DEFAULT)
0x18040016,	//0x1f68		VoC_lw16i_set_inc(REG0,0x560e,0x1)(lo)	|	VoC_mult16_rd(REG4,REG3,0x16)(hi)
0xC100560E,	//0x1f6a		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x560e,0x1)(hi)
0x8E84D631,	//0x1f6c		VoC_multf16inc_rp(REG4,REG2,REG0,DEFAULT)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0xDA31DC93,	//0x1f6e		VoC_sw16_sd(REG1,0x2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xD887F8FC,	//0x1f70		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xDFA9D886,	//0x1f72		VoC_pop16(RA,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x07AD1504,	//0x1f74		VoC_sw16_d(REG4,0x7ad)
0xDFE9E580,	//0x1f76		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f77		CII_lpc_M122
0x07BF0A86,	//0x1f78		VoC_lw16i(REG6,0x7bf)
0x01941804,	//0x1f7a		VoC_lw16i_set_inc(REG0,0x194,0x1)
0x43381805,	//0x1f7c		VoC_lw16i_set_inc(REG1,0x4338,0x1)
0x1506DFC0,	//0x1f7e		VoC_sw16_d(REG6,0x5739)(lo)	|	VoC_push16(REG0,DEFAULT)
0xFFC05739,	//0x1f80		VoC_NAD	|	VoC_sw16_d(REG6,0x5739)(hi)
0x15E82B80,	//0x1f82		VoC_jal(CII_Autocorr)
0x13282B80,	//0x1f84		VoC_jal(CII_Lag_window)
0x133D2B80,	//0x1f86		VoC_jal(CII_Levinson)
0x07D50A86,	//0x1f88		VoC_lw16i(REG6,0x7d5)
0x1805DF80,	//0x1f8a		VoC_lw16i_set_inc(REG1,0x4428,0x1)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x15064428,	//0x1f8c		VoC_sw16_d(REG6,0x5739)(lo)	|	VoC_lw16i_set_inc(REG1,0x4428,0x1)(hi)
0xFFC05739,	//0x1f8e		VoC_NAD	|	VoC_sw16_d(REG6,0x5739)(hi)
0x15E82B80,	//0x1f90		VoC_jal(CII_Autocorr)
0x13282B80,	//0x1f92		VoC_jal(CII_Lag_window)
0x133D2B80,	//0x1f94		VoC_jal(CII_Levinson)
0xF020DFA9,	//0x1f96		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1f98		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f99		CII_lsp_M122
0x09121FBD,	//0x1f9a		VoC_lw16i_set_inc(REG1,0x912,0xffffffff)
0xDFC1F006,	//0x1f9c		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x16732B80,	//0x1f9e		VoC_jal(CII_Az_lsp)
0xE1665610,	//0x1fa0		VoC_lw16i_short(REG6,0x16,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xFFC0D641,	//0x1fa2		VoC_NAD	|	VoC_lw16_sd(REG1,0x3,DEFAULT)
0x16732B80,	//0x1fa4		VoC_jal(CII_Az_lsp)
0xD9105612,	//0x1fa6		VoC_lw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xE0065633,	//0x1fa8		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x2,DEFAULT)
0xF6205645,	//0x1faa		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x21392B80,	//0x1fac		VoC_jal(CII_Int_lpc_1and3)
0x091C0A86,	//0x1fae		VoC_lw16i(REG6,0x91c)
0xD9195610,	//0x1fb0		VoC_lw32_sd(REG23,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xFFC0DFC6,	//0x1fb2		VoC_NAD	|	VoC_push16(REG6,DEFAULT)
0x20A72B80,	//0x1fb4		VoC_jal(CII_Q_plsf_5)
0xE057590A,	//0x1fb6		VoC_lw16i_short(REG7,0x5,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x5910C13C,	//0x1fb8		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xDA74E016,	//0x1fba		VoC_sw16_sd(REG4,0x6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x5F82D91A,	//0x1fbc		VoC_pop16(REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x2,DEFAULT)
0x2B80F683,	//0x1fbe		VoC_jal(CII_Int_lpc_1and3)(lo)	|	VoC_movreg16(REG3,REG4,IN_PARALLEL)
0xDF812139,	//0x1fc0		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_Int_lpc_1and3)(hi)
0xF051DFA9,	//0x1fc2		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1fc4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1fc5		CII_Lag_max_M122
0x00121486,	//0x1fc6		VoC_lw32_d(RL6,0x12)
0xF62659C7,	//0x1fc8		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xE705FFC0,	//0x1fca		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_NAD
0x1FD03637,	//0x1fcc		VoC_bgt32_rr(LAG_MAX_M122_02,RL6,RL7)
0xF6267F3E,	//0x1fce		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_movreg32(RL6,RL7,DEFAULT)
		//0x1fd0		LAG_MAX_M122_02
		//0x1fd0		VoC_endloop0
0xDE0859C7,	//0x1fd0		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0x1808DFC6,	//0x1fd2		VoC_lw16i_set_inc(REG0,0x57c5,0x2)(lo)	|	VoC_push16(REG6,DEFAULT)
0xC23057C5,	//0x1fd4		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x57c5,0x2)(hi)
0xE200FF44,	//0x1fd6		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD500E741,	//0x1fd8		VoC_bimac32inc_pp(REG0,REG0)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x1fd9		VoC_endloop0
0xFF20FFC0,	//0x1fda		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x12FF2B80,	//0x1fdc		VoC_jal(CII_Inv_sqrt)
0xFF32FBF8,	//0x1fde		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_shr32_ri(REG01,0xffffffff,DEFAULT)
0xF908790C,	//0x1fe0		VoC_shru16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC7464D4C,	//0x1fe2		VoC_multf16_rr(REG6,REG5,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG1,DEFAULT)
0xE017470C,	//0x1fe4		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_multf16_rr(REG4,REG4,REG1,DEFAULT)
0xCE27CE37,	//0x1fe6		VoC_mac32_rr(REG4,REG7,DEFAULT)	|	VoC_mac32_rr(REG6,REG7,DEFAULT)
0x58721407,	//0x1fe8		VoC_lw16_d(REG7,0x5872)
0xFB8CFEBC,	//0x1fea		VoC_shr32_ri(ACC0,0xfffffff1,DEFAULT)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0xDFA9DF86,	//0x1fec		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xE580E127,	//0x1fee		VoC_return	|	VoC_movreg16(REG7,ACC0_HI,DEFAULT)
		//0x1ff0		CII_Pitch_ol_M122
0xDFE9FF44,	//0x1ff0		VoC_push16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x03E21584,	//0x1ff2		VoC_sw32_d(ACC0,0x3e2)
0x02AC1808,	//0x1ff4		VoC_lw16i_set_inc(REG0,0x2ac,0x2)
0x07A70700,	//0x1ff6		VoC_add16_rd(REG0,REG0,0x7a7)
0x00020705,	//0x1ff8		VoC_add16_rd(REG5,REG0,0x2)
0xCDFCD9C3,	//0x1ffa		VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x1FFE2CDE,	//0x1ffc		VoC_loop_i(0x0,0x6f)
		//0x1ffe		VoC_endloop0
0x60A0D500,	//0x1ffe		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG0)
0x1809E383,	//0x2000		VoC_lw16i_set_inc(REG1,0x5736,0x2)(lo)	|	VoC_lw16i_short(REG3,0x38,IN_PARALLEL)
0xE2005736,	//0x2002		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x5736,0x2)(hi)
0x00105C24,	//0x2004		VoC_bne32_rd(PITCH_OL_122_01,ACC0,0x10)
0xE5C9F062,	//0x2006		VoC_jump(PITCH_OL_122_SCALE_END)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
		//0x2008		PITCH_OL_122_01
0xE1057004,	//0x2008		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x200E3694,	//0x200a		VoC_bngt32_rr(PITCH_OL_122_02,REG45,ACC0)
0xE5C3F7A2,	//0x200c		VoC_jump(PITCH_OL_122_SCALE_END)	|	VoC_lw16i_short(REG2,0xfffffffd,DEFAULT)
		//0x200e		PITCH_OL_122_02
0xFFC0F002,	//0x200e		VoC_NAD	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x2010		PITCH_OL_122_SCALE_END
0x00380A86,	//0x2010		VoC_lw16i(REG6,0x38)
0x12842B80,	//0x2012		VoC_jal(CII_scale)
0x57361808,	//0x2014		VoC_lw16i_set_inc(REG0,0x5736,0x2)
0x58721502,	//0x2016		VoC_sw16_d(REG2,0x5872)
0x08401809,	//0x2018		VoC_lw16i_set_inc(REG1,0x840,0x2)
0x128C2B80,	//0x201a		VoC_jal(CII_copy_xy)
0x57C51808,	//0x201c		VoC_lw16i_set_inc(REG0,0x57c5,0x2)
0x08401809,	//0x201e		VoC_lw16i_set_inc(REG1,0x840,0x2)
0x5876180A,	//0x2020		VoC_lw16i_set_inc(REG2,0x5876,0x2)
0xE0136006,	//0x2022		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xFF44405F,	//0x2024		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG1,REG3,DEFAULT)
0x2CFDE201,	//0x2026		VoC_loop_i(0x1,0x7e)(lo)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xED012030,	//0x2028		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_loop_i(0x1,0x7e)(hi)
		//0x202a		VoC_endloop0
0x7F18D501,	//0x202a		VoC_movreg32(REG01,REG67,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0x7F26DDD6,	//0x202c		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,IN_PARALLEL)
0xE201FF44,	//0x202e		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x2030		VoC_endloop1
0x5D96C1DF,	//0x2030		VoC_sw32_p(RL6,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG3,DEFAULT)
0x1808E285,	//0x2032		VoC_lw16i_set_inc(REG0,0x5878,0x2)(lo)	|	VoC_lw16i_short(REG5,0x28,IN_PARALLEL)
0x1FBD5878,	//0x2034		VoC_lw16i_set_inc(REG1,0x8f,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x5878,0x2)(hi)
0x0A84008F,	//0x2036		VoC_lw16i(REG4,0x48)(lo)	|	VoC_lw16i_set_inc(REG1,0x8f,0xffffffff)(hi)
0xFFC00048,	//0x2038		VoC_NAD	|	VoC_lw16i(REG4,0x48)(hi)
0x1FC52B80,	//0x203a		VoC_jal(CII_Lag_max_M122)
0x59081808,	//0x203c		VoC_lw16i_set_inc(REG0,0x5908,0x2)
0x586C1583,	//0x203e		VoC_sw32_d(REG67,0x586c)
0x00471FBD,	//0x2040		VoC_lw16i_set_inc(REG1,0x47,0xffffffff)
0x00240A84,	//0x2042		VoC_lw16i(REG4,0x24)
0x00280A85,	//0x2044		VoC_lw16i(REG5,0x28)
0x1FC52B80,	//0x2046		VoC_jal(CII_Lag_max_M122)
0x59501808,	//0x2048		VoC_lw16i_set_inc(REG0,0x5950,0x2)
0x586E1583,	//0x204a		VoC_sw32_d(REG67,0x586e)
0x00231FBD,	//0x204c		VoC_lw16i_set_inc(REG1,0x23,0xffffffff)
0xE2857244,	//0x204e		VoC_lw16i_short(REG5,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x12,DEFAULT)
0x1FC52B80,	//0x2050		VoC_jal(CII_Lag_max_M122)
0x58701583,	//0x2052		VoC_sw32_d(REG67,0x5870)
0x20962B00,	//0x2054		VoC_jump_lg(PITCH_OL_M122_04)
0x58781808,	//0x2056		VoC_lw16i_set_inc(REG0,0x5878,0x2)
0x587A1809,	//0x2058		VoC_lw16i_set_inc(REG1,0x587a,0x2)
0x587C180A,	//0x205a		VoC_lw16i_set_inc(REG2,0x587c,0x2)
0x00121484,	//0x205c		VoC_lw32_d(ACC0,0x12)
0x2CF4D9CE,	//0x205e		VoC_loop_i(0x0,0x7a)(lo)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0xFBFE206B,	//0x2060		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_loop_i(0x0,0x7a)(hi)
0x97969786,	//0x2062		VoC_sub32inc_rp(RL6,RL6,REG2,DEFAULT)	|	VoC_sub32inc_rp(RL6,RL6,REG0,DEFAULT)
0x206833C6,	//0x2064		VoC_bnltz32_r(HP_MAX_01,RL6)
0x00000BB6,	//0x2066		VoC_sub32_dr(RL6,0x0,RL6)
		//0x2068		HP_MAX_01
0x206B3626,	//0x2068		VoC_bgt32_rr(HP_MAX_02,ACC0,RL6)
0xD9CEFF34,	//0x206a		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x206b		HP_MAX_02
		//0x206b		VoC_endloop0
0x124E2B80,	//0x206c		VoC_jal(CII_NORM_L_ACC0)
0x0002078B,	//0x206e		VoC_sub16_rd(REG3,REG1,0x2)
0x57C51808,	//0x2070		VoC_lw16i_set_inc(REG0,0x57c5,0x2)
0x08CF1809,	//0x2072		VoC_lw16i_set_inc(REG1,0x8cf,0x2)
0xE124FA0C,	//0x2074		VoC_movreg16(REG4,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFF446201,	//0x2076		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD501ED01,	//0x2078		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_i_short(0x28,DEFAULT)
		//0x2079		VoC_endloop0
0x57C50A80,	//0x207a		VoC_lw16i(REG0,0x57c5)
0x08CE0A81,	//0x207c		VoC_lw16i(REG1,0x8ce)
0x6201FF26,	//0x207e		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xED01FF44,	//0x2080		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x2082		VoC_endloop0
0xFBFED501,	//0x2082		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0xCBA4FBFC,	//0x2084		VoC_sub32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0x208A33C4,	//0x2086		VoC_bnltz32_r(HP_MAX_03,ACC0)
0x00000BA4,	//0x2088		VoC_sub32_dr(ACC0,0x0,ACC0)
		//0x208a		HP_MAX_03
0x124E2B80,	//0x208a		VoC_jal(CII_NORM_L_ACC0)
0xF72142CF,	//0x208c		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG1,DEFAULT)
0xE0026080,	//0x208e		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x20943181,	//0x2090		VoC_bez16_r(HP_MAX_04,REG1)
0x12602B80,	//0x2092		VoC_jal(CII_DIV_S)
		//0x2094		HP_MAX_04
0xFFC0FE3A,	//0x2094		VoC_NOP	|	VoC_shr16_rr(REG2,REG7,DEFAULT)
		//0x2096		PITCH_OL_M122_04
0x6CCD0A86,	//0x2096		VoC_lw16i(REG6,0x6ccd)
0x586C1482,	//0x2098		VoC_lw32_d(REG45,0x586c)
0xDFA9C7AF,	//0x209a		VoC_pop16(RA,DEFAULT)	|	VoC_multf16_rr(REG7,REG6,REG5,DEFAULT)
0x586F4C27,	//0x209c		VoC_bnlt16_rd(PITCH_OL_M122_05,REG7,0x586f)
0x586E1482,	//0x209e		VoC_lw32_d(REG45,0x586e)
		//0x20a0		PITCH_OL_M122_05
0xFFC0C7AF,	//0x20a0		VoC_NOP	|	VoC_multf16_rr(REG7,REG6,REG5,DEFAULT)
0x58714C27,	//0x20a2		VoC_bnlt16_rd(PITCH_OL_M122_06,REG7,0x5871)
0x58701404,	//0x20a4		VoC_lw16_d(REG4,0x5870)
		//0x20a6		PITCH_OL_M122_06
0xDFE9E580,	//0x20a6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x20a7		CII_Q_plsf_5
0x08401FBD,	//0x20a8		VoC_lw16i_set_inc(REG1,0x840,0xffffffff)
0xF3FC5FC3,	//0x20aa		VoC_lw16i_short(INC0,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xFFC0DFC1,	//0x20ac		VoC_NAD	|	VoC_push16(REG1,DEFAULT)
0x14932B80,	//0x20ae		VoC_jal(CII_Lsp_lsf)
0x084A1FBD,	//0x20b0		VoC_lw16i_set_inc(REG1,0x84a,0xffffffff)
0xDFC1D680,	//0x20b2		VoC_push16(REG1,DEFAULT)	|	VoC_lw16_sd(REG0,0x7,DEFAULT)
0x14932B80,	//0x20b4		VoC_jal(CII_Lsp_lsf)
0x08681804,	//0x20b6		VoC_lw16i_set_inc(REG0,0x868,0x1)
0x08541805,	//0x20b8		VoC_lw16i_set_inc(REG1,0x854,0x1)
0x08720A84,	//0x20ba		VoC_lw16i(REG4,0x872)
0x085E0A85,	//0x20bc		VoC_lw16i(REG5,0x85e)
0xDF42DF40,	//0x20be		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x2B80D620,	//0x20c0		VoC_jal(CII_Lsf_wt)(lo)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xD90814F6,	//0x20c2		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Lsf_wt)(hi)
0xFFC0D610,	//0x20c4		VoC_NAD	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x14F62B80,	//0x20c6		VoC_jal(CII_Lsf_wt)
0xF0095918,	//0x20c8		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0x45181808,	//0x20ca		VoC_lw16i_set_inc(REG0,0x4518,0x2)
0x5736180B,	//0x20cc		VoC_lw16i_set_inc(REG3,0x5736,0x2)
0x5333180A,	//0x20ce		VoC_lw16i_set_inc(REG2,0x5333,0x2)
0x8E8F0E8E,	//0x20d0		VoC_multf16inc_rp(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG2,REG1,DEFAULT)
0xE8A5FFC0,	//0x20d2		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0x83C50384,	//0x20d4		VoC_add16inc_rp(REG5,REG7,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG6,REG0,DEFAULT)
0x8E8F0E8E,	//0x20d6		VoC_multf16inc_rp(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG2,REG1,DEFAULT)
		//0x20d8		VoC_endloop0
0x180BDDDA,	//0x20d8		VoC_lw16i_set_inc(REG3,0x5736,0x2)(lo)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xDF825736,	//0x20da		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5736,0x2)(hi)
0xF6615F80,	//0x20dc		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x08680A84,	//0x20de		VoC_lw16i(REG4,0x868)
0x08720A85,	//0x20e0		VoC_lw16i(REG5,0x872)
0xE02C704D,	//0x20e2		VoC_lw16i_short(RL6_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x2,DEFAULT)
0xE8A6FFC0,	//0x20e4		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0xA60F260E,	//0x20e6		VoC_sub16inc_pp(REG7,REG0,REG1,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG1,DEFAULT)
0xA69F269E,	//0x20e8		VoC_sub16inc_pp(REG7,REG2,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG2,REG3,DEFAULT)
0x5DABDDA3,	//0x20ea		VoC_sw32_p(REG67,REG5,DEFAULT)	|	VoC_sw32_p(REG67,REG4,DEFAULT)
		//0x20eb		VoC_endloop0
0xFF47C8B2,	//0x20ec		VoC_lw32z(RL7,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL6,IN_PARALLEL)
0xE02C704D,	//0x20ee		VoC_lw16i_short(RL6_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x2,DEFAULT)
0xE0465919,	//0x20f0		VoC_lw16i_short(REG6,0x4,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x2,DEFAULT)
0x46F0180B,	//0x20f2		VoC_lw16i_set_inc(REG3,0x46f0,0x2)
0xF0065FC2,	//0x20f4		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x19442B80,	//0x20f6		VoC_jal(CII_Vq_subvec)
0x48F0180B,	//0x20f8		VoC_lw16i_set_inc(REG3,0x48f0,0x2)
0xFFC0F106,	//0x20fa		VoC_NAD	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x19442B80,	//0x20fc		VoC_jal(CII_Vq_subvec)
0x4CF0180B,	//0x20fe		VoC_lw16i_set_inc(REG3,0x4cf0,0x2)
0xF02EF106,	//0x2100		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x19442B80,	//0x2102		VoC_jal(CII_Vq_subvec)
0x50F0180B,	//0x2104		VoC_lw16i_set_inc(REG3,0x50f0,0x2)
0xFF477106,	//0x2106		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x19442B80,	//0x2108		VoC_jal(CII_Vq_subvec)
0x54F0180B,	//0x210a		VoC_lw16i_set_inc(REG3,0x54f0,0x2)
0xFFC0F046,	//0x210c		VoC_NAD	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x19442B80,	//0x210e		VoC_jal(CII_Vq_subvec)
0xF0065F82,	//0x2110		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0x08861805,	//0x2112		VoC_lw16i_set_inc(REG1,0x886,0x1)
0x087C1804,	//0x2114		VoC_lw16i_set_inc(REG0,0x87c,0x1)
0xDF025FC1,	//0x2116		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0xDF015FC0,	//0x2118		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x57360A84,	//0x211a		VoC_lw16i(REG4,0x5736)
0xF007590B,	//0x211c		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF6E36949,	//0x211e		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD8A7A12E,	//0x2120		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_add16_pp(REG6,REG4,REG5,DEFAULT)
0x5CB7DC86,	//0x2122		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x091281E7,	//0x2124		VoC_add32_rd(REG45,REG45,0x8)(lo)	|	VoC_add16_rp(REG7,REG7,REG4,IN_PARALLEL)
0xDC970008,	//0x2126		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x8)(hi)
		//0x2127		VoC_endloop0
0x2B80D610,	//0x2128		VoC_jal(CII_Reorder_lsf)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xD6201938,	//0x212a		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_jal(CII_Reorder_lsf)(hi)
0x19382B80,	//0x212c		VoC_jal(CII_Reorder_lsf)
0xD641DF80,	//0x212e		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x147E2B80,	//0x2130		VoC_jal(CII_Lsf_lsp)
0xDF81DF80,	//0x2132		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x147E2B80,	//0x2134		VoC_jal(CII_Lsf_lsp)
0xFFC0DFA9,	//0x2136		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF007E580,	//0x2138		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x2139		CII_Int_lpc_1and3
0x57361809,	//0x213a		VoC_lw16i_set_inc(REG1,0x5736,0x2)
		//0x213c		Int_lpc_1and3_L0
0x0025441F,	//0x213c		VoC_bne16_rd(Int_lpc_1and3_L3,REG7,0x25)
0xDFE9E580,	//0x213e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x213f		Int_lpc_1and3_L3
0xDF435FC5,	//0x2140		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xDF405FC2,	//0x2142		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x15AA2B80,	//0x2144		VoC_jal(CII_Int_lpc_only)
0xD908D913,	//0x2146		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x2B80C038,	//0x2148		VoC_jal(CII_Lsp_Az)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD9131442,	//0x214a		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_jal(CII_Lsp_Az)(hi)
0x001E073F,	//0x214c		VoC_add16_rd(REG7,REG7,0x1e)
0x001B07BD,	//0x214e		VoC_sub16_rd(REG5,REG7,0x1b)
0x3186DD13,	//0x2150		VoC_bez16_r(Int_lpc_1and3_L1,REG6)(lo)	|	VoC_sw32_sd(REG67,0x1,DEFAULT)
0xD908215C,	//0x2152		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_bez16_r(Int_lpc_1and3_L1,REG6)(hi)
0xC0285611,	//0x2154		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x00224425,	//0x2156		VoC_bne16_rd(Int_lpc_1and3_L2,REG5,0x22)
0xFFC0D621,	//0x2158		VoC_NAD	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
		//0x215a		Int_lpc_1and3_L2
0x14422B80,	//0x215a		VoC_jal(CII_Lsp_Az)
		//0x215c		Int_lpc_1and3_L1
0xDF005F82,	//0x215c		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xDF035F83,	//0x215e		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xF6655FA9,	//0x2160		VoC_movreg16(REG5,REG3,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x213C2B00,	//0x2162		VoC_jump_lg(Int_lpc_1and3_L0)
0xDFE9E580,	//0x2164		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2165		CII_gainQuant_M122
0x058E0A81,	//0x2166		VoC_lw16i(REG1,0x58e)
0x08181808,	//0x2168		VoC_lw16i_set_inc(REG0,0x818,0x2)
0xFF446A82,	//0x216a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x216c		VoC_endloop0
0x070ED500,	//0x216c		VoC_add16_rd(REG6,REG1,0x17)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0x09210017,	//0x216e		VoC_add32_rd(REG23,ACC0,0x6)(lo)	|	VoC_add16_rd(REG6,REG1,0x17)(hi)
0x0A1C0006,	//0x2170		VoC_multf32_rd(ACC0,REG3,0x2b)(lo)	|	VoC_add32_rd(REG23,ACC0,0x6)(hi)
0xFFC0002B,	//0x2172		VoC_NAD	|	VoC_multf32_rd(ACC0,REG3,0x2b)(hi)
0x14D52B80,	//0x2174		VoC_jal(CII_Log2)
0x757D0AC8,	//0x2176		VoC_lw16i(ACC0_LO,0xf57d)
0xF00860C0,	//0x2178		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0x566E1809,	//0x217a		VoC_lw16i_set_inc(REG1,0x566e,0x2)
0xE0B96842,	//0x217c		VoC_lw16i_short(ACC0_HI,0xb,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x217e		VoC_endloop0
0xE0A6D501,	//0x217e		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG1)
0xE1E27BFB,	//0x2180		VoC_lw16i_short(REG2,0x1e,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xCB1BC317,	//0x2182		VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG4,REG2,DEFAULT)
0xF90EFA0B,	//0x2184		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
0x06E41804,	//0x2186		VoC_lw16i_set_inc(REG0,0x6e4,0x1)
0x07341809,	//0x2188		VoC_lw16i_set_inc(REG1,0x734,0x2)
0xF028FF44,	//0x218a		VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF456A87,	//0x218c		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0x780AD9C9,	//0x218e		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x5110F80B,	//0x2190		VoC_mac32inc_rp(REG2,REG0,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0x5118CE12,	//0x2192		VoC_mac32inc_rp(REG3,REG0,DEFAULT)	|	VoC_mac32_rr(REG2,REG2,IN_PARALLEL)
		//0x2193		VoC_endloop0
0x2B80CE1B,	//0x2194		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_mac32_rr(REG3,REG3,IN_PARALLEL)
0xFF21124E,	//0x2196		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x219C3103,	//0x2198		VoC_bgtz16_r(G_code_go,REG3)
0xE5CFF002,	//0x219a		VoC_jump(CII_G_code01)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x219c		G_code_go
0x0018070C,	//0x219c		VoC_add16_rd(REG4,REG1,0x18)
0xFFC0FF2C,	//0x219e		VoC_NAD	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0x124E2B80,	//0x21a0		VoC_jal(CII_NORM_L_ACC0)
0xC30C780B,	//0x21a2		VoC_sub16_rr(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0xF7216060,	//0x21a4		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x12602B80,	//0x21a6		VoC_jal(CII_DIV_S)
0xF8FAFE22,	//0x21a8		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_shr16_rr(REG2,REG4,DEFAULT)
		//0x21aa		CII_G_code01
0x1502FF18,	//0x21aa		VoC_sw16_d(REG2,0x7ad)(lo)	|	VoC_movreg32(REG01,REG67,DEFAULT)
0xFFC007AD,	//0x21ac		VoC_NAD	|	VoC_sw16_d(REG2,0x7ad)(hi)
0x1F4B2B80,	//0x21ae		VoC_jal(CII_q_gain_code)
0x058E0A85,	//0x21b0		VoC_lw16i(REG5,0x58e)
0x15D52B80,	//0x21b2		VoC_jal(CII_gc_pred_update)
0xDF85DFA9,	//0x21b4		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x21b6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x21b7		CII_lsp_122
0x09080A87,	//0x21b8		VoC_lw16i(REG7,0x908)
0x05680A86,	//0x21ba		VoC_lw16i(REG6,0x568)
0x080C1FBD,	//0x21bc		VoC_lw16i_set_inc(REG1,0x80c,0xffffffff)
0x07E00A84,	//0x21be		VoC_lw16i(REG4,0x7e0)
0x07B40A85,	//0x21c0		VoC_lw16i(REG5,0x7b4)
0xDF435FC1,	//0x21c2		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x055E1804,	//0x21c4		VoC_lw16i_set_inc(REG0,0x55e,0x1)
0x05720A87,	//0x21c6		VoC_lw16i(REG7,0x572)
0x5FC0D636,	//0x21c8		VoC_push16(REG0,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x5F43DF42,	//0x21ca		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0xFFC0E073,	//0x21cc		VoC_NAD	|	VoC_lw16i_short(REG3,0x7,IN_PARALLEL)
0x1F992B80,	//0x21ce		VoC_jal(CII_lsp_M122)
0xDF065F81,	//0x21d0		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF065F80,	//0x21d2		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x2B80F050,	//0x21d4		VoC_jal(CII_Copy_M)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xDF00127F,	//0x21d6		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
0x68A3DFA9,	//0x21d8		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD9CCD9CC,	//0x21da		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,IN_PARALLEL)
		//0x21dc		VoC_endloop0
0xE580DDC4,	//0x21dc		VoC_return	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
