		//0x05d0		VoC_code_section_1
		//0x05d0		CII_smbPitchShift
0x1482DFE9,	//0x05d0		VoC_lw32_d(REG45,0x4266)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A824266,	//0x05d2		VoC_lw16i(REG2,0xc8d)(lo)	|	VoC_lw32_d(REG45,0x4266)(hi)
0x0A830C8D,	//0x05d4		VoC_lw16i(REG3,0x51)(lo)	|	VoC_lw16i(REG2,0xc8d)(hi)
0xFFC00051,	//0x05d6		VoC_NAD	|	VoC_lw16i(REG3,0x51)(hi)
0x03CF2B80,	//0x05d8		VoC_jal(Coolsand_AecRunDma)
0x086E2B80,	//0x05da		VoC_jal(Coolsand_MorphVoiceReset)
0x43042008,	//0x05dc		VoC_lw16d_set_inc(REG0,0x4304,0x2)
0x1B681809,	//0x05de		VoC_lw16i_set_inc(REG1,0x1b68,0x2)
0x00030A82,	//0x05e0		VoC_lw16i(REG2,0x3)
0xFFC059C2,	//0x05e2		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x05E92CA0,	//0x05e4		VoC_loop_i(0x0,0x50)
0xFE157E14,	//0x05e6		VoC_shr16_rr(REG5,REG2,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG2,DEFAULT)
0xDDCAD9C2,	//0x05e8		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x05e9		VoC_endloop0
0xE5057004,	//0x05ea		VoC_lw16i_short(REG5,0x50,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x62FC180A,	//0x05ec		VoC_lw16i_set_inc(REG2,0x62fc,0x2)
0x1C681808,	//0x05ee		VoC_lw16i_set_inc(REG0,0x1c68,0x2)
0x63FC180B,	//0x05f0		VoC_lw16i_set_inc(REG3,0x63fc,0x2)
0x42EB1406,	//0x05f2		VoC_lw16_d(REG6,0x42eb)
0x00C00A87,	//0x05f4		VoC_lw16i(REG7,0xc0)
0xC3BF40B2,	//0x05f6		VoC_sub16_rr(REG7,REG6,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xF47140FB,	//0x05f8		VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x1B681809,	//0x05fa		VoC_lw16i_set_inc(REG1,0x1b68,0x2)
0x27721581,	//0x05fc		VoC_sw32_d(REG23,0x2772)
		//0x05fe		CII_smbPitchShift102
0x07B434AC,	//0x05fe		VoC_bngt16_rr(CII_smbPitchShift101,REG5,REG4)
0xF0097052,	//0x0600		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xE02759DD,	//0x0602		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG3,DEFAULT)
0xC1BE59CC,	//0x0604		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xDDD4DDC5,	//0x0606		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x01000A87,	//0x0608		VoC_lw16i(REG7,0x100)
0x07AF343E,	//0x060a		VoC_bgt16_rr(CII_smbPitchShift103,REG7,REG6)
0x5F40F047,	//0x060c		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x5F42F471,	//0x060e		VoC_push32(REG45,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)
0x1808FF46,	//0x0610		VoC_lw16i_set_inc(REG0,0x1d68,0x2)(lo)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x18051D68,	//0x0612		VoC_lw16i_set_inc(REG1,0x191a,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1d68,0x2)(hi)
0x1806191A,	//0x0614		VoC_lw16i_set_inc(REG2,0x62fc,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x191a,0x1)(hi)
0x0A8762FC,	//0x0616		VoC_lw16i(REG7,0x199a)(lo)	|	VoC_lw16i_set_inc(REG2,0x62fc,0x1)(hi)
0x0A86199A,	//0x0618		VoC_lw16i(REG6,0x2000)(lo)	|	VoC_lw16i(REG7,0x199a)(hi)
0xD8942000,	//0x061a		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i(REG6,0x2000)(hi)
0xF80C58A5,	//0x061c		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xCD2FC3A4,	//0x061e		VoC_multf32_rr(RL7,REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
0x062C2DFF,	//0x0620		VoC_loop_i(0x1,0xff)
0xDDC7D894,	//0x0622		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x0628358F,	//0x0624		VoC_bne16_rr(CII_smbPitchShift120,REG1,REG7)
0xFFC077F1,	//0x0626		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
		//0x0628		CII_smbPitchShift120
0xF80C58A5,	//0x0628		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xCD2FC3A4,	//0x062a		VoC_multf32_rr(RL7,REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
		//0x062c		VoC_endloop1
0xF7E4DDC6,	//0x062c		VoC_lw16i_short(REG4,0xffffffff,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDC6DDC7,	//0x062e		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x21681504,	//0x0630		VoC_sw16_d(REG4,0x2168)
0x07C62B80,	//0x0632		VoC_jal(CS_intsmbFft)
0x1D681808,	//0x0634		VoC_lw16i_set_inc(REG0,0x1d68,0x2)
0x21721809,	//0x0636		VoC_lw16i_set_inc(REG1,0x2172,0x2)
0x64FC1806,	//0x0638		VoC_lw16i_set_inc(REG2,0x64fc,0x1)
0x23721807,	//0x063a		VoC_lw16i_set_inc(REG3,0x2372,0x1)
0xFFC07007,	//0x063c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x06AE2D03,	//0x063e		VoC_loop_i(0x1,0x81)
0xDF4359C2,	//0x0640		VoC_push32(REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF4015F41,	//0x0642		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xFA1A59C3,	//0x0644		VoC_shr32_ri(REG45,0x3,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xCD267A1B,	//0x0646		VoC_multf32_rr(RL6,REG4,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0xE0254DB7,	//0x0648		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG6,REG6,DEFAULT)
0x40000A83,	//0x064a		VoC_lw16i(REG3,0x4000)
0x69E8F002,	//0x064c		VoC_loop_i_short(0xf,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xC09DC9BE,	//0x064e		VoC_add16_rr(REG5,REG2,REG3,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,IN_PARALLEL)
0xFFC0CD6F,	//0x0650		VoC_NOP	|	VoC_multf32_rr(RL7,REG5,REG5,DEFAULT)
0x0655363E,	//0x0652		VoC_bgt32_rr(CII_smbPitchShift104,RL7,RL6)
0xF80BE0A2,	//0x0654		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_movreg16(REG2,REG5,DEFAULT)
		//0x0655		CII_smbPitchShift104
		//0x0655		VoC_endloop0
0xE0077BE1,	//0x0656		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffffc,DEFAULT)
0x065C3246,	//0x0658		VoC_bnltz16_r(CII_smbPitchShift105,REG6)
0xF027C3F6,	//0x065a		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)
		//0x065c		CII_smbPitchShift105
0xF4715DC9,	//0x065c		VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xE0055F40,	//0x065e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x06643244,	//0x0660		VoC_bnltz16_r(CII_smbPitchShift106,REG4)
0xF025C364,	//0x0662		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)
		//0x0664		CII_smbPitchShift106
0x34B4F000,	//0x0664		VoC_bngt16_rr(CII_smbPitchShift107,REG6,REG4)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE082066C,	//0x0666		VoC_movreg16(REG2,REG4,DEFAULT)	|	VoC_bngt16_rr(CII_smbPitchShift107,REG6,REG4)(hi)
0x6046E0C4,	//0x0668		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0xFFC0E010,	//0x066a		VoC_NAD	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
		//0x066c		CII_smbPitchShift107
0x00001806,	//0x066c		VoC_lw16i_set_inc(REG2,0x0,0x1)
0x199B1807,	//0x066e		VoC_lw16i_set_inc(REG3,0x199b,0x1)
0x9B1DEC26,	//0x0670		VoC_multf32inc_rp(ACC1,REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x21,DEFAULT)
0xE141FFC0,	//0x0672		VoC_movreg16(REG1,ACC1_LO,DEFAULT)	|	VoC_NOP
0x067834B1,	//0x0674		VoC_bngt16_rr(CII_smbPitchShift108,REG6,REG1)
		//0x0676		VoC_endloop0
0xFFC05E10,	//0x0676		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
		//0x0678		CII_smbPitchShift108
0x00400A84,	//0x0678		VoC_lw16i(REG4,0x40)
0x067E3180,	//0x067a		VoC_bez16_r(CII_smbPitchShift109,REG0)
0xFFC04312,	//0x067c		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
		//0x067e		CII_smbPitchShift109
0xE00678FC,	//0x067e		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x06843185,	//0x0680		VoC_bez16_r(CII_smbPitchShift110,REG5)
0xFFC04312,	//0x0682		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
		//0x0684		CII_smbPitchShift110
0x06883187,	//0x0684		VoC_bez16_r(CII_smbPitchShift111,REG7)
0xFFC04392,	//0x0686		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG6,REG2,DEFAULT)
		//0x0688		CII_smbPitchShift111
0xDF006044,	//0x0688		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0xDF03DF01,	//0x068a		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x5CA48515,	//0x068c		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub16_rp(REG5,REG4,REG2,DEFAULT)
0xF8D6F6E6,	//0x068e		VoC_shr16_ri(REG6,0xfffffffa,DEFAULT)	|	VoC_movreg16(REG6,REG7,IN_PARALLEL)
0xE0A4C375,	//0x0690		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG6,DEFAULT)
0x3245F834,	//0x0692		VoC_bnltz16_r(CII_smbPitchShift118,REG5)(lo)	|	VoC_shr16_ri(REG4,0x6,DEFAULT)
0xE0A6069C,	//0x0694		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_bnltz16_r(CII_smbPitchShift118,REG5)(hi)
0x003F1606,	//0x0696		VoC_and16_ri(REG6,0x3f)
0x069C3186,	//0x0698		VoC_bez16_r(CII_smbPitchShift118,REG6)
0xC134F026,	//0x069a		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x069c		CII_smbPitchShift118
0x1606E086,	//0x069c		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x31860001,	//0x069e		VoC_bez16_r(CII_smbPitchShift113,REG6)(lo)	|	VoC_and16_ri(REG6,0x1)(hi)
0x320406A6,	//0x06a0		VoC_bltz16_r(CII_smbPitchShift112,REG4)(lo)	|	VoC_bez16_r(CII_smbPitchShift113,REG6)(hi)
0xC13406A5,	//0x06a2		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_bltz16_r(CII_smbPitchShift112,REG4)(hi)
0xC334E5C2,	//0x06a4		VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_jump(CII_smbPitchShift113)
		//0x06a5		CII_smbPitchShift112
		//0x06a6		CII_smbPitchShift113
0xC365F8D4,	//0x06a6		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)
0xF6E678F5,	//0x06a8		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
0xE01478CE,	//0x06aa		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffff9,DEFAULT)
0xC1E7C175,	//0x06ac		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
		//0x06ae		VoC_endloop1
0x1808DCB5,	//0x06ae		VoC_lw16i_set_inc(REG0,0x2572,0x2)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x18052572,	//0x06b0		VoC_lw16i_set_inc(REG1,0x2472,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2572,0x2)(hi)
0x180A2472,	//0x06b2		VoC_lw16i_set_inc(REG2,0x2172,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x2472,0x1)(hi)
0x18072172,	//0x06b4		VoC_lw16i_set_inc(REG3,0x2372,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x2172,0x2)(hi)
0x15802372,	//0x06b6		VoC_sw32_d(REG01,0x2170)(lo)	|	VoC_lw16i_set_inc(REG3,0x2372,0x1)(hi)
0xFF442170,	//0x06b8		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw32_d(REG01,0x2170)(hi)
0x06BD2D03,	//0x06ba		VoC_loop_i(0x1,0x81)
0xDDC4DC99,	//0x06bc		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x06bd		VoC_endloop1
0x0A86F007,	//0x06be		VoC_lw16i(REG6,0x80)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFFC00080,	//0x06c0		VoC_NAD	|	VoC_lw16i(REG6,0x80)(hi)
0x06D52D03,	//0x06c2		VoC_loop_i(0x1,0x81)
0x42630A3A,	//0x06c4		VoC_multf32_rd(REG45,REG7,0x4263)
0x6085D8B0,	//0x06c6		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,DEFAULT)
0x3426D9D4,	//0x06c8		VoC_bgt16_rr(CII_smbPitchShift114,REG4,REG6)(lo)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
0xF8FD06D4,	//0x06ca		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_bgt16_rr(CII_smbPitchShift114,REG4,REG6)(hi)
0x2170072D,	//0x06cc		VoC_add16_rd(REG5,REG5,0x2170)
0x42630A00,	//0x06ce		VoC_multf32_rd(REG01,REG0,0x4263)
0x21710724,	//0x06d0		VoC_add16_rd(REG4,REG4,0x2171)
0xDC40DDAC,	//0x06d2		VoC_sw16_p(REG0,REG4,DEFAULT)	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
		//0x06d4		CII_smbPitchShift114
0xC1CFF021,	//0x06d4		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x06d5		VoC_endloop1
0x25721808,	//0x06d6		VoC_lw16i_set_inc(REG0,0x2572,0x2)
0x1D681809,	//0x06d8		VoC_lw16i_set_inc(REG1,0x1d68,0x2)
0x24721806,	//0x06da		VoC_lw16i_set_inc(REG2,0x2472,0x1)
0x426A1807,	//0x06dc		VoC_lw16i_set_inc(REG3,0x426a,0x1)
0xFFC07007,	//0x06de		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x07272D03,	//0x06e0		VoC_loop_i(0x1,0x81)
0xF6E658A5,	//0x06e2		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xC376F8CE,	//0x06e4		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xfffffff9,DEFAULT)
0xF6E57816,	//0x06e6		VoC_movreg16(REG5,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xC1AEF8D5,	//0x06e8		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffffa,DEFAULT)
0x1606819E,	//0x06ea		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_add16_rp(REG6,REG6,REG3,DEFAULT)
0x700500FF,	//0x06ec		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xDCB6F401,	//0x06ee		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x0A84DFC6,	//0x06f0		VoC_lw16i(REG4,0x80)(lo)	|	VoC_push16(REG6,DEFAULT)
0x32460080,	//0x06f2		VoC_bnltz16_r(CII_smbPitchShift115,REG6)(lo)	|	VoC_lw16i(REG4,0x80)(hi)
0xC37606F6,	//0x06f4		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_bnltz16_r(CII_smbPitchShift115,REG6)(hi)
		//0x06f6		CII_smbPitchShift115
0x06FA34B4,	//0x06f6		VoC_bngt16_rr(CII_smbPitchShift121,REG6,REG4)
0xC336F8FC,	//0x06f8		VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
		//0x06fa		CII_smbPitchShift121
0x191A0A85,	//0x06fa		VoC_lw16i(REG5,0x191a)
0xD9C14174,	//0x06fc		VoC_lw32inc_p(REG23,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG5,REG6,DEFAULT)
0xFBF15F41,	//0x06fe		VoC_shr32_ri(REG23,0xfffffffe,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x98E4F912,	//0x0700		VoC_multf32_rp(ACC0,REG3,REG4,DEFAULT)	|	VoC_shru16_ri(REG2,0x2,DEFAULT)
0xFBA498A5,	//0x0702		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_multf32_rp(ACC1,REG2,REG4,DEFAULT)
0xC92CFA15,	//0x0704		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x2,DEFAULT)
0xDF867A64,	//0x0706		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xE4057004,	//0x0708		VoC_lw16i_short(REG5,0x40,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDDCC4376,	//0x070a		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
0x3246F8F5,	//0x070c		VoC_bnltz16_r(CII_smbPitchShift116,REG6)(lo)	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
0xC3360710,	//0x070e		VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_bnltz16_r(CII_smbPitchShift116,REG6)(hi)
		//0x0710		CII_smbPitchShift116
0x071434B5,	//0x0710		VoC_bngt16_rr(CII_smbPitchShift117,REG6,REG5)
0xFFC043AE,	//0x0712		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
		//0x0714		CII_smbPitchShift117
0x00800A84,	//0x0714		VoC_lw16i(REG4,0x80)
0x071A34B4,	//0x0716		VoC_bngt16_rr(CII_smbPitchShift122,REG6,REG4)
0xFFC04376,	//0x0718		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x071a		CII_smbPitchShift122
0x191A0A85,	//0x071a		VoC_lw16i(REG5,0x191a)
0xFFC0C174,	//0x071c		VoC_NOP	|	VoC_add16_rr(REG4,REG5,REG6,DEFAULT)
0x98A598E4,	//0x071e		VoC_multf32_rp(ACC1,REG2,REG4,DEFAULT)	|	VoC_multf32_rp(ACC0,REG3,REG4,DEFAULT)
0xFA15FBA4,	//0x0720		VoC_shr32_ri(ACC1,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0x7A64C92C,	//0x0722		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x41D7E012,	//0x0724		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0xDDCCDF01,	//0x0726		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
		//0x0727		VoC_endloop1
0x1D681809,	//0x0728		VoC_lw16i_set_inc(REG1,0x1d68,0x2)
0x1D681808,	//0x072a		VoC_lw16i_set_inc(REG0,0x1d68,0x2)
0x07362CAD,	//0x072c		VoC_loop_i(0x1,0x56)
0x59CAD9C9,	//0x072e		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x59CBFA11,	//0x0730		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_shr32_ri(REG23,0x2,IN_PARALLEL)
0x5DC1FA12,	//0x0732		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,IN_PARALLEL)
0xDDC2FA13,	//0x0734		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0x2,IN_PARALLEL)
		//0x0736		VoC_endloop1
0x7F42DDC3,	//0x0736		VoC_lw32z(REG45,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x2DFDE011,	//0x0738		VoC_loop_i(0x1,0xfe)(lo)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0xDDC2073B,	//0x073a		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i(0x1,0xfe)(hi)
		//0x073b		VoC_endloop1
0x21681501,	//0x073c		VoC_sw16_d(REG1,0x2168)
0x07C62B80,	//0x073e		VoC_jal(CS_intsmbFft)
0x1D68180B,	//0x0740		VoC_lw16i_set_inc(REG3,0x1d68,0x2)
0x1D68180A,	//0x0742		VoC_lw16i_set_inc(REG2,0x1d68,0x2)
0x07542C05,	//0x0744		VoC_loop_i(0x1,0x2)
0x07532D00,	//0x0746		VoC_loop_i(0x0,0x80)
0x59D8D9DA,	//0x0748		VoC_lw32inc_p(REG01,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x59DCFBF2,	//0x074a		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffe,IN_PARALLEL)
0x59DDFBF0,	//0x074c		VoC_lw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffffe,IN_PARALLEL)
0x5DD2FBF4,	//0x074e		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,IN_PARALLEL)
0xDDD0FBF5,	//0x0750		VoC_sw32inc_p(REG01,REG2,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffffe,IN_PARALLEL)
0xDDD5DDD4,	//0x0752		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0753		VoC_endloop0
		//0x0754		VoC_endloop1
0x1808F019,	//0x0754		VoC_lw16i_set_inc(REG0,0x657e,0x2)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x1805657E,	//0x0756		VoC_lw16i_set_inc(REG1,0x191a,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x657e,0x2)(hi)
0x1812191A,	//0x0758		VoC_lw16i_set_inc(REG2,0x1d68,0x4)(lo)	|	VoC_lw16i_set_inc(REG1,0x191a,0x1)(hi)
0x0A861D68,	//0x075a		VoC_lw16i(REG6,0x199a)(lo)	|	VoC_lw16i_set_inc(REG2,0x1d68,0x4)(hi)
0x0A87199A,	//0x075c		VoC_lw16i(REG7,0x800)(lo)	|	VoC_lw16i(REG6,0x199a)(hi)
0x2DFF0800,	//0x075e		VoC_loop_i(0x1,0xff)(lo)	|	VoC_lw16i(REG7,0x800)(hi)
0xD8930771,	//0x0760		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i(0x1,0xff)(hi)
0xF81B59D2,	//0x0762		VoC_shr16_ri(REG3,0x3,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xFBF243DB,	//0x0764		VoC_shr32_ri(REG45,0xfffffffe,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG7,REG3,DEFAULT)
0xCCECF914,	//0x0766		VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xFBA4CCE5,	//0x0768		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_multf32_rr(ACC1,REG3,REG4,DEFAULT)
0xC92CFA15,	//0x076a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x2,DEFAULT)
0x9104FA44,	//0x076c		VoC_add32_rp(ACC0,ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x0771358E,	//0x076e		VoC_bne16_rr(CII_smbPitchShift123,REG1,REG6)
0xDDC4F7F1,	//0x0770		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
		//0x0771		CII_smbPitchShift123
		//0x0771		VoC_endloop1
0x59D2D893,	//0x0772		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x43DBF81B,	//0x0774		VoC_sub16_rr(REG3,REG7,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0x3,IN_PARALLEL)
0xF914FBF2,	//0x0776		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffe,IN_PARALLEL)
0xCCE5CCEC,	//0x0778		VoC_multf32_rr(ACC1,REG3,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)
0xFA15FBA4,	//0x077a		VoC_shr32_ri(ACC1,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xFA44C92C,	//0x077c		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x358E9104,	//0x077e		VoC_bne16_rr(CII_smbPitchShift123_lastone,REG1,REG6)(lo)	|	VoC_add32_rp(ACC0,ACC0,REG0,DEFAULT)
0xF7F10782,	//0x0780		VoC_lw16i_short(INC1,0xffffffff,DEFAULT)	|	VoC_bne16_rr(CII_smbPitchShift123_lastone,REG1,REG6)(hi)
		//0x0782		CII_smbPitchShift123_lastone
0x1808DDC4,	//0x0782		VoC_lw16i_set_inc(REG0,0x657e,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x1805657E,	//0x0784		VoC_lw16i_set_inc(REG1,0x63fc,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x657e,0x2)(hi)
0xD9C263FC,	//0x0786		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x63fc,0x1)(hi)
0x078C2C81,	//0x0788		VoC_loop_i(0x1,0x40)
0xD9C2FA52,	//0x078a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
		//0x078c		VoC_endloop1
0x1808DC94,	//0x078c		VoC_lw16i_set_inc(REG0,0x657e,0x2)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x0A87657E,	//0x078e		VoC_lw16i(REG7,0x80)(lo)	|	VoC_lw16i_set_inc(REG0,0x657e,0x2)(hi)
0x41C30080,	//0x0790		VoC_add16_rr(REG3,REG7,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x80)(hi)
0x2CC1FF45,	//0x0792		VoC_loop_i(0x1,0x60)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD9DA0798,	//0x0794		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i(0x1,0x60)(hi)
0xDDC2D9DC,	//0x0796		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x0798		VoC_endloop1
0x2C81DDC4,	//0x0798		VoC_loop_i(0x1,0x40)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC5079B,	//0x079a		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x40)(hi)
		//0x079b		VoC_endloop1
0x62FC1808,	//0x079c		VoC_lw16i_set_inc(REG0,0x62fc,0x2)
0x00400A87,	//0x079e		VoC_lw16i(REG7,0x40)
0xEE04C1C3,	//0x07a0		VoC_loop_i_short(0x30,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG0,DEFAULT)
0xD9DCD9DA,	//0x07a2		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xDDC4DDC2,	//0x07a4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x07a5		VoC_endloop0
0x180ADF02,	//0x07a6		VoC_lw16i_set_inc(REG2,0x62fc,0x2)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x180B62FC,	//0x07a8		VoC_lw16i_set_inc(REG3,0x63fc,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x62fc,0x2)(hi)
0x0A8663FC,	//0x07aa		VoC_lw16i(REG6,0xc0)(lo)	|	VoC_lw16i_set_inc(REG3,0x63fc,0x2)(hi)
0x40B200C0,	//0x07ac		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i(REG6,0xc0)(hi)
0xF027DF00,	//0x07ae		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
		//0x07af		CII_smbPitchShift103
0x2B00C13C,	//0x07b0		VoC_jump_lg(CII_smbPitchShift102)(lo)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xFFC005FE,	//0x07b2		VoC_NAD	|	VoC_jump_lg(CII_smbPitchShift102)(hi)
		//0x07b4		CII_smbPitchShift101
0x43042009,	//0x07b4		VoC_lw16d_set_inc(REG1,0x4304,0x2)
0x1C681808,	//0x07b6		VoC_lw16i_set_inc(REG0,0x1c68,0x2)
0x7FFD0AC2,	//0x07b8		VoC_lw16i(REG2,0xfffffffd)
0xFFC059C2,	//0x07ba		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x07C12CA0,	//0x07bc		VoC_loop_i(0x0,0x50)
0xFE157E14,	//0x07be		VoC_shr16_rr(REG5,REG2,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG2,DEFAULT)
0xDDCAD9C2,	//0x07c0		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x07c1		VoC_endloop0
0x1506DFA9,	//0x07c2		VoC_sw16_d(REG6,0x42eb)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE58042EB,	//0x07c4		VoC_return	|	VoC_sw16_d(REG6,0x42eb)(hi)
		//0x07c6		CS_intsmbFft
0xF4115FE9,	//0x07c6		VoC_lw16i_short(FORMAT32,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0002180A,	//0x07c8		VoC_lw16i_set_inc(REG2,0x2,0x2)
0x01FE180B,	//0x07ca		VoC_lw16i_set_inc(REG3,0x1fe,0x2)
0x1D680A87,	//0x07cc		VoC_lw16i(REG7,0x1d68)
		//0x07ce		CS_intsmbFft102
0x07EE349A,	//0x07ce		VoC_bngt16_rr(CS_intsmbFft101,REG3,REG2)
0xF040DF41,	//0x07d0		VoC_lw16i_short(REG0,0x2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x00001805,	//0x07d2		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xE044E907,	//0x07d4		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x3184E404,	//0x07d6		VoC_bez16_r(CS_intsmbFft103,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xDE0807DA,	//0x07d8		VoC_inc_p(REG1,DEFAULT)	|	VoC_bez16_r(CS_intsmbFft103,REG4)(hi)
		//0x07da		CS_intsmbFft103
0xF8F8F8F9,	//0x07da		VoC_shr16_ri(REG0,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
		//0x07db		VoC_endloop0
0x07EA348A,	//0x07dc		VoC_bngt16_rr(CS_intsmbFft104,REG1,REG2)
0xF8FA78F9,	//0x07de		VoC_shr16_ri(REG2,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xC1CBC1D2,	//0x07e0		VoC_add16_rr(REG3,REG7,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG7,REG2,DEFAULT)
0xD99FD996,	//0x07e2		VoC_lw32_p(RL7,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xDDD7DDDE,	//0x07e4		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0xD99FD996,	//0x07e6		VoC_lw32_p(RL7,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xDD97DD9E,	//0x07e8		VoC_sw32_p(RL7,REG2,DEFAULT)	|	VoC_sw32_p(RL6,REG3,DEFAULT)
		//0x07ea		CS_intsmbFft104
0xFFC0DF01,	//0x07ea		VoC_NOP	|	VoC_pop32(REG23,DEFAULT)
0xE5E1DE10,	//0x07ec		VoC_jump(CS_intsmbFft102)	|	VoC_inc_p(REG2,DEFAULT)
		//0x07ee		CS_intsmbFft101
0xFFC07045,	//0x07ee		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x08682C11,	//0x07f0		VoC_loop_i(0x1,0x8)
0xF8FD60A4,	//0x07f2		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x40000A82,	//0x07f4		VoC_lw16i(REG2,0x4000)
0xF6867003,	//0x07f6		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x1582F80E,	//0x07f8		VoC_sw32_d(REG45,0x216c)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x1808216C,	//0x07fa		VoC_lw16i_set_inc(REG0,0x80,0x2)(lo)	|	VoC_sw32_d(REG45,0x216c)(hi)
0xE9440080,	//0x07fc		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x80,0x2)(hi)
0x3186F80E,	//0x07fe		VoC_bez16_r(CS_intsmbFft105,REG6)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF8080802,	//0x0800		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_bez16_r(CS_intsmbFft105,REG6)(hi)
		//0x0801		VoC_endloop0
		//0x0802		CS_intsmbFft105
0x191A0A86,	//0x0802		VoC_lw16i(REG6,0x191a)
0x1581C181,	//0x0804		VoC_sw32_d(REG23,0x216a)(lo)	|	VoC_add16_rr(REG1,REG6,REG0,DEFAULT)
0xD812216A,	//0x0806		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_sw32_d(REG23,0x216a)(hi)
0x00401809,	//0x0808		VoC_lw16i_set_inc(REG1,0x40,0x2)
0xE0054241,	//0x080a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG0,DEFAULT)
0x080F3241,	//0x080c		VoC_bnltz16_r(CS_intsmbFft106,REG1)
0xC189C349,	//0x080e		VoC_add16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG1,DEFAULT)
		//0x080f		CS_intsmbFft106
0xD813F006,	//0x0810		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x21687203,	//0x0812		VoC_bnltz16_d(CS_intsmbFft107,0x2168)
0xFFC0C39B,	//0x0814		VoC_NOP	|	VoC_sub16_rr(REG3,REG6,REG3,DEFAULT)
		//0x0815		CS_intsmbFft107
0x216E1581,	//0x0816		VoC_sw32_d(REG23,0x216e)
		//0x0818		CS_intsmbFft111
0x086834A6,	//0x0818		VoC_bngt16_rr(CS_intsmbFft108,REG4,REG6)
0xDF4360C5,	//0x081a		VoC_push32(REG67,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF8FC78FE,	//0x081c		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xF5A141F0,	//0x081e		VoC_lw16i_short(FORMAT32,0xfffffff4,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG7,REG6,DEFAULT)
0xF4124021,	//0x0820		VoC_lw16i_short(FORMATX,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
		//0x0822		CS_intsmbFft110
0x02000A87,	//0x0822		VoC_lw16i(REG7,0x200)
0x085334BD,	//0x0824		VoC_bngt16_rr(CS_intsmbFft109,REG7,REG5)
0x5FC5D9C9,	//0x0826		VoC_push16(REG5,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x1406FBF1,	//0x0828		VoC_lw16_d(REG6,0x216a)(lo)	|	VoC_shr32_ri(REG23,0xfffffffe,IN_PARALLEL)
0x4CF5216A,	//0x082a		VoC_multf32_rr(ACC1,REG3,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x216a)(hi)
0x598AF912,	//0x082c		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_shru16_ri(REG2,0x2,IN_PARALLEL)
0x1407CE96,	//0x082e		VoC_lw16_d(REG7,0x216b)(lo)	|	VoC_macX_rr(REG2,REG6,IN_PARALLEL)
0xFBF2216B,	//0x0830		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG7,0x216b)(hi)
0xCF2F7914,	//0x0832		VoC_msu32_rr(REG5,REG7,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xCFA74CFC,	//0x0834		VoC_msuX_rr(REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG7,DEFAULT)
0xD9864E57,	//0x0836		VoC_lw32_p(RL6,REG0,IN_PARALLEL)	|	VoC_macX_rr(REG2,REG7,DEFAULT)
0xFA654E2E,	//0x0838		VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0xC9774E66,	//0x083a		VoC_add32_rr(RL7,ACC1,RL6,IN_PARALLEL)	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xCBAEF042,	//0x083c		VoC_sub32_rr(RL6,RL6,ACC1,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0xDDC77A64,	//0x083e		VoC_sw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xC2515987,	//0x0840		VoC_sub16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG0,DEFAULT)
0x1403C9E5,	//0x0842		VoC_lw16_d(REG3,0x216d)(lo)	|	VoC_add32_rr(ACC1,RL7,ACC0,DEFAULT)
0x5F85216D,	//0x0844		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16_d(REG3,0x216d)(hi)
0x415DE022,	//0x0846		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,IN_PARALLEL)
0x5D85F8FB,	//0x0848		VoC_sw32_p(ACC1,REG0,DEFAULT)	|	VoC_shr16_ri(REG3,0xffffffff,IN_PARALLEL)
0x5DCECBE7,	//0x084a		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_sub32_rr(RL7,RL7,ACC0,IN_PARALLEL)
0x5D8FC018,	//0x084c		VoC_sw32_p(RL7,REG1,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)
0x4210C059,	//0x084e		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0x2B00C251,	//0x0850		VoC_jump_lg(CS_intsmbFft110)(lo)	|	VoC_sub16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xF0590822,	//0x0852		VoC_lw16i_short(FORMAT32,0x2,DEFAULT)	|	VoC_jump_lg(CS_intsmbFft110)(hi)
		//0x0853		CS_intsmbFft109
0x216E1481,	//0x0854		VoC_lw32_d(REG23,0x216e)
0x216A1482,	//0x0856		VoC_lw32_d(REG45,0x216a)
0xCCE54CA4,	//0x0858		VoC_multf32_rr(ACC1,REG3,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG4,DEFAULT)
0xCE154E9D,	//0x085a		VoC_mac32_rr(REG2,REG5,IN_PARALLEL)	|	VoC_msu32_rr(REG3,REG5,DEFAULT)
0xDF037045,	//0x085c		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xFA657A64,	//0x085e		VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xC1AE6149,	//0x0860		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,ACC1_LO,DEFAULT)
0x216C1404,	//0x0862		VoC_lw16_d(REG4,0x216c)
0x216A1584,	//0x0864		VoC_sw32_d(ACC0,0x216a)
0x08182B00,	//0x0866		VoC_jump_lg(CS_intsmbFft111)
		//0x0868		CS_intsmbFft108
		//0x0868		VoC_endloop1
0x216D1405,	//0x0868		VoC_lw16_d(REG5,0x216d)
0xFFC0DFA9,	//0x086a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x086c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x086e		Coolsand_MorphVoiceReset
0x42616C26,	//0x086e		VoC_bez16_d(HELLO_LABEL_MAIN_RESET,0x4261)
0x1808FF44,	//0x0870		VoC_lw16i_set_inc(REG0,0x62fc,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x180962FC,	//0x0872		VoC_lw16i_set_inc(REG1,0x63fc,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x62fc,0x2)(hi)
0x180A63FC,	//0x0874		VoC_lw16i_set_inc(REG2,0x657e,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x63fc,0x2)(hi)
0x180B657E,	//0x0876		VoC_lw16i_set_inc(REG3,0x1d68,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x657e,0x2)(hi)
0x15091D68,	//0x0878		VoC_sw16_d(ACC0_HI,0x4261)(lo)	|	VoC_lw16i_set_inc(REG3,0x1d68,0x2)(hi)
0x2D004261,	//0x087a		VoC_loop_i(0x0,0x80)(lo)	|	VoC_sw16_d(ACC0_HI,0x4261)(hi)
0xDDC40884,	//0x087c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x80)(hi)
0xDDD4DDCC,	//0x087e		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDDDCDDD4,	//0x0880		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDDDCDDDC,	//0x0882		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0884		VoC_endloop0
0x1804DDDC,	//0x0884		VoC_lw16i_set_inc(REG0,0x64fc,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x2D0464FC,	//0x0886		VoC_loop_i(0x0,0x82)(lo)	|	VoC_lw16i_set_inc(REG0,0x64fc,0x1)(hi)
0xDC890889,	//0x0888		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x82)(hi)
		//0x0889		VoC_endloop0
0x426A1805,	//0x088a		VoC_lw16i_set_inc(REG1,0x426a,0x1)
0x088E2D02,	//0x088c		VoC_loop_i(0x0,0x81)
		//0x088e		VoC_endloop0
0x0A85DC99,	//0x088e		VoC_lw16i(REG5,0xc0)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFFC000C0,	//0x0890		VoC_NOP	|	VoC_lw16i(REG5,0xc0)(hi)
0x42EB1505,	//0x0892		VoC_sw16_d(REG5,0x42eb)
		//0x0894		HELLO_LABEL_MAIN_RESET
0xFFC0E580,	//0x0894		VoC_NAD	|	VoC_return
