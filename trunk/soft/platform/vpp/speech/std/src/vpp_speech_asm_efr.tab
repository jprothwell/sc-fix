		//0x1478		VoC_code_section_2
		//0x1478		CII_dtx_efr_dec_reset
0x449C1804,	//0x1478		VoC_lw16i_set_inc(REG0,0x449c,0x1)
0x24801805,	//0x147a		VoC_lw16i_set_inc(REG1,0x2480,0x1)
0x24761806,	//0x147c		VoC_lw16i_set_inc(REG2,0x2476,0x1)
0xFF456946,	//0x147e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0x1585D883,	//0x1480		VoC_sw32_d(ACC1,0x63e0)(lo)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xDC9363E0,	//0x1482		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw32_d(ACC1,0x63e0)(hi)
		//0x1484		VoC_endloop0
0xE580DCA3,	//0x1484		VoC_return	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
		//0x1486		CII_interpolate_CN_lsf
0x24801804,	//0x1486		VoC_lw16i_set_inc(REG0,0x2480,0x1)
0x45A20A84,	//0x1488		VoC_lw16i(REG4,0x45a2)
0x1C480724,	//0x148a		VoC_add16_rd(REG4,REG4,0x1c48)
0x24761805,	//0x148c		VoC_lw16i_set_inc(REG1,0x2476,0x1)
0x0B2ED845,	//0x148e		VoC_sub16_dr(REG6,0x380,REG5)(lo)	|	VoC_lw16_p(REG5,REG4,DEFAULT)
0x07360380,	//0x1490		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_sub16_dr(REG6,0x380,REG5)(hi)
0xE9470370,	//0x1492		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
0xD1309B4C,	//0x1494		VoC_mac32inc_rp(REG6,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG5,REG1,DEFAULT)
0x0924F032,	//0x1496		VoC_add32_rd(ACC0,ACC0,0x382)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xFFC00382,	//0x1498		VoC_NOP	|	VoC_add32_rd(ACC0,ACC0,0x382)(hi)
		//0x149a		VoC_endloop0
0xE580DCA9,	//0x149a		VoC_return	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
		//0x149c		CII_interpolate_CN_param
0x45A20A82,	//0x149c		VoC_lw16i(REG2,0x45a2)
0x1C480713,	//0x149e		VoC_add16_rd(REG3,REG2,0x1c48)
0xD834F022,	//0x14a0		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x63E10A23,	//0x14a2		VoC_multf32_rd(REG67,REG4,0x63e1)
0x03800B25,	//0x14a4		VoC_sub16_dr(REG5,0x380,REG4)
0x0A29C155,	//0x14a6		VoC_multf32_rd(REG23,REG5,0x63e0)(lo)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0xFFC063E0,	//0x14a8		VoC_NOP	|	VoC_multf32_rd(REG23,REG5,0x63e0)(hi)
0x0909C859,	//0x14aa		VoC_add32_rd(REG23,REG23,0x382)(lo)	|	VoC_add32_rr(REG23,REG23,REG67,DEFAULT)
0xE5800382,	//0x14ac		VoC_return	|	VoC_add32_rd(REG23,REG23,0x382)(hi)
		//0x14ae		CII_update_gain_code_history_rx
0x0A83F021,	//0x14ae		VoC_lw16i(REG3,0x1c4b)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0A821C4B,	//0x14b0		VoC_lw16i(REG2,0x248a)(lo)	|	VoC_lw16i(REG3,0x1c4b)(hi)
0x0099248A,	//0x14b2		VoC_add16_rp(REG1,REG2,REG3,DEFAULT)	|	VoC_lw16i(REG2,0x248a)(hi)
0x441A805A,	//0x14b4		VoC_bne16_rd(UP_RX001,REG2,0x4690)(lo)	|	VoC_add16_rp(REG2,REG1,REG3,IN_PARALLEL)
0xF0024690,	//0x14b6		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_bne16_rd(UP_RX001,REG2,0x4690)(hi)
		//0x14b8		UP_RX001
0xDC32DC15,	//0x14b8		VoC_sw16_p(REG2,REG3,DEFAULT)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0xF043E580,	//0x14ba		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_return
		//0x14bb		CII_rx_dtx
0x4429F041,	//0x14bc		VoC_bne16_rd(RX_DTX101,REG1,0x408c)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x6E03408C,	//0x14be		VoC_bnez16_d(RX_DTX101,0x408a)(lo)	|	VoC_bne16_rd(RX_DTX101,REG1,0x408c)(hi)
0xF023408A,	//0x14c0		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bnez16_d(RX_DTX101,0x408a)(hi)
		//0x14c2		RX_DTX101
0x408C6E06,	//0x14c2		VoC_bnez16_d(RX_DTX107,0x408c)
0x6E03F083,	//0x14c4		VoC_bnez16_d(RX_DTX107,0x408a)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0xF063408A,	//0x14c6		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_bnez16_d(RX_DTX107,0x408a)(hi)
		//0x14c8		RX_DTX107
0x1404F027,	//0x14c8		VoC_lw16_d(REG4,0x1c46)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE0801C46,	//0x14ca		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x1c46)(hi)
0x00011600,	//0x14cc		VoC_and16_ri(REG0,0x1)
0x03704423,	//0x14ce		VoC_bne16_rd(RX_DTX108,REG3,0x370)
0xFFC07087,	//0x14d0		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
		//0x14d2		RX_DTX108
0x03304423,	//0x14d2		VoC_bne16_rd(RX_DTX109,REG3,0x330)
0x00240A87,	//0x14d4		VoC_lw16i(REG7,0x24)
		//0x14d6		RX_DTX109
0x03324423,	//0x14d6		VoC_bne16_rd(RX_DTX110,REG3,0x332)
0xFFC07027,	//0x14d8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x14da		RX_DTX110
0x14F031C0,	//0x14da		VoC_bnez16_r(RX_DTX130,REG0)
0x442BF107,	//0x14dc		VoC_bne16_rd(RX_DTX122,REG3,0x330)(lo)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x0A870330,	//0x14de		VoC_lw16i(REG7,0x28)(lo)	|	VoC_bne16_rd(RX_DTX122,REG3,0x330)(hi)
0xFFC00028,	//0x14e0		VoC_NAD	|	VoC_lw16i(REG7,0x28)(hi)
		//0x14e2		RX_DTX122
0x03324423,	//0x14e2		VoC_bne16_rd(RX_DTX123,REG3,0x332)
0x02000A87,	//0x14e4		VoC_lw16i(REG7,0x200)
		//0x14e6		RX_DTX123
0x03314493,	//0x14e6		VoC_bne16_rd(RX_DTX130,REG3,0x331)
0x04010A87,	//0x14e8		VoC_lw16i(REG7,0x401)
0x00801604,	//0x14ea		VoC_and16_ri(REG4,0x80)
0x14F03184,	//0x14ec		VoC_bez16_r(RX_DTX130,REG4)
0x05010A87,	//0x14ee		VoC_lw16i(REG7,0x501)
		//0x14f0		RX_DTX130
0x1C471404,	//0x14f0		VoC_lw16_d(REG4,0x1c47)
0x1C481402,	//0x14f2		VoC_lw16_d(REG2,0x1c48)
0x1600E0E0,	//0x14f4		VoC_and16_ri(REG0,0x1)(lo)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x31800001,	//0x14f6		VoC_bez16_r(RX_DTX140,REG0)(lo)	|	VoC_and16_ri(REG0,0x1)(hi)
0x700414FD,	//0x14f8		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bez16_r(RX_DTX140,REG0)(hi)
0x2B00E172,	//0x14fa		VoC_jump_lg(RX_DTX160)(lo)	|	VoC_lw16i_short(REG2,0x17,IN_PARALLEL)
0xE0E0152C,	//0x14fc		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jump_lg(RX_DTX160)(hi)
		//0x14fd		RX_DTX140
0x00041600,	//0x14fe		VoC_and16_ri(REG0,0x4)
0x15043180,	//0x1500		VoC_bez16_r(RX_DTX141,REG0)
0xE1727004,	//0x1502		VoC_lw16i_short(REG2,0x17,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x1504		RX_DTX141
0x1600E0E0,	//0x1504		VoC_and16_ri(REG0,0x8)(lo)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x31800008,	//0x1506		VoC_bez16_r(RX_DTX150,REG0)(lo)	|	VoC_and16_ri(REG0,0x8)(hi)
0xF0041515,	//0x1508		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bez16_r(RX_DTX150,REG0)(hi)
0x03704423,	//0x150a		VoC_bne16_rd(RX_DTX142,REG3,0x370)
0xE5C8F002,	//0x150c		VoC_jump(RX_DTX150)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x150e		RX_DTX142
0x0330443B,	//0x150e		VoC_bne16_rd(RX_DTX150,REG3,0x330)
0x348AF2E1,	//0x1510		VoC_bngt16_rr(RX_DTX150,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x17,DEFAULT)
0x07121515,	//0x1512		VoC_add16_rd(REG2,REG2,0x370)(lo)	|	VoC_bngt16_rr(RX_DTX150,REG1,REG2)(hi)
0xE0E00370,	//0x1514		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x370)(hi)
		//0x1515		RX_DTX150
0x02001600,	//0x1516		VoC_and16_ri(REG0,0x200)
0x152C3180,	//0x1518		VoC_bez16_r(RX_DTX160,REG0)
0x348AF2E1,	//0x151a		VoC_bngt16_rr(RX_DTX151,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x17,DEFAULT)
0x0712151F,	//0x151c		VoC_add16_rd(REG2,REG2,0x370)(lo)	|	VoC_bngt16_rr(RX_DTX151,REG1,REG2)(hi)
0xF0210370,	//0x151e		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x370)(hi)
		//0x151f		RX_DTX151
0x408D4431,	//0x1520		VoC_bne16_rd(RX_DTX152,REG1,0x408d)
0x00101687,	//0x1522		VoC_or16_ri(REG7,0x10)
0xE5C3C10C,	//0x1524		VoC_jump(RX_DTX153)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
		//0x1526		RX_DTX152
0x00401687,	//0x1526		VoC_or16_ri(REG7,0x40)
		//0x1528		RX_DTX153
0x152C34A1,	//0x1528		VoC_bngt16_rr(RX_DTX160,REG4,REG1)
0x00801687,	//0x152a		VoC_or16_ri(REG7,0x80)
		//0x152c		RX_DTX160
0x1C471504,	//0x152c		VoC_sw16_d(REG4,0x1c47)
0x1C481502,	//0x152e		VoC_sw16_d(REG2,0x1c48)
0x0712F022,	//0x1530		VoC_add16_rd(REG2,REG2,0x1c49)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x14041C49,	//0x1532		VoC_lw16_d(REG4,0x1c4a)(lo)	|	VoC_add16_rd(REG2,REG2,0x1c49)(hi)
0xE0E11C4A,	//0x1534		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_lw16_d(REG4,0x1c4a)(hi)
0x00011601,	//0x1536		VoC_and16_ri(REG1,0x1)
0x153C3181,	//0x1538		VoC_bez16_r(RX_DTX161,REG1)
0xE5D3F0E4,	//0x153a		VoC_jump(RX_DTX170)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
		//0x153c		RX_DTX161
0x033E3CA2,	//0x153c		VoC_bngt16_rd(RX_DTX162,REG2,0x33e)
0x00021687,	//0x153e		VoC_or16_ri(REG7,0x2)
0x03861480,	//0x1540		VoC_lw32_d(REG01,0x386)
0xE0047002,	//0x1542		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x63DC1580,	//0x1544		VoC_sw32_d(REG01,0x63dc)
0xFFC065C8,	//0x1546		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RX_DTX170)
		//0x1548		RX_DTX162
0x154C31C4,	//0x1548		VoC_bnez16_r(RX_DTX163,REG4)
0xE5C3F002,	//0x154a		VoC_jump(RX_DTX170)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x154c		RX_DTX163
0x037007A4,	//0x154c		VoC_sub16_rd(REG4,REG4,0x370)
		//0x154e		RX_DTX170
0x1C491502,	//0x154e		VoC_sw16_d(REG2,0x1c49)
0x1C4A1504,	//0x1550		VoC_sw16_d(REG4,0x1c4a)
0x408A1402,	//0x1552		VoC_lw16_d(REG2,0x408a)
0x1C461507,	//0x1554		VoC_sw16_d(REG7,0x1c46)
0x25621502,	//0x1556		VoC_sw16_d(REG2,0x2562)
0xDF43E580,	//0x1558		VoC_push32(REG67,DEFAULT)	|	VoC_return
		//0x1559		CII_reset_rx_dtx
0xDFC1DFC2,	//0x155a		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x180AFF43,	//0x155c		VoC_lw16i_set_inc(REG2,0x248a,0x2)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0xE9C1248A,	//0x155e		VoC_loop_i_short(0xe,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x248a,0x2)(hi)
		//0x1560		VoC_endloop0
0x1507DDD3,	//0x1560		VoC_sw16_d(REG7,0x1c47)(lo)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0x0A861C47,	//0x1562		VoC_lw16i(REG6,0x7fff)(lo)	|	VoC_sw16_d(REG7,0x1c47)(hi)
0x15077FFF,	//0x1564		VoC_sw16_d(REG7,0x1c4b)(lo)	|	VoC_lw16i(REG6,0x7fff)(hi)
0xF0E71C4B,	//0x1566		VoC_lw16i_short(REG7,0x7,DEFAULT)	|	VoC_sw16_d(REG7,0x1c4b)(hi)
0x1C491506,	//0x1568		VoC_sw16_d(REG6,0x1c49)
0x1507F006,	//0x156a		VoC_sw16_d(REG7,0x1c4a)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x14831C4A,	//0x156c		VoC_lw32_d(REG67,0x386)(lo)	|	VoC_sw16_d(REG7,0x1c4a)(hi)
0x15060386,	//0x156e		VoC_sw16_d(REG6,0x1c46)(lo)	|	VoC_lw32_d(REG67,0x386)(hi)
0xF2E61C46,	//0x1570		VoC_lw16i_short(REG6,0x17,DEFAULT)	|	VoC_sw16_d(REG6,0x1c46)(hi)
0x63DC1583,	//0x1572		VoC_sw32_d(REG67,0x63dc)
0x1C481506,	//0x1574		VoC_sw16_d(REG6,0x1c48)
0x449C1806,	//0x1576		VoC_lw16i_set_inc(REG2,0x449c,0x1)
0x23D61805,	//0x1578		VoC_lw16i_set_inc(REG1,0x23d6,0x1)
0x15822C0F,	//0x157a		VoC_loop_i(0x1,0x7)
0xD8A66943,	//0x157c		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC96D8A6,	//0x157e		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
		//0x157f		VoC_endloop0
0x449C0A82,	//0x1580		VoC_lw16i(REG2,0x449c)
		//0x1582		VoC_endloop1
0x5F81FFC0,	//0x1582		VoC_pop16(REG1,DEFAULT)	|	VoC_NOP
0xDF82DF03,	//0x1584		VoC_pop16(REG2,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0xDFE9E580,	//0x1586		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1587		CII_efr_dtx_func1
0x2802F042,	//0x1588		VoC_and16_rd(REG2,0x1c46)(lo)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x31821C46,	//0x158a		VoC_bez16_r(D_PLSF100,REG2)(lo)	|	VoC_and16_rd(REG2,0x1c46)(hi)
0x18281594,	//0x158c		VoC_lw16i_set_inc(REG0,0x23d6,0xa)(lo)	|	VoC_bez16_r(D_PLSF100,REG2)(hi)
0x180523D6,	//0x158e		VoC_lw16i_set_inc(REG1,0x23cc,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x23d6,0xa)(hi)
0xFFC023CC,	//0x1590		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x23cc,0x1)(hi)
0x1ABE2B80,	//0x1592		VoC_jal(CII_update_lsf_p_CN)
		//0x1594		D_PLSF100
0x1C461401,	//0x1594		VoC_lw16_d(REG1,0x1c46)
0x1602E022,	//0x1596		VoC_and16_ri(REG2,0x40)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x31C20040,	//0x1598		VoC_bnez16_r(D_PLSF1001_1,REG2)(lo)	|	VoC_and16_ri(REG2,0x40)(hi)
0xE02315A6,	//0x159a		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_bnez16_r(D_PLSF1001_1,REG2)(hi)
0x00201603,	//0x159c		VoC_and16_ri(REG3,0x20)
0x15A631C3,	//0x159e		VoC_bnez16_r(D_PLSF1001_1,REG3)
0x1603E023,	//0x15a0		VoC_and16_ri(REG3,0x10)(lo)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x31830010,	//0x15a2		VoC_bez16_r(amr_dec_122_EFR10,REG3)(lo)	|	VoC_and16_ri(REG3,0x10)(hi)
0xFFC015CE,	//0x15a4		VoC_NAD	|	VoC_bez16_r(amr_dec_122_EFR10,REG3)(hi)
		//0x15a6		D_PLSF1001_1
0x15AD3182,	//0x15a6		VoC_bez16_r(D_PLSF1001,REG2)
0x263E0A82,	//0x15a8		VoC_lw16i(REG2,0x263e)
0x14862B80,	//0x15aa		VoC_jal(CII_interpolate_CN_lsf)
0xFF46E5D2,	//0x15ac		VoC_lw32z(RL6,DEFAULT)	|	VoC_jump(D_PLSF1002)
		//0x15ad		D_PLSF1001
0x24801808,	//0x15ae		VoC_lw16i_set_inc(REG0,0x2480,0x2)
0x24761809,	//0x15b0		VoC_lw16i_set_inc(REG1,0x2476,0x2)
0x263E180A,	//0x15b2		VoC_lw16i_set_inc(REG2,0x263e,0x2)
0xF00B5633,	//0x15b4		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x2,DEFAULT)
0x0337071B,	//0x15b6		VoC_add16_rd(REG3,REG3,0x337)
0xD9CBE8A4,	//0x15b8		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDC3DDDE,	//0x15ba		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
		//0x15bc		VoC_endloop0
0xFFC05DD3,	//0x15bc		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x15be		D_PLSF1002
0x263E180A,	//0x15be		VoC_lw16i_set_inc(REG2,0x263e,0x2)
0xF00B5633,	//0x15c0		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x2,DEFAULT)
0xD9D368A3,	//0x15c2		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDDBD9D3,	//0x15c4		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x15c5		VoC_endloop0
0x263E1804,	//0x15c6		VoC_lw16i_set_inc(REG0,0x263e,0x1)
0x24A61805,	//0x15c8		VoC_lw16i_set_inc(REG1,0x24a6,0x1)
0x08472B80,	//0x15ca		VoC_jal(CII_Lsf_lsp)
0xE5C2F006,	//0x15cc		VoC_jump(amr_dec_122_EFR11)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x15ce		amr_dec_122_EFR10
0xDFA9F026,	//0x15ce		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x15cf		amr_dec_122_EFR11
0xD631D620,	//0x15d0		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xF024E580,	//0x15d2		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_return
		//0x15d3		CII_efr_dtx_func2
0x1C462804,	//0x15d4		VoC_and16_rd(REG4,0x1c46)
0x15E431C4,	//0x15d6		VoC_bnez16_r(Dplsf5_LEnd_EFR10,REG4)
0x0718F030,	//0x15d8		VoC_add16_rd(REG0,REG3,0x337)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x18060337,	//0x15da		VoC_lw16i_set_inc(REG2,0x23cc,0x1)(lo)	|	VoC_add16_rd(REG0,REG3,0x337)(hi)
0xF00423CC,	//0x15dc		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x23cc,0x1)(hi)
0xD8A7E945,	//0x15de		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC9481C7,	//0x15e0		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG0,DEFAULT)
0xDCB7DC87,	//0x15e2		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x15e3		VoC_endloop0
		//0x15e4		Dplsf5_LEnd_EFR10
0xDFE9E580,	//0x15e4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x15e5		CII_efr_dtx_func3
0x1C461406,	//0x15e6		VoC_lw16_d(REG6,0x1c46)
0xE432F082,	//0x15e8		VoC_and16_rr(REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x24761809,	//0x15ea		VoC_lw16i_set_inc(REG1,0x2476,0x2)
0x263E1808,	//0x15ec		VoC_lw16i_set_inc(REG0,0x263e,0x2)
0x15F23182,	//0x15ee		VoC_bez16_r(D_PLSF200,REG2)
0x06012B80,	//0x15f0		VoC_jal(CII_Copy_M)
		//0x15f2		D_PLSF200
0xE432F102,	//0x15f2		VoC_and16_rr(REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0x15FD3182,	//0x15f4		VoC_bez16_r(D_PLSF201,REG2)
0x2480180A,	//0x15f6		VoC_lw16i_set_inc(REG2,0x2480,0x2)
0xD98AE8A4,	//0x15f8		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDD2D9C7,	//0x15fa		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
		//0x15fc		VoC_endloop0
0xF022DDCF,	//0x15fc		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x15fd		D_PLSF201
0x3182E432,	//0x15fe		VoC_bez16_r(D_PLSF202,REG2)(lo)	|	VoC_and16_rr(REG2,REG6,DEFAULT)
0x1F991618,	//0x1600		VoC_lw16i_set_inc(REG1,0x263e,0xfffffff6)(lo)	|	VoC_bez16_r(D_PLSF202,REG2)(hi)
0x1F98263E,	//0x1602		VoC_lw16i_set_inc(REG0,0x2634,0xfffffff6)(lo)	|	VoC_lw16i_set_inc(REG1,0x263e,0xfffffff6)(hi)
0x6C052634,	//0x1604		VoC_bez16_d(D_PLSF2011,0x408a)(lo)	|	VoC_lw16i_set_inc(REG0,0x2634,0xfffffff6)(hi)
0x1F98408A,	//0x1606		VoC_lw16i_set_inc(REG0,0x2476,0xfffffff6)(lo)	|	VoC_bez16_d(D_PLSF2011,0x408a)(hi)
0xE0012476,	//0x1608		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2476,0xfffffff6)(hi)
		//0x160a		D_PLSF2011
0x0A80FF06,	//0x160a		VoC_lw16i(REG0,0x23d6)(lo)	|	VoC_movreg32(RL6,REG01,DEFAULT)
0xFFC023D6,	//0x160c		VoC_NAD	|	VoC_lw16i(REG0,0x23d6)(hi)
0x1A9D2B80,	//0x160e		VoC_jal(CII_update_lsf_history)
0x24801809,	//0x1610		VoC_lw16i_set_inc(REG1,0x2480,0x2)
0x263E1808,	//0x1612		VoC_lw16i_set_inc(REG0,0x263e,0x2)
0x06012B80,	//0x1614		VoC_jal(CII_Copy_M)
0xFFC065C6,	//0x1616		VoC_NAD(IN_PARALLEL)	|	VoC_jump(D_PLSF203)
		//0x1618		D_PLSF202
0x263E0A82,	//0x1618		VoC_lw16i(REG2,0x263e)
0x14862B80,	//0x161a		VoC_jal(CII_interpolate_CN_lsf)
		//0x161c		D_PLSF203
0xF033DFA9,	//0x161c		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF027E580,	//0x161e		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_return
		//0x161f		CII_efr_dtx_func4
0x1C462807,	//0x1620		VoC_and16_rd(REG7,0x1c46)
0x163C31C7,	//0x1622		VoC_bnez16_r(CII_Int_lpc_1and3_dec_EFR10,REG7)
0xF6A16060,	//0x1624		VoC_movreg16(REG1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0xDFE9F051,	//0x1626		VoC_push16(RA,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x080E2B80,	//0x1628		VoC_jal(CII_Lsp_Az)
0x5909DFA9,	//0x162a		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x40E0E0B4,	//0x162c		VoC_add16_rr(REG0,REG3,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0xb,IN_PARALLEL)
0x4021F004,	//0x162e		VoC_add16_rr(REG1,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x4062F005,	//0x1630		VoC_add16_rr(REG2,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xD8B7F006,	//0x1632		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0xDC87E964,	//0x1634		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0xD8B7DC97,	//0x1636		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x1638		VoC_endloop0
0x7050DCA7,	//0x1638		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0xF007F009,	//0x163a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
		//0x163c		CII_Int_lpc_1and3_dec_EFR10
0xDFE9E580,	//0x163c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x163d		CII_efr_dtx_func5
0x2807F047,	//0x163e		VoC_and16_rd(REG7,0x1c46)(lo)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x31871C46,	//0x1640		VoC_bez16_r(D_GAIN200,REG7)(lo)	|	VoC_and16_rd(REG7,0x1c46)(hi)
0xD627164C,	//0x1642		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_bez16_r(D_GAIN200,REG7)(hi)
0x164C31C7,	//0x1644		VoC_bnez16_r(D_GAIN200,REG7)
0x248A1808,	//0x1646		VoC_lw16i_set_inc(REG0,0x248a,0x2)
0x1AD02B80,	//0x1648		VoC_jal(CII_update_gcode0_CN)
0x63DE1505,	//0x164a		VoC_sw16_d(REG5,0x63de)
		//0x164c		D_GAIN200
0x1C461407,	//0x164c		VoC_lw16_d(REG7,0x1c46)
0x1601E0E1,	//0x164e		VoC_and16_ri(REG1,0x40)(lo)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0x31C10040,	//0x1650		VoC_bnez16_r(D_GAIN202,REG1)(lo)	|	VoC_and16_ri(REG1,0x40)(hi)
0xE0E2165E,	//0x1652		VoC_movreg16(REG2,REG7,DEFAULT)	|	VoC_bnez16_r(D_GAIN202,REG1)(hi)
0x00201602,	//0x1654		VoC_and16_ri(REG2,0x20)
0x165E31C2,	//0x1656		VoC_bnez16_r(D_GAIN202,REG2)
0x1603E0E3,	//0x1658		VoC_and16_ri(REG3,0x10)(lo)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0xF0200010,	//0x165a		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG3,0x10)(hi)
0x16913183,	//0x165c		VoC_bez16_r(gc_pred_M122_dec_EFR10,REG3)
		//0x165e		D_GAIN202
0x16683181,	//0x165e		VoC_bez16_r(D_GAIN203,REG1)
0x234D1403,	//0x1660		VoC_lw16_d(REG3,0x234d)
0x31C1D621,	//0x1662		VoC_bnez16_r(D_GAIN210,REG1)(lo)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x2B801672,	//0x1664		VoC_jal(CII_interpolate_CN_param)(lo)	|	VoC_bnez16_r(D_GAIN210,REG1)(hi)
0xE5CB149C,	//0x1666		VoC_jump(D_GAIN210)	|	VoC_jal(CII_interpolate_CN_param)(hi)
		//0x1668		D_GAIN203
0x63E11403,	//0x1668		VoC_lw16_d(REG3,0x63e1)
0x23521805,	//0x166a		VoC_lw16i_set_inc(REG1,0x2352,0x1)
0x63E01503,	//0x166c		VoC_sw16_d(REG3,0x63e0)
0x76B30AC2,	//0x166e		VoC_lw16i(REG2,0xfffff6b3)
0xDC92E881,	//0x1670		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x1671		VoC_endloop0
		//0x1672		D_GAIN210
0x1C461401,	//0x1672		VoC_lw16_d(REG1,0x1c46)
0x00801601,	//0x1674		VoC_and16_ri(REG1,0x80)
0x63E11404,	//0x1676		VoC_lw16_d(REG4,0x63e1)
0x16803181,	//0x1678		VoC_bez16_r(D_GAIN212,REG1)
0x75690A82,	//0x167a		VoC_lw16i(REG2,0x7569)
0x63DF0894,	//0x167c		VoC_multf16_rd(REG4,REG2,0x63df)
0xE083FFC0,	//0x167e		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_NOP
		//0x1680		D_GAIN212
0x63DF1504,	//0x1680		VoC_sw16_d(REG4,0x63df)
0x234C1503,	//0x1682		VoC_sw16_d(REG3,0x234c)
0x254F1503,	//0x1684		VoC_sw16_d(REG3,0x254f)
0x23461805,	//0x1686		VoC_lw16i_set_inc(REG1,0x2346,0x1)
0x23471806,	//0x1688		VoC_lw16i_set_inc(REG2,0x2347,0x1)
0xD8A7E884,	//0x168a		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x234D1503,	//0x168c		VoC_sw16_d(REG3,0x234d)
		//0x168e		VoC_endloop0
0xDC13DC97,	//0x168e		VoC_sw16_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xDFA9F000,	//0x1690		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x1691		gc_pred_M122_dec_EFR10
0xE580FFC0,	//0x1692		VoC_return	|	VoC_NOP
		//0x1694		CII_efr_dtx_func6
0x2807F027,	//0x1694		VoC_and16_rd(REG7,0x1c46)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x31C71C46,	//0x1696		VoC_bnez16_r(d_gain_code_EFR10,REG7)(lo)	|	VoC_and16_rd(REG7,0x1c46)(hi)
0xF08116D7,	//0x1698		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_bnez16_r(d_gain_code_EFR10,REG7)(hi)
0x0836F066,	//0x169a		VoC_mult16_rd(REG6,REG6,0x254c)(lo)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0x0A87254C,	//0x169c		VoC_lw16i(REG7,0x538)(lo)	|	VoC_mult16_rd(REG6,REG6,0x254c)(hi)
0xC1F60538,	//0x169e		VoC_add16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_lw16i(REG7,0x538)(hi)
0x1C462801,	//0x16a0		VoC_and16_rd(REG1,0x1c46)
0x3181D86C,	//0x16a2		VoC_bez16_r(D_GAIN510,REG1)(lo)	|	VoC_lw16_p(RL6_LO,REG6,DEFAULT)
0xD63116B8,	//0x16a4		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_bez16_r(D_GAIN510,REG1)(hi)
0x16B831C1,	//0x16a6		VoC_bnez16_r(D_GAIN510,REG1)
0x08B6E186,	//0x16a8		VoC_multf16_rd(REG6,REG6,0x63de)(lo)	|	VoC_movreg16(REG6,RL6_LO,DEFAULT)
0x180563DE,	//0x16aa		VoC_lw16i_set_inc(REG1,0x2352,0x1)(lo)	|	VoC_multf16_rd(REG6,REG6,0x63de)(hi)
0x15062352,	//0x16ac		VoC_sw16_d(REG6,0x63e1)(lo)	|	VoC_lw16i_set_inc(REG1,0x2352,0x1)(hi)
0xE18663E1,	//0x16ae		VoC_movreg16(REG6,RL6_LO,DEFAULT)	|	VoC_sw16_d(REG6,0x63e1)(hi)
0x63DE08B6,	//0x16b0		VoC_multf16_rd(REG6,REG6,0x63de)
0x76B30AC7,	//0x16b2		VoC_lw16i(REG7,0xfffff6b3)
0xDC97E881,	//0x16b4		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x16b5		VoC_endloop0
0x63E11506,	//0x16b6		VoC_sw16_d(REG6,0x63e1)
		//0x16b8		D_GAIN510
0x1C461401,	//0x16b8		VoC_lw16_d(REG1,0x1c46)
0x03352801,	//0x16ba		VoC_and16_rd(REG1,0x335)
0x16CA3181,	//0x16bc		VoC_bez16_r(D_GAIN520,REG1)
0xE183D631,	//0x16be		VoC_movreg16(REG3,RL6_LO,DEFAULT)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x63DE089B,	//0x16c0		VoC_multf16_rd(REG3,REG3,0x63de)
0x16CA31C1,	//0x16c2		VoC_bnez16_r(D_GAIN520,REG1)
0x63E11404,	//0x16c4		VoC_lw16_d(REG4,0x63e1)
0x63E11503,	//0x16c6		VoC_sw16_d(REG3,0x63e1)
0x63E01504,	//0x16c8		VoC_sw16_d(REG4,0x63e0)
		//0x16ca		D_GAIN520
0x234D1403,	//0x16ca		VoC_lw16_d(REG3,0x234d)
0x31C7D637,	//0x16cc		VoC_bnez16_r(D_GAIN522,REG7)(lo)	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xDFE916D4,	//0x16ce		VoC_push16(RA,DEFAULT)	|	VoC_bnez16_r(D_GAIN522,REG7)(hi)
0x149C2B80,	//0x16d0		VoC_jal(CII_interpolate_CN_param)
0xFFC05FA9,	//0x16d2		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
		//0x16d4		D_GAIN522
0x254F1503,	//0x16d4		VoC_sw16_d(REG3,0x254f)
0xE580F007,	//0x16d6		VoC_return	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x16d7		d_gain_code_EFR10
		//0x16d8		CII_efr_dtx_func7
0x1405DFE9,	//0x16d8		VoC_lw16_d(REG5,0x254f)(lo)	|	VoC_push16(RA,DEFAULT)
0x6C07254F,	//0x16da		VoC_bez16_d(D_GAIN403,0x22be)(lo)	|	VoC_lw16_d(REG5,0x254f)(hi)
0x3C2D22BE,	//0x16dc		VoC_bngt16_rd(D_GAIN403,REG5,0x234d)(lo)	|	VoC_bez16_d(D_GAIN403,0x22be)(hi)
0x1405234D,	//0x16de		VoC_lw16_d(REG5,0x234d)(lo)	|	VoC_bngt16_rd(D_GAIN403,REG5,0x234d)(hi)
0xFFC0234D,	//0x16e0		VoC_NAD	|	VoC_lw16_d(REG5,0x234d)(hi)
		//0x16e2		D_GAIN403
0x14AE2B80,	//0x16e2		VoC_jal(CII_update_gain_code_history_rx)
0x4421D641,	//0x16e4		VoC_bne16_rd(d_gain_code_end_EFR1,REG1,0x344)(lo)	|	VoC_lw16_sd(REG1,0x3,DEFAULT)
0x15050344,	//0x16e6		VoC_sw16_d(REG5,0x63e0)(lo)	|	VoC_bne16_rd(d_gain_code_end_EFR1,REG1,0x344)(hi)
0xDFA963E0,	//0x16e8		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG5,0x63e0)(hi)
		//0x16e9		d_gain_code_end_EFR1
0x254F1505,	//0x16ea		VoC_sw16_d(REG5,0x254f)
0xDFE9E580,	//0x16ec		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x16ed		CII_efr_dtx_func8
0x63E11405,	//0x16ee		VoC_lw16_d(REG5,0x63e1)
0x16F431C5,	//0x16f0		VoC_bnez16_r(D_GAIN304,REG5)
0x234D1405,	//0x16f2		VoC_lw16_d(REG5,0x234d)
		//0x16f4		D_GAIN304
0x14AE2B80,	//0x16f4		VoC_jal(CII_update_gain_code_history_rx)
0xD645DFA9,	//0x16f6		VoC_lw16_sd(REG5,0x3,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x254F1403,	//0x16f8		VoC_lw16_d(REG3,0x254f)
0x03444425,	//0x16fa		VoC_bne16_rd(D_GAIN306,REG5,0x344)
0x63E01503,	//0x16fc		VoC_sw16_d(REG3,0x63e0)
		//0x16fe		D_GAIN306
0xFFC06580,	//0x16fe		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1700		CII_efr_dtx_func9
0x1C461404,	//0x1700		VoC_lw16_d(REG4,0x1c46)
0x1604E085,	//0x1702		VoC_and16_ri(REG4,0x400)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x31840400,	//0x1704		VoC_bez16_r(Dec_amr_L112_EFR,REG4)(lo)	|	VoC_and16_ri(REG4,0x400)(hi)
0x1605170F,	//0x1706		VoC_and16_ri(REG5,0x100)(lo)	|	VoC_bez16_r(Dec_amr_L112_EFR,REG4)(hi)
0x31850100,	//0x1708		VoC_bez16_r(Dec_amr_L10_EFR,REG5)(lo)	|	VoC_and16_ri(REG5,0x100)(hi)
0xF025170C,	//0x170a		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bez16_r(Dec_amr_L10_EFR,REG5)(hi)
		//0x170c		Dec_amr_L10_EFR
0x1505F0A3,	//0x170c		VoC_sw16_d(REG5,0x22be)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0xE58022BE,	//0x170e		VoC_return	|	VoC_sw16_d(REG5,0x22be)(hi)
		//0x170f		Dec_amr_L112_EFR
		//0x1710		CII_energy_computation
0x00200A81,	//0x1710		VoC_lw16i(REG1,0x20)
0x1C8C078B,	//0x1712		VoC_sub16_rd(REG3,REG1,0x1c8c)
0x27261402,	//0x1714		VoC_lw16_d(REG2,0x2726)
0x7FF81602,	//0x1716		VoC_and16_ri(REG2,0x7ff8)
0x1581F1C0,	//0x1718		VoC_sw32_d(REG23,0x262a)(lo)	|	VoC_lw16i_short(REG0,0xe,DEFAULT)
0xC0C3262A,	//0x171a		VoC_add16_rr(REG3,REG3,REG0,DEFAULT)	|	VoC_sw32_d(REG23,0x262a)(hi)
0x634C079B,	//0x171c		VoC_sub16_rd(REG3,REG3,0x634c)
0x1503FF44,	//0x171e		VoC_sw16_d(REG3,0x262c)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x1806262C,	//0x1720		VoC_lw16i_set_inc(REG2,0x2727,0x1)(lo)	|	VoC_sw16_d(REG3,0x262c)(hi)
0x18072727,	//0x1722		VoC_lw16i_set_inc(REG3,0x634e,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x2727,0x1)(hi)
0xE903634E,	//0x1724		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x634e,0x1)(hi)
0xF819D8A1,	//0x1726		VoC_shr16_ri(REG1,0x3,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
		//0x1728		VoC_endloop0
0x1401D10B,	//0x1728		VoC_lw16_d(REG1,0x2726)(lo)	|	VoC_mac32inc_rp(REG1,REG3,DEFAULT)
0xF8192726,	//0x172a		VoC_shr16_ri(REG1,0x3,DEFAULT)	|	VoC_lw16_d(REG1,0x2726)(hi)
0x634D0A0A,	//0x172c		VoC_multf32_rd(REG45,REG1,0x634d)
0xFA0AFFC0,	//0x172e		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_NOP
0x3282C8A2,	//0x1730		VoC_bgtz32_r(ENERGY_COMPUTATION101,REG45)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x70241735,	//0x1732		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bgtz32_r(ENERGY_COMPUTATION101,REG45)(hi)
0xF002E005,	//0x1734		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
		//0x1735		ENERGY_COMPUTATION101
0xEBE3FFC0,	//0x1736		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x03726422,	//0x1738		VoC_bnlt32_rd(VAD_NORM_L_1_EXIT,REG45,0x372)
		//0x173a		VoC_endloop0
0xDE107BFA,	//0x173a		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
		//0x173c		VAD_NORM_L_1_EXIT
0x262C0B14,	//0x173c		VoC_sub16_dr(REG4,0x262c,REG2)
0xF044E580,	//0x173e		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_return
		//0x173f		CII_acf_averaging
0x1C8C1401,	//0x1740		VoC_lw16_d(REG1,0x1c8c)
0x0336070D,	//0x1742		VoC_add16_rd(REG5,REG1,0x336)
0xE2277006,	//0x1744		VoC_lw16i_short(REG7,0x22,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x188BFF1F,	//0x1746		VoC_lw16i_set_inc(REG3,0x1c54,0x12)(lo)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x180A1C54,	//0x1748		VoC_lw16i_set_inc(REG2,0x262e,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x1c54,0x12)(hi)
0x0824262E,	//0x174a		VoC_mult16_rd(REG4,REG4,0x6358)(lo)	|	VoC_lw16i_set_inc(REG2,0x262e,0x2)(hi)
0x18046358,	//0x174c		VoC_lw16i_set_inc(REG0,0x2726,0x1)(lo)	|	VoC_mult16_rd(REG4,REG4,0x6358)(hi)
0xC0E42726,	//0x174e		VoC_add16_rr(REG4,REG3,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2726,0x1)(hi)
0x271A1805,	//0x1750		VoC_lw16i_set_inc(REG1,0x271a,0x1)
0xE016692D,	//0x1752		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0x588D9B8C,	//0x1754		VoC_lw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG6,REG1,DEFAULT)
0xC9A4E00C,	//0x1756		VoC_add32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)
0x931EFEAC,	//0x1758		VoC_add32inc_rp(RL6,ACC0,REG3,DEFAULT)	|	VoC_shr32_rr(ACC0,REG5,DEFAULT)
0x919E939E,	//0x175a		VoC_add32_rp(RL6,RL6,REG3,DEFAULT)	|	VoC_add32inc_rp(RL6,RL6,REG3,DEFAULT)
0x0724DDA4,	//0x175c		VoC_add16_rd(REG4,REG4,0x330)(lo)	|	VoC_sw32_p(ACC0,REG4,DEFAULT)
0x5DD60330,	//0x175e		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x330)(hi)
		//0x175f		VoC_endloop0
0xF046CA79,	//0x1760		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_sub32_rr(REG23,REG23,RL7,IN_PARALLEL)
0x63590830,	//0x1762		VoC_mult16_rd(REG0,REG6,0x6359)
0x242E180B,	//0x1764		VoC_lw16i_set_inc(REG3,0x242e,0x2)
0xE062C01B,	//0x1766		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG0,REG3,DEFAULT)
0x262E1808,	//0x1768		VoC_lw16i_set_inc(REG0,0x262e,0x2)
0x26401809,	//0x176a		VoC_lw16i_set_inc(REG1,0x2640,0x2)
0xD9C2D9D3,	//0x176c		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
0xDDCBE924,	//0x176e		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xDDDAD9D3,	//0x1770		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x1772		VoC_endloop0
0x7244D9C2,	//0x1772		VoC_lw16i_short(REG4,0x12,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x072EE095,	//0x1774		VoC_add16_rd(REG6,REG5,0x6358)(lo)	|	VoC_lw16i_short(REG5,0x9,IN_PARALLEL)
0x441C6358,	//0x1776		VoC_bne16_rd(ACF_AVERAGING101,REG4,0x6358)(lo)	|	VoC_add16_rd(REG6,REG5,0x6358)(hi)
0xF0066358,	//0x1778		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING101,REG4,0x6358)(hi)
		//0x177a		ACF_AVERAGING101
0x072FF364,	//0x177a		VoC_add16_rd(REG7,REG5,0x6359)(lo)	|	VoC_lw16i_short(REG4,0x1b,DEFAULT)
0x441C6359,	//0x177c		VoC_bne16_rd(ACF_AVERAGING103,REG4,0x6359)(lo)	|	VoC_add16_rd(REG7,REG5,0x6359)(hi)
0xF0076359,	//0x177e		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING103,REG4,0x6359)(hi)
		//0x1780		ACF_AVERAGING103
0x63581506,	//0x1780		VoC_sw16_d(REG6,0x6358)
0x63591507,	//0x1782		VoC_sw16_d(REG7,0x6359)
0xDFE9E580,	//0x1784		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1785		CII_predictor_values
0x17952B80,	//0x1786		VoC_jal(CII_schur_recursion)
0x26660A80,	//0x1788		VoC_lw16i(REG0,0x2666)
0x26700A82,	//0x178a		VoC_lw16i(REG2,0x2670)
0xFF0EF103,	//0x178c		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x18092B80,	//0x178e		VoC_jal(CII_step_up)
0x18452B80,	//0x1790		VoC_jal(CII_compute_rav1)
0xFFC0DFA9,	//0x1792		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFF44E580,	//0x1794		VoC_lw32z(ACC0,DEFAULT)	|	VoC_return
		//0x1795		CII_schur_recursion
0x26407A08,	//0x1796		VoC_bnez32_d(SCHUR_RECURSION101,0x2640)
0x26661808,	//0x1798		VoC_lw16i_set_inc(REG0,0x2666,0x2)
0xDDC4E881,	//0x179a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x179b		VoC_endloop0
0xFFC06580,	//0x179c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x179e		SCHUR_RECURSION101
0x26401484,	//0x179e		VoC_lw32_d(ACC0,0x2640)
0x00001FBF,	//0x17a0		VoC_lw16i_set_inc(REG3,0x0,0xffffffff)
0xEBE3FFC0,	//0x17a2		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x03726424,	//0x17a4		VoC_bnlt32_rd(SCHUR_NORM_L_1_EXIT,ACC0,0x372)
		//0x17a6		VoC_endloop0
0xDE187BFC,	//0x17a6		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
		//0x17a8		SCHUR_NORM_L_1_EXIT
0x26401808,	//0x17a8		VoC_lw16i_set_inc(REG0,0x2640,0x2)
0x26981805,	//0x17aa		VoC_lw16i_set_inc(REG1,0x2698,0x1)
0x64511FBE,	//0x17ac		VoC_lw16i_set_inc(REG2,0x6451,0xffffffff)
0xD9C3D9C2,	//0x17ae		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xFE9AE8A7,	//0x17b0		VoC_shr32_rr(REG45,REG3,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDC95FE9B,	//0x17b2		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_shr32_rr(REG67,REG3,DEFAULT)
0xD9C25CA5,	//0x17b4		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x5CA7DC97,	//0x17b6		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x17b7		VoC_endloop0
0x1805D9C3,	//0x17b8		VoC_lw16i_set_inc(REG1,0x2666,0x1)(lo)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0x0A8C2666,	//0x17ba		VoC_lw16i(RL6_LO,0x266e)(lo)	|	VoC_lw16i_set_inc(REG1,0x2666,0x1)(hi)
0x0A8D266E,	//0x17bc		VoC_lw16i(RL6_HI,0x266d)(lo)	|	VoC_lw16i(RL6_LO,0x266e)(hi)
0xFFC0266D,	//0x17be		VoC_NAD	|	VoC_lw16i(RL6_HI,0x266d)(hi)
0x18072C11,	//0x17c0		VoC_loop_i(0x1,0x8)
0x26981481,	//0x17c2		VoC_lw32_d(REG23,0x2698)
0x17CE3182,	//0x17c4		VoC_bez16_r(SCHUR_RECURSION104,REG2)
0x3244E064,	//0x17c6		VoC_bnltz16_r(SCHUR_RECURSION_ABS_A,REG4)(lo)	|	VoC_movreg16(REG4,REG3,DEFAULT)
0x0B2417CC,	//0x17c8		VoC_sub16_dr(REG4,0x36e,REG4)(lo)	|	VoC_bnltz16_r(SCHUR_RECURSION_ABS_A,REG4)(hi)
0xFFC0036E,	//0x17ca		VoC_NAD	|	VoC_sub16_dr(REG4,0x36e,REG4)(hi)
		//0x17cc		SCHUR_RECURSION_ABS_A
0x17D534A2,	//0x17cc		VoC_bngt16_rr(SCHUR_RECURSION105,REG4,REG2)
		//0x17ce		SCHUR_RECURSION104
0xE0076186,	//0x17ce		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(REG6,RL6_LO,DEFAULT)
0x2E30C38E,	//0x17d0		VoC_loop_r(0,REG6)(lo)	|	VoC_sub16_rr(REG6,REG6,REG1,DEFAULT)
0xDC9717D3,	//0x17d2		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_r(0,REG6)(hi)
		//0x17d3		VoC_endloop0
0xDFE9E580,	//0x17d4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x17d5		SCHUR_RECURSION105
0xDF465FC1,	//0x17d6		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0xF6416080,	//0x17d8		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x02CC2B80,	//0x17da		VoC_jal(CII_DIV_S)
0xDF816040,	//0x17dc		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0xDF065FA9,	//0x17de		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x26996A04,	//0x17e0		VoC_bngtz16_d(SCHUR_RECURSION106,0x2699)
0x036E0B00,	//0x17e2		VoC_sub16_dr(REG0,0x36e,REG0)
		//0x17e4		SCHUR_RECURSION106
0xDC10E1A7,	//0x17e4		VoC_sw16_p(REG0,REG1,DEFAULT)	|	VoC_movreg16(REG7,RL6_HI,DEFAULT)
0x17EA358F,	//0x17e6		VoC_bne16_rr(SCHUR_RECURSION107,REG1,REG7)
0xFFC06580,	//0x17e8		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x17ea		SCHUR_RECURSION107
0x26981804,	//0x17ea		VoC_lw16i_set_inc(REG0,0x2698,0x1)
0x26991806,	//0x17ec		VoC_lw16i_set_inc(REG2,0x2699,0x1)
0x9B92D896,	//0x17ee		VoC_multf32inc_rp(REG45,REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x03821484,	//0x17f0		VoC_lw32_d(ACC0,0x382)
0x8145C8A2,	//0x17f2		VoC_add16_rp(REG5,REG5,REG0,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x64501FBF,	//0x17f4		VoC_lw16i_set_inc(REG3,0x6450,0xffffffff)
0xF7875C85,	//0x17f6		VoC_movreg16(REG7,RL6_LO,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x5FC1C3CF,	//0x17f8		VoC_push16(REG1,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG1,DEFAULT)
0x3147F6C1,	//0x17fa		VoC_bngtz16_r(SHUR0401,REG7)(lo)	|	VoC_movreg16(REG1,REG6,IN_PARALLEL)
0xE7C81807,	//0x17fc		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_bngtz16_r(SHUR0401,REG7)(hi)
0x9853985A,	//0x17fe		VoC_multf32_rp(REG67,REG1,REG2,DEFAULT)	|	VoC_multf32_rp(REG45,REG1,REG3,DEFAULT)
0xC8E3C8A2,	//0x1800		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x81DF0355,	//0x1802		VoC_add16_rp(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG5,REG5,REG2,DEFAULT)
0x5C85FFC0,	//0x1804		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_NOP
		//0x1805		VoC_endloop0
0xDF81DCB7,	//0x1806		VoC_pop16(REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,IN_PARALLEL)
		//0x1807		SHUR0401
		//0x1807		VoC_endloop1
0xF006E580,	//0x1808		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_return
		//0x1809		CII_step_up
0x20000A87,	//0x180a		VoC_lw16i(REG7,0x2000)
0x1583F030,	//0x180c		VoC_sw32_d(REG67,0x268e)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xD886268E,	//0x180e		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw32_d(REG67,0x268e)(hi)
0xFA13FD83,	//0x1810		VoC_shr32_ri(REG67,0x2,DEFAULT)	|	VoC_shru32_ri(REG67,0xfffffff0,DEFAULT)
0x2690180A,	//0x1812		VoC_lw16i_set_inc(REG2,0x2690,0x2)
0x26901583,	//0x1814		VoC_sw32_d(REG67,0x2690)
0x26A4180B,	//0x1816		VoC_lw16i_set_inc(REG3,0x26a4,0x2)
0x7026FF0F,	//0x1818		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x07BFF7A7,	//0x181a		VoC_sub16_rd(REG7,REG7,0x370)(lo)	|	VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)
0x2E390370,	//0x181c		VoC_loop_r(1,REG7)(lo)	|	VoC_sub16_rd(REG7,REG7,0x370)(hi)
0xFF391839,	//0x181e		VoC_movreg32(REG23,RL7,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x268E1FB9,	//0x1820		VoC_lw16i_set_inc(REG1,0x268e,0xfffffffe)
0xD8844071,	//0x1822		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x03700709,	//0x1824		VoC_add16_rd(REG1,REG1,0x370)
0xE785C071,	//0x1826		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xD121D9D4,	//0x1828		VoC_mac32inc_rp(REG4,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xFFC0FFC0,	//0x182a		VoC_NOP	|	VoC_NOP
		//0x182c		VoC_endloop0
0xFF39DDDC,	//0x182c		VoC_movreg32(REG23,RL7,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xD9DCE783,	//0x182e		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xDDD4FFC0,	//0x1830		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
		//0x1831		VoC_endloop0
0x3204F7E5,	//0x1832		VoC_bltz16_r(STEP_UP_01,REG4)(lo)	|	VoC_lw16i_short(REG5,0xffff,DEFAULT)
0xF0051836,	//0x1834		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bltz16_r(STEP_UP_01,REG4)(hi)
		//0x1836		STEP_UP_01
0x0736FB92,	//0x1836		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_shr32_ri(REG45,0xfffffff2,DEFAULT)
0xDD920370,	//0x1838		VoC_sw32_p(REG45,REG2,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
		//0x1839		VoC_endloop1
0x268E0A82,	//0x183a		VoC_lw16i(REG2,0x268e)
0x0736E180,	//0x183c		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0xE7840370,	//0x183e		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
0xFA1AD9D2,	//0x1840		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xDC85FFC0,	//0x1842		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_NOP
		//0x1843		VoC_endloop0
0xDFE9E580,	//0x1844		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1845		CII_compute_rav1
0x26701808,	//0x1846		VoC_lw16i_set_inc(REG0,0x2670,0x2)
0x64AC1809,	//0x1848		VoC_lw16i_set_inc(REG1,0x64ac,0x2)
0x2B80F046,	//0x184a		VoC_jal(CII_copy_xy)(lo)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0xDDCC060E,	//0x184c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_jal(CII_copy_xy)(hi)
0x64480A80,	//0x184e		VoC_lw16i(REG0,0x6448)
0x26701806,	//0x1850		VoC_lw16i_set_inc(REG2,0x2670,0x1)
0x64AC1807,	//0x1852		VoC_lw16i_set_inc(REG3,0x64ac,0x1)
0xE0057124,	//0x1854		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x9,DEFAULT)
0xE00777E6,	//0x1856		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0xFF1F7F0E,	//0x1858		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xFF317F44,	//0x185a		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x18632C13,	//0x185c		VoC_loop_i(0x1,0x9)
0xE701C0EB,	//0x185e		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
		//0x1860		VoC_endloop0
0xFF31D413,	//0x1860		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_mac32inc_pp(REG2,REG3,DEFAULT)
0x5DC4C8BA,	//0x1862		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL7,DEFAULT)
		//0x1863		VoC_endloop1
0xF002FF44,	//0x1864		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x6448780A,	//0x1866		VoC_bez32_d(COMPUTE_RAV101,0x6448)
0x64481482,	//0x1868		VoC_lw32_d(REG45,0x6448)
0xEBE3FFC0,	//0x186a		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x03726422,	//0x186c		VoC_bnlt32_rd(RAV1_NORM_L_1_EXIT,REG45,0x372)
		//0x186e		VoC_endloop0
0xDE107BFA,	//0x186e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
		//0x1870		RAV1_NORM_L_1_EXIT
		//0x1870		COMPUTE_RAV101
0x64480A80,	//0x1870		VoC_lw16i(REG0,0x6448)
0x265B1502,	//0x1872		VoC_sw16_d(REG2,0x265b)
0x26520A83,	//0x1874		VoC_lw16i(REG3,0x2652)
0x036E0B12,	//0x1876		VoC_sub16_dr(REG2,0x36e,REG2)
0xFE92D9C2,	//0x1878		VoC_shr32_rr(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xE924DFA9,	//0x187a		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x5CB5FFC0,	//0x187c		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_NOP
0xFE92D9C2,	//0x187e		VoC_shr32_rr(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)
		//0x187f		VoC_endloop0
0xDFE9E580,	//0x1880		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1881		CII_spectral_comparison
0x262E7A0A,	//0x1882		VoC_bnez32_d(SPECTRAL_COMPARISON101,0x262e)
0x64481808,	//0x1884		VoC_lw16i_set_inc(REG0,0x6448,0x2)
0x0FFF0A85,	//0x1886		VoC_lw16i(REG5,0xfff)
0xE8A1E0A4,	//0x1888		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x188a		VoC_endloop0
0xE5D8DDC2,	//0x188a		VoC_jump(SPECTRAL_COMPARISON102)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x188c		SPECTRAL_COMPARISON101
0x262E1481,	//0x188c		VoC_lw32_d(REG23,0x262e)
0x00001805,	//0x188e		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xEBE3FFC0,	//0x1890		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x03726421,	//0x1892		VoC_bnlt32_rd(SPC_NORM_L_1_EXIT,REG23,0x372)
		//0x1894		VoC_endloop0
0xDE087BF9,	//0x1894		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xffffffff,DEFAULT)
		//0x1896		SPC_NORM_L_1_EXIT
0x03310B09,	//0x1896		VoC_sub16_dr(REG1,0x331,REG1)
0x262E1808,	//0x1898		VoC_lw16i_set_inc(REG0,0x262e,0x2)
0x64481807,	//0x189a		VoC_lw16i_set_inc(REG3,0x6448,0x1)
0xFE8AD9C2,	//0x189c		VoC_shr32_rr(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xFFC0E924,	//0x189e		VoC_NOP	|	VoC_loop_i_short(0x9,DEFAULT)
0xD9C25CB5,	//0x18a0		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x18a2		VoC_endloop0
0xFF44FE8A,	//0x18a2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_shr32_rr(REG45,REG1,DEFAULT)
		//0x18a3		SPECTRAL_COMPARISON102
0x64491804,	//0x18a4		VoC_lw16i_set_inc(REG0,0x6449,0x1)
0x26531805,	//0x18a6		VoC_lw16i_set_inc(REG1,0x2653,0x1)
0xD401E901,	//0x18a8		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x18a9		VoC_endloop0
0x7F26FF43,	//0x18aa		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw32z(REG67,DEFAULT)
0x33C4FF22,	//0x18ac		VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(lo)	|	VoC_movreg32(REG45,ACC0,IN_PARALLEL)
0x0B9218B1,	//0x18ae		VoC_sub32_dr(REG45,0x36e,REG45)(lo)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(hi)
0xF001036E,	//0x18b0		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_sub32_dr(REG45,0x36e,REG45)(hi)
		//0x18b1		SPECTRAL_COMPARISON104
0x18EB3302,	//0x18b2		VoC_bez32_r(SPECTRAL_COMPARISON106,REG45)
0x64481402,	//0x18b4		VoC_lw16_d(REG2,0x6448)
0xF001F8EA,	//0x18b6		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)
0x64481502,	//0x18b8		VoC_sw16_d(REG2,0x6448)
0xEBE3FFC0,	//0x18ba		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x03726422,	//0x18bc		VoC_bnlt32_rd(SPC_NORM_L_2_EXIT,REG45,0x372)
		//0x18be		VoC_endloop0
0xDE087BFA,	//0x18be		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
		//0x18c0		SPC_NORM_L_2_EXIT
0x3422E0A4,	//0x18c0		VoC_bgt16_rr(SPECTRAL_COMPARISON108,REG4,REG2)(lo)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x5FC118CF,	//0x18c2		VoC_push16(REG1,DEFAULT)	|	VoC_bgt16_rr(SPECTRAL_COMPARISON108,REG4,REG2)(hi)
0x6080DF46,	//0x18c4		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_push32(RL6,IN_PARALLEL)
0xFFC0F641,	//0x18c6		VoC_NAD	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0x02CC2B80,	//0x18c8		VoC_jal(CII_DIV_S)
0xDF816040,	//0x18ca		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0xDF067002,	//0x18cc		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xC314E5CC,	//0x18ce		VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_jump(SPECTRAL_COMPARISON109)
		//0x18cf		SPECTRAL_COMPARISON108
0xDF465FC1,	//0x18d0		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0xF6416080,	//0x18d2		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x02CC2B80,	//0x18d4		VoC_jal(CII_DIV_S)
0xDF816040,	//0x18d6		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0xDF067022,	//0x18d8		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x18da		SPECTRAL_COMPARISON109
0x442AFF43,	//0x18da		VoC_bne16_rd(SPECTRAL_COMPARISON110,REG2,0x370)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0x0AC60370,	//0x18dc		VoC_lw16i(REG6,0x8000)(lo)	|	VoC_bne16_rd(SPECTRAL_COMPARISON110,REG2,0x370)(hi)
0xFFC00000,	//0x18de		VoC_NAD	|	VoC_lw16i(REG6,0x8000)(hi)
		//0x18e0		SPECTRAL_COMPARISON110
0xE0056004,	//0x18e0		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x18E53244,	//0x18e2		VoC_bnltz16_r(SPECTRAL_COMPARISON111,REG4)
0xC8D3F7E5,	//0x18e4		VoC_add32_rr(REG67,REG67,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
		//0x18e5		SPECTRAL_COMPARISON111
0x33C6FBFB,	//0x18e6		VoC_bnltz32_r(SPECTRAL_COMPARISON112,RL6)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x0B9B18EB,	//0x18e8		VoC_sub32_dr(REG67,0x36e,REG67)(lo)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON112,RL6)(hi)
0xFB93036E,	//0x18ea		VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)	|	VoC_sub32_dr(REG67,0x36e,REG67)(hi)
		//0x18eb		SPECTRAL_COMPARISON112
		//0x18eb		SPECTRAL_COMPARISON106
0x1404FE8B,	//0x18ec		VoC_lw16_d(REG4,0x2652)(lo)	|	VoC_shr32_rr(REG67,REG1,DEFAULT)
0xFD822652,	//0x18ee		VoC_shru32_ri(REG45,0xfffffff0,DEFAULT)	|	VoC_lw16_d(REG4,0x2652)(hi)
0xC8D3FA2A,	//0x18f0		VoC_add32_rr(REG67,REG67,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0x5,DEFAULT)
0x265B1404,	//0x18f2		VoC_lw16_d(REG4,0x265b)
0x099AFEA3,	//0x18f4		VoC_sub32_rd(REG45,REG67,0x635a)(lo)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0x33C2635A,	//0x18f6		VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)(lo)	|	VoC_sub32_rd(REG45,REG67,0x635a)(hi)
0x0B9218FC,	//0x18f8		VoC_sub32_dr(REG45,0x36e,REG45)(lo)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)(hi)
0xFFC0036E,	//0x18fa		VoC_NAD	|	VoC_sub32_dr(REG45,0x36e,REG45)(hi)
		//0x18fc		SPECTRAL_COMPARISON113
0x635A1583,	//0x18fc		VoC_sw32_d(REG67,0x635a)
0x0E560A82,	//0x18fe		VoC_lw16i(REG2,0xe56)
0xE0167003,	//0x1900		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x360ADFA9,	//0x1902		VoC_bgt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)(lo)	|	VoC_pop16(RA,DEFAULT)
0xF0061906,	//0x1904		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bgt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)(hi)
		//0x1906		SPECTRAL_COMPARISON115
0xF030E580,	//0x1906		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_return
		//0x1907		CII_threshold_adaptation
0x7002F031,	//0x1908		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x0A86E117,	//0x190a		VoC_lw16i(REG6,0x7ef4)(lo)	|	VoC_lw16i_short(REG7,0x11,IN_PARALLEL)
0x548B7EF4,	//0x190c		VoC_bngt32_rd(THRESHOLD_ADAPTATION103,REG67,0x262a)(lo)	|	VoC_lw16i(REG6,0x7ef4)(hi)
0xF266262A,	//0x190e		VoC_lw16i_short(REG6,0x13,DEFAULT)	|	VoC_bngt32_rd(THRESHOLD_ADAPTATION103,REG67,0x262a)(hi)
0x54A30A87,	//0x1910		VoC_lw16i(REG7,0x54a3)
0x1583FFC0,	//0x1912		VoC_sw32_d(REG67,0x635e)(lo)	|	VoC_NOP
0xE580635E,	//0x1914		VoC_return	|	VoC_sw32_d(REG67,0x635e)(hi)
		//0x1916		THRESHOLD_ADAPTATION103
0x441EF026,	//0x1916		VoC_bne16_rd(THRESHOLD_ADAPTATION104,REG6,0x635d)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF022635D,	//0x1918		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_bne16_rd(THRESHOLD_ADAPTATION104,REG6,0x635d)(hi)
		//0x191a		THRESHOLD_ADAPTATION104
0x265C6E04,	//0x191a		VoC_bnez16_d(THRESHOLD_ADAPTATION105,0x265c)
0xFFC07022,	//0x191c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x191e		THRESHOLD_ADAPTATION105
0x265D441E,	//0x191e		VoC_bne16_rd(THRESHOLD_ADAPTATION106,REG6,0x265d)
0xF007F022,	//0x1920		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x1921		THRESHOLD_ADAPTATION106
0x03704432,	//0x1922		VoC_bne16_rd(THRESHOLD_ADAPTATION107,REG2,0x370)
0x635C1507,	//0x1924		VoC_sw16_d(REG7,0x635c)
0xFFC06580,	//0x1926		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1928		THRESHOLD_ADAPTATION107
0x635C0737,	//0x1928		VoC_add16_rd(REG7,REG6,0x635c)
0x1507FFC0,	//0x192a		VoC_sw16_d(REG7,0x635c)(lo)	|	VoC_NOP
0x381F635C,	//0x192c		VoC_bgt16_rd(THRESHOLD_ADAPTATION108,REG7,0x335)(lo)	|	VoC_sw16_d(REG7,0x635c)(hi)
0xE5800335,	//0x192e		VoC_return	|	VoC_bgt16_rd(THRESHOLD_ADAPTATION108,REG7,0x335)(hi)
		//0x1930		THRESHOLD_ADAPTATION108
0x635E0A80,	//0x1930		VoC_lw16i(REG0,0x635e)
0x5885FFC0,	//0x1932		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_NOP
0xE086D884,	//0x1934		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
0xC334F82E,	//0x1936		VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,DEFAULT)
0x037E4C34,	//0x1938		VoC_bnlt16_rd(THRESHOLD_ADAPTATION109,REG4,0x37e)
0x07ADF8FC,	//0x193a		VoC_sub16_rd(REG5,REG5,0x370)(lo)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xFFC00370,	//0x193c		VoC_NAD	|	VoC_sub16_rd(REG5,REG5,0x370)(hi)
		//0x193e		THRESHOLD_ADAPTATION109
0x43330A81,	//0x193e		VoC_lw16i(REG1,0x4333)
0x262D0A0B,	//0x1940		VoC_multf32_rd(REG67,REG1,0x262d)
0xFA7BF020,	//0x1942		VoC_shr32_ri(REG67,0xf,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x262C0701,	//0x1944		VoC_add16_rd(REG1,REG0,0x262c)
0x03805423,	//0x1946		VoC_bngt32_rd(THRESHOLD_ADAPTATION110,REG67,0x380)
0xC0417A0B,	//0x1948		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
		//0x194a		THRESHOLD_ADAPTATION110
0x34BDE027,	//0x194a		VoC_bngt16_rr(THRESHOLD_ADAPTATION111,REG7,REG5)(lo)	|	VoC_movreg16(REG7,REG1,DEFAULT)
0xF022194E,	//0x194c		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_bngt16_rr(THRESHOLD_ADAPTATION111,REG7,REG5)(hi)
		//0x194e		THRESHOLD_ADAPTATION111
0x195435AF,	//0x194e		VoC_bne16_rr(THRESHOLD_ADAPTATION112,REG5,REG7)
0x195434B4,	//0x1950		VoC_bngt16_rr(THRESHOLD_ADAPTATION112,REG6,REG4)
0xFFC07022,	//0x1952		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x1954		THRESHOLD_ADAPTATION112
0x0370459A,	//0x1954		VoC_bne16_rd(THRESHOLD_ADAPTATION117,REG2,0x370)
0xE00560A0,	//0x1956		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0xE0036082,	//0x1958		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG4,DEFAULT)
0xC88AF822,	//0x195a		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_shr16_ri(REG2,0x4,DEFAULT)
0x03805422,	//0x195c		VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG45,0x380)
0xDE007A0A,	//0x195e		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
		//0x1960		THRESHOLD_ADAPTATION113
0xE0026005,	//0x1960		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_movreg16(REG5,REG0,DEFAULT)
0x196634AF,	//0x1962		VoC_bngt16_rr(THRESHOLD_ADAPTATION115,REG5,REG7)
0xFFC07022,	//0x1964		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x1966		THRESHOLD_ADAPTATION115
0x196C35BD,	//0x1966		VoC_bne16_rr(THRESHOLD_ADAPTATION116,REG7,REG5)
0x196C34A6,	//0x1968		VoC_bngt16_rr(THRESHOLD_ADAPTATION116,REG4,REG6)
0xFFC07022,	//0x196a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x196c		THRESHOLD_ADAPTATION116
0x0370441A,	//0x196c		VoC_bne16_rd(THRESHOLD_ADAPTATION117,REG2,0x370)
0xFFC0FF1A,	//0x196e		VoC_NOP	|	VoC_movreg32(REG45,REG67,DEFAULT)
		//0x196f		THRESHOLD_ADAPTATION117
0x1404DF42,	//0x1970		VoC_lw16_d(REG4,0x262d)(lo)	|	VoC_push32(REG45,DEFAULT)
0x1405262D,	//0x1972		VoC_lw16_d(REG5,0x262c)(lo)	|	VoC_lw16_d(REG4,0x262d)(hi)
0xF363262C,	//0x1974		VoC_lw16i_short(REG3,0x1b,DEFAULT)	|	VoC_lw16_d(REG5,0x262c)(hi)
0x421F0A82,	//0x1976		VoC_lw16i(REG2,0x421f)
0x1982359D,	//0x1978		VoC_bne16_rr(THRESHOLD_ADAPTATION123,REG3,REG5)
0xE0076086,	//0x197a		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0xC8CBF003,	//0x197c		VoC_add32_rr(REG67,REG67,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x072FFA0B,	//0x197e		VoC_add16_rd(REG7,REG5,0x370)(lo)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
0xE5DD0370,	//0x1980		VoC_jump(THRESHOLD_ADAPTATION124)	|	VoC_add16_rd(REG7,REG5,0x370)(hi)
		//0x1982		THRESHOLD_ADAPTATION123
0x199234AB,	//0x1982		VoC_bngt16_rr(THRESHOLD_ADAPTATION120,REG5,REG3)
0xF6864358,	//0x1984		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG5,REG3,DEFAULT)
0xE0037E02,	//0x1986		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shr16_rr(REG2,REG0,DEFAULT)
0x48CBF007,	//0x1988		VoC_add32_rr(REG67,REG67,REG23,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x5423F6A0,	//0x198a		VoC_bngt32_rd(THRESHOLD_ADAPTATION121,REG67,0x380)(lo)	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0x7A0B0380,	//0x198c		VoC_shr32_ri(REG67,0x1,DEFAULT)	|	VoC_bngt32_rd(THRESHOLD_ADAPTATION121,REG67,0x380)(hi)
0xE007DE00,	//0x198e		VoC_movreg16(REG7,REG0,DEFAULT)	|	VoC_inc_p(REG0,IN_PARALLEL)
		//0x198f		THRESHOLD_ADAPTATION121
0xFFC065CE,	//0x1990		VoC_NAD(IN_PARALLEL)	|	VoC_jump(THRESHOLD_ADAPTATION124)
		//0x1992		THRESHOLD_ADAPTATION120
0xF68642E8,	//0x1992		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG3,REG5,DEFAULT)
0xF6607E06,	//0x1994		VoC_movreg16(REG0,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG0,DEFAULT)
0xE0077003,	//0x1996		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x5423C8CB,	//0x1998		VoC_bngt32_rd(THRESHOLD_ADAPTATION122,REG67,0x380)(lo)	|	VoC_add32_rr(REG67,REG67,REG23,DEFAULT)
0x7A0B0380,	//0x199a		VoC_shr32_ri(REG67,0x1,DEFAULT)	|	VoC_bngt32_rd(THRESHOLD_ADAPTATION122,REG67,0x380)(hi)
0xE007DE00,	//0x199c		VoC_movreg16(REG7,REG0,DEFAULT)	|	VoC_inc_p(REG0,IN_PARALLEL)
		//0x199d		THRESHOLD_ADAPTATION122
		//0x199e		THRESHOLD_ADAPTATION124
0xF002DF02,	//0x199e		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x19A434AF,	//0x19a0		VoC_bngt16_rr(THRESHOLD_ADAPTATION125,REG5,REG7)
0xFFC07022,	//0x19a2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x19a4		THRESHOLD_ADAPTATION125
0x19AA35BD,	//0x19a4		VoC_bne16_rr(THRESHOLD_ADAPTATION126,REG7,REG5)
0x19AA34A6,	//0x19a6		VoC_bngt16_rr(THRESHOLD_ADAPTATION126,REG4,REG6)
0xFFC07022,	//0x19a8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
		//0x19aa		THRESHOLD_ADAPTATION126
0x03704422,	//0x19aa		VoC_bne16_rd(THRESHOLD_ADAPTATION127,REG2,0x370)
0xFFC07F1A,	//0x19ac		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG45,REG67,DEFAULT)
		//0x19ae		THRESHOLD_ADAPTATION127
0x635E0A80,	//0x19ae		VoC_lw16i(REG0,0x635e)
0x265B1401,	//0x19b0		VoC_lw16_d(REG1,0x265b)
0xDC04DC85,	//0x19b2		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x634D0A80,	//0x19b4		VoC_lw16i(REG0,0x634d)
0x634C1501,	//0x19b6		VoC_sw16_d(REG1,0x634c)
0x26520A81,	//0x19b8		VoC_lw16i(REG1,0x2652)
0xE924F123,	//0x19ba		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG3,0x9,DEFAULT)
0x1503D892,	//0x19bc		VoC_sw16_d(REG3,0x635c)(lo)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xDC82635C,	//0x19be		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_sw16_d(REG3,0x635c)(hi)
		//0x19bf		VoC_endloop0
0xF006E580,	//0x19c0		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_return
		//0x19c1		CII_tone_detection
0x27380A80,	//0x19c2		VoC_lw16i(REG0,0x2738)
0x265D1506,	//0x19c4		VoC_sw16_d(REG6,0x265d)
0x26840A82,	//0x19c6		VoC_lw16i(REG2,0x2684)
0x7F0EF043,	//0x19c8		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x2B80DFE9,	//0x19ca		VoC_jal(CII_step_up)(lo)	|	VoC_push16(RA,IN_PARALLEL)
0xDFA91809,	//0x19cc		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_step_up)(hi)
0x26851406,	//0x19ce		VoC_lw16_d(REG6,0x2685)
0xCDB2F8EE,	//0x19d0		VoC_multf32_rr(REG45,REG6,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)
0x26861407,	//0x19d2		VoC_lw16_d(REG7,0x2686)
0xFBEBF006,	//0x19d4		VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x3283CAD3,	//0x19d6		VoC_bgtz32_r(TONE_DETECTION102,REG67)(lo)	|	VoC_sub32_rr(REG67,REG67,REG45,DEFAULT)
0xE58019DA,	//0x19d8		VoC_return	|	VoC_bgtz32_r(TONE_DETECTION102,REG67)(hi)
		//0x19da		TONE_DETECTION102
0x0C750A80,	//0x19da		VoC_lw16i(REG0,0xc75)
0x7205CD42,	//0x19dc		VoC_bnltz16_d(TONE_DETECTION101,0x2685)(lo)	|	VoC_multf32_rr(REG45,REG5,REG0,DEFAULT)
0x36932685,	//0x19de		VoC_bngt32_rr(TONE_DETECTION101,REG45,REG67)(lo)	|	VoC_bnltz16_d(TONE_DETECTION101,0x2685)(hi)
0xE58019E2,	//0x19e0		VoC_return	|	VoC_bngt32_rr(TONE_DETECTION101,REG45,REG67)(hi)
		//0x19e2		TONE_DETECTION101
0x7FFF0A80,	//0x19e2		VoC_lw16i(REG0,0x7fff)
0x27381805,	//0x19e4		VoC_lw16i_set_inc(REG1,0x2738,0x1)
0xAE4CE006,	//0x19e6		VoC_multf16inc_pp(REG4,REG1,REG1,DEFAULT)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xC3A4E883,	//0x19e8		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC620AE4C,	//0x19ea		VoC_multf16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_multf16inc_pp(REG4,REG1,REG1,DEFAULT)
		//0x19eb		VoC_endloop0
0x05B80A86,	//0x19ec		VoC_lw16i(REG6,0x5b8)
0x34B0F021,	//0x19ee		VoC_bngt16_rr(TONE_DETECTION_RET,REG6,REG0)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x150119F3,	//0x19f0		VoC_sw16_d(REG1,0x265d)(lo)	|	VoC_bngt16_rr(TONE_DETECTION_RET,REG6,REG0)(hi)
0xE580265D,	//0x19f2		VoC_return	|	VoC_sw16_d(REG1,0x265d)(hi)
		//0x19f3		TONE_DETECTION_RET
		//0x19f4		CII_vad_decision
0x1483F022,	//0x19f4		VoC_lw32_d(REG67,0x635e)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x4C1E635E,	//0x19f6		VoC_bnlt16_rd(VAD_DECISION102,REG6,0x262c)(lo)	|	VoC_lw32_d(REG67,0x635e)(hi)
0xE580262C,	//0x19f8		VoC_return	|	VoC_bnlt16_rd(VAD_DECISION102,REG6,0x262c)(hi)
		//0x19fa		VAD_DECISION102
0x262C442E,	//0x19fa		VoC_bne16_rd(VAD_DECISION101,REG6,0x262c)
0x262D4C1F,	//0x19fc		VoC_bnlt16_rd(VAD_DECISION101,REG7,0x262d)
0xF002E580,	//0x19fe		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_return
		//0x19ff		VAD_DECISION101
0xFFC06580,	//0x1a00		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1a02		CII_vad_hangover
0x63561406,	//0x1a02		VoC_lw16_d(REG6,0x6356)
0x63571407,	//0x1a04		VoC_lw16_d(REG7,0x6357)
0x03700736,	//0x1a06		VoC_add16_rd(REG6,REG6,0x370)
0x03704022,	//0x1a08		VoC_be16_rd(VAD_HANDOVER101,REG2,0x370)
0xFFC07006,	//0x1a0a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x1a0c		VAD_HANDOVER101
0x03314826,	//0x1a0c		VoC_blt16_rd(VAD_HANDOVER103,REG6,0x331)
0xF066F147,	//0x1a0e		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_lw16i_short(REG7,0xa,DEFAULT)
		//0x1a10		VAD_HANDOVER103
0x63571507,	//0x1a10		VoC_sw16_d(REG7,0x6357)
0x63561506,	//0x1a12		VoC_sw16_d(REG6,0x6356)
0x1A1A3247,	//0x1a14		VoC_bnltz16_r(VAD_HANDOVER104,REG7)
0x265F1502,	//0x1a16		VoC_sw16_d(REG2,0x265f)
0xFFC06580,	//0x1a18		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1a1a		VAD_HANDOVER104
0x037007BF,	//0x1a1a		VoC_sub16_rd(REG7,REG7,0x370)
0x1507F023,	//0x1a1c		VoC_sw16_d(REG7,0x6357)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x15036357,	//0x1a1e		VoC_sw16_d(REG3,0x265f)(lo)	|	VoC_sw16_d(REG7,0x6357)(hi)
0xE580265F,	//0x1a20		VoC_return	|	VoC_sw16_d(REG3,0x265f)(hi)
		//0x1a22		CII_periodicity_update
0x1804F006,	//0x1a22		VoC_lw16i_set_inc(REG0,0x2592,0x1)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x14072592,	//0x1a24		VoC_lw16_d(REG7,0x2125)(lo)	|	VoC_lw16i_set_inc(REG0,0x2592,0x1)(hi)
0xE84F2125,	//0x1a26		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16_d(REG7,0x2125)(hi)
0x34BAD802,	//0x1a28		VoC_bngt16_rr(PERIODICITY00,REG7,REG2)(lo)	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0x58021A2E,	//0x1a2a		VoC_lw16_p(REG2,REG0,DEFAULT)	|	VoC_bngt16_rr(PERIODICITY00,REG7,REG2)(hi)
0xE5C3F6E3,	//0x1a2c		VoC_jump(PERIODICITY01)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
		//0x1a2e		PERIODICITY00
0xD80360E2,	//0x1a2e		VoC_lw16_p(REG3,REG0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
		//0x1a30		PERIODICITY01
0xC2D35887,	//0x1a30		VoC_sub16_rr(REG3,REG3,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0x03304C23,	//0x1a32		VoC_bnlt16_rd(PERIODICITY02,REG3,0x330)
0x03700736,	//0x1a34		VoC_add16_rd(REG6,REG6,0x370)
		//0x1a36		PERIODICITY02
		//0x1a36		VoC_endloop0
0x1507FFC0,	//0x1a36		VoC_sw16_d(REG7,0x2125)(lo)	|	VoC_NOP
0x14022125,	//0x1a38		VoC_lw16_d(REG2,0x2124)(lo)	|	VoC_sw16_d(REG7,0x2125)(hi)
0x15062124,	//0x1a3a		VoC_sw16_d(REG6,0x2124)(lo)	|	VoC_lw16_d(REG2,0x2124)(hi)
0xC1932124,	//0x1a3c		VoC_add16_rr(REG3,REG6,REG2,DEFAULT)	|	VoC_sw16_d(REG6,0x2124)(hi)
0x0332079B,	//0x1a3e		VoC_sub16_rd(REG3,REG3,0x332)
0x3243F025,	//0x1a40		VoC_bnltz16_r(PERIODICITY04,REG3)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xF0051A44,	//0x1a42		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bnltz16_r(PERIODICITY04,REG3)(hi)
		//0x1a44		PERIODICITY04
0x63B61502,	//0x1a44		VoC_sw16_d(REG2,0x63b6)
0x635D1505,	//0x1a46		VoC_sw16_d(REG5,0x635d)
0xDFE9E580,	//0x1a48		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1a49		CII_vad_computation
0x17102B80,	//0x1a4a		VoC_jal(CII_energy_computation)
0x262C1582,	//0x1a4c		VoC_sw32_d(REG45,0x262c)
0x173F2B80,	//0x1a4e		VoC_jal(CII_acf_averaging)
0x17852B80,	//0x1a50		VoC_jal(CII_predictor_values)
0x18812B80,	//0x1a52		VoC_jal(CII_spectral_comparison)
0x265C1506,	//0x1a54		VoC_sw16_d(REG6,0x265c)
0x19C12B80,	//0x1a56		VoC_jal(CII_tone_detection)
0x19072B80,	//0x1a58		VoC_jal(CII_threshold_adaptation)
0x19F42B80,	//0x1a5a		VoC_jal(CII_vad_decision)
0x265E1502,	//0x1a5c		VoC_sw16_d(REG2,0x265e)
0x1A022B80,	//0x1a5e		VoC_jal(CII_vad_hangover)
0x265F1402,	//0x1a60		VoC_lw16_d(REG2,0x265f)
0x1502DFA9,	//0x1a62		VoC_sw16_d(REG2,0x4301)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5804301,	//0x1a64		VoC_return	|	VoC_sw16_d(REG2,0x4301)(hi)
		//0x1a66		CII_tx_dtx
0x43011404,	//0x1a66		VoC_lw16_d(REG4,0x4301)
0x1C8F1405,	//0x1a68		VoC_lw16_d(REG5,0x1c8f)
0x63B31406,	//0x1a6a		VoC_lw16_d(REG6,0x63b3)
0x63B21407,	//0x1a6c		VoC_lw16_d(REG7,0x63b2)
0x03700736,	//0x1a6e		VoC_add16_rd(REG6,REG6,0x370)
0x03704434,	//0x1a70		VoC_bne16_rd(TX_DTX_01_ELSE,REG4,0x370)
0xF065F0E7,	//0x1a72		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG7,0x7,DEFAULT)
0x1A982B00,	//0x1a74		VoC_jump_lg(TX_DTX_01_END)
		//0x1a76		TX_DTX_01_ELSE
0x1A8631C7,	//0x1a76		VoC_bnez16_r(TX_DTX_01B_01_ELSE,REG7)
0xE0A3F006,	//0x1a78		VoC_movreg16(REG3,REG5,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x00041603,	//0x1a7a		VoC_and16_ri(REG3,0x4)
0x1A843183,	//0x1a7c		VoC_bez16_r(TX_DTX_01B_01A_01_ELSE,REG3)
0x03861484,	//0x1a7e		VoC_lw32_d(ACC0,0x386)
0x1584F305,	//0x1a80		VoC_sw32_d(ACC0,0x63b4)(lo)	|	VoC_lw16i_short(REG5,0x18,DEFAULT)
0xE5D563B4,	//0x1a82		VoC_jump(TX_DTX_01_END)	|	VoC_sw32_d(ACC0,0x63b4)(hi)
		//0x1a84		TX_DTX_01B_01A_01_ELSE
0xE5D3F205,	//0x1a84		VoC_jump(TX_DTX_01_END)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
		//0x1a86		TX_DTX_01B_01_ELSE
0x037007BF,	//0x1a86		VoC_sub16_rd(REG7,REG7,0x370)
0xF3C4C1BB,	//0x1a88		VoC_lw16i_short(REG4,0x1e,DEFAULT)	|	VoC_add16_rr(REG3,REG6,REG7,DEFAULT)
0x3243C2E3,	//0x1a8a		VoC_bnltz16_r(TX_DTX_01B_01B_01_ELSE,REG3)(lo)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0x0A851A90,	//0x1a8c		VoC_lw16i(REG5,0x20)(lo)	|	VoC_bnltz16_r(TX_DTX_01B_01B_01_ELSE,REG3)(hi)
0xE5C90020,	//0x1a8e		VoC_jump(TX_DTX_01_END)	|	VoC_lw16i(REG5,0x20)(hi)
		//0x1a90		TX_DTX_01B_01B_01_ELSE
0x1603E0A3,	//0x1a90		VoC_and16_ri(REG3,0x4)(lo)	|	VoC_movreg16(REG3,REG5,DEFAULT)
0x31830004,	//0x1a92		VoC_bez16_r(TX_DTX_01B_01B_01B_01_ELSE,REG3)(lo)	|	VoC_and16_ri(REG3,0x4)(hi)
0xF1A51A97,	//0x1a94		VoC_lw16i_short(REG5,0xd,DEFAULT)	|	VoC_bez16_r(TX_DTX_01B_01B_01B_01_ELSE,REG3)(hi)
0xF0A5E5C2,	//0x1a96		VoC_lw16i_short(REG5,0x5,DEFAULT)	|	VoC_jump(TX_DTX_01_END)
		//0x1a97		TX_DTX_01B_01B_01B_01_ELSE
		//0x1a98		TX_DTX_01_END
0x63B31506,	//0x1a98		VoC_sw16_d(REG6,0x63b3)
0x63B21507,	//0x1a9a		VoC_sw16_d(REG7,0x63b2)
0xF052E580,	//0x1a9c		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_return
		//0x1a9d		CII_update_lsf_history
0xE3C65FC0,	//0x1a9e		VoC_lw16i_short(REG6,0x3c,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xE001C030,	//0x1aa0		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xF3D976D0,	//0x1aa2		VoC_lw16i_short(INC1,0xfffffff6,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xfffffff6,DEFAULT)
0xDE08F053,	//0x1aa4		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0x1AAD2C0D,	//0x1aa6		VoC_loop_i(0x1,0x6)
0xE8A3FF01,	//0x1aa8		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xFFC0D9DB,	//0x1aaa		VoC_NOP	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
		//0x1aac		VoC_endloop0
0x5E00DDD3,	//0x1aac		VoC_inc_p(REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x1aad		VoC_endloop1
0x7F31DE08,	//0x1aae		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0xF050DF80,	//0x1ab0		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0xD9D2E8AA,	//0x1ab2		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x780CD9DB,	//0x1ab4		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0x780EF80D,	//0x1ab6		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0x4136F80F,	//0x1ab8		VoC_add16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0xFFC0C17F,	//0x1aba		VoC_NOP	|	VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)
		//0x1abc		VoC_endloop0
0xE580DDC3,	//0x1abc		VoC_return	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x1abe		CII_update_lsf_p_CN
0x0A84E003,	//0x1abe		VoC_lw16i(REG4,0x1249)(lo)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x71521249,	//0x1ac0		VoC_lw16i_short(INC2,0xa,DEFAULT)	|	VoC_lw16i(REG4,0x1249)(hi)
0x2C15F007,	//0x1ac2		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xE0601ACE,	//0x1ac4		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0xFF44DE18,	//0x1ac6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xD120E8E1,	//0x1ac8		VoC_mac32inc_rp(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x7,DEFAULT)
		//0x1ac9		VoC_endloop0
0x0923FFC0,	//0x1aca		VoC_add32_rd(REG67,ACC0,0x382)(lo)	|	VoC_NOP
0xFFC00382,	//0x1acc		VoC_NOP	|	VoC_add32_rd(REG67,ACC0,0x382)(hi)
		//0x1ace		VoC_endloop1
0xE580DC97,	//0x1ace		VoC_return	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x1ad0		CII_update_gcode0_CN
0x0A86FF42,	//0x1ad0		VoC_lw16i(REG6,0x1fff)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0xE0C71FFF,	//0x1ad2		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x1fff)(hi)
0x12490A81,	//0x1ad4		VoC_lw16i(REG1,0x1249)
0x1ADF2C0F,	//0x1ad6		VoC_loop_i(0x1,0x7)
0xE841FF44,	//0x1ad8		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x1ada		VoC_endloop0
0xFFC0D230,	//0x1ada		VoC_NOP	|	VoC_bimac32inc_rp(REG67,REG0)
0xCC59E123,	//0x1adc		VoC_multf32_rr(REG23,REG1,REG3,DEFAULT)	|	VoC_movreg16(REG3,ACC0_HI,DEFAULT)
0xC88AFFC0,	//0x1ade		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_NOP
		//0x1adf		VoC_endloop1
0xE580F8E5,	//0x1ae0		VoC_return	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
		//0x1ae2		CII_compute_CN_excitation_gain
0xDFE9F007,	//0x1ae2		VoC_push16(RA,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1ae4		COMPUTE_CN01
0xFF447006,	//0x1ae4		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x25461808,	//0x1ae6		VoC_lw16i_set_inc(REG0,0x2546,0x2)
0xD9C2EA84,	//0x1ae8		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x14,DEFAULT)
0xFE3D7E3C,	//0x1aea		VoC_shr16_rr(REG5,REG7,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG7,DEFAULT)
		//0x1aec		VoC_endloop0
0xFFC0CF24,	//0x1aec		VoC_NOP	|	VoC_bimac32_rr(REG45,REG45)
0x03745C24,	//0x1aee		VoC_bne32_rd(COMPUTE_CN00,ACC0,0x374)
0xC1F7F026,	//0x1af0		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x1af2		COMPUTE_CN00
0x1AE431C6,	//0x1af2		VoC_bnez16_r(COMPUTE_CN01,REG6)
0x03700924,	//0x1af4		VoC_add32_rd(ACC0,ACC0,0x370)
0x02BA2B80,	//0x1af6		VoC_jal(CII_NORM_L_ACC0)
0xE121E020,	//0x1af8		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0xF004CC4C,	//0x1afa		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG1,REG1,DEFAULT)
0x0A85FA1C,	//0x1afc		VoC_lw16i(REG5,0x3000)(lo)	|	VoC_shr32_ri(ACC0,0x3,DEFAULT)
0xCAA43000,	//0x1afe		VoC_sub32_rr(ACC0,REG45,ACC0,DEFAULT)	|	VoC_lw16i(REG5,0x3000)(hi)
0x60000A84,	//0x1b00		VoC_lw16i(REG4,0x6000)
0xE005CE0C,	//0x1b02		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_mac32_rr(REG1,REG4,DEFAULT)
0x2805E121,	//0x1b04		VoC_and16_rd(REG5,0x370)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0x31850370,	//0x1b06		VoC_bez16_r(COMPUTE_CN02,REG5)(lo)	|	VoC_and16_rd(REG5,0x370)(hi)
0x0A851B10,	//0x1b08		VoC_lw16i(REG5,0x5a82)(lo)	|	VoC_bez16_r(COMPUTE_CN02,REG5)(hi)
0xCC6C5A82,	//0x1b0a		VoC_multf32_rr(ACC0,REG1,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x5a82)(hi)
0x03700780,	//0x1b0c		VoC_sub16_rd(REG0,REG0,0x370)
0x03820924,	//0x1b0e		VoC_add32_rd(ACC0,ACC0,0x382)
		//0x1b10		COMPUTE_CN02
0x0A84E121,	//0x1b10		VoC_lw16i(REG4,0x287a)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0xCC61287A,	//0x1b12		VoC_multf32_rr(REG23,REG1,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x287a)(hi)
0x0909F808,	//0x1b14		VoC_add32_rd(REG23,REG23,0x382)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xC2380382,	//0x1b16		VoC_sub16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x382)(hi)
0x1B1C3206,	//0x1b18		VoC_bltz16_r(COMPUTE_CN05,REG6)
0xE5C4FE03,	//0x1b1a		VoC_jump(COMPUTE_CN06)	|	VoC_shr16_rr(REG3,REG0,DEFAULT)
		//0x1b1c		COMPUTE_CN05
0x036E0B00,	//0x1b1c		VoC_sub16_dr(REG0,0x36e,REG0)
0xDFA9FE03,	//0x1b1e		VoC_pop16(RA,DEFAULT)	|	VoC_shr16_rr(REG3,REG0,DEFAULT)
		//0x1b1f		COMPUTE_CN06
0x1C8A1503,	//0x1b20		VoC_sw16_d(REG3,0x1c8a)
0xFFC06580,	//0x1b22		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1b24		CII_update_gain_code_history_tx
0x63B70A82,	//0x1b24		VoC_lw16i(REG2,0x63b7)
0x63C00A80,	//0x1b26		VoC_lw16i(REG0,0x63c0)
0xF3668010,	//0x1b28		VoC_lw16i_short(REG6,0x1b,DEFAULT)	|	VoC_add16_rp(REG0,REG0,REG2,DEFAULT)
0xB8B3DC03,	//0x1b2a		VoC_sub16_pr(REG3,REG2,REG6,DEFAULT)	|	VoC_sw16_p(REG3,REG0,DEFAULT)
0x8010F020,	//0x1b2c		VoC_add16_rp(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x1B3231C3,	//0x1b2e		VoC_bnez16_r(UPDATE_GAIN_CODE_HISTORY_TX104,REG3)
0xFFC0F000,	//0x1b30		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x1b32		UPDATE_GAIN_CODE_HISTORY_TX104
0xE580DC20,	//0x1b32		VoC_return	|	VoC_sw16_p(REG0,REG2,DEFAULT)
		//0x1b34		CII_CN_encoding
0x1406F207,	//0x1b34		VoC_lw16_d(REG6,0x1c8f)(lo)	|	VoC_lw16i_short(REG7,0x10,DEFAULT)
0xE4371C8F,	//0x1b36		VoC_and16_rr(REG7,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x1c8f)(hi)
0x1B463187,	//0x1b38		VoC_bez16_r(CII_CN_encoding01,REG7)
0x63E21808,	//0x1b3a		VoC_lw16i_set_inc(REG0,0x63e2,0x2)
0x63B81809,	//0x1b3c		VoC_lw16i_set_inc(REG1,0x63b8,0x2)
0xD9C1E864,	//0x1b3e		VoC_lw32inc_p(REG23,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0x641A1407,	//0x1b40		VoC_lw16_d(REG7,0x641a)
		//0x1b42		VoC_endloop0
0x1507DDC9,	//0x1b42		VoC_sw16_d(REG7,0x63bd)(lo)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xFFC063BD,	//0x1b44		VoC_NAD	|	VoC_sw16_d(REG7,0x63bd)(hi)
		//0x1b46		CII_CN_encoding01
0x00201606,	//0x1b46		VoC_and16_ri(REG6,0x20)
0x1B5B3186,	//0x1b48		VoC_bez16_r(CII_CN_encoding02,REG6)
0x63B81804,	//0x1b4a		VoC_lw16i_set_inc(REG0,0x63b8,0x1)
0x63E21805,	//0x1b4c		VoC_lw16i_set_inc(REG1,0x63e2,0x1)
0x63BD1407,	//0x1b4e		VoC_lw16_d(REG7,0x63bd)
0xD882E8A4,	//0x1b50		VoC_lw16inc_p(REG2,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x63F31507,	//0x1b52		VoC_sw16_d(REG7,0x63f3)
		//0x1b54		VoC_endloop0
0x1507DC92,	//0x1b54		VoC_sw16_d(REG7,0x6400)(lo)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0x15076400,	//0x1b56		VoC_sw16_d(REG7,0x640d)(lo)	|	VoC_sw16_d(REG7,0x6400)(hi)
0x1507640D,	//0x1b58		VoC_sw16_d(REG7,0x641a)(lo)	|	VoC_sw16_d(REG7,0x640d)(hi)
0xF007641A,	//0x1b5a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG7,0x641a)(hi)
		//0x1b5b		CII_CN_encoding02
0x63E71804,	//0x1b5c		VoC_lw16i_set_inc(REG0,0x63e7,0x1)
0x63F41805,	//0x1b5e		VoC_lw16i_set_inc(REG1,0x63f4,0x1)
0x64011806,	//0x1b60		VoC_lw16i_set_inc(REG2,0x6401,0x1)
0x640E1807,	//0x1b62		VoC_lw16i_set_inc(REG3,0x640e,0x1)
0xDC87E984,	//0x1b64		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0xc,DEFAULT)
0xDCA7DC97,	//0x1b66		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x1b68		VoC_endloop0
0xE580DCB7,	//0x1b68		VoC_return	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x1b6a		CII_sid_codeword_encoding
0x1808F021,	//0x1b6a		VoC_lw16i_set_inc(REG0,0x45ba,0x2)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0A8645BA,	//0x1b6c		VoC_lw16i(REG6,0x262a)(lo)	|	VoC_lw16i_set_inc(REG0,0x45ba,0x2)(hi)
0xE0C7262A,	//0x1b6e		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x262a)(hi)
0x92C2EDE5,	//0x1b70		VoC_add32inc_rp(REG45,REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x2f,DEFAULT)
0x27071501,	//0x1b72		VoC_sw16_d(REG1,0x2707)
0xDC51DC41,	//0x1b74		VoC_sw16_p(REG1,REG5,DEFAULT)	|	VoC_sw16_p(REG1,REG4,DEFAULT)
		//0x1b75		VoC_endloop0
0xDFE9E580,	//0x1b76		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1b77		CII_plsf5_dtx1
0x1C8F1406,	//0x1b78		VoC_lw16_d(REG6,0x1c8f)
0xFF1AE0C7,	//0x1b7a		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x00011604,	//0x1b7c		VoC_and16_ri(REG4,0x1)
0x00101605,	//0x1b7e		VoC_and16_ri(REG5,0x10)
0x00041606,	//0x1b80		VoC_and16_ri(REG6,0x4)
0x00081607,	//0x1b82		VoC_and16_ri(REG7,0x8)
0x26B61582,	//0x1b84		VoC_sw32_d(REG45,0x26b6)
0x26B81583,	//0x1b86		VoC_sw32_d(REG67,0x26b8)
0x26B66E0A,	//0x1b88		VoC_bnez16_d(Q_PLSF_5_01,0x26b6)
0x26B96C08,	//0x1b8a		VoC_bez16_d(Q_PLSF_5_01,0x26b9)
0x636C1828,	//0x1b8c		VoC_lw16i_set_inc(REG0,0x636c,0xa)
0x63621805,	//0x1b8e		VoC_lw16i_set_inc(REG1,0x6362,0x1)
0x1ABE2B80,	//0x1b90		VoC_jal(CII_update_lsf_p_CN)
		//0x1b92		Q_PLSF_5_01
0x26B76C1C,	//0x1b92		VoC_bez16_d(Q_PLSF_5_02,0x26b7)
0x26481804,	//0x1b94		VoC_lw16i_set_inc(REG0,0x2648,0x1)
0x26521805,	//0x1b96		VoC_lw16i_set_inc(REG1,0x2652,0x1)
0x636C182A,	//0x1b98		VoC_lw16i_set_inc(REG2,0x636c,0xa)
0x26981807,	//0x1b9a		VoC_lw16i_set_inc(REG3,0x2698,0x1)
0x0A84E04C,	//0x1b9c		VoC_lw16i(REG4,0x3fff)(lo)	|	VoC_movreg16(RL6_LO,REG2,DEFAULT)
0x2C153FFF,	//0x1b9e		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i(REG4,0x3fff)(hi)
0x9B041BAC,	//0x1ba0		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x0A859B0B,	//0x1ba2		VoC_lw16i(REG5,0xfff)(lo)	|	VoC_multf32inc_rp(REG67,REG4,REG1,DEFAULT)
0xC8E30FFF,	//0x1ba4		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_lw16i(REG5,0xfff)(hi)
0xE8E1CDEC,	//0x1ba6		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
		//0x1ba8		VoC_endloop0
0x0936D12A,	//0x1ba8		VoC_add32_rd(RL6,RL6,0x370)(lo)	|	VoC_mac32inc_rp(REG5,REG2,DEFAULT)
0xE1820370,	//0x1baa		VoC_movreg16(REG2,RL6_LO,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x370)(hi)
		//0x1bac		VoC_endloop1
0xFFC05CB9,	//0x1bac		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
		//0x1bae		Q_PLSF_5_02
0x26B66E0A,	//0x1bae		VoC_bnez16_d(Q_PLSF_5_03,0x26b6)
0x26480A8C,	//0x1bb0		VoC_lw16i(RL6_LO,0x2648)
0x26520A8D,	//0x1bb2		VoC_lw16i(RL6_HI,0x2652)
0x636C0A80,	//0x1bb4		VoC_lw16i(REG0,0x636c)
0x1A9D2B80,	//0x1bb6		VoC_jal(CII_update_lsf_history)
		//0x1bb8		Q_PLSF_5_03
0xFFC0DFA9,	//0x1bb8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1bba		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1bbb		CII_plsf5_dtx2
0x26980A80,	//0x1bbc		VoC_lw16i(REG0,0x2698)
0x26660A81,	//0x1bbe		VoC_lw16i(REG1,0x2666)
0x08BA2B80,	//0x1bc0		VoC_jal(CII_Lsf_wt)
0x265C1808,	//0x1bc2		VoC_lw16i_set_inc(REG0,0x265c,0x2)
0x26981809,	//0x1bc4		VoC_lw16i_set_inc(REG1,0x2698,0x2)
0x2648180A,	//0x1bc6		VoC_lw16i_set_inc(REG2,0x2648,0x2)
0x2652180B,	//0x1bc8		VoC_lw16i_set_inc(REG3,0x2652,0x2)
0xDFA9FF44,	//0x1bca		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD9CBE8A4,	//0x1bcc		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDD3DDC4,	//0x1bce		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x1bd0		VoC_endloop0
0xE580DDDB,	//0x1bd0		VoC_return	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x1bd2		CII_plsf5_dtx3
0x26481808,	//0x1bd2		VoC_lw16i_set_inc(REG0,0x2648,0x2)
0x26701809,	//0x1bd4		VoC_lw16i_set_inc(REG1,0x2670,0x2)
0x2652180A,	//0x1bd6		VoC_lw16i_set_inc(REG2,0x2652,0x2)
0x267A180B,	//0x1bd8		VoC_lw16i_set_inc(REG3,0x267a,0x2)
0x63620A84,	//0x1bda		VoC_lw16i(REG4,0x6362)
0xD9A3F045,	//0x1bdc		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xE8AAFFC0,	//0x1bde		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0xBA3F3A36,	//0x1be0		VoC_sub16inc_pr(REG7,REG0,REG7,IN_PARALLEL)	|	VoC_sub16inc_pr(REG6,REG0,REG6,DEFAULT)
0xD9A37F1E,	//0x1be2		VoC_lw32_p(REG67,REG4,IN_PARALLEL)	|	VoC_movreg32(RL6,REG67,DEFAULT)
0xBABF3AB6,	//0x1be4		VoC_sub16inc_pr(REG7,REG2,REG7,IN_PARALLEL)	|	VoC_sub16inc_pr(REG6,REG2,REG6,DEFAULT)
0xC12C5DCE,	//0x1be6		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0xD9A3DDDB,	//0x1be8		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x1be9		VoC_endloop0
0xDF80DF82,	//0x1bea		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xFF46E580,	//0x1bec		VoC_lw32z(RL6,DEFAULT)	|	VoC_return
		//0x1bed		CII_plsf5_dtx4
0x20A61808,	//0x1bee		VoC_lw16i_set_inc(REG0,0x20a6,0x2)
0xDDC6E8A1,	//0x1bf0		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1bf1		VoC_endloop0
0xE841FFC0,	//0x1bf2		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_NAD
		//0x1bf4		VoC_endloop0
0xDF015F80,	//0x1bf4		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xDF83E580,	//0x1bf6		VoC_pop16(REG3,DEFAULT)	|	VoC_return
		//0x1bf7		CII_PRM2_BITS_POST_PROCESS_EFR
0xE2865FE9,	//0x1bf8		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x1D401808,	//0x1bfa		VoC_lw16i_set_inc(REG0,0x1d40,0x2)
0x1CA01809,	//0x1bfc		VoC_lw16i_set_inc(REG1,0x1ca0,0x2)
0x060E2B80,	//0x1bfe		VoC_jal(CII_copy_xy)
0x1E811405,	//0x1c00		VoC_lw16_d(REG5,0x1e81)
0x1E821808,	//0x1c02		VoC_lw16i_set_inc(REG0,0x1e82,0x2)
0x1DE21809,	//0x1c04		VoC_lw16i_set_inc(REG1,0x1de2,0x2)
0x1DE11505,	//0x1c06		VoC_sw16_d(REG5,0x1de1)
0x2C8ED9C3,	//0x1c08		VoC_loop_i(0x0,0x47)(lo)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD9C31C0C,	//0x1c0a		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x47)(hi)
		//0x1c0c		VoC_endloop0
0x6E05DDCB,	//0x1c0c		VoC_bnez16_d(COD12D2_NO_CN_ENCODING,0x4302)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xFFC04302,	//0x1c0e		VoC_NAD	|	VoC_bnez16_d(COD12D2_NO_CN_ENCODING,0x4302)(hi)
0x1B342B80,	//0x1c10		VoC_jal(CII_CN_encoding)
		//0x1c12		COD12D2_NO_CN_ENCODING
0x05EE1804,	//0x1c12		VoC_lw16i_set_inc(REG0,0x5ee,0x1)
0x00390A85,	//0x1c14		VoC_lw16i(REG5,0x39)
0x13BD2B80,	//0x1c16		VoC_jal(CII_prm2bits_amr_efr)
0xFFC0DFA9,	//0x1c18		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1c1a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1c1b		CII_EFR_DTX_PART1
0xF0045640,	//0x1c1c		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0x25461806,	//0x1c1e		VoC_lw16i_set_inc(REG2,0x2546,0x1)
0x1807D626,	//0x1c20		VoC_lw16i_set_inc(REG3,0x1d40,0x1)(lo)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0xC19B1D40,	//0x1c22		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1d40,0x1)(hi)
0x08D72B80,	//0x1c24		VoC_jal(CII_Residu_new)
0x1AE22B80,	//0x1c26		VoC_jal(CII_compute_CN_excitation_gain)
0xD6717000,	//0x1c28		VoC_lw16_sd(REG1,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x03390709,	//0x1c2a		VoC_add16_rd(REG1,REG1,0x339)
0x25961500,	//0x1c2c		VoC_sw16_d(REG0,0x2596)
0x1407DA71,	//0x1c2e		VoC_lw16_d(REG7,0x2594)(lo)	|	VoC_sw16_sd(REG1,0x6,DEFAULT)
0xD6662594,	//0x1c30		VoC_lw16_sd(REG6,0x5,DEFAULT)	|	VoC_lw16_d(REG7,0x2594)(hi)
0x1C3831C6,	//0x1c32		VoC_bnez16_r(cod_amr1116,REG6)
0x1F166A04,	//0x1c34		VoC_bngtz16_d(cod_amr1116,0x1f16)
0x1F111507,	//0x1c36		VoC_sw16_d(REG7,0x1f11)
		//0x1c38		cod_amr1116
0x03314436,	//0x1c38		VoC_bne16_rd(cod_amr1117,REG6,0x331)
0x1F176A04,	//0x1c3a		VoC_bngtz16_d(cod_amr1117,0x1f17)
0x1F101507,	//0x1c3c		VoC_sw16_d(REG7,0x1f10)
		//0x1c3e		cod_amr1117
0x63B41484,	//0x1c3e		VoC_lw32_d(ACC0,0x63b4)
0x26021808,	//0x1c40		VoC_lw16i_set_inc(REG0,0x2602,0x2)
0x13162B80,	//0x1c42		VoC_jal(CII_build_CN_code)
0x1584F101,	//0x1c44		VoC_sw32_d(ACC0,0x63b4)(lo)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x280163B4,	//0x1c46		VoC_and16_rd(REG1,0x1c8f)(lo)	|	VoC_sw32_d(ACC0,0x63b4)(hi)
0x31811C8F,	//0x1c48		VoC_bez16_r(Q_GAIN_CODE104,REG1)(lo)	|	VoC_and16_rd(REG1,0x1c8f)(hi)
0xD6201C54,	//0x1c4a		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_bez16_r(Q_GAIN_CODE104,REG1)(hi)
0x1C5431C0,	//0x1c4c		VoC_bnez16_r(Q_GAIN_CODE104,REG0)
0x63C01808,	//0x1c4e		VoC_lw16i_set_inc(REG0,0x63c0,0x2)
0x1AD02B80,	//0x1c50		VoC_jal(CII_update_gcode0_CN)
0x1C8B1505,	//0x1c52		VoC_sw16_d(REG5,0x1c8b)
		//0x1c54		Q_GAIN_CODE104
0x1C8A1407,	//0x1c54		VoC_lw16_d(REG7,0x1c8a)
0x1507F200,	//0x1c56		VoC_sw16_d(REG7,0x2597)(lo)	|	VoC_lw16i_short(REG0,0x10,DEFAULT)
0x28002597,	//0x1c58		VoC_and16_rd(REG0,0x1c8f)(lo)	|	VoC_sw16_d(REG7,0x2597)(hi)
0x31801C8F,	//0x1c5a		VoC_bez16_r(Q_GAIN_CODE105,REG0)(lo)	|	VoC_and16_rd(REG0,0x1c8f)(hi)
0x0A841C8A,	//0x1c5c		VoC_lw16i(REG4,0x470)(lo)	|	VoC_bez16_r(Q_GAIN_CODE105,REG0)(hi)
0xE0850470,	//0x1c5e		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x470)(hi)
0x63C01808,	//0x1c60		VoC_lw16i_set_inc(REG0,0x63c0,0x2)
0xE200CD3C,	//0x1c62		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG7,DEFAULT)
0xD220E9C1,	//0x1c64		VoC_bimac32inc_rp(REG45,REG0)	|	VoC_loop_i_short(0xe,DEFAULT)
		//0x1c65		VoC_endloop0
0x0538180D,	//0x1c66		VoC_lw16i_set_inc(REG1,0x538,0x3)
0x1C8B1400,	//0x1c68		VoC_lw16_d(REG0,0x1c8b)
0xFF218C0C,	//0x1c6a		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_multf16_rp(REG4,REG0,REG1,DEFAULT)
0x3242C2E2,	//0x1c6c		VoC_bnltz16_r(Q_GAIN_CODE_ABS_02,REG2)(lo)	|	VoC_sub16_rr(REG2,REG3,REG4,DEFAULT)
0x0B121C72,	//0x1c6e		VoC_sub16_dr(REG2,0x36e,REG2)(lo)	|	VoC_bnltz16_r(Q_GAIN_CODE_ABS_02,REG2)(hi)
0xFFC0036E,	//0x1c70		VoC_NAD	|	VoC_sub16_dr(REG2,0x36e,REG2)(hi)
		//0x1c72		Q_GAIN_CODE_ABS_02
0xD676700C,	//0x1c72		VoC_lw16_sd(REG6,0x6,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0xDE08F027,	//0x1c74		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x8E0CEBEE,	//0x1c76		VoC_multf16inc_rp(REG4,REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0x1f,DEFAULT)
0xC2E4FFC0,	//0x1c78		VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)	|	VoC_NOP
0x1C7E3244,	//0x1c7a		VoC_bnltz16_r(Q_GAIN_CODE_ABS3,REG4)
0x036E0B24,	//0x1c7c		VoC_sub16_dr(REG4,0x36e,REG4)
		//0x1c7e		Q_GAIN_CODE_ABS3
0x3245C315,	//0x1c7e		VoC_bnltz16_r(Q_GAIN_CODE106,REG5)(lo)	|	VoC_sub16_rr(REG5,REG4,REG2,DEFAULT)
0x60821C84,	//0x1c80		VoC_movreg16(REG2,REG4,DEFAULT)	|	VoC_bnltz16_r(Q_GAIN_CODE106,REG5)(hi)
0xFFC0F6EC,	//0x1c82		VoC_NAD	|	VoC_movreg16(RL6_LO,REG7,IN_PARALLEL)
		//0x1c84		Q_GAIN_CODE106
		//0x1c84		VoC_endloop0
0x0370073F,	//0x1c84		VoC_add16_rd(REG7,REG7,0x370)
0x03700736,	//0x1c86		VoC_add16_rd(REG6,REG6,0x370)
0xDA76DC6C,	//0x1c88		VoC_sw16_sd(REG6,0x6,DEFAULT)	|	VoC_sw16_p(RL6_LO,REG6,DEFAULT)
		//0x1c8a		Q_GAIN_CODE105
0x20C61805,	//0x1c8a		VoC_lw16i_set_inc(REG1,0x20c6,0x1)
0x76B30AC7,	//0x1c8c		VoC_lw16i(REG7,0xfffff6b3)
0xDC97E881,	//0x1c8e		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x1c8f		VoC_endloop0
0x25971403,	//0x1c90		VoC_lw16_d(REG3,0x2597)
0x1B242B80,	//0x1c92		VoC_jal(CII_update_gain_code_history_tx)
0xFFC0DFA9,	//0x1c94		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xD614E580,	//0x1c96		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_return
		//0x1c97		CII_EFR_LEVINSON_PART
0x644A1FBE,	//0x1c98		VoC_lw16i_set_inc(REG2,0x644a,0xffffffff)
0x644E1804,	//0x1c9a		VoC_lw16i_set_inc(REG0,0x644e,0x1)
0xC0A2C0A2,	//0x1c9c		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x03700712,	//0x1c9e		VoC_add16_rd(REG2,REG2,0x370)
0x262A180B,	//0x1ca0		VoC_lw16i_set_inc(REG3,0x262a,0x2)
0x037C1801,	//0x1ca2		VoC_lw16i_set_inc(REG1,0x37c,0x0)
0x037007A4,	//0x1ca4		VoC_sub16_rd(REG4,REG4,0x370)
0x8F9599D4,	//0x1ca6		VoC_multf16inc_rp(REG5,REG6,REG2,DEFAULT)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
0x8FD4E70B,	//0x1ca8		VoC_multf16inc_rp(REG4,REG7,REG2,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x03701100,	//0x1caa		VoC_mac32inc_pd(REG0,0x370)
0x0682D221,	//0x1cac		VoC_multf32inc_pd(REG45,REG0,0x380)(lo)	|	VoC_bimac32inc_rp(REG45,REG1)
0x99D40380,	//0x1cae		VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)	|	VoC_multf32inc_pd(REG45,REG0,0x380)(hi)
0xF90CC8A2,	//0x1cb0		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xDDDA8F95,	//0x1cb2		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_multf16inc_rp(REG5,REG6,REG2,DEFAULT)
		//0x1cb3		VoC_endloop0
0xF0E6E580,	//0x1cb4		VoC_lw16i_short(REG6,0x7,DEFAULT)	|	VoC_return
		//0x1cb5		CII_EFR_DTX_ENC_RESET
0x242E1808,	//0x1cb6		VoC_lw16i_set_inc(REG0,0x242e,0x2)
0x1CBA2C48,	//0x1cb8		VoC_loop_i(0x0,0x24)
		//0x1cba		VoC_endloop0
0x1482DDC5,	//0x1cba		VoC_lw32_d(REG45,0x388)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x15060388,	//0x1cbc		VoC_sw16_d(REG6,0x634c)(lo)	|	VoC_lw32_d(REG45,0x388)(hi)
0x1506634C,	//0x1cbe		VoC_sw16_d(REG6,0x63b2)(lo)	|	VoC_sw16_d(REG6,0x634c)(hi)
0x158263B2,	//0x1cc0		VoC_sw32_d(REG45,0x635e)(lo)	|	VoC_sw16_d(REG6,0x63b2)(hi)
0x0A86635E,	//0x1cc2		VoC_lw16i(REG6,0x6000)(lo)	|	VoC_sw32_d(REG45,0x635e)(hi)
0x77E76000,	//0x1cc4		VoC_lw16i_short(REG7,0xffffffff,DEFAULT)	|	VoC_lw16i(REG6,0x6000)(hi)
0x0A85E014,	//0x1cc6		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x15067FFF,	//0x1cc8		VoC_sw16_d(REG6,0x634d)(lo)	|	VoC_lw16i(REG5,0x7fff)(hi)
0x1507634D,	//0x1cca		VoC_sw16_d(REG7,0x6357)(lo)	|	VoC_sw16_d(REG6,0x634d)(hi)
0x15046357,	//0x1ccc		VoC_sw16_d(REG4,0x635d)(lo)	|	VoC_sw16_d(REG7,0x6357)(hi)
0xF067635D,	//0x1cce		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_sw16_d(REG4,0x635d)(hi)
0x03861485,	//0x1cd0		VoC_lw32_d(ACC1,0x386)
0x63B31505,	//0x1cd2		VoC_sw16_d(REG5,0x63b3)
0x636C1808,	//0x1cd4		VoC_lw16i_set_inc(REG0,0x636c,0x2)
0x1CDF2C0F,	//0x1cd6		VoC_loop_i(0x1,0x7)
0x449C1809,	//0x1cd8		VoC_lw16i_set_inc(REG1,0x449c,0x2)
0xD9CDE8A4,	//0x1cda		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x1C8F1507,	//0x1cdc		VoC_sw16_d(REG7,0x1c8f)
		//0x1cde		VoC_endloop0
0x1585DDC5,	//0x1cde		VoC_sw32_d(ACC1,0x63b4)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
		//0x1cdf		VoC_endloop1
0xE58063B4,	//0x1ce0		VoC_return	|	VoC_sw32_d(ACC1,0x63b4)(hi)
		//0x1ce2		CII_efr_dtx_func11
0x2807F027,	//0x1ce2		VoC_and16_rd(REG7,0x1c46)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x31871C46,	//0x1ce4		VoC_bez16_r(Ecgains_L3_bis,REG7)(lo)	|	VoC_and16_rd(REG7,0x1c46)(hi)
0x6C081CEF,	//0x1ce6		VoC_bez16_d(Ecgains_L3_bis,0x22be)(lo)	|	VoC_bez16_r(Ecgains_L3_bis,REG7)(hi)
0xD82722BE,	//0x1ce8		VoC_lw16_p(REG7,REG2,DEFAULT)	|	VoC_bez16_d(Ecgains_L3_bis,0x22be)(hi)
0x1CEF34B7,	//0x1cea		VoC_bngt16_rr(Ecgains_L3_bis,REG6,REG7)
0x1507E0E6,	//0x1cec		VoC_sw16_d(REG7,0x254e)(lo)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xE580254E,	//0x1cee		VoC_return	|	VoC_sw16_d(REG7,0x254e)(hi)
		//0x1cef		Ecgains_L3_bis
		//0x1cf0		CII_SUBFRAME_EFR_PART
0x1808FF45,	//0x1cf0		VoC_lw16i_set_inc(REG0,0x21ae,0x2)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x180921AE,	//0x1cf2		VoC_lw16i_set_inc(REG1,0x219a,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x21ae,0x2)(hi)
0xE8A2219A,	//0x1cf4		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x219a,0x2)(hi)
0xDDCDDDC5,	//0x1cf6		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
		//0x1cf7		VoC_endloop0
0xDF81DF8C,	//0x1cf8		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(RL6_LO,DEFAULT)
0xFFC0E580,	//0x1cfa		VoC_NAD	|	VoC_return
