		//0x05d0		VoC_code_section_1
		//0x05d0		CII_FR_Encode
0x03821480,	//0x05d0		VoC_lw32_d(REG01,0x382)
0xDF40DFE9,	//0x05d2		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x05DC31C2,	//0x05d4		VoC_bnez16_r(gsm_encode_reset,REG2)
0x43042008,	//0x05d6		VoC_lw16d_set_inc(REG0,0x4304,0x2)
0x02FC2B80,	//0x05d8		VoC_jal(CII_encoder_homing_frame_test)
0x05E83184,	//0x05da		VoC_bez16_r(FR_label_100,REG4)
		//0x05dc		gsm_encode_reset
0x0BB52B80,	//0x05dc		VoC_jal(CII_encoder_reset_fr)
0x0C402B80,	//0x05de		VoC_jal(CII_vad_init)
0xE0337080,	//0x05e0		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x7FFF0A81,	//0x05e2		VoC_lw16i(REG1,0x7fff)
0x63311503,	//0x05e4		VoC_sw16_d(REG3,0x6331)
0x63321580,	//0x05e6		VoC_sw32_d(REG01,0x6332)
		//0x05e8		FR_label_100
0x06882B80,	//0x05e8		VoC_jal(CII_Gsm_Coder)
0x1CAC1808,	//0x05ea		VoC_lw16i_set_inc(REG0,0x1cac,0x2)
0x63721809,	//0x05ec		VoC_lw16i_set_inc(REG1,0x6372,0x2)
0x1404F023,	//0x05ee		VoC_lw16_d(REG4,0x6331)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x60856331,	//0x05f0		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x6331)(hi)
0x1503FF45,	//0x05f2		VoC_sw16_d(REG3,0x4302)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xE41C4302,	//0x05f4		VoC_and16_rr(REG4,REG3,DEFAULT)	|	VoC_sw16_d(REG3,0x4302)(hi)
0x061431C4,	//0x05f6		VoC_bnez16_r(gsm_enc_label_100,REG4)
0x1CC4180B,	//0x05f8		VoC_lw16i_set_inc(REG3,0x1cc4,0x2)
0x4302150B,	//0x05fa		VoC_sw16_d(ACC1_HI,0x4302)
0xDDDDEB41,	//0x05fc		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_loop_i_short(0x1a,DEFAULT)
		//0x05fd		VoC_endloop0
0x00101605,	//0x05fe		VoC_and16_ri(REG5,0x10)
0x060B3185,	//0x0600		VoC_bez16_r(gsm_enc_label_200,REG5)
0x1CC01404,	//0x0602		VoC_lw16_d(REG4,0x1cc0)
0xD9C46883,	//0x0604		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDCCD9C4,	//0x0606		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0607		VoC_endloop0
0x637A1504,	//0x0608		VoC_sw16_d(REG4,0x637a)
0xD9CCE5CA,	//0x060a		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_jump(gsm_enc_label_100)
		//0x060b		gsm_enc_label_200
0x637A1404,	//0x060c		VoC_lw16_d(REG4,0x637a)
0x1CC01806,	//0x060e		VoC_lw16i_set_inc(REG2,0x1cc0,0x1)
0xD9CCE883,	//0x0610		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCA4DDC4,	//0x0612		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0613		VoC_endloop0
		//0x0614		gsm_enc_label_100
0x06192B80,	//0x0614		VoC_jal(CII_prm2bits_fr)
0xDF05DFA9,	//0x0616		VoC_pop32(ACC1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF027E580,	//0x0618		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_return
		//0x0619		CII_prm2bits_fr
0x1CAC1804,	//0x061a		VoC_lw16i_set_inc(REG0,0x1cac,0x1)
0x20D81805,	//0x061c		VoC_lw16i_set_inc(REG1,0x20d8,0x1)
0x00061FBE,	//0x061e		VoC_lw16i_set_inc(REG2,0x6,0xffffffff)
		//0x0620		PRM2BIT_L1
0x033148B2,	//0x0620		VoC_blt16_rd(PRM2BIT_L2,REG2,0x331)
0x062B2C05,	//0x0622		VoC_loop_i(0x1,0x2)
0x6684D884,	//0x0624		VoC_loop_r_short(REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xE43DF685,	//0x0626		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x5C95F80C,	//0x0628		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x0629		VoC_endloop0
0xFFC0F685,	//0x062a		VoC_NOP	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x062b		VoC_endloop1
0xE5F3DE10,	//0x062c		VoC_jump(PRM2BIT_L1)	|	VoC_inc_p(REG2,DEFAULT)
		//0x062e		PRM2BIT_L2
0x1CC41804,	//0x062e		VoC_lw16i_set_inc(REG0,0x1cc4,0x1)
0x1CB41806,	//0x0630		VoC_lw16i_set_inc(REG2,0x1cb4,0x1)
0x1CBC1807,	//0x0632		VoC_lw16i_set_inc(REG3,0x1cbc,0x1)
0x1CB80A84,	//0x0634		VoC_lw16i(REG4,0x1cb8)
0x1CC00A85,	//0x0636		VoC_lw16i(REG5,0x1cc0)
0xE0157F16,	//0x0638		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0x066B2C09,	//0x063a		VoC_loop_i(0x1,0x4)
0x68E4D8A6,	//0x063c		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xE42FF6C7,	//0x063e		VoC_and16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x5C97F80E,	//0x0640		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x0641		VoC_endloop0
0x58B6F6C7,	//0x0642		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0xFFC0FF32,	//0x0644		VoC_NAD	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0xF6C76845,	//0x0646		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x03702807,	//0x0648		VoC_and16_rd(REG7,0x370)
0x5C97F80E,	//0x064a		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x064b		VoC_endloop0
0xD846F6C7,	//0x064c		VoC_lw16_p(REG6,REG4,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0xF6C76845,	//0x064e		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x03702807,	//0x0650		VoC_and16_rd(REG7,0x370)
0x5C97F80E,	//0x0652		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x0653		VoC_endloop0
0x5856F6C7,	//0x0654		VoC_lw16_p(REG6,REG5,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x68C4E015,	//0x0656		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0xE42FF6C7,	//0x0658		VoC_and16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x5C97F80E,	//0x065a		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x065b		VoC_endloop0
0xE9ADF6C7,	//0x065c		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0xE0C7D886,	//0x065e		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF80EE42F,	//0x0660		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
0xF6C75C97,	//0x0662		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xF80EE42F,	//0x0664		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
0xF6C75C97,	//0x0666		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xF80EE42F,	//0x0668		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
		//0x066a		VoC_endloop0
0x0936DC97,	//0x066a		VoC_add32_rd(RL6,RL6,0x37c)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x066b		VoC_endloop1
0x1804037C,	//0x066c		VoC_lw16i_set_inc(REG0,0x1a,0x1)(lo)	|	VoC_add32_rd(RL6,RL6,0x37c)(hi)
0x0700001A,	//0x066e		VoC_add16_rd(REG0,REG0,0x332)(lo)	|	VoC_lw16i_set_inc(REG0,0x1a,0x1)(hi)
0x18050332,	//0x0670		VoC_lw16i_set_inc(REG1,0x20d8,0x1)(lo)	|	VoC_add16_rd(REG0,REG0,0x332)(hi)
0x180720D8,	//0x0672		VoC_lw16i_set_inc(REG3,0x1,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x20d8,0x1)(hi)
0xF7F20001,	//0x0674		VoC_lw16i_short(INC2,0xffffffff,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1,0x1)(hi)
0x01040A86,	//0x0676		VoC_lw16i(REG6,0x104)
0x06862C23,	//0x0678		VoC_loop_i(0x1,0x11)
0xE0057007,	//0x067a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xE0026A09,	//0x067c		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x7E92D894,	//0x067e		VoC_shr32_rr(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xE467DE18,	//0x0680		VoC_or16_rr(REG7,REG4,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x0685349E,	//0x0682		VoC_bngt16_rr(PRM2BIT_001,REG3,REG6)
0xDE10E5C2,	//0x0684		VoC_inc_p(REG2,DEFAULT)	|	VoC_jump(PRM2BIT_002)
		//0x0685		PRM2BIT_001
		//0x0685		VoC_endloop0
		//0x0686		PRM2BIT_002
		//0x0686		VoC_endloop1
0xE580DC87,	//0x0686		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0688		CII_Gsm_Coder
0x2004DFE9,	//0x0688		VoC_lw16d_set_inc(REG0,0x4304,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x18054304,	//0x068a		VoC_lw16i_set_inc(REG1,0x1fb6,0x1)(lo)	|	VoC_lw16d_set_inc(REG0,0x4304,0x1)(hi)
0x18061FB6,	//0x068c		VoC_lw16i_set_inc(REG2,0x1cac,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x1fb6,0x1)(hi)
0xDFC71CAC,	//0x068e		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1cac,0x1)(hi)
0xDFC1DFC0,	//0x0690		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xFFC05FC2,	//0x0692		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x070E2B80,	//0x0694		VoC_jal(CII_Gsm_Preprocess)
0x07622B80,	//0x0696		VoC_jal(CII_Gsm_LPC_Analysis)
0x0A212B80,	//0x0698		VoC_jal(CII_Gsm_Short_Term_Analysis_Filter)
0x1CC41804,	//0x069a		VoC_lw16i_set_inc(REG0,0x1cc4,0x1)
0x1BE01805,	//0x069c		VoC_lw16i_set_inc(REG1,0x1be0,0x1)
0x1CB41806,	//0x069e		VoC_lw16i_set_inc(REG2,0x1cb4,0x1)
0x1CBC1807,	//0x06a0		VoC_lw16i_set_inc(REG3,0x1cbc,0x1)
0xDFC1DA10,	//0x06a2		VoC_push16(REG1,DEFAULT)	|	VoC_sw16_sd(REG0,0x0,DEFAULT)
0xDFC2DFC1,	//0x06a4		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x1806DFC3,	//0x06a6		VoC_lw16i_set_inc(REG2,0x1cc0,0x1)(lo)	|	VoC_push16(REG3,DEFAULT)
0x18071CC0,	//0x06a8		VoC_lw16i_set_inc(REG3,0x1cb8,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1cc0,0x1)(hi)
0xDFC21CB8,	//0x06aa		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1cb8,0x1)(hi)
0xEFF75FC3,	//0x06ac		VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
		//0x06ae		Gsm_Coder_Loop_start
0x0370073F,	//0x06ae		VoC_add16_rd(REG7,REG7,0x370)
0x03313C27,	//0x06b0		VoC_bngt16_rd(Gsm_Coder_Loop_start2,REG7,0x331)
0x06E02B00,	//0x06b2		VoC_jump_lg(Gsm_Coder_Loop_End)
		//0x06b4		Gsm_Coder_Loop_start2
0x632F1507,	//0x06b4		VoC_sw16_d(REG7,0x632f)
0x0340083E,	//0x06b6		VoC_mult16_rd(REG6,REG7,0x340)
0xC030D680,	//0x06b8		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16_sd(REG0,0x7,DEFAULT)
0xF0045AA7,	//0x06ba		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x9,DEFAULT)
0x08ED2B80,	//0x06bc		VoC_jal(CII_Gsm_Long_Term_Predictor)
0x0B8A2B80,	//0x06be		VoC_jal(CII_Gsm_RPE_Encoding)
0xE0D55674,	//0x06c0		VoC_lw16i_short(REG5,0xd,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0xD651412C,	//0x06c2		VoC_lw16_sd(REG1,0x4,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x63011806,	//0x06c4		VoC_lw16i_set_inc(REG2,0x6301,0x1)
0xE2855A74,	//0x06c6		VoC_lw16i_short(REG5,0x28,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x6,DEFAULT)
0xC06C5660,	//0x06c8		VoC_add16_rr(REG4,REG1,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x6D03C02D,	//0x06ca		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_add16_rr(REG5,REG0,REG5,DEFAULT)
0xA28EA28E,	//0x06cc		VoC_add16inc_pp(REG6,REG2,REG1,DEFAULT)	|	VoC_add16inc_pp(REG6,REG2,REG1,IN_PARALLEL)
		//0x06ce		VoC_endloop0
0xD610DC86,	//0x06ce		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xD632D621,	//0x06d0		VoC_lw16_sd(REG2,0x2,DEFAULT)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x0900D643,	//0x06d2		VoC_add32_rd(REG01,REG01,0x37c)(lo)	|	VoC_lw16_sd(REG3,0x3,DEFAULT)
0x0909037C,	//0x06d4		VoC_add32_rd(REG23,REG23,0x37c)(lo)	|	VoC_add32_rd(REG01,REG01,0x37c)(hi)
0xDA65037C,	//0x06d6		VoC_sw16_sd(REG5,0x5,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x37c)(hi)
0xDA10DA54,	//0x06d8		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_sd(REG4,0x4,DEFAULT)
0xDA32DA21,	//0x06da		VoC_sw16_sd(REG2,0x2,DEFAULT)	|	VoC_sw16_sd(REG1,0x1,DEFAULT)
0xD6A7DA43,	//0x06dc		VoC_lw16_sd(REG7,0x9,DEFAULT)	|	VoC_sw16_sd(REG3,0x3,DEFAULT)
0x06AE2B00,	//0x06de		VoC_jump_lg(Gsm_Coder_Loop_start)
		//0x06e0		Gsm_Coder_Loop_End
0x2803F023,	//0x06e0		VoC_and16_rd(REG3,0x6331)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x31C36331,	//0x06e2		VoC_bnez16_r(coder_label_100,REG3)(lo)	|	VoC_and16_rd(REG3,0x6331)(hi)
0x710606FA,	//0x06e4		VoC_lw16i_short(REG6,0x8,DEFAULT)	|	VoC_bnez16_r(coder_label_100,REG3)(hi)
0x1804E007,	//0x06e6		VoC_lw16i_set_inc(REG0,0x6362,0x1)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xEA066362,	//0x06e8		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6362,0x1)(hi)
0xE0055884,	//0x06ea		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x06EF3244,	//0x06ec		VoC_bnltz16_r(DTX_MODE_label_LBC,REG4)
0xC8D3F7E5,	//0x06ee		VoC_add32_rr(REG67,REG67,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
		//0x06ef		DTX_MODE_label_LBC
		//0x06ef		VoC_endloop0
0x60C7FA23,	//0x06f0		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0x4,DEFAULT)
0xFFC0E006,	//0x06f2		VoC_NAD	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x0C292B80,	//0x06f4		VoC_jal(CII_APCM_quantization_sub)
0x1CC01804,	//0x06f6		VoC_lw16i_set_inc(REG0,0x1cc0,0x1)
0xDC87E881,	//0x06f8		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x06f9		VoC_endloop0
		//0x06fa		coder_label_100
0x443BF023,	//0x06fa		VoC_bne16_rd(coder_label_200,REG3,0x4045)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xFFC04045,	//0x06fc		VoC_NAD	|	VoC_bne16_rd(coder_label_200,REG3,0x4045)(hi)
0x0F562B80,	//0x06fe		VoC_jal(CII_periodicity_update_fr)
0x0C922B80,	//0x0700		VoC_jal(CII_tone_detection_fr)
		//0x0702		coder_label_200
0x1C081808,	//0x0702		VoC_lw16i_set_inc(REG0,0x1c08,0x2)
0x1B681809,	//0x0704		VoC_lw16i_set_inc(REG1,0x1b68,0x2)
0xE1E66942,	//0x0706		VoC_lw16i_short(REG6,0x1e,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x0708		VoC_endloop0
0x2B80DF87,	//0x0708		VoC_jal(CII_copy)(lo)	|	VoC_pop16(REG7,DEFAULT)
0xDFA90C20,	//0x070a		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_copy)(hi)
0xE580FFC0,	//0x070c		VoC_return	|	VoC_NOP
		//0x070e		CII_Gsm_Preprocess
0x65461806,	//0x070e		VoC_lw16i_set_inc(REG2,0x6546,0x1)
0x1C821486,	//0x0710		VoC_lw32_d(RL6,0x1c82)
0x1C801406,	//0x0712		VoC_lw16_d(REG6,0x1c80)
0x1C841407,	//0x0714		VoC_lw16_d(REG7,0x1c84)
0x03821485,	//0x0716		VoC_lw32_d(ACC1,0x382)
0x7FDF0A8F,	//0x0718		VoC_lw16i(RL7_HI,0x7fdf)
0x11EC0ACE,	//0x071a		VoC_lw16i(RL7_LO,0xffff91ec)
0xFFC05FC2,	//0x071c		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x07462D41,	//0x071e		VoC_loop_i(0x1,0xa0)
0xFF315885,	//0x0720		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFF44781D,	//0x0722		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x3,DEFAULT)
0xFA7E78F5,	//0x0724		VoC_shr32_ri(RL6,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
0xF6A64374,	//0x0726		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG5,REG6,DEFAULT)
0x072C3244,	//0x0728		VoC_bnltz16_r(Gsm_Preprocess_L1,REG4)
0xFFC077E9,	//0x072a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)
		//0x072c		Gsm_Preprocess_L1
0xF7846088,	//0x072c		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0x03802981,	//0x072e		VoC_and32_rd(REG23,0x380)
0xCC9EE1E3,	//0x0730		VoC_multf32_rr(RL6,REG2,REG3,DEFAULT)	|	VoC_movreg16(REG3,RL7_HI,DEFAULT)
0xC9AEFB8C,	//0x0732		VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff1,DEFAULT)
0x4934FA86,	//0x0734		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x10,DEFAULT)
0xE1C2CD1E,	//0x0736		VoC_movreg16(REG2,RL7_LO,DEFAULT)	|	VoC_multf32_rr(RL6,REG4,REG3,IN_PARALLEL)
0x49A6FA0E,	//0x0738		VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0x0931CCBA,	//0x073a		VoC_add32_rd(REG23,RL6,0x37e)(lo)	|	VoC_multf32_rr(REG45,REG2,REG7,IN_PARALLEL)
0x48AA037E,	//0x073c		VoC_add32_rr(REG45,REG45,ACC1,DEFAULT)	|	VoC_add32_rd(REG23,RL6,0x37e)(hi)
0x4155FA79,	//0x073e		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_shr32_ri(REG23,0xf,IN_PARALLEL)
0xE047D614,	//0x0740		VoC_movreg16(REG7,REG2,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x03700723,	//0x0742		VoC_add16_rd(REG3,REG4,0x370)
0xDC955C42,	//0x0744		VoC_sw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG2,REG4,DEFAULT)
		//0x0746		VoC_endloop1
0x1506DA13,	//0x0746		VoC_sw16_d(REG6,0x1c80)(lo)	|	VoC_sw16_sd(REG3,0x0,DEFAULT)
0x15861C80,	//0x0748		VoC_sw32_d(RL6,0x1c82)(lo)	|	VoC_sw16_d(REG6,0x1c80)(hi)
0xE0E81C82,	//0x074a		VoC_movreg16(ACC0_LO,REG7,DEFAULT)	|	VoC_sw32_d(RL6,0x1c82)(hi)
0x3247F009,	//0x074c		VoC_bnltz16_r(Gsm_Preprocess_L2,REG7)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xF7E90750,	//0x074e		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Gsm_Preprocess_L2,REG7)(hi)
		//0x0750		Gsm_Preprocess_L2
0x1584DF82,	//0x0750		VoC_sw32_d(ACC0,0x1c84)(lo)	|	VoC_pop16(REG2,DEFAULT)
0xE5801C84,	//0x0752		VoC_return	|	VoC_sw32_d(ACC0,0x1c84)(hi)
		//0x0754		CII_step_t
0xC0A98D03,	//0x0754		VoC_add16_rr(REG1,REG2,REG5,DEFAULT)	|	VoC_multf16_rp(REG3,REG4,REG0,DEFAULT)
0xF84BC0CB,	//0x0756		VoC_shr16_ri(REG3,0x9,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0x341EC3B9,	//0x0758		VoC_bgt16_rr(step_t_L2,REG3,REG6)(lo)	|	VoC_sub16_rr(REG1,REG6,REG7,DEFAULT)
0xF001075F,	//0x075a		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_bgt16_rr(step_t_L2,REG3,REG6)(hi)
0x075F343B,	//0x075c		VoC_bgt16_rr(step_t_L2,REG7,REG3)
0xFFC0C2F9,	//0x075e		VoC_NOP	|	VoC_sub16_rr(REG1,REG3,REG7,DEFAULT)
		//0x075f		step_t_L2
0xE580DC81,	//0x0760		VoC_return	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
		//0x0762		CII_Gsm_LPC_Analysis
0x5630DFE9,	//0x0762		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xFF43E043,	//0x0764		VoC_lw32z(REG67,DEFAULT)	|	VoC_lw16i_short(REG3,0x4,IN_PARALLEL)
0x1507D885,	//0x0766		VoC_sw16_d(REG7,0x1f1e)(lo)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFFC01F1E,	//0x0768		VoC_NAD	|	VoC_sw16_d(REG7,0x1f1e)(hi)
0x07732D40,	//0x076a		VoC_loop_i(0x0,0xa0)
0x07703245,	//0x076c		VoC_bnltz16_r(Autocor_L1,REG5)
0xFFC043AD,	//0x076e		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x0770		Autocor_L1
0x077334AF,	//0x0770		VoC_bngt16_rr(Autocor_L2,REG5,REG7)
0xD885E0A7,	//0x0772		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0773		Autocor_L2
		//0x0773		VoC_endloop0
0x077A3187,	//0x0774		VoC_bez16_r(Autocor_L3,REG7)
0x0BE92B80,	//0x0776		VoC_jal(CII_gsm_norm)
0xFFC042F6,	//0x0778		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG3,REG6,DEFAULT)
		//0x077a		Autocor_L3
0x07983146,	//0x077a		VoC_bngtz16_r(Autocor_L4,REG6)
0x40000A87,	//0x077c		VoC_lw16i(REG7,0x4000)
0x03704096,	//0x077e		VoC_be16_rd(Autocor_L5,REG6,0x370)
0x403EF80F,	//0x0780		VoC_be16_rd(Autocor_L5,REG6,0x330)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF80F0330,	//0x0782		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_be16_rd(Autocor_L5,REG6,0x330)(hi)
0x03314026,	//0x0784		VoC_be16_rd(Autocor_L5,REG6,0x331)
0xFFC0780F,	//0x0786		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x0788		Autocor_L5
0xF009590D,	//0x0788		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0xF0085631,	//0x078a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x1BCEE020,	//0x078c		VoC_multf32inc_rp(RL6,REG7,REG1,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0xFFC09BCF,	//0x078e		VoC_NAD	|	VoC_multf32inc_rp(RL7,REG7,REG1,IN_PARALLEL)
0x07972CA0,	//0x0790		VoC_loop_i(0x0,0x50)
0xC9EF49AE,	//0x0792		VoC_add32_rr(RL7,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
0x1BCEE1AE,	//0x0794		VoC_multf32inc_rp(RL6,REG7,REG1,DEFAULT)	|	VoC_movreg16(RL7_LO,RL6_HI,DEFAULT)
0xDDC79BCF,	//0x0796		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_multf32inc_rp(RL7,REG7,REG1,IN_PARALLEL)
		//0x0797		VoC_endloop0
		//0x0798		Autocor_L4
0xF0045630,	//0x0798		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x2056180A,	//0x079a		VoC_lw16i_set_inc(REG2,0x2056,0x2)
0xFF466001,	//0x079c		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xF3FD604F,	//0x079e		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0xDE001C4C,	//0x07a0		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_multf32_pp(ACC0,REG1,REG1,DEFAULT)
0xF6046922,	//0x07a2		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
		//0x07a4		VoC_endloop0
0x5324DDD6,	//0x07a4		VoC_mac32_pp(REG4,REG4,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0x1C0DF7E2,	//0x07a6		VoC_multf32_pp(ACC1,REG0,REG1,DEFAULT)	|	VoC_movreg16(REG2,RL7_HI,IN_PARALLEL)
0x7065F7EE,	//0x07a8		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_movreg16(RL7_LO,RL7_HI,IN_PARALLEL)
0xDDD4F00B,	//0x07aa		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xFFC05DD5,	//0x07ac		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x07BA2C0D,	//0x07ae		VoC_loop_i(0x1,0x6)
0xDE007F39,	//0x07b0		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0xD8046001,	//0x07b2		VoC_lw16_p(REG4,REG0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD9DC6745,	//0x07b4		VoC_lw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0xFFC0D121,	//0x07b6		VoC_NOP	|	VoC_mac32inc_rp(REG4,REG1,DEFAULT)
0xDDD4D9DC,	//0x07b8		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x07b9		VoC_endloop0
		//0x07ba		VoC_endloop1
0x0370072D,	//0x07ba		VoC_add16_rd(REG5,REG5,0x370)
0xDE007F39,	//0x07bc		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x07C82D31,	//0x07be		VoC_loop_i(0x1,0x98)
0xD8046001,	//0x07c0		VoC_lw16_p(REG4,REG0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD9DC6925,	//0x07c2		VoC_lw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFFC0D121,	//0x07c4		VoC_NOP	|	VoC_mac32inc_rp(REG4,REG1,DEFAULT)
0xDDD4D9DC,	//0x07c6		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x07c7		VoC_endloop0
		//0x07c8		VoC_endloop1
0xDE007F39,	//0x07c8		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0xF0055630,	//0x07ca		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xF6026003,	//0x07cc		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x07DC3146,	//0x07ce		VoC_bngtz16_r(Autocor_L6,REG6)
0x1F1E1506,	//0x07d0		VoC_sw16_d(REG6,0x1f1e)
0x036E0B36,	//0x07d2		VoC_sub16_dr(REG6,0x36e,REG6)
0xFFC059D2,	//0x07d4		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x07DB2CA0,	//0x07d6		VoC_loop_i(0x0,0x50)
0xFE357E34,	//0x07d8		VoC_shr16_rr(REG5,REG6,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG6,DEFAULT)
0xDDDAD9D2,	//0x07da		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x07db		VoC_endloop0
		//0x07dc		Autocor_L6
0xF067F026,	//0x07dc		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x40454486,	//0x07de		VoC_bne16_rd(NO_DTX_MODE_label_100,REG6,0x4045)
0x0D642B80,	//0x07e0		VoC_jal(CII_vad_computation_fr)
0x43011406,	//0x07e2		VoC_lw16_d(REG6,0x4301)
0x08D32B80,	//0x07e4		VoC_jal(CII_tx_dtx_fr)
		//0x07e6		NO_DTX_MODE_label_100
0xF052FF44,	//0x07e6		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x43011506,	//0x07e8		VoC_sw16_d(REG6,0x4301)
0x63311507,	//0x07ea		VoC_sw16_d(REG7,0x6331)
0x2056180A,	//0x07ec		VoC_lw16i_set_inc(REG2,0x2056,0x2)
0x20566E08,	//0x07ee		VoC_bnez16_d(Ref_coeff_L1,0x2056)
0xF0045622,	//0x07f0		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0xDDD4E881,	//0x07f2		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x07f3		VoC_endloop0
0x08512B00,	//0x07f4		VoC_jump_lg(Ref_coeff_LEnd)
		//0x07f6		Ref_coeff_L1
0x20561483,	//0x07f6		VoC_lw32_d(REG67,0x2056)
0x0BE92B80,	//0x07f8		VoC_jal(CII_gsm_norm)
0x20C41804,	//0x07fa		VoC_lw16i_set_inc(REG0,0x20c4,0x1)
0x20BA1805,	//0x07fc		VoC_lw16i_set_inc(REG1,0x20ba,0x1)
0x033C0B36,	//0x07fe		VoC_sub16_dr(REG6,0x33c,REG6)
0x037C0906,	//0x0800		VoC_add32_rd(RL6,REG01,0x37c)
0xD9D2E926,	//0x0802		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0x1807FEB2,	//0x0804		VoC_lw16i_set_inc(REG3,0x20cf,0x1)(lo)	|	VoC_shr32_rr(REG45,REG6,DEFAULT)
0xDC8420CF,	//0x0806		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x20cf,0x1)(hi)
		//0x0808		VoC_endloop0
0x61A1DC94,	//0x0808		VoC_movreg16(REG1,RL6_HI,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x606DF006,	//0x080a		VoC_movreg16(RL6_HI,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x68E3D622,	//0x080c		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16_sd(REG2,0x1,IN_PARALLEL)
0xD894D894,	//0x080e		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
		//0x0810		VoC_endloop0
0x7025DCB4,	//0x0810		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xFFC0D90F,	//0x0812		VoC_NAD	|	VoC_lw32_sd(RL7,0x0,IN_PARALLEL)
0x08502C11,	//0x0814		VoC_loop_i(0x1,0x8)
0x20C41483,	//0x0816		VoC_lw32_d(REG67,0x20c4)
0xF6C360E4,	//0x0818		VoC_movreg16(REG3,REG6,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x081E3247,	//0x081a		VoC_bnltz16_r(Ref_coeff_L2,REG7)
0x036E0B3F,	//0x081c		VoC_sub16_dr(REG7,0x36e,REG7)
		//0x081e		Ref_coeff_L2
0x082734BE,	//0x081e		VoC_bngt16_rr(Ref_coeff_L3,REG7,REG6)
0x03360B2E,	//0x0820		VoC_sub16_dr(REG6,0x336,REG5)
0xE781F004,	//0x0822		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0824		VoC_endloop0
0x2B00DCA4,	//0x0824		VoC_jump_lg(Ref_coeff_LEnd)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE0E00851,	//0x0826		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jump_lg(Ref_coeff_LEnd)(hi)
		//0x0827		Ref_coeff_L3
0xDFC260C1,	//0x0828		VoC_push16(REG2,IN_PARALLEL)	|	VoC_movreg16(REG1,REG6,DEFAULT)
0xFFC05F46,	//0x082a		VoC_NAD(IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x02CC2B80,	//0x082c		VoC_jal(CII_DIV_S)
0xDF066040,	//0x082e		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x3144DF82,	//0x0830		VoC_bngtz16_r(Ref_coeff_L4,REG4)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x0B000835,	//0x0832		VoC_sub16_dr(REG0,0x36e,REG0)(lo)	|	VoC_bngtz16_r(Ref_coeff_L4,REG4)(hi)
0xCD03036E,	//0x0834		VoC_multf32_rr(REG67,REG4,REG0,DEFAULT)	|	VoC_sub16_dr(REG0,0x36e,REG0)(hi)
		//0x0835		Ref_coeff_L4
0x5CA0D90F,	//0x0836		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0x4185C8FB,	//0x0838		VoC_be16_rd(Ref_coeff_LEnd,REG5,0x335)(lo)	|	VoC_add32_rr(REG67,REG67,RL7,IN_PARALLEL)
0x40FF0335,	//0x083a		VoC_add16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_be16_rd(Ref_coeff_LEnd,REG5,0x335)(hi)
0x7F30F604,	//0x083c		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_movreg16(REG4,REG0,IN_PARALLEL)
0x0B2EE013,	//0x083e		VoC_sub16_dr(REG6,0x335,REG5)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x15070335,	//0x0840		VoC_sw16_d(REG7,0x20c4)(lo)	|	VoC_sub16_dr(REG6,0x335,REG5)(hi)
0xC15D20C4,	//0x0842		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_sw16_d(REG7,0x20c4)(hi)
0xC01B678B,	//0x0844		VoC_add16_rr(REG3,REG0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xFFC0990B,	//0x0846		VoC_NOP	|	VoC_multf32_rp(REG67,REG4,REG1,DEFAULT)
0x81DFC8FB,	//0x0848		VoC_add16_rp(REG7,REG7,REG3,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xDC879B1C,	//0x084a		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)
0x81CFC93B,	//0x084c		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL7,DEFAULT)
0xDC97FFC0,	//0x084e		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
		//0x084f		VoC_endloop0
		//0x0850		VoC_endloop1
0xD620FFC0,	//0x0850		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_NOP
		//0x0851		Ref_coeff_LEnd
0xD806E91D,	//0x0852		VoC_lw16_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x3246E0C5,	//0x0854		VoC_bnltz16_r(Trans_to_Log_L1,REG6)(lo)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x0B360859,	//0x0856		VoC_sub16_dr(REG6,0x36e,REG6)(lo)	|	VoC_bnltz16_r(Trans_to_Log_L1,REG6)(hi)
0xE0C7036E,	//0x0858		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_sub16_dr(REG6,0x36e,REG6)(hi)
		//0x0859		Trans_to_Log_L1
0x0A83F80E,	//0x085a		VoC_lw16i(REG3,0x5666)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x34BB5666,	//0x085c		VoC_bngt16_rr(Trans_to_Log_L4,REG7,REG3)(lo)	|	VoC_lw16i(REG3,0x5666)(hi)
0x0A83086A,	//0x085e		VoC_lw16i(REG3,0x2b33)(lo)	|	VoC_bngt16_rr(Trans_to_Log_L4,REG7,REG3)(hi)
0xC3DE2B33,	//0x0860		VoC_sub16_rr(REG6,REG7,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x2b33)(hi)
0x799A0A83,	//0x0862		VoC_lw16i(REG3,0x799a)
0x086A34BB,	//0x0864		VoC_bngt16_rr(Trans_to_Log_L4,REG7,REG3)
0x66000A86,	//0x0866		VoC_lw16i(REG6,0x6600)
0xF8F6C3F6,	//0x0868		VoC_shr16_ri(REG6,0xfffffffe,DEFAULT)	|	VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)
		//0x086a		Trans_to_Log_L4
0x086F3105,	//0x086a		VoC_bgtz16_r(Trans_to_Log_L5,REG5)
0x036E0B36,	//0x086c		VoC_sub16_dr(REG6,0x36e,REG6)
0xDC86FFC0,	//0x086e		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x086f		Trans_to_Log_L5
		//0x086f		VoC_endloop0
0x4113F063,	//0x0870		VoC_be16_rd(DTX_MODE_label_200,REG3,0x6331)(lo)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x1FB86331,	//0x0872		VoC_lw16i_set_inc(REG0,0x6360,0xfffffffe)(lo)	|	VoC_be16_rd(DTX_MODE_label_200,REG3,0x6331)(hi)
0x1FB96360,	//0x0874		VoC_lw16i_set_inc(REG1,0x6358,0xfffffffe)(lo)	|	VoC_lw16i_set_inc(REG0,0x6360,0xfffffffe)(hi)
0x180A6358,	//0x0876		VoC_lw16i_set_inc(REG2,0x1cac,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x6358,0xfffffffe)(hi)
0x69831CAC,	//0x0878		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1cac,0x2)(hi)
0xD9CCD9CC,	//0x087a		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,IN_PARALLEL)
		//0x087c		VoC_endloop0
0x1809DDC4,	//0x087c		VoC_lw16i_set_inc(REG1,0x6342,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x68836342,	//0x087e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6342,0x2)(hi)
0xD9D4D9D4,	//0x0880		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x0882		VoC_endloop0
0xF203DDCC,	//0x0882		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0883		DTX_MODE_label_200
0x6331458B,	//0x0884		VoC_bne16_rd(DTX_MODE_label_300,REG3,0x6331)
0x1CAC1806,	//0x0886		VoC_lw16i_set_inc(REG2,0x1cac,0x1)
0x63421804,	//0x0888		VoC_lw16i_set_inc(REG0,0x6342,0x1)
0x700DF111,	//0x088a		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0xFFC0E02C,	//0x088c		VoC_NAD	|	VoC_lw16i_short(RL6_LO,0x2,IN_PARALLEL)
0x089C2C11,	//0x088e		VoC_loop_i(0x1,0x8)
0xFF356001,	//0x0890		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xE886FFC0,	//0x0892		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xE0075896,	//0x0894		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x08993246,	//0x0896		VoC_bnltz16_r(DTX_MODE_label_LAB,REG6)
0xC95DF7E7,	//0x0898		VoC_add32_rr(ACC1,ACC1,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x0899		DTX_MODE_label_LAB
		//0x0899		VoC_endloop0
0xDE00FA15,	//0x089a		VoC_inc_p(REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x2,DEFAULT)
		//0x089c		VoC_endloop1
0xF030DCAA,	//0x089c		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)
		//0x089d		DTX_MODE_label_300
0xEE075620,	//0x089e		VoC_lw16i_short(REG7,0xffffffe0,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0x01000A82,	//0x08a0		VoC_lw16i(REG2,0x100)
0x50000A84,	//0x08a2		VoC_lw16i(REG4,0x5000)
0xE1F67005,	//0x08a4		VoC_lw16i_short(REG6,0x1f,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x07542B80,	//0x08a6		VoC_jal(CII_step_t)
0x07542B80,	//0x08a8		VoC_jal(CII_step_t)
0x08000A85,	//0x08aa		VoC_lw16i(REG5,0x800)
0xEF0771E6,	//0x08ac		VoC_lw16i_short(REG7,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xf,DEFAULT)
0x07542B80,	//0x08ae		VoC_jal(CII_step_t)
0x76000AC5,	//0x08b0		VoC_lw16i(REG5,0xfffff600)
0x07542B80,	//0x08b2		VoC_jal(CII_step_t)
0x368C0A84,	//0x08b4		VoC_lw16i(REG4,0x368c)
0x005E0A85,	//0x08b6		VoC_lw16i(REG5,0x5e)
0xEF8770E6,	//0x08b8		VoC_lw16i_short(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0x07542B80,	//0x08ba		VoC_jal(CII_step_t)
0x3C000A84,	//0x08bc		VoC_lw16i(REG4,0x3c00)
0x79000AC5,	//0x08be		VoC_lw16i(REG5,0xfffff900)
0x07542B80,	//0x08c0		VoC_jal(CII_step_t)
0x21560A84,	//0x08c2		VoC_lw16i(REG4,0x2156)
0x7EAB0AC5,	//0x08c4		VoC_lw16i(REG5,0xfffffeab)
0xEFC77066,	//0x08c6		VoC_lw16i_short(REG7,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0x07542B80,	//0x08c8		VoC_jal(CII_step_t)
0x234C0A84,	//0x08ca		VoC_lw16i(REG4,0x234c)
0x7B880AC5,	//0x08cc		VoC_lw16i(REG5,0xfffffb88)
0x07542B80,	//0x08ce		VoC_jal(CII_step_t)
0xFFC0DFA9,	//0x08d0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF023E580,	//0x08d2		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_return
		//0x08d3		CII_tx_dtx_fr
0x6333071D,	//0x08d4		VoC_add16_rd(REG5,REG3,0x6333)
0xE0447067,	//0x08d6		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0x08EA3533,	//0x08d8		VoC_be16_rr(tx_dtx_end,REG6,REG3)
0x63321404,	//0x08da		VoC_lw16_d(REG4,0x6332)
0x08E131C4,	//0x08dc		VoC_bnez16_r(tx_dtx_100,REG4)
0xE1077005,	//0x08de		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF0A7E5CA,	//0x08e0		VoC_lw16i_short(REG7,0x5,DEFAULT)	|	VoC_jump(tx_dtx_end)
		//0x08e1		tx_dtx_100
0x037007A4,	//0x08e2		VoC_sub16_rd(REG4,REG4,0x370)
0xF363C162,	//0x08e4		VoC_lw16i_short(REG3,0x1b,DEFAULT)	|	VoC_add16_rr(REG2,REG5,REG4,DEFAULT)
0x08EA349A,	//0x08e6		VoC_bngt16_rr(tx_dtx_end,REG3,REG2)
0x00240A87,	//0x08e8		VoC_lw16i(REG7,0x24)
		//0x08ea		tx_dtx_end
0x63321582,	//0x08ea		VoC_sw32_d(REG45,0x6332)
0xDFE9E580,	//0x08ec		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x08ed		CII_Gsm_Long_Term_Predictor
0xFF435FC0,	//0x08ee		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xF00A600F,	//0x08f0		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG0,DEFAULT)
0xD8856D09,	//0x08f2		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0x08F83245,	//0x08f4		VoC_bnltz16_r(Cal_of_the_LTP_p_L1,REG5)
0xFFC043AD,	//0x08f6		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x08f8		Cal_of_the_LTP_p_L1
0x08FB34AF,	//0x08f8		VoC_bngt16_rr(Cal_of_the_LTP_p_L2,REG5,REG7)
0xD885E0A7,	//0x08fa		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x08fb		Cal_of_the_LTP_p_L2
		//0x08fb		VoC_endloop0
0x09003187,	//0x08fc		VoC_bez16_r(Cal_of_the_LTP_p_L3,REG7)
0x0BE92B80,	//0x08fe		VoC_jal(CII_gsm_norm)
		//0x0900		Cal_of_the_LTP_p_L3
0xF7E27005,	//0x0900		VoC_movreg16(REG2,RL7_HI,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x03333826,	//0x0902		VoC_bgt16_rd(Cal_of_the_LTP_p_L4,REG6,0x333)
0x03330B35,	//0x0904		VoC_sub16_dr(REG5,0x333,REG6)
		//0x0906		Cal_of_the_LTP_p_L4
0x6482180B,	//0x0906		VoC_lw16i_set_inc(REG3,0x6482,0x2)
0xD68F606E,	//0x0908		VoC_lw16_sd(RL7_HI,0x7,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG3,DEFAULT)
0xD9D36A85,	//0x090a		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xFE2F7E2E,	//0x090c		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0xDDDBD9D3,	//0x090e		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x090f		VoC_endloop0
0xE2837F38,	//0x0910		VoC_lw16i_short(REG3,0x28,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xE2877F46,	//0x0912		VoC_lw16i_short(REG7,0x28,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xE0164259,	//0x0914		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x09212CA3,	//0x0916		VoC_loop_i(0x1,0x51)
0xFF446D02,	//0x0918		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
		//0x091a		VoC_endloop0
0x7F38D401,	//0x091a		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0x36A6C0F3,	//0x091c		VoC_bngt32_rr(Cal_of_the_LTP_p_L5,ACC0,RL6)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)
0x60670921,	//0x091e		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_bngt32_rr(Cal_of_the_LTP_p_L5,ACC0,RL6)(hi)
0xC259FF26,	//0x0920		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x0921		Cal_of_the_LTP_p_L5
		//0x0921		VoC_endloop1
0x0340401F,	//0x0922		VoC_be16_rd(Cal_of_the_LTP_p_L5t,REG7,0x340)
0xD660C3F7,	//0x0924		VoC_lw16_sd(REG0,0x5,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
		//0x0925		Cal_of_the_LTP_p_L5t
0x0B2DE1E1,	//0x0926		VoC_sub16_dr(REG5,0x333,REG5)(lo)	|	VoC_movreg16(REG1,RL7_HI,DEFAULT)
0x42790333,	//0x0928		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_sub16_dr(REG5,0x333,REG5)(hi)
0x5C07FF44,	//0x092a		VoC_sw16_p(REG7,REG0,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xDFC1FEAE,	//0x092c		VoC_push16(REG1,DEFAULT)	|	VoC_shr32_rr(RL6,REG5,IN_PARALLEL)
0xD8966D03,	//0x092e		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0x4E36F81E,	//0x0930		VoC_mac32_rr(REG6,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
		//0x0931		VoC_endloop0
0xF000D896,	//0x0932		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0x094A32C6,	//0x0934		VoC_bngtz32_r(Cal_of_the_LTP_p_LEnd,RL6)
0x36A6F060,	//0x0936		VoC_bngt32_rr(Cal_of_the_LTP_p_LEnd,ACC0,RL6)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0xFF23094A,	//0x0938		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_bngt32_rr(Cal_of_the_LTP_p_LEnd,ACC0,RL6)(hi)
0x0BE92B80,	//0x093a		VoC_jal(CII_gsm_norm)
0xC236F000,	//0x093c		VoC_sub16_rr(REG6,REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xFEB67EB4,	//0x093e		VoC_shr32_rr(RL6,REG6,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0xF72561A4,	//0x0940		VoC_movreg16(REG5,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,RL6_HI,DEFAULT)
0x1F221806,	//0x0942		VoC_lw16i_set_inc(REG2,0x1f22,0x1)
0x9B53E865,	//0x0944		VoC_multf32inc_rp(REG67,REG5,REG2,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0x34A7FFC0,	//0x0946		VoC_bngt16_rr(Cal_of_the_LTP_p_LEnd,REG4,REG7)(lo)	|	VoC_NOP
0xDE00094A,	//0x0948		VoC_inc_p(REG0,DEFAULT)	|	VoC_bngt16_rr(Cal_of_the_LTP_p_LEnd,REG4,REG7)(hi)
		//0x0949		VoC_endloop0
		//0x094a		Cal_of_the_LTP_p_LEnd
0x5F82D665,	//0x094a		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16_sd(REG5,0x5,DEFAULT)
0xDF81F004,	//0x094c		VoC_pop16(REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xF0055C50,	//0x094e		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG0,REG5,DEFAULT)
0x0CCD0A84,	//0x0950		VoC_lw16i(REG4,0xccd)
0x095E3180,	//0x0952		VoC_bez16_r(Long_term_analysis_filt_L4,REG0)
0x2CCD0A84,	//0x0954		VoC_lw16i(REG4,0x2ccd)
0x03704080,	//0x0956		VoC_be16_rd(Long_term_analysis_filt_L4,REG0,0x370)
0x53330A84,	//0x0958		VoC_lw16i(REG4,0x5333)
0x03304020,	//0x095a		VoC_be16_rd(Long_term_analysis_filt_L4,REG0,0x330)
0x7FFF0A84,	//0x095c		VoC_lw16i(REG4,0x7fff)
		//0x095e		Long_term_analysis_filt_L4
0xF0065660,	//0x095e		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x63011807,	//0x0960		VoC_lw16i_set_inc(REG3,0x6301,0x1)
0xDFA96D07,	//0x0962		VoC_pop16(RA,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xFFC09B13,	//0x0964		VoC_NOP	|	VoC_multf32inc_rp(REG67,REG4,REG2,DEFAULT)
0xBA7EC8EB,	//0x0966		VoC_sub16inc_pr(REG6,REG1,REG7,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
0xDCB6DC87,	//0x0968		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0969		VoC_endloop0
0x8342E580,	//0x096a		VoC_add16inc_rp(REG2,REG5,REG0,DEFAULT)	|	VoC_return
		//0x096b		CII_Decoding_of_the_coded_Log_Area_Ratios_sub
0xC2A2FBB1,	//0x096c		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr32_ri(REG23,0xfffffff6,DEFAULT)
0xFFC0CCB1,	//0x096e		VoC_NOP	|	VoC_multf32_rr(REG23,REG2,REG6,DEFAULT)
0xF8FBC879,	//0x0970		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG23,REG23,RL7,DEFAULT)
0xDC93F003,	//0x0972		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xDFE9E580,	//0x0974		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0975		CII_Decoding_of_the_coded_Log_Area_Ratios
0xE003590F,	//0x0976		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xEE057004,	//0x0978		VoC_lw16i_short(REG5,0xffffffe0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x33330A86,	//0x097a		VoC_lw16i(REG6,0x3333)
0x096B2B80,	//0x097c		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x096B2B80,	//0x097e		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x10000A84,	//0x0980		VoC_lw16i(REG4,0x1000)
0xFFC07605,	//0x0982		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xfffffff0,DEFAULT)
0x096B2B80,	//0x0984		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x6C000AC4,	//0x0986		VoC_lw16i(REG4,0xffffec00)
0x096B2B80,	//0x0988		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x00BC0A84,	//0x098a		VoC_lw16i(REG4,0xbc)
0x0A86F705,	//0x098c		VoC_lw16i(REG6,0x4b17)(lo)	|	VoC_lw16i_short(REG5,0xfffffff8,DEFAULT)
0xFFC04B17,	//0x098e		VoC_NAD	|	VoC_lw16i(REG6,0x4b17)(hi)
0x096B2B80,	//0x0990		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x72000AC4,	//0x0992		VoC_lw16i(REG4,0xfffff200)
0x44440A86,	//0x0994		VoC_lw16i(REG6,0x4444)
0x096B2B80,	//0x0996		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x7D560AC4,	//0x0998		VoC_lw16i(REG4,0xfffffd56)
0x0A86F785,	//0x099a		VoC_lw16i(REG6,0x7ade)(lo)	|	VoC_lw16i_short(REG5,0xfffffffc,DEFAULT)
0xFFC07ADE,	//0x099c		VoC_NAD	|	VoC_lw16i(REG6,0x7ade)(hi)
0x096B2B80,	//0x099e		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x77100AC4,	//0x09a0		VoC_lw16i(REG4,0xfffff710)
0x740C0A86,	//0x09a2		VoC_lw16i(REG6,0x740c)
0x096B2B80,	//0x09a4		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0xFFC0DFA9,	//0x09a6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xD622E580,	//0x09a8		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_return
		//0x09a9		CII_Coefficients_0_12
0xF0065631,	//0x09aa		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0xFFC0F031,	//0x09ac		VoC_NAD	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xD8A6690A,	//0x09ae		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF6C75895,	//0x09b0		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xF8167815,	//0x09b2		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0xC1AD780F,	//0x09b4		VoC_add16_rr(REG5,REG6,REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xD8A6C1EF,	//0x09b6		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
		//0x09b8		VoC_endloop0
0xE580DC87,	//0x09b8		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x09ba		CII_Coefficients_13_26
0xF031D622,	//0x09ba		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0xF0045631,	//0x09bc		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x6907D610,	//0x09be		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xD896D8A7,	//0x09c0		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,IN_PARALLEL)
0xF80F780E,	//0x09c2		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xD8A7C1F7,	//0x09c4		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
		//0x09c6		VoC_endloop0
0xE580DC87,	//0x09c6		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x09c8		CII_Coefficients_27_39
0xF0055621,	//0x09c8		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xF0045632,	//0x09ca		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xFFC0D894,	//0x09cc		VoC_NAD	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD610690A,	//0x09ce		VoC_lw16_sd(REG0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF81458A5,	//0x09d0		VoC_shr16_ri(REG4,0x2,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xF81560A6,	//0x09d2		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xF80E4165,	//0x09d4		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xD894C1AE,	//0x09d6		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
		//0x09d8		VoC_endloop0
0xE580DC86,	//0x09d8		VoC_return	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x09da		CII_Coefficients_40_159
0xF030D630,	//0x09da		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xF0055611,	//0x09dc		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xD8866903,	//0x09de		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDC96D886,	//0x09e0		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x09e1		VoC_endloop0
0xD610E580,	//0x09e2		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_return
		//0x09e3		CII_LARp_to_rp
0xFF436001,	//0x09e4		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD885691E,	//0x09e6		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x09F13245,	//0x09e8		VoC_bnltz16_r(LARp_to_rp_L1,REG5)
0xF6A47027,	//0x09ea		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x4424C3AD,	//0x09ec		VoC_bne16_rd(LARp_to_rp_L1,REG4,0x382)(lo)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
0x0A850382,	//0x09ee		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_bne16_rd(LARp_to_rp_L1,REG4,0x382)(hi)
0xE0A47FFF,	//0x09f0		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x7fff)(hi)
		//0x09f1		LARp_to_rp_L1
0x0A83F8FD,	//0x09f2		VoC_lw16i(REG3,0x2b33)(lo)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x341C2B33,	//0x09f4		VoC_bgt16_rr(LARp_to_rp_L5,REG3,REG4)(lo)	|	VoC_lw16i(REG3,0x2b33)(hi)
0xC11D0A00,	//0x09f6		VoC_add16_rr(REG5,REG4,REG3,DEFAULT)	|	VoC_bgt16_rr(LARp_to_rp_L5,REG3,REG4)(hi)
0x4E660A83,	//0x09f8		VoC_lw16i(REG3,0x4e66)
0x0A00341C,	//0x09fa		VoC_bgt16_rr(LARp_to_rp_L5,REG3,REG4)
0x0A83F814,	//0x09fc		VoC_lw16i(REG3,0x6600)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xC11D6600,	//0x09fe		VoC_add16_rr(REG5,REG4,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x6600)(hi)
		//0x0a00		LARp_to_rp_L5
0x0A033187,	//0x0a00		VoC_bez16_r(LARp_to_rp_L6,REG7)
0xD885C3AD,	//0x0a02		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x0a03		LARp_to_rp_L6
		//0x0a04		VoC_endloop0
0xE0075C95,	//0x0a04		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xD612E580,	//0x0a06		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_return
		//0x0a07		CII_Short_term_analysis_filtering
0x1C861807,	//0x0a08		VoC_lw16i_set_inc(REG3,0x1c86,0x1)
0xF0067F0F,	//0x0a0a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x03821485,	//0x0a0c		VoC_lw32_d(ACC1,0x382)
0x0A1F2E39,	//0x0a0e		VoC_loop_r(1,REG7)
0xF60C5806,	//0x0a10		VoC_movreg16(RL6_LO,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0xF6C7690A,	//0x0a12		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD83599D0,	//0x0a14		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_multf32_rp(REG01,REG7,REG2,DEFAULT)
0xDCB64828,	//0x0a16		VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,ACC1,DEFAULT)
0x9B50414E,	//0x0a18		VoC_multf32inc_rp(REG01,REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG1,DEFAULT)
0xC828FFC0,	//0x0a1a		VoC_add32_rr(REG01,REG01,ACC1,DEFAULT)	|	VoC_NOP
		//0x0a1c		VoC_endloop0
0xF78041CF,	//0x0a1c		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG1,DEFAULT)
0xDC87FF39,	//0x0a1e		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_movreg32(REG23,RL7,DEFAULT)
		//0x0a1f		VoC_endloop1
0xDFE9E580,	//0x0a20		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0a21		CII_Gsm_Short_Term_Analysis_Filter
0x1805F026,	//0x0a22		VoC_lw16i_set_inc(REG1,0x1c8e,0x1)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x14051C8E,	//0x0a24		VoC_lw16_d(REG5,0x1c9e)(lo)	|	VoC_lw16i_set_inc(REG1,0x1c8e,0x1)(hi)
0x64AE1C9E,	//0x0a26		VoC_xor16_rr(REG6,REG5,DEFAULT)	|	VoC_lw16_d(REG5,0x1c9e)(hi)
0x45F4E087,	//0x0a28		VoC_mult16_rr(REG4,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x8,IN_PARALLEL)
0x1506C5ED,	//0x0a2a		VoC_sw16_d(REG6,0x1c9e)(lo)	|	VoC_mult16_rr(REG5,REG7,REG5,IN_PARALLEL)
0x40621C9E,	//0x0a2c		VoC_add16_rr(REG2,REG1,REG4,DEFAULT)	|	VoC_sw16_d(REG6,0x1c9e)(hi)
0xD620C069,	//0x0a2e		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x5FC2DFC1,	//0x0a30		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFFC0F004,	//0x0a32		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x09752B80,	//0x0a34		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios)
0x64AA1804,	//0x0a36		VoC_lw16i_set_inc(REG0,0x64aa,0x1)
0xDFC0FFC0,	//0x0a38		VoC_push16(REG0,DEFAULT)	|	VoC_NOP
0x09A92B80,	//0x0a3a		VoC_jal(CII_Coefficients_0_12)
0x09E32B80,	//0x0a3c		VoC_jal(CII_LARp_to_rp)
0xE0D75660,	//0x0a3e		VoC_lw16i_short(REG7,0xd,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x0A072B80,	//0x0a40		VoC_jal(CII_Short_term_analysis_filtering)
0x09BA2B80,	//0x0a42		VoC_jal(CII_Coefficients_13_26)
0x09E32B80,	//0x0a44		VoC_jal(CII_LARp_to_rp)
0xE0E75660,	//0x0a46		VoC_lw16i_short(REG7,0xe,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x033A0700,	//0x0a48		VoC_add16_rd(REG0,REG0,0x33a)
0x0A072B80,	//0x0a4a		VoC_jal(CII_Short_term_analysis_filtering)
0x09C82B80,	//0x0a4c		VoC_jal(CII_Coefficients_27_39)
0x09E32B80,	//0x0a4e		VoC_jal(CII_LARp_to_rp)
0x5660F362,	//0x0a50		VoC_lw16_sd(REG0,0x5,DEFAULT)	|	VoC_lw16i_short(REG2,0x1b,DEFAULT)
0xC010E0D7,	//0x0a52		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0xd,IN_PARALLEL)
0x0A072B80,	//0x0a54		VoC_jal(CII_Short_term_analysis_filtering)
0x09DA2B80,	//0x0a56		VoC_jal(CII_Coefficients_40_159)
0x09E32B80,	//0x0a58		VoC_jal(CII_LARp_to_rp)
0x0A87D660,	//0x0a5a		VoC_lw16i(REG7,0x78)(lo)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x07000078,	//0x0a5c		VoC_add16_rd(REG0,REG0,0x340)(lo)	|	VoC_lw16i(REG7,0x78)(hi)
0x2B800340,	//0x0a5e		VoC_jal(CII_Short_term_analysis_filtering)(lo)	|	VoC_add16_rd(REG0,REG0,0x340)(hi)
0xDF840A07,	//0x0a60		VoC_pop16(REG4,DEFAULT)	|	VoC_jal(CII_Short_term_analysis_filtering)(hi)
0xDF84DF84,	//0x0a62		VoC_pop16(REG4,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xFFC0DFA9,	//0x0a64		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF032E580,	//0x0a66		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_return
		//0x0a67		CII_Short_term_synthesis_filtering
0x1E371FBD,	//0x0a68		VoC_lw16i_set_inc(REG1,0x1e37,0xffffffff)
0x64891FBC,	//0x0a6a		VoC_lw16i_set_inc(REG0,0x6489,0xffffffff)
0xD90D7F07,	//0x0a6c		VoC_lw32_sd(ACC1,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFFC07033,	//0x0a6e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x0A922E39,	//0x0a70		VoC_loop_r(1,REG7)
0xD8165884,	//0x0a72		VoC_lw16_p(REG6,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD8A5691B,	//0x0a74		VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x03824434,	//0x0a76		VoC_bne16_rd(Short_term_syn_filt_L1,REG4,0x382)
0x7FFF0A87,	//0x0a78		VoC_lw16i(REG7,0x7fff)
0x0382402E,	//0x0a7a		VoC_be16_rd(Short_term_syn_filt_L2,REG6,0x382)
		//0x0a7c		Short_term_syn_filt_L1
0xFFC0CDA3,	//0x0a7c		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG4,DEFAULT)
0xC37DC8EB,	//0x0a7e		VoC_sub16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
		//0x0a7f		Short_term_syn_filt_L2
0x0382443C,	//0x0a80		VoC_bne16_rd(Short_term_syn_filt_L3,REG4,0x382)
0x03824485,	//0x0a82		VoC_bne16_rd(Short_term_syn_filt_L4,REG5,0x382)
0x7FFF0A85,	//0x0a84		VoC_lw16i(REG5,0x7fff)
0xCD2BE5C4,	//0x0a86		VoC_multf32_rr(REG67,REG4,REG5,DEFAULT)	|	VoC_jump(Short_term_syn_filt_L4)
		//0x0a87		Short_term_syn_filt_L3
0xC8EBFFC0,	//0x0a88		VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)	|	VoC_NOP
		//0x0a8a		Short_term_syn_filt_L4
0x0370070E,	//0x0a8a		VoC_add16_rd(REG6,REG1,0x370)
0x588483CF,	//0x0a8c		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0xDC67D816,	//0x0a8e		VoC_sw16_p(REG7,REG6,DEFAULT)	|	VoC_lw16_p(REG6,REG1,IN_PARALLEL)
		//0x0a8f		VoC_endloop0
0xFF385CB5,	//0x0a90		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x0a92		VoC_endloop1
0x1E301505,	//0x0a92		VoC_sw16_d(REG5,0x1e30)
0xFFC06580,	//0x0a94		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0a96		CII_Weighting_filter
0x62FC1804,	//0x0a96		VoC_lw16i_set_inc(REG0,0x62fc,0x1)
0x1F421805,	//0x0a98		VoC_lw16i_set_inc(REG1,0x1f42,0x1)
0x00001806,	//0x0a9a		VoC_lw16i_set_inc(REG2,0x0,0x1)
0x20681807,	//0x0a9c		VoC_lw16i_set_inc(REG3,0x2068,0x1)
0xEFFB7F07,	//0x0a9e		VoC_lw16i_short(ACC1_HI,0xffffffff,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0x00000ACA,	//0x0aa0		VoC_lw16i(ACC1_LO,0x8000)
0x0A88FF44,	//0x0aa2		VoC_lw16i(ACC0_LO,0x2000)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF262000,	//0x0aa4		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x2000)(hi)
0x0AB92C51,	//0x0aa6		VoC_loop_i(0x1,0x28)
0xDE106962,	//0x0aa8		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
		//0x0aaa		VoC_endloop0
0xFF38D401,	//0x0aaa		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xC0107A74,	//0x0aac		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xe,DEFAULT)
0x0AB436AC,	//0x0aae		VoC_bngt32_rr(Weighting_filter_L1,ACC1,ACC0)
0x03821484,	//0x0ab0		VoC_lw32_d(ACC0,0x382)
0xFFC065C6,	//0x0ab2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Weighting_filter_L2)
		//0x0ab4		Weighting_filter_L1
0x03805424,	//0x0ab4		VoC_bngt32_rd(Weighting_filter_L2,ACC0,0x380)
0x03801484,	//0x0ab6		VoC_lw32_d(ACC0,0x380)
		//0x0ab8		Weighting_filter_L2
0xDCB8FF34,	//0x0ab8		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x0ab9		VoC_endloop1
0xF005E580,	//0x0aba		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_return
		//0x0abb		CII_RPE_grid_selection
0x2068180C,	//0x0abc		VoC_lw16i_set_inc(REG0,0x2068,0x3)
0xFF446003,	//0x0abe		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x6983DE00,	//0x0ac0		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xF814D884,	//0x0ac2		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x0ac4		VoC_endloop0
0xD8844E24,	//0x0ac4		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0x7814D8B4,	//0x0ac6		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xCE24FF27,	//0x0ac8		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0x7F26E060,	//0x0aca		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x69A3FF44,	//0x0acc		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xF814D884,	//0x0ace		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x0ad0		VoC_endloop0
0xD8844E24,	//0x0ad0		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0xE060DE18,	//0x0ad2		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0x0AD836A6,	//0x0ad4		VoC_bngt32_rr(RPE_grid_sel_L1,ACC0,RL6)
0xFF267025,	//0x0ad6		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x0ad8		RPE_grid_sel_L1
0x69A3FF44,	//0x0ad8		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xF814D884,	//0x0ada		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x0adc		VoC_endloop0
0xD8844E24,	//0x0adc		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0x208F1406,	//0x0ade		VoC_lw16_d(REG6,0x208f)
0x36A6F816,	//0x0ae0		VoC_bngt32_rr(RPE_grid_sel_L2,ACC0,RL6)(lo)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x70450AE5,	//0x0ae2		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_bngt32_rr(RPE_grid_sel_L2,ACC0,RL6)(hi)
0xCDB4FF26,	//0x0ae4		VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x0ae5		RPE_grid_sel_L2
0xC93CFFC0,	//0x0ae6		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_NOP
0x0AEC36A6,	//0x0ae8		VoC_bngt32_rr(RPE_grid_sel_L3,ACC0,RL6)
0xFF267065,	//0x0aea		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
		//0x0aec		RPE_grid_sel_L3
0x2068180F,	//0x0aec		VoC_lw16i_set_inc(REG3,0x2068,0x3)
0xD62240EB,	//0x0aee		VoC_lw16_sd(REG2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x20901804,	//0x0af0		VoC_lw16i_set_inc(REG0,0x2090,0x1)
0x69A3E001,	//0x0af2		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD8B7D8B7,	//0x0af4		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,IN_PARALLEL)
		//0x0af6		VoC_endloop0
0xDC25DC87,	//0x0af6		VoC_sw16_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0xF006E580,	//0x0af8		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_return
		//0x0af9		CII_APCM_quantization_xmaxc_to_exp_mant
0x781BE0E3,	//0x0afa		VoC_shr16_ri(REG3,0x3,DEFAULT)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x3C1FE012,	//0x0afc		VoC_bngt16_rd(APCM_quant_xmaxc_to_exp_mant_L1,REG7,0x33b)(lo)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0xC2D6033B,	//0x0afe		VoC_sub16_rr(REG6,REG3,REG2,DEFAULT)	|	VoC_bngt16_rd(APCM_quant_xmaxc_to_exp_mant_L1,REG7,0x33b)(hi)
		//0x0b00		APCM_quant_xmaxc_to_exp_mant_L1
0xF8EBE0C3,	//0x0b00		VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x3105C3DD,	//0x0b02		VoC_bgtz16_r(APCM_quant_xmaxc_to_exp_mant_L2,REG5)(lo)	|	VoC_sub16_rr(REG5,REG7,REG3,DEFAULT)
0x77860B08,	//0x0b04		VoC_lw16i_short(REG6,0xfffffffc,DEFAULT)	|	VoC_bgtz16_r(APCM_quant_xmaxc_to_exp_mant_L2,REG5)(hi)
0xE5C9E075,	//0x0b06		VoC_jump(APCM_quant_xmaxc_to_exp_mant_L3)	|	VoC_lw16i_short(REG5,0x7,IN_PARALLEL)
		//0x0b08		APCM_quant_xmaxc_to_exp_mant_L2
0x03343835,	//0x0b08		VoC_bgt16_rd(APCM_quant_xmaxc_to_exp_mant_L4,REG5,0x334)
0xC39678FD,	//0x0b0a		VoC_sub16_rr(REG6,REG6,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xE5FBE455,	//0x0b0c		VoC_jump(APCM_quant_xmaxc_to_exp_mant_L2)	|	VoC_or16_rr(REG5,REG2,DEFAULT)
		//0x0b0e		APCM_quant_xmaxc_to_exp_mant_L4
0x033507AD,	//0x0b0e		VoC_sub16_rd(REG5,REG5,0x335)
		//0x0b10		APCM_quant_xmaxc_to_exp_mant_L3
0xE580FFC0,	//0x0b10		VoC_return	|	VoC_NOP
		//0x0b12		CII_APCM_quantization
0x5FC1DFE9,	//0x0b12		VoC_push16(REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xFFC0FF43,	//0x0b14		VoC_NAD	|	VoC_lw32z(REG67,IN_PARALLEL)
0xD89569A9,	//0x0b16		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xd,DEFAULT)
0x0B1C3245,	//0x0b18		VoC_bnltz16_r(APCM_quant_L1,REG5)
0xFFC043AD,	//0x0b1a		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x0b1c		APCM_quant_L1
0x0B1F34AF,	//0x0b1c		VoC_bngt16_rr(APCM_quant_L2,REG5,REG7)
0xD895E0A7,	//0x0b1e		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0b1f		APCM_quant_L2
		//0x0b1f		VoC_endloop0
0x40BBF063,	//0x0b20		VoC_be16_rd(RPE_label_100,REG3,0x6331)(lo)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x1FB06331,	//0x0b22		VoC_lw16i_set_inc(REG0,0x636e,0xfffffffc)(lo)	|	VoC_be16_rd(RPE_label_100,REG3,0x6331)(hi)
0x1FB1636E,	//0x0b24		VoC_lw16i_set_inc(REG1,0x636a,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x636e,0xfffffffc)(hi)
0x0709636A,	//0x0b26		VoC_add16_rd(REG1,REG1,0x632f)(lo)	|	VoC_lw16i_set_inc(REG1,0x636a,0xfffffffc)(hi)
0x0700632F,	//0x0b28		VoC_add16_rd(REG0,REG0,0x632f)(lo)	|	VoC_add16_rd(REG1,REG1,0x632f)(hi)
0x6863632F,	//0x0b2a		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x632f)(hi)
0xD895D895,	//0x0b2c		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
		//0x0b2e		VoC_endloop0
0xDC87DC85,	//0x0b2e		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x0b30		RPE_label_100
0xF031F030,	//0x0b30		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x0C292B80,	//0x0b32		VoC_jal(CII_APCM_quantization_sub)
0x0AF92B80,	//0x0b34		VoC_jal(CII_APCM_quantization_xmaxc_to_exp_mant)
0x07B4D650,	//0x0b36		VoC_sub16_rd(REG4,REG6,0x333)(lo)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0xDC070333,	//0x0b38		VoC_sw16_p(REG7,REG0,DEFAULT)	|	VoC_sub16_rd(REG4,REG6,0x333)(hi)
0x1F2A0A82,	//0x0b3a		VoC_lw16i(REG2,0x1f2a)
0xD6A340AA,	//0x0b3c		VoC_lw16_sd(REG3,0x9,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xF0075F80,	//0x0b3e		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xD827DFA9,	//0x0b40		VoC_lw16_p(REG7,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD88169A9,	//0x0b42		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xd,DEFAULT)
0xC679FE21,	//0x0b44		VoC_multf16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_shr16_rr(REG1,REG4,DEFAULT)
0xF861FFC0,	//0x0b46		VoC_shr16_ri(REG1,0xc,DEFAULT)	|	VoC_NOP
0x03320709,	//0x0b48		VoC_add16_rd(REG1,REG1,0x332)
0xDCB1D881,	//0x0b4a		VoC_sw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG1,REG0,DEFAULT)
		//0x0b4b		VoC_endloop0
0xD90DE580,	//0x0b4c		VoC_lw32_sd(ACC1,0x0,DEFAULT)	|	VoC_return
		//0x0b4d		CII_APCM_inverse_quantization
0x1F320A80,	//0x0b4e		VoC_lw16i(REG0,0x1f32)
0xE0144028,	//0x0b50		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x03330B36,	//0x0b52		VoC_sub16_dr(REG6,0x333,REG6)
0xE0055807,	//0x0b54		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xF0064330,	//0x0b56		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)
0xF0077E82,	//0x0b58		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_shr32_rr(REG45,REG0,DEFAULT)
0x69B0DFC2,	//0x0b5a		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xF8FDD8B5,	//0x0b5c		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,IN_PARALLEL)
0x033407AD,	//0x0b5e		VoC_sub16_rd(REG5,REG5,0x334)
0xCDE8F8A5,	//0x0b60		VoC_multf32_rr(REG01,REG7,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffff4,DEFAULT)
0xC828FFC0,	//0x0b62		VoC_add32_rr(REG01,REG01,ACC1,DEFAULT)	|	VoC_NOP
0xE0014060,	//0x0b64		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG1,REG4,DEFAULT)
0x0B693100,	//0x0b66		VoC_bgtz16_r(APCM_inverse_quant_L1,REG0)
0xFEB0F7E1,	//0x0b68		VoC_shr32_rr(REG01,REG6,DEFAULT)	|	VoC_lw16i_short(REG1,0xffffffff,DEFAULT)
		//0x0b69		APCM_inverse_quant_L1
0xDCA0D8B5,	//0x0b6a		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
		//0x0b6b		VoC_endloop0
0xFF30E580,	//0x0b6c		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_return
		//0x0b6d		CII_RPE_grid_positioning
0xDF827F42,	//0x0b6e		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_lw32z(REG45,DEFAULT)
0xE0D75811,	//0x0b70		VoC_lw16i_short(REG7,0xd,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x036E4089,	//0x0b72		VoC_be16_rd(RPE_grid_positioning_L4,REG1,0x36e)
0x03704031,	//0x0b74		VoC_be16_rd(RPE_grid_positioning_L3,REG1,0x370)
0x03304019,	//0x0b76		VoC_be16_rd(RPE_grid_positioning_L2,REG1,0x330)
0xDC84DC84,	//0x0b78		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0b79		RPE_grid_positioning_L2
		//0x0b7a		RPE_grid_positioning_L3
0xD8A5DC84,	//0x0b7a		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0b7b		RPE_grid_positioning_L4
0x037007BF,	//0x0b7c		VoC_sub16_rd(REG7,REG7,0x370)
0x3107DC85,	//0x0b7e		VoC_bgtz16_r(RPE_grid_positioning_L2,REG7)(lo)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xFFC00B79,	//0x0b80		VoC_NAD	|	VoC_bgtz16_r(RPE_grid_positioning_L2,REG7)(hi)
		//0x0b82		RPE_grid_positioning_L5
0x03700709,	//0x0b82		VoC_add16_rd(REG1,REG1,0x370)
0x03313821,	//0x0b84		VoC_bgt16_rd(RPE_grid_positioning_L6,REG1,0x331)
0xE5FBDC84,	//0x0b86		VoC_jump(RPE_grid_positioning_L5)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0b88		RPE_grid_positioning_L6
0xE580FFC0,	//0x0b88		VoC_return	|	VoC_NOP
		//0x0b8a		CII_Gsm_RPE_Encoding
0xFFC05FE9,	//0x0b8a		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0A962B80,	//0x0b8c		VoC_jal(CII_Weighting_filter)
0x0ABB2B80,	//0x0b8e		VoC_jal(CII_RPE_grid_selection)
0x20901805,	//0x0b90		VoC_lw16i_set_inc(REG1,0x2090,0x1)
0x0B122B80,	//0x0b92		VoC_jal(CII_APCM_quantization)
0xD62DD683,	//0x0b94		VoC_lw16_sd(RL6_HI,0x1,DEFAULT)	|	VoC_lw16_sd(REG3,0x7,DEFAULT)
0x63010A8C,	//0x0b96		VoC_lw16i(RL6_LO,0x6301)
0x209E1806,	//0x0b98		VoC_lw16i_set_inc(REG2,0x209e,0x1)
0x0B4D2B80,	//0x0b9a		VoC_jal(CII_APCM_inverse_quantization)
0x0B6D2B80,	//0x0b9c		VoC_jal(CII_RPE_grid_positioning)
0xFFC0DFA9,	//0x0b9e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0ba0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ba1		CII_Gsm_RPE_Decoding
0xFFC0D637,	//0x0ba2		VoC_NOP	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xFFC05877,	//0x0ba4		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x0AF92B80,	//0x0ba6		VoC_jal(CII_APCM_quantization_xmaxc_to_exp_mant)
0x20AC1806,	//0x0ba8		VoC_lw16i_set_inc(REG2,0x20ac,0x1)
0x562DD683,	//0x0baa		VoC_lw16_sd(RL6_HI,0x1,DEFAULT)	|	VoC_lw16_sd(REG3,0x7,DEFAULT)
0xD66CF007,	//0x0bac		VoC_lw16_sd(RL6_LO,0x5,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x0B4D2B80,	//0x0bae		VoC_jal(CII_APCM_inverse_quantization)
0x0B6D2B80,	//0x0bb0		VoC_jal(CII_RPE_grid_positioning)
0xFFC0DFA9,	//0x0bb2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0bb4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0bb5		CII_encoder_reset_fr
0xE2867F44,	//0x0bb6		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x1B681808,	//0x0bb8		VoC_lw16i_set_inc(REG0,0x1b68,0x2)
0x0BBC2D42,	//0x0bba		VoC_loop_i(0x0,0xa1)
		//0x0bbc		VoC_endloop0
0x1506DDC4,	//0x0bbc		VoC_sw16_d(REG6,0x1c9f)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x18081C9F,	//0x0bbe		VoC_lw16i_set_inc(REG0,0x62fc,0x2)(lo)	|	VoC_sw16_d(REG6,0x1c9f)(hi)
0xEB2162FC,	//0x0bc0		VoC_loop_i_short(0x19,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x62fc,0x2)(hi)
		//0x0bc2		VoC_endloop0
0x2B80DDC4,	//0x0bc2		VoC_jal(reset_fr_table)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDFA9134A,	//0x0bc4		VoC_pop16(RA,DEFAULT)	|	VoC_jal(reset_fr_table)(hi)
0xE580FFC0,	//0x0bc6		VoC_return	|	VoC_NOP
		//0x0bc8		CII_decoder_reset
0x7F44DFE9,	//0x0bc8		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1808E286,	//0x0bca		VoC_lw16i_set_inc(REG0,0x1cf8,0x2)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x2D421CF8,	//0x0bcc		VoC_loop_i(0x0,0xa1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1cf8,0x2)(hi)
0xDDC40BCF,	//0x0bce		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0xa1)(hi)
		//0x0bcf		VoC_endloop0
0x1E2F1506,	//0x0bd0		VoC_sw16_d(REG6,0x1e2f)
0x134A2B80,	//0x0bd2		VoC_jal(reset_fr_table)
0xFFC0DFA9,	//0x0bd4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0bd6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0bd8		CII_bitoff
0x00081FBD,	//0x0bd8		VoC_lw16i_set_inc(REG1,0x8,0xffffffff)
0x0BDE31C6,	//0x0bda		VoC_bnez16_r(bitoff_L1,REG6)
0xFFC065CA,	//0x0bdc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(bitoff_end)
		//0x0bde		bitoff_L1
0x0BE23106,	//0x0bde		VoC_bgtz16_r(bitoff_L2,REG6)
0xFFC065C6,	//0x0be0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(bitoff_end)
		//0x0be2		bitoff_L2
0xDE08780E,	//0x0be2		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xFFC065FA,	//0x0be4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(bitoff_L1)
		//0x0be6		bitoff_end
0xF0056026,	//0x0be6		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0xDFE9E580,	//0x0be8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0be9		CII_gsm_norm
0xE0005F44,	//0x0bea		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x0BFA33C3,	//0x0bec		VoC_bnltz32_r(gsm_norm_L1,REG67)
0x0AC9FF44,	//0x0bee		VoC_lw16i(ACC0_HI,0xc000)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x361C4000,	//0x0bf0		VoC_bgt32_rr(gsm_norm_L2,REG67,ACC0)(lo)	|	VoC_lw16i(ACC0_HI,0xc000)(hi)
0x0A860BF8,	//0x0bf2		VoC_lw16i(REG6,0x36e)(lo)	|	VoC_bgt32_rr(gsm_norm_L2,REG67,ACC0)(hi)
0x2B00036E,	//0x0bf4		VoC_jump_lg(gsm_norm_Lend)(lo)	|	VoC_lw16i(REG6,0x36e)(hi)
0xFFC00C18,	//0x0bf6		VoC_NAD	|	VoC_jump_lg(gsm_norm_Lend)(hi)
		//0x0bf8		gsm_norm_L2
0x036E0B9B,	//0x0bf8		VoC_sub32_dr(REG67,0x36e,REG67)
		//0x0bfa		gsm_norm_L1
0xF7E9FF44,	//0x0bfa		VoC_lw16i_short(ACC0_HI,0xffff,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x3304E4DC,	//0x0bfc		VoC_bez32_r(gsm_norm_L3,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0xFF440C0B,	//0x0bfe		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bez32_r(gsm_norm_L3,ACC0)(hi)
0x7F000AC9,	//0x0c00		VoC_lw16i(ACC0_HI,0xff00)
0x3304E4DC,	//0x0c02		VoC_bez32_r(gsm_norm_L4,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7AC30C08,	//0x0c04		VoC_shr32_ri(REG67,0x18,DEFAULT)	|	VoC_bez32_r(gsm_norm_L4,ACC0)(hi)
0xE5CFEFF0,	//0x0c06		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
		//0x0c08		gsm_norm_L4
0xE0707A83,	//0x0c08		VoC_lw16i_short(REG0,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFF44E5CC,	//0x0c0a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jump(gsm_norm_L6)
		//0x0c0b		gsm_norm_L3
0x7F000AC8,	//0x0c0c		VoC_lw16i(ACC0_LO,0xff00)
0x3304E4DC,	//0x0c0e		VoC_bez32_r(gsm_norm_L5,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7A430C14,	//0x0c10		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_bez32_r(gsm_norm_L5,ACC0)(hi)
0xE5C3E0F0,	//0x0c12		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xf,IN_PARALLEL)
		//0x0c14		gsm_norm_L5
0xFFC072E0,	//0x0c14		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x17,DEFAULT)
		//0x0c16		gsm_norm_L6
0x00FF1606,	//0x0c16		VoC_and16_ri(REG6,0xff)
		//0x0c18		gsm_norm_Lend
0xFFC05F04,	//0x0c18		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
0x0BD82B80,	//0x0c1a		VoC_jal(CII_bitoff)
0xDFA94186,	//0x0c1c		VoC_pop16(RA,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0xE580FFC0,	//0x0c1e		VoC_return	|	VoC_NOP
		//0x0c20		CII_copy
0xD9C5D9C4,	//0x0c20		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x0C272E30,	//0x0c22		VoC_loop_r(0,REG6)
0xD9C4DDCC,	//0x0c24		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xD9C5DDCD,	//0x0c26		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0c27		VoC_endloop0
0xE0E3E580,	//0x0c28		VoC_movreg16(REG3,REG7,DEFAULT)	|	VoC_return
		//0x0c29		CII_APCM_quantization_sub
0xFF42784B,	//0x0c2a		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x9,DEFAULT)
0xE8CBFFC0,	//0x0c2c		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_NAD
0x0C323103,	//0x0c2e		VoC_bgtz16_r(APCM_quant_L3s,REG3)
0xFFC07025,	//0x0c30		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x0c32		APCM_quant_L3s
0xF80B646C,	//0x0c32		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x0C3831C4,	//0x0c34		VoC_bnez16_r(APCM_quant_L4s,REG4)
0x03700736,	//0x0c36		VoC_add16_rd(REG6,REG6,0x370)
		//0x0c38		APCM_quant_L4s
		//0x0c38		VoC_endloop0
0x0733F005,	//0x0c38		VoC_add16_rd(REG3,REG6,0x34a)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x7E1F034A,	//0x0c3a		VoC_shr16_rr(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG3,REG6,0x34a)(hi)
0xC1F7F8EE,	//0x0c3c		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xfffffffd,IN_PARALLEL)
0xFFC06580,	//0x0c3e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0c40		CII_vad_init
0x1E881808,	//0x0c40		VoC_lw16i_set_inc(REG0,0x1e88,0x2)
0x60000A86,	//0x0c42		VoC_lw16i(REG6,0x6000)
0x40000AC7,	//0x0c44		VoC_lw16i(REG7,0xffffc000)
0x10000A84,	//0x0c46		VoC_lw16i(REG4,0x1000)
0xDDC37005,	//0x0c48		VoC_sw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x7A120A83,	//0x0c4a		VoC_lw16i(REG3,0x7a12)
0xFF445DC2,	//0x0c4c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE14670E4,	//0x0c4e		VoC_lw16i_short(REG6,0x14,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0xE28777E5,	//0x0c50		VoC_lw16i_short(REG7,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0x0C542C92,	//0x0c52		VoC_loop_i(0x0,0x49)
		//0x0c54		VoC_endloop0
0x1504DDC4,	//0x0c54		VoC_sw16_d(REG4,0x1e92)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x15061E92,	//0x0c56		VoC_sw16_d(REG6,0x1e95)(lo)	|	VoC_sw16_d(REG4,0x1e92)(hi)
0x15031E95,	//0x0c58		VoC_sw16_d(REG3,0x1e96)(lo)	|	VoC_sw16_d(REG6,0x1e95)(hi)
0x15051E96,	//0x0c5a		VoC_sw16_d(REG5,0x1e99)(lo)	|	VoC_sw16_d(REG3,0x1e96)(hi)
0x15071E99,	//0x0c5c		VoC_sw16_d(REG7,0x1e9c)(lo)	|	VoC_sw16_d(REG5,0x1e99)(hi)
0xE5801E9C,	//0x0c5e		VoC_return	|	VoC_sw16_d(REG7,0x1e9c)(hi)
		//0x0c60		CII_step_up_opt_fr
0x1809F006,	//0x0c60		VoC_lw16i_set_inc(REG1,0x6434,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0A876434,	//0x0c62		VoC_lw16i(REG7,0x2000)(lo)	|	VoC_lw16i_set_inc(REG1,0x6434,0x2)(hi)
0xDFC12000,	//0x0c64		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i(REG7,0x2000)(hi)
0x1808DDCB,	//0x0c66		VoC_lw16i_set_inc(REG0,0x6448,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x7F056448,	//0x0c68		VoC_movreg32(ACC1,REG01,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6448,0x2)(hi)
0xFFC0E004,	//0x0c6a		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x0C882E29,	//0x0c6c		VoC_loop_r(1,REG5)
0xF62358A6,	//0x0c6e		VoC_movreg16(REG3,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0x0C813184,	//0x0c70		VoC_bez16_r(VAD_STEP_UP_LABEL1,REG4)
0xFF2859DF,	//0x0c72		VoC_movreg32(REG01,ACC1,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xF7E76706,	//0x0c74		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xFFC0CDBC,	//0x0c76		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)
0xD9DF930C,	//0x0c78		VoC_lw32inc_p(RL7,REG3,DEFAULT)	|	VoC_add32inc_rp(ACC0,ACC0,REG1,DEFAULT)
		//0x0c7a		VoC_endloop0
0xF7E75DC4,	//0x0c7a		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xE703FF28,	//0x0c7c		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0xFFC0D9C7,	//0x0c7e		VoC_NOP	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
		//0x0c80		VoC_endloop0
0xF007DDCF,	//0x0c80		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x0c81		VAD_STEP_UP_LABEL1
0x0C853246,	//0x0c82		VoC_bnltz16_r(STEP_UP_01,REG6)
0xF020F7E7,	//0x0c84		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x0c85		STEP_UP_01
0xC104FB93,	//0x0c86		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
		//0x0c88		VoC_endloop1
0x4145DD8B,	//0x0c88		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sw32_p(REG67,REG1,DEFAULT)
0xE1A2DF80,	//0x0c8a		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0xD9C36744,	//0x0c8c		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0xD9C3FA1B,	//0x0c8e		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
		//0x0c90		VoC_endloop0
0xE580DCA7,	//0x0c90		VoC_return	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x0c92		CII_tone_detection_fr
0x1804DFE9,	//0x0c92		VoC_lw16i_set_inc(REG0,0x6546,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x1FBD6546,	//0x0c94		VoC_lw16i_set_inc(REG1,0x65e5,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x6546,0x1)(hi)
0x5FC065E5,	//0x0c96		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x65e5,0xffffffff)(hi)
0x1806D90D,	//0x0c98		VoC_lw16i_set_inc(REG2,0x1f4e,0x1)(lo)	|	VoC_lw32_sd(ACC1,0x0,IN_PARALLEL)
0x2CA01F4E,	//0x0c9a		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_set_inc(REG2,0x1f4e,0x1)(hi)
0x9C140CA4,	//0x0c9c		VoC_multf32_pp(ACC0,REG0,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0xC92CFFC0,	//0x0c9e		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_NOP
0xDC899C56,	//0x0ca0		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_multf32_pp(RL6,REG1,REG2,DEFAULT)
0xDE10C9AE,	//0x0ca2		VoC_inc_p(REG2,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
		//0x0ca4		VoC_endloop0
0xD610DC9D,	//0x0ca4		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG1,DEFAULT)
0xD887F006,	//0x0ca6		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0CB12D40,	//0x0ca8		VoC_loop_i(0x0,0xa0)
0x0CAE3107,	//0x0caa		VoC_bgtz16_r(TONE_DETECTION_L1,REG7)
0x036E0B3F,	//0x0cac		VoC_sub16_dr(REG7,0x36e,REG7)
		//0x0cae		TONE_DETECTION_L1
0x0CB134BE,	//0x0cae		VoC_bngt16_rr(TONE_DETECTION_L2,REG7,REG6)
0xD887E0E6,	//0x0cb0		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
		//0x0cb1		TONE_DETECTION_L2
		//0x0cb1		VoC_endloop0
0x0CC83186,	//0x0cb2		VoC_bez16_r(TONE_DETECTION_L4,REG6)
0xE00860C9,	//0x0cb4		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0x02BA2B80,	//0x0cb6		VoC_jal(CII_NORM_L_ACC0)
0x03310B0D,	//0x0cb8		VoC_sub16_dr(REG5,0x331,REG1)
0x34A8F7E0,	//0x0cba		VoC_bngt16_rr(TONE_DETECTION_L4,REG5,REG0)(lo)	|	VoC_lw16i_short(REG0,0xffffffff,DEFAULT)
0xD6100CC8,	//0x0cbc		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_bngt16_rr(TONE_DETECTION_L4,REG5,REG0)(hi)
0x40000A84,	//0x0cbe		VoC_lw16i(REG4,0x4000)
0xF6027E2C,	//0x0cc0		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG5,DEFAULT)
0x2D409B04,	//0x0cc2		VoC_loop_i(0x0,0xa0)(lo)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xC92C0CC7,	//0x0cc4		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_loop_i(0x0,0xa0)(hi)
0xDCA99B04,	//0x0cc6		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
		//0x0cc7		VoC_endloop0
		//0x0cc8		TONE_DETECTION_L4
0x00A01FBF,	//0x0cc8		VoC_lw16i_set_inc(REG3,0xa0,0xffffffff)
0x207E180A,	//0x0cca		VoC_lw16i_set_inc(REG2,0x207e,0x2)
0xF0055F8F,	//0x0ccc		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_pop16(RL7_HI,DEFAULT)
0x2C0BE1EE,	//0x0cce		VoC_loop_i(0x1,0x5)(lo)	|	VoC_movreg16(RL7_LO,RL7_HI,DEFAULT)
0xFF440CDA,	//0x0cd0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x5)(hi)
0x2E18FF38,	//0x0cd2		VoC_loop_r(0,REG3)(lo)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xD8870CD6,	//0x0cd4		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_r(0,REG3)(hi)
		//0x0cd6		VoC_endloop0
0x093FD139,	//0x0cd6		VoC_add32_rd(RL7,RL7,0x370)(lo)	|	VoC_mac32inc_rp(REG7,REG1,DEFAULT)
0xDE180370,	//0x0cd8		VoC_inc_p(REG3,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x370)(hi)
		//0x0cda		VoC_endloop1
0x180ADDD4,	//0x0cda		VoC_lw16i_set_inc(REG2,0x207e,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x1807207E,	//0x0cdc		VoC_lw16i_set_inc(REG3,0x65f2,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x207e,0x2)(hi)
0x599465F2,	//0x0cde		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x65f2,0x1)(hi)
0x3344FF42,	//0x0ce0		VoC_bnez32_r(TONE_DETECTION_L5,ACC0)(lo)	|	VoC_lw32z(REG45,IN_PARALLEL)
0xE8810CE8,	//0x0ce2		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_bnez32_r(TONE_DETECTION_L5,ACC0)(hi)
		//0x0ce4		VoC_endloop0
0x2B00DCB5,	//0x0ce4		VoC_jump_lg(TONE_DETECTION_L6)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xFFC00D36,	//0x0ce6		VoC_NAD	|	VoC_jump_lg(TONE_DETECTION_L6)(hi)
		//0x0ce8		TONE_DETECTION_L5
0x02BA2B80,	//0x0ce8		VoC_jal(CII_NORM_L_ACC0)
0x033C0B0C,	//0x0cea		VoC_sub16_dr(REG4,0x33c,REG1)
0x65E61804,	//0x0cec		VoC_lw16i_set_inc(REG0,0x65e6,0x1)
0x65F01FBD,	//0x0cee		VoC_lw16i_set_inc(REG1,0x65f0,0xffffffff)
0xD9D4E8A5,	//0x0cf0		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xFFC0FEA4,	//0x0cf2		VoC_NOP	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xDC98DC88,	//0x0cf4		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
		//0x0cf5		VoC_endloop0
0x0A8CD90D,	//0x0cf6		VoC_lw16i(RL6_LO,0x65e7)(lo)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0x0A8D65E7,	//0x0cf8		VoC_lw16i(RL6_HI,0x65ef)(lo)	|	VoC_lw16i(RL6_LO,0x65e7)(hi)
0xFFC065EF,	//0x0cfa		VoC_NAD	|	VoC_lw16i(RL6_HI,0x65ef)(hi)
0x0D332C09,	//0x0cfc		VoC_loop_i(0x1,0x4)
0x65E61483,	//0x0cfe		VoC_lw32_d(REG67,0x65e6)
0x3104E0E4,	//0x0d00		VoC_bgtz16_r(TONE_DETECTION_L7,REG4)(lo)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x0B240D06,	//0x0d02		VoC_sub16_dr(REG4,0x36e,REG4)(lo)	|	VoC_bgtz16_r(TONE_DETECTION_L7,REG4)(hi)
0xFFC0036E,	//0x0d04		VoC_NAD	|	VoC_sub16_dr(REG4,0x36e,REG4)(hi)
		//0x0d06		TONE_DETECTION_L7
0x0D0F34A6,	//0x0d06		VoC_bngt16_rr(TONE_DETECTION_L8,REG4,REG6)
0x03320B2E,	//0x0d08		VoC_sub16_dr(REG6,0x332,REG5)
0xE781F005,	//0x0d0a		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x0d0c		VoC_endloop0
0x2B00DCB5,	//0x0d0c		VoC_jump_lg(TONE_DETECTION_L6)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xDF460D36,	//0x0d0e		VoC_push32(RL6,DEFAULT)	|	VoC_jump_lg(TONE_DETECTION_L6)(hi)
		//0x0d0f		TONE_DETECTION_L8
0xF6C16080,	//0x0d10		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x02CC2B80,	//0x0d12		VoC_jal(CII_DIV_S)
0xF6445F06,	//0x0d14		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
0x0D1A3147,	//0x0d16		VoC_bngtz16_r(TONE_DETECTION_L9,REG7)
0x036E0B24,	//0x0d18		VoC_sub16_dr(REG4,0x36e,REG4)
		//0x0d1a		TONE_DETECTION_L9
0xDCB4CDE4,	//0x0d1a		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)
0x418DC92C,	//0x0d1c		VoC_be16_rd(TONE_DETECTION_L6,REG5,0x331)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xE1270331,	//0x0d1e		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_be16_rd(TONE_DETECTION_L6,REG5,0x331)(hi)
0xFF3041BE,	//0x0d20		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x03310B2F,	//0x0d22		VoC_sub16_dr(REG7,0x331,REG5)
0x03700702,	//0x0d24		VoC_add16_rd(REG2,REG0,0x370)
0x65E61506,	//0x0d26		VoC_sw16_d(REG6,0x65e6)
0x990CE7CA,	//0x0d28		VoC_multf32_rp(ACC0,REG4,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xC92BFFC0,	//0x0d2a		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_NOP
0x9B1481D7,	//0x0d2c		VoC_multf32inc_rp(ACC0,REG4,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG2,DEFAULT)
0xC92BDC87,	//0x0d2e		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0xFFC081CF,	//0x0d30		VoC_NOP	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
		//0x0d32		VoC_endloop0
0x072DDC97,	//0x0d32		VoC_add16_rd(REG5,REG5,0x370)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x0d33		VoC_endloop1
0xFFC00370,	//0x0d34		VoC_NAD	|	VoC_add16_rd(REG5,REG5,0x370)(hi)
		//0x0d36		TONE_DETECTION_L6
0x65F21483,	//0x0d36		VoC_lw32_d(REG67,0x65f2)
0xCDBCF816,	//0x0d38		VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xC92CFF47,	//0x0d3a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0xF7257817,	//0x0d3c		VoC_movreg16(REG5,ACC0_HI,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0xCDB6C1AE,	//0x0d3e		VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x4BF7E0EF,	//0x0d40		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_movreg16(RL7_HI,REG7,DEFAULT)
0x3307E003,	//0x0d42		VoC_bez32_r(TONE_DETECTION_End,RL7)(lo)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x33870D60,	//0x0d44		VoC_bltz32_r(TONE_DETECTION_End,RL7)(lo)	|	VoC_bez32_r(TONE_DETECTION_End,RL7)(hi)
0x32460D60,	//0x0d46		VoC_bnltz16_r(TONE_DETECTION_L10,REG6)(lo)	|	VoC_bltz32_r(TONE_DETECTION_End,RL7)(hi)
0xE1A60D50,	//0x0d48		VoC_movreg16(REG6,RL6_HI,DEFAULT)	|	VoC_bnltz16_r(TONE_DETECTION_L10,REG6)(hi)
0x0C750A87,	//0x0d4a		VoC_lw16i(REG7,0xc75)
0xFFC0CDBE,	//0x0d4c		VoC_NOP	|	VoC_multf32_rr(RL6,REG6,REG7,DEFAULT)
0x0D603637,	//0x0d4e		VoC_bgt32_rr(TONE_DETECTION_End,RL6,RL7)
		//0x0d50		TONE_DETECTION_L10
0x7FFF0A87,	//0x0d50		VoC_lw16i(REG7,0x7fff)
0x65F21805,	//0x0d52		VoC_lw16i_set_inc(REG1,0x65f2,0x1)
0xF6E56885,	//0x0d54		VoC_movreg16(REG5,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFFC0AE4E,	//0x0d56		VoC_NOP	|	VoC_multf16inc_pp(REG6,REG1,REG1,DEFAULT)
0xC7F7C376,	//0x0d58		VoC_multf16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x0d59		VoC_endloop0
0x0A86F003,	//0x0d5a		VoC_lw16i(REG6,0x5b8)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x34B705B8,	//0x0d5c		VoC_bngt16_rr(TONE_DETECTION_End,REG6,REG7)(lo)	|	VoC_lw16i(REG6,0x5b8)(hi)
0xF0230D60,	//0x0d5e		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bngt16_rr(TONE_DETECTION_End,REG6,REG7)(hi)
		//0x0d60		TONE_DETECTION_End
0x1503DFA9,	//0x0d60		VoC_sw16_d(REG3,0x1e91)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5801E91,	//0x0d62		VoC_return	|	VoC_sw16_d(REG3,0x1e91)(hi)
		//0x0d64		CII_vad_computation_fr
0x1808DFE9,	//0x0d64		VoC_lw16i_set_inc(REG0,0x2056,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x20072056,	//0x0d66		VoC_lw16d_set_inc(REG3,0x1f1e,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2056,0x2)(hi)
0x18061F1E,	//0x0d68		VoC_lw16i_set_inc(REG2,0x1e88,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x1f1e,0x1)(hi)
0x140C1E88,	//0x0d6a		VoC_lw16_d(RL6_LO,0x1e92)(lo)	|	VoC_lw16i_set_inc(REG2,0x1e88,0x1)(hi)
0x14821E92,	//0x0d6c		VoC_lw32_d(REG45,0x376)(lo)	|	VoC_lw16_d(RL6_LO,0x1e92)(hi)
0xD9840376,	//0x0d6e		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw32_d(REG45,0x376)(hi)
0x3304FF17,	//0x0d70		VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(lo)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xFFC00D94,	//0x0d72		VoC_NAD	|	VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(hi)
0x02BA2B80,	//0x0d74		VoC_jal(CII_NORM_L_ACC0)
0xE20478FB,	//0x0d76		VoC_lw16i_short(REG4,0x20,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0xE13640E3,	//0x0d78		VoC_lw16i_short(REG6,0x13,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xC38942CD,	//0x0d7a		VoC_sub16_rr(REG1,REG6,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG3,REG1,DEFAULT)
0xFF44692B,	//0x0d7c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFE8BD9C3,	//0x0d7e		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x4434D132,	//0x0d80		VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0x33f)(lo)	|	VoC_mac32inc_rp(REG6,REG2,DEFAULT)
0xF8EE033F,	//0x0d82		VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)	|	VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0x33f)(hi)
0x7A0CE0C4,	//0x0d84		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0xF1C4FF17,	//0x0d86		VoC_lw16i_short(REG4,0xe,DEFAULT)	|	VoC_movreg32(RL7,REG45,IN_PARALLEL)
		//0x0d87		ENERGY_COMPUTATION_First
		//0x0d87		VoC_endloop0
0xF7844165,	//0x0d88		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x3284C365,	//0x0d8a		VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(lo)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0x14840D90,	//0x0d8c		VoC_lw32_d(ACC0,0x370)(lo)	|	VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(hi)
0xFFC00370,	//0x0d8e		VoC_NAD	|	VoC_lw32_d(ACC0,0x370)(hi)
		//0x0d90		ENERGY_COMPUTATION_100
0x02BA2B80,	//0x0d90		VoC_jal(CII_NORM_L_ACC0)
0xF724434D,	//0x0d92		VoC_movreg16(REG4,ACC0_HI,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
		//0x0d94		ENERGY_COMPUTATION_EXIT
0x64201587,	//0x0d94		VoC_sw32_d(RL7,0x6420)
0x641E1582,	//0x0d96		VoC_sw32_d(REG45,0x641e)
0x1F1E2009,	//0x0d98		VoC_lw16d_set_inc(REG1,0x1f1e,0x2)
0x20561808,	//0x0d9a		VoC_lw16i_set_inc(REG0,0x2056,0x2)
0x63FA180A,	//0x0d9c		VoC_lw16i_set_inc(REG2,0x63fa,0x2)
0x640C180B,	//0x0d9e		VoC_lw16i_set_inc(REG3,0x640c,0x2)
0xE22778F9,	//0x0da0		VoC_lw16i_short(REG7,0x22,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0x03370B0D,	//0x0da2		VoC_sub16_dr(REG5,0x337,REG1)
0xF041DF41,	//0x0da4		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x1E9E188B,	//0x0da6		VoC_lw16i_set_inc(REG3,0x1e9e,0x12)
0x1E930809,	//0x0da8		VoC_mult16_rd(REG1,REG1,0x1e93)
0x6929F006,	//0x0daa		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xD9C7C0C9,	//0x0dac		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG3,REG1,IN_PARALLEL)
0x13DFFEAF,	//0x0dae		VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_shr32_rr(RL7,REG5,DEFAULT)
0x93DFFF3E,	//0x0db0		VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_movreg32(RL6,RL7,IN_PARALLEL)
0xDDCE91DF,	//0x0db2		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_add32_rp(RL7,RL7,REG3,DEFAULT)
		//0x0db4		VoC_endloop0
0xCA595DD7,	//0x0db4		VoC_sub32_rr(REG23,REG23,REG67,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0xF0057046,	//0x0db6		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x1E940830,	//0x0db8		VoC_mult16_rd(REG0,REG6,0x1e94)
0x1ED4180B,	//0x0dba		VoC_lw16i_set_inc(REG3,0x1ed4,0x2)
0xDF014018,	//0x0dbc		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD983E924,	//0x0dbe		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xDDDBD9D2,	//0x0dc0		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x0dc2		VoC_endloop0
0x7244DDC2,	//0x0dc2		VoC_lw16i_short(REG4,0x12,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x072EE095,	//0x0dc4		VoC_add16_rd(REG6,REG5,0x1e93)(lo)	|	VoC_lw16i_short(REG5,0x9,IN_PARALLEL)
0x441C1E93,	//0x0dc6		VoC_bne16_rd(ACF_AVERAGING101,REG4,0x1e93)(lo)	|	VoC_add16_rd(REG6,REG5,0x1e93)(hi)
0xF0061E93,	//0x0dc8		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING101,REG4,0x1e93)(hi)
		//0x0dca		ACF_AVERAGING101
0x072FF364,	//0x0dca		VoC_add16_rd(REG7,REG5,0x1e94)(lo)	|	VoC_lw16i_short(REG4,0x1b,DEFAULT)
0x441C1E94,	//0x0dcc		VoC_bne16_rd(ACF_AVERAGING103,REG4,0x1e94)(lo)	|	VoC_add16_rd(REG7,REG5,0x1e94)(hi)
0xF0071E94,	//0x0dce		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING103,REG4,0x1e94)(hi)
		//0x0dd0		ACF_AVERAGING103
0x1506F033,	//0x0dd0		VoC_sw16_d(REG6,0x1e93)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x15071E93,	//0x0dd2		VoC_sw16_d(REG7,0x1e94)(lo)	|	VoC_sw16_d(REG6,0x1e93)(hi)
0x180A1E94,	//0x0dd4		VoC_lw16i_set_inc(REG2,0x640c,0x2)(lo)	|	VoC_sw16_d(REG7,0x1e94)(hi)
0x0A80640C,	//0x0dd6		VoC_lw16i(REG0,0x642c)(lo)	|	VoC_lw16i_set_inc(REG2,0x640c,0x2)(hi)
0xD994642C,	//0x0dd8		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i(REG0,0x642c)(hi)
0xE00A600B,	//0x0dda		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG0,DEFAULT)
0x0DF83304,	//0x0ddc		VoC_bez32_r(schur_recursion_End1,ACC0)
0x02BA2B80,	//0x0dde		VoC_jal(CII_NORM_L_ACC0)
0x033C0B09,	//0x0de0		VoC_sub16_dr(REG1,0x33c,REG1)
0x64811FBC,	//0x0de2		VoC_lw16i_set_inc(REG0,0x6481,0xffffffff)
0x646E1807,	//0x0de4		VoC_lw16i_set_inc(REG3,0x646e,0x1)
0xD9D3E925,	//0x0de6		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFFC0FE8B,	//0x0de8		VoC_NOP	|	VoC_shr32_rr(REG67,REG1,DEFAULT)
0xDCB6DC86,	//0x0dea		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x0deb		VoC_endloop0
0x646E1482,	//0x0dec		VoC_lw32_d(REG45,0x646e)
0x0E2A2C11,	//0x0dee		VoC_loop_i(0x1,0x8)
0x036E0B2F,	//0x0df0		VoC_sub16_dr(REG7,0x36e,REG5)
0x0DF53205,	//0x0df2		VoC_bltz16_r(abs_end,REG5)
0xFF29E0A7,	//0x0df4		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0df5		abs_end
0x0E0234BC,	//0x0df6		VoC_bngt16_rr(SCHUR_RECURSION_130,REG7,REG4)
		//0x0df8		schur_recursion_End1
0x0B12FF29,	//0x0df8		VoC_sub16_dr(REG2,0x335,REG2)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xF0070335,	//0x0dfa		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sub16_dr(REG2,0x335,REG2)(hi)
0x0E003142,	//0x0dfc		VoC_bngtz16_r(SCHUR_RECURSION_NEWADD,REG2)
0xDCB7E681,	//0x0dfe		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0dff		VoC_endloop0
		//0x0e00		SCHUR_RECURSION_NEWADD
0x0E2C2B00,	//0x0e00		VoC_jump_lg(schur_recursion_End)
		//0x0e02		SCHUR_RECURSION_130
0xE081E0E0,	//0x0e02		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x02CC2B80,	//0x0e04		VoC_jal(CII_DIV_S)
0x0E0A3145,	//0x0e06		VoC_bngtz16_r(SCHUR_RECURSION_210,REG5)
0x036E0B12,	//0x0e08		VoC_sub16_dr(REG2,0x36e,REG2)
		//0x0e0a		SCHUR_RECURSION_210
0x1486CD54,	//0x0e0a		VoC_lw32_d(RL6,0x382)(lo)	|	VoC_multf32_rr(ACC0,REG5,REG2,DEFAULT)
0xDCB20382,	//0x0e0c		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw32_d(RL6,0x382)(hi)
0xF6456142,	//0x0e0e		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,ACC1_LO,DEFAULT)
0x033441A2,	//0x0e10		VoC_be16_rd(schur_recursion_End,REG2,0x334)
0x03340B16,	//0x0e12		VoC_sub16_dr(REG6,0x334,REG2)
0xDE104930,	//0x0e14		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)
0xFF0D4067,	//0x0e16		VoC_movreg32(ACC1,REG23,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG1,REG4,DEFAULT)
0x646E1805,	//0x0e18		VoC_lw16i_set_inc(REG1,0x646e,0x1)
0x64801FBC,	//0x0e1a		VoC_lw16i_set_inc(REG0,0x6480,0xffffffff)
0x0330070A,	//0x0e1c		VoC_add16_rd(REG2,REG1,0x330)
0xDC97678B,	//0x0e1e		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xFFC09944,	//0x0e20		VoC_NOP	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0x81D4C933,	//0x0e22		VoC_add16_rp(REG4,REG7,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xFFC09B54,	//0x0e24		VoC_NOP	|	VoC_multf32inc_rp(ACC0,REG5,REG2,DEFAULT)
0x81C7C933,	//0x0e26		VoC_add16_rp(REG7,REG7,REG0,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xDC87DC94,	//0x0e28		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0e29		VoC_endloop0
		//0x0e2a		VoC_endloop1
0x646E1482,	//0x0e2a		VoC_lw32_d(REG45,0x646e)
		//0x0e2c		schur_recursion_End
0x1FBBF105,	//0x0e2c		VoC_lw16i_set_inc(REG3,0x6422,0xfffffffe)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x18066422,	//0x0e2e		VoC_lw16i_set_inc(REG2,0x642c,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x6422,0xfffffffe)(hi)
0xE06D642C,	//0x0e30		VoC_movreg16(RL6_HI,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x642c,0x1)(hi)
0x0C602B80,	//0x0e32		VoC_jal(CII_step_up_opt_fr)
0x1806F031,	//0x0e34		VoC_lw16i_set_inc(REG2,0x6422,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x18076422,	//0x0e36		VoC_lw16i_set_inc(REG3,0x63f0,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x6422,0x1)(hi)
0x180863F0,	//0x0e38		VoC_lw16i_set_inc(REG0,0x6458,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x63f0,0x1)(hi)
0xF1266458,	//0x0e3a		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6458,0x2)(hi)
0xF6415FC0,	//0x0e3c		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x0E472C13,	//0x0e3e		VoC_loop_i(0x1,0x9)
0xFF446783,	//0x0e40		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD12AD895,	//0x0e42		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x0e43		VoC_endloop0
0x07B6C2B2,	//0x0e44		VoC_sub16_rd(REG6,REG6,0x370)(lo)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0x5DC40370,	//0x0e46		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x370)(hi)
		//0x0e47		VoC_endloop1
0xDF80C271,	//0x0e48		VoC_pop16(REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)
0xD984F006,	//0x0e4a		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x02BA2B80,	//0x0e4c		VoC_jal(CII_NORM_L_ACC0)
0x033C0B0A,	//0x0e4e		VoC_sub16_dr(REG2,0x33c,REG1)
0xD9C26924,	//0x0e50		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xD9C2FE92,	//0x0e52		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
		//0x0e54		VoC_endloop0
0x1501DCB4,	//0x0e54		VoC_sw16_d(REG1,0x63ef)(lo)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x180863EF,	//0x0e56		VoC_lw16i_set_inc(REG0,0x63fa,0x2)(lo)	|	VoC_sw16_d(REG1,0x63ef)(hi)
0xDFC163FA,	//0x0e58		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63fa,0x2)(hi)
0x63F11806,	//0x0e5a		VoC_lw16i_set_inc(REG2,0x63f1,0x1)
0x1807D984,	//0x0e5c		VoC_lw16i_set_inc(REG3,0x2088,0x1)(lo)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x33442088,	//0x0e5e		VoC_bnez32_r(spectral_comp_L1,ACC0)(lo)	|	VoC_lw16i_set_inc(REG3,0x2088,0x1)(hi)
0x0A870E66,	//0x0e60		VoC_lw16i(REG7,0xfff)(lo)	|	VoC_bnez32_r(spectral_comp_L1,ACC0)(hi)
0xE9210FFF,	//0x0e62		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i(REG7,0xfff)(hi)
		//0x0e64		VoC_endloop0
0xE5CADCB7,	//0x0e64		VoC_jump(spectral_comp_L2)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x0e66		spectral_comp_L1
0x02BA2B80,	//0x0e66		VoC_jal(CII_NORM_L_ACC0)
0xC389F266,	//0x0e68		VoC_sub16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x13,DEFAULT)
0xD9C46924,	//0x0e6a		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xD9C4FE8C,	//0x0e6c		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG1,DEFAULT)
		//0x0e6e		VoC_endloop0
0xFF44DCB8,	//0x0e6e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
		//0x0e6f		spectral_comp_L2
0x20891807,	//0x0e70		VoC_lw16i_set_inc(REG3,0x2089,0x1)
0xD413E901,	//0x0e72		VoC_mac32inc_pp(REG2,REG3,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x0e73		VoC_endloop0
0xE0017F43,	//0x0e74		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x33C4FF25,	//0x0e76		VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x0BA40E7C,	//0x0e78		VoC_sub32_dr(ACC0,0x36e,ACC0)(lo)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(hi)
0xFFC0036E,	//0x0e7a		VoC_NAD	|	VoC_sub32_dr(ACC0,0x36e,ACC0)(hi)
		//0x0e7c		SPECTRAL_COMPARISON104
0x0E963304,	//0x0e7c		VoC_bez32_r(SPECTRAL_COMPARISON106,ACC0)
0x20881405,	//0x0e7e		VoC_lw16_d(REG5,0x2088)
0x2B80F8ED,	//0x0e80		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_shr16_ri(REG5,0xfffffffd,DEFAULT)
0xDF4002BA,	//0x0e82		VoC_push32(REG01,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3485E120,	//0x0e84		VoC_bngt16_rr(SPECTRAL_COMPARISON109,REG0,REG5)(lo)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xC2280E8A,	//0x0e86		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_bngt16_rr(SPECTRAL_COMPARISON109,REG0,REG5)(hi)
0x03821483,	//0x0e88		VoC_lw32_d(REG67,0x382)
		//0x0e8a		SPECTRAL_COMPARISON109
0xFFC060A1,	//0x0e8a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG1,REG5,DEFAULT)
0x02CC2B80,	//0x0e8c		VoC_jal(CII_DIV_S)
0xE0035F00,	//0x0e8e		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xFBFBC8CB,	//0x0e90		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG23,DEFAULT)
0x0E9633C5,	//0x0e92		VoC_bnltz32_r(SPECTRAL_COMPARISON106,ACC1)
0x036E0B9B,	//0x0e94		VoC_sub32_dr(REG67,0x36e,REG67)
		//0x0e96		SPECTRAL_COMPARISON106
0x7E8BFB93,	//0x0e96		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
0x1404E005,	//0x0e98		VoC_lw16_d(REG4,0x63f0)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x324463F0,	//0x0e9a		VoC_bnltz16_r(SPECTRAL_COMPARISON_LA1,REG4)(lo)	|	VoC_lw16_d(REG4,0x63f0)(hi)
0xF7E50E9E,	//0x0e9c		VoC_lw16i_short(REG5,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(SPECTRAL_COMPARISON_LA1,REG4)(hi)
		//0x0e9e		SPECTRAL_COMPARISON_LA1
0x48D3FBAA,	//0x0e9e		VoC_add32_rr(REG67,REG67,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffff5,DEFAULT)
0xFEA3DF84,	//0x0ea0		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_pop16(REG4,IN_PARALLEL)
0x1F1C099A,	//0x0ea2		VoC_sub32_rd(REG45,REG67,0x1f1c)
0x1F1C1583,	//0x0ea4		VoC_sw32_d(REG67,0x1f1c)
0x0EAA33C2,	//0x0ea6		VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)
0x036E0B92,	//0x0ea8		VoC_sub32_dr(REG45,0x36e,REG45)
		//0x0eaa		SPECTRAL_COMPARISON113
0x0A82F003,	//0x0eaa		VoC_lw16i(REG2,0xccd)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x368A0CCD,	//0x0eac		VoC_bngt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)(lo)	|	VoC_lw16i(REG2,0xccd)(hi)
0xF0230EB0,	//0x0eae		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bngt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)(hi)
		//0x0eb0		SPECTRAL_COMPARISON115
0x1E9A1400,	//0x0eb0		VoC_lw16_d(REG0,0x1e9a)
0x1E9B0700,	//0x0eb2		VoC_add16_rd(REG0,REG0,0x1e9b)
0x4818F001,	//0x0eb4		VoC_blt16_rd(threshold_adaptation_100,REG0,0x332)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF0210332,	//0x0eb6		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_blt16_rd(threshold_adaptation_100,REG0,0x332)(hi)
		//0x0eb8		threshold_adaptation_100
0x1403E060,	//0x0eb8		VoC_lw16_d(REG3,0x1e91)(lo)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x14821E91,	//0x0eba		VoC_lw32_d(REG45,0x6420)(lo)	|	VoC_lw16_d(REG3,0x1e91)(hi)
0x14866420,	//0x0ebc		VoC_lw32_d(RL6,0x641e)(lo)	|	VoC_lw32_d(REG45,0x6420)(hi)
0x1406641E,	//0x0ebe		VoC_lw16_d(REG6,0x1e96)(lo)	|	VoC_lw32_d(RL6,0x641e)(hi)
0x14071E96,	//0x0ec0		VoC_lw16_d(REG7,0x1e95)(lo)	|	VoC_lw16_d(REG6,0x1e96)(hi)
0x728F1E95,	//0x0ec2		VoC_lw16i_short(RL7_HI,0x14,DEFAULT)	|	VoC_lw16_d(REG7,0x1e95)(hi)
0x0A8EE139,	//0x0ec4		VoC_lw16i(RL7_LO,0x61a8)(lo)	|	VoC_lw16i_short(ACC0_HI,0x13,IN_PARALLEL)
0x0A8861A8,	//0x0ec6		VoC_lw16i(ACC0_LO,0x493e)(lo)	|	VoC_lw16i(RL7_LO,0x61a8)(hi)
0x3622493E,	//0x0ec8		VoC_bgt32_rr(THRESHOLD_ADAPTATION_End,ACC0,REG45)(lo)	|	VoC_lw16i(ACC0_LO,0x493e)(hi)
0x70050F36,	//0x0eca		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bgt32_rr(THRESHOLD_ADAPTATION_End,ACC0,REG45)(hi)
0x3180E014,	//0x0ecc		VoC_bez16_r(THRESHOLD_ADAPTATION107,REG0)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x40210ED3,	//0x0ece		VoC_be16_rd(THRESHOLD_ADAPTATION107,REG1,0x370)(lo)	|	VoC_bez16_r(THRESHOLD_ADAPTATION107,REG0)(hi)
0x443B0370,	//0x0ed0		VoC_bne16_rd(THRESHOLD_ADAPTATION10A,REG3,0x370)(lo)	|	VoC_be16_rd(THRESHOLD_ADAPTATION107,REG1,0x370)(hi)
0xFF1F0370,	//0x0ed2		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_bne16_rd(THRESHOLD_ADAPTATION10A,REG3,0x370)(hi)
		//0x0ed3		THRESHOLD_ADAPTATION107
0x1E971505,	//0x0ed4		VoC_sw16_d(REG5,0x1e97)
0x0F362B00,	//0x0ed6		VoC_jump_lg(THRESHOLD_ADAPTATION_End)
		//0x0ed8		THRESHOLD_ADAPTATION10A
0x1E970725,	//0x0ed8		VoC_add16_rd(REG5,REG4,0x1e97)
0x0335383D,	//0x0eda		VoC_bgt16_rd(THRESHOLD_ADAPTATION108,REG5,0x335)
0x1505FF1F,	//0x0edc		VoC_sw16_d(REG5,0x1e97)(lo)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x2B001E97,	//0x0ede		VoC_jump_lg(THRESHOLD_ADAPTATION_End)(lo)	|	VoC_sw16_d(REG5,0x1e97)(hi)
0xE0C50F36,	//0x0ee0		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_jump_lg(THRESHOLD_ADAPTATION_End)(hi)
		//0x0ee1		THRESHOLD_ADAPTATION108
0xC376F82E,	//0x0ee2		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,DEFAULT)
0x037E4C36,	//0x0ee4		VoC_bnlt16_rd(THRESHOLD_ADAPTATION109,REG6,0x37e)
0x07BFF8FE,	//0x0ee6		VoC_sub16_rd(REG7,REG7,0x370)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xFFC00370,	//0x0ee8		VoC_NAD	|	VoC_sub16_rd(REG7,REG7,0x370)(hi)
		//0x0eea		THRESHOLD_ADAPTATION109
0xE0016180,	//0x0eea		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x4882C802,	//0x0eec		VoC_add32_rr(REG45,REG45,REG01,DEFAULT)	|	VoC_add32_rr(REG45,REG01,REG01,DEFAULT)
0x7A0AE010,	//0x0eee		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0xC041F7A1,	//0x0ef0		VoC_add16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_movreg16(REG1,RL6_HI,IN_PARALLEL)
0x03805422,	//0x0ef2		VoC_bngt32_rd(THRESHOLD_ADAPTATION110,REG45,0x380)
0xC0417A0A,	//0x0ef4		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
		//0x0ef6		THRESHOLD_ADAPTATION110
0x3683E080,	//0x0ef6		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(lo)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x7F440F08,	//0x0ef8		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(hi)
0x7822F6C2,	//0x0efa		VoC_shr16_ri(REG2,0x4,DEFAULT)	|	VoC_movreg16(REG2,REG6,IN_PARALLEL)
0xE0C8E003,	//0x0efc		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x5429C909,	//0x0efe		VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x380)(lo)	|	VoC_add32_rr(REG23,ACC0,REG23,DEFAULT)
0xFA090380,	//0x0f00		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x380)(hi)
0x0370073F,	//0x0f02		VoC_add16_rd(REG7,REG7,0x370)
		//0x0f04		THRESHOLD_ADAPTATION113
0x3698E046,	//0x0f04		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(lo)	|	VoC_movreg16(REG6,REG2,DEFAULT)
0xFF030F08,	//0x0f06		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(hi)
		//0x0f08		THRESHOLD_ADAPTATION117
0x0A82F363,	//0x0f08		VoC_lw16i(REG2,0x4c4b)(lo)	|	VoC_lw16i_short(REG3,0x1b,DEFAULT)
0xFF1F4C4B,	//0x0f0a		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw16i(REG2,0x4c4b)(hi)
0xFF457F32,	//0x0f0c		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x0F16351D,	//0x0f0e		VoC_be16_rr(THRESHOLD_ADAPTATION120,REG3,REG5)
0x7FFF0A8A,	//0x0f10		VoC_lw16i(ACC1_LO,0x7fff)
0x0F16342B,	//0x0f12		VoC_bgt16_rr(THRESHOLD_ADAPTATION120,REG5,REG3)
0xFF0A7F11,	//0x0f14		VoC_movreg32(REG45,REG23,IN_PARALLEL)	|	VoC_movreg32(REG23,REG45,DEFAULT)
		//0x0f16		THRESHOLD_ADAPTATION120
0x60A6C358,	//0x0f16		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_sub16_rr(REG0,REG5,REG3,DEFAULT)
0x7005FE02,	//0x0f18		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_shr16_rr(REG2,REG0,IN_PARALLEL)
0xC88AE003,	//0x0f1a		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x0F223695,	//0x0f1c		VoC_bngt32_rr(THRESHOLD_ADAPTATION121,REG45,ACC1)
0x0735FA0A,	//0x0f1e		VoC_add16_rd(REG5,REG6,0x370)(lo)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
0xE5C30370,	//0x0f20		VoC_jump(THRESHOLD_ADAPTATION124)	|	VoC_add16_rd(REG5,REG6,0x370)(hi)
		//0x0f22		THRESHOLD_ADAPTATION121
0xFFC060C5,	//0x0f22		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x0f24		THRESHOLD_ADAPTATION124
0x0F2836BA,	//0x0f24		VoC_bngt32_rr(THRESHOLD_ADAPTATION127,RL7,REG45)
0xFFC07F17,	//0x0f26		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x0f28		THRESHOLD_ADAPTATION127
0x63EF1401,	//0x0f28		VoC_lw16_d(REG1,0x63ef)
0x1E881804,	//0x0f2a		VoC_lw16i_set_inc(REG0,0x1e88,0x1)
0x1E921501,	//0x0f2c		VoC_sw16_d(REG1,0x1e92)
0x63F01806,	//0x0f2e		VoC_lw16i_set_inc(REG2,0x63f0,0x1)
0xD8A3E923,	//0x0f30		VoC_lw16inc_p(REG3,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xDC83F125,	//0x0f32		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x9,DEFAULT)
		//0x0f33		VoC_endloop0
0x1E971505,	//0x0f34		VoC_sw16_d(REG5,0x1e97)
		//0x0f36		THRESHOLD_ADAPTATION_End
0x1E96150E,	//0x0f36		VoC_sw16_d(RL7_LO,0x1e96)
0x1E95150F,	//0x0f38		VoC_sw16_d(RL7_HI,0x1e95)
0x641E1486,	//0x0f3a		VoC_lw32_d(RL6,0x641e)
0x36B7F000,	//0x0f3c		VoC_bngt32_rr(DECISION_PENG_101,RL6,RL7)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF0200F40,	//0x0f3e		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(DECISION_PENG_101,RL6,RL7)(hi)
		//0x0f40		DECISION_PENG_101
0x1E981483,	//0x0f40		VoC_lw32_d(REG67,0x1e98)
0x03700736,	//0x0f42		VoC_add16_rd(REG6,REG6,0x370)
0x03704020,	//0x0f44		VoC_be16_rd(VAD_HANDOVER101,REG0,0x370)
0xFFC07006,	//0x0f46		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0f48		VAD_HANDOVER101
0x03314826,	//0x0f48		VoC_blt16_rd(VAD_HANDOVER103,REG6,0x331)
0xE03670A7,	//0x0f4a		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x5,DEFAULT)
		//0x0f4c		VAD_HANDOVER103
0x0F503207,	//0x0f4c		VoC_bltz16_r(VAD_HANDOVER104,REG7)
0xC3C7F020,	//0x0f4e		VoC_sub16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x0f50		VAD_HANDOVER104
0x43011500,	//0x0f50		VoC_sw16_d(REG0,0x4301)
0x1583DFA9,	//0x0f52		VoC_sw32_d(REG67,0x1e98)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5801E98,	//0x0f54		VoC_return	|	VoC_sw32_d(REG67,0x1e98)(hi)
		//0x0f56		CII_periodicity_update_fr
0x1CB41804,	//0x0f56		VoC_lw16i_set_inc(REG0,0x1cb4,0x1)
0x1E9C1406,	//0x0f58		VoC_lw16_d(REG6,0x1e9c)
0x2C09F007,	//0x0f5a		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xD8050F6F,	//0x0f5c		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0x0F6334B5,	//0x0f5e		VoC_bngt16_rr(PERIODICITYUPDATE101,REG6,REG5)
0x60C5E0A8,	//0x0f60		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG5,DEFAULT)
0xE864F706,	//0x0f62		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)
		//0x0f63		PERIODICITYUPDATE101
0x0F673435,	//0x0f64		VoC_bgt16_rr(PERIODICITYUPDATE102,REG6,REG5)
0xF024C375,	//0x0f66		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG6,DEFAULT)
		//0x0f67		PERIODICITYUPDATE102
		//0x0f67		VoC_endloop0
0x34ABC3AB,	//0x0f68		VoC_bngt16_rr(PERIODICITYUPDATE103A,REG5,REG3)(lo)	|	VoC_sub16_rr(REG3,REG6,REG5,DEFAULT)
0xE0650F6C,	//0x0f6a		VoC_movreg16(REG5,REG3,DEFAULT)	|	VoC_bngt16_rr(PERIODICITYUPDATE103A,REG5,REG3)(hi)
		//0x0f6c		PERIODICITYUPDATE103A
0x03304C1D,	//0x0f6c		VoC_bnlt16_rd(PERIODICITYUPDATE104,REG5,0x330)
0xD886C1E7,	//0x0f6e		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
		//0x0f6f		PERIODICITYUPDATE104
		//0x0f6f		VoC_endloop1
0x1E9A1405,	//0x0f70		VoC_lw16_d(REG5,0x1e9a)
0x1E9C1506,	//0x0f72		VoC_sw16_d(REG6,0x1e9c)
0x1E9A1507,	//0x0f74		VoC_sw16_d(REG7,0x1e9a)
0x1E9B1505,	//0x0f76		VoC_sw16_d(REG5,0x1e9b)
0xFFC06580,	//0x0f78		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0f7a		CII_FR_Decode
0x03821484,	//0x0f7a		VoC_lw32_d(ACC0,0x382)
0xDF44DFE9,	//0x0f7c		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0F843182,	//0x0f7e		VoC_bez16_r(gsm_decode_L1,REG2)
0x0BC82B80,	//0x0f80		VoC_jal(CII_decoder_reset)
0x101B2B80,	//0x0f82		VoC_jal(CII_dtx_dec_init)
		//0x0f84		gsm_decode_L1
0x11E12B80,	//0x0f84		VoC_jal(CII_bits2prm_fr)
0x14C22B80,	//0x0f86		VoC_jal(CII_extra_bfi_filter)
0x11B62B80,	//0x0f88		VoC_jal(CII_decoder_homing_frame_test)
0x0F983181,	//0x0f8a		VoC_bez16_r(gsm_decode_100,REG1)
0x43052008,	//0x0f8c		VoC_lw16d_set_inc(REG0,0x4305,0x2)
0xE0837102,	//0x0f8e		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0x0F922CA0,	//0x0f90		VoC_loop_i(0x0,0x50)
		//0x0f92		VoC_endloop0
0xFFC05DC1,	//0x0f92		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG0,DEFAULT)
0x101B2B80,	//0x0f94		VoC_jal(CII_dtx_dec_init)
0x10182B00,	//0x0f96		VoC_jump_lg(gsm_decode_LEnd)
		//0x0f98		gsm_decode_100
0x11112B80,	//0x0f98		VoC_jal(CII_rx_dtx_fr)
0x408A6E0C,	//0x0f9a		VoC_bnez16_d(gsm_decode_120,0x408a)
0x408C6E0A,	//0x0f9c		VoC_bnez16_d(gsm_decode_120,0x408c)
0x1E3C1808,	//0x0f9e		VoC_lw16i_set_inc(REG0,0x1e3c,0x2)
0x637E1809,	//0x0fa0		VoC_lw16i_set_inc(REG1,0x637e,0x2)
0xD9C46CC3,	//0x0fa2		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x26,DEFAULT)
0xDDCCD9C4,	//0x0fa4		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0fa5		VoC_endloop0
		//0x0fa6		gsm_decode_120
0x63371407,	//0x0fa6		VoC_lw16_d(REG7,0x6337)
0x1603E0E3,	//0x0fa8		VoC_and16_ri(REG3,0x40)(lo)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x16070040,	//0x0faa		VoC_and16_ri(REG7,0x20)(lo)	|	VoC_and16_ri(REG3,0x40)(hi)
0x31C30020,	//0x0fac		VoC_bnez16_r(gsm_decode_130,REG3)(lo)	|	VoC_and16_ri(REG7,0x20)(hi)
0x31870FB2,	//0x0fae		VoC_bez16_r(gsm_decode_140,REG7)(lo)	|	VoC_bnez16_r(gsm_decode_130,REG3)(hi)
0xFFC00FD5,	//0x0fb0		VoC_NAD	|	VoC_bez16_r(gsm_decode_140,REG7)(hi)
		//0x0fb2		gsm_decode_130
0x63DE1804,	//0x0fb2		VoC_lw16i_set_inc(REG0,0x63de,0x1)
0x63D61805,	//0x0fb4		VoC_lw16i_set_inc(REG1,0x63d6,0x1)
0x63EA0A8C,	//0x0fb6		VoC_lw16i(RL6_LO,0x63ea)
0x63E60A8D,	//0x0fb8		VoC_lw16i(RL6_HI,0x63e6)
0x1F9E1807,	//0x0fba		VoC_lw16i_set_inc(REG3,0x1f9e,0x1)
0x6338071B,	//0x0fbc		VoC_add16_rd(REG3,REG3,0x6338)
0x1E3C1806,	//0x0fbe		VoC_lw16i_set_inc(REG2,0x1e3c,0x1)
0xE0035834,	//0x0fc0		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG3,DEFAULT)
0x03800B25,	//0x0fc2		VoC_sub16_dr(REG5,0x380,REG4)
0x0370072D,	//0x0fc4		VoC_add16_rd(REG5,REG5,0x370)
0x1E500A8E,	//0x0fc6		VoC_lw16i(RL7_LO,0x1e50)
0xD90C698B,	//0x0fc8		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xc,DEFAULT)
0xF6465121,	//0x0fca		VoC_movreg16(REG6,REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG4,REG1,DEFAULT)
0xDE105128,	//0x0fcc		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG0,DEFAULT)
0x03344423,	//0x0fce		VoC_bne16_rd(gsm_decode_1ABC,REG3,0x334)
0xFF3061C2,	//0x0fd0		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_LO,DEFAULT)
		//0x0fd2		gsm_decode_1ABC
0x5C69D90C,	//0x0fd2		VoC_sw16_p(ACC0_HI,REG6,DEFAULT)	|	VoC_lw32_sd(ACC0,0x0,DEFAULT)
		//0x0fd3		VoC_endloop0
0xF207DE18,	//0x0fd4		VoC_lw16i_short(REG7,0x10,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
		//0x0fd5		gsm_decode_140
0x63372807,	//0x0fd6		VoC_and16_rd(REG7,0x6337)
0x0FDC31C7,	//0x0fd8		VoC_bnez16_r(gsm_decode_150,REG7)
0x63346C16,	//0x0fda		VoC_bez16_d(gsm_decode_160,0x6334)
		//0x0fdc		gsm_decode_150
0x10B02B80,	//0x0fdc		VoC_jal(CII_lost_frame_process)
0x1E501804,	//0x0fde		VoC_lw16i_set_inc(REG0,0x1e50,0x1)
0x00400A87,	//0x0fe0		VoC_lw16i(REG7,0x40)
0xD8866885,	//0x0fe2		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x0FE734BE,	//0x0fe4		VoC_bngt16_rr(gsm_decode_170,REG7,REG6)
0xD886E0C7,	//0x0fe6		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
		//0x0fe7		gsm_decode_170
		//0x0fe7		VoC_endloop0
0x03314837,	//0x0fe8		VoC_blt16_rd(gsm_decode_180,REG7,0x331)
0x4C2EF0C6,	//0x0fea		VoC_bnlt16_rd(gsm_decode_160,REG6,0x6334)(lo)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0xFFC06334,	//0x0fec		VoC_NAD	|	VoC_bnlt16_rd(gsm_decode_160,REG6,0x6334)(hi)
		//0x0fee		gsm_decode_180
0x107A2B80,	//0x0fee		VoC_jal(CII_silence_frame_paramer)
		//0x0ff0		gsm_decode_160
0x1407F100,	//0x0ff0		VoC_lw16_d(REG7,0x6337)(lo)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x64386337,	//0x0ff2		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x6337)(hi)
0x1607F007,	//0x0ff4		VoC_and16_ri(REG7,0x4)(lo)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x31C00004,	//0x0ff6		VoC_bnez16_r(gsm_decode_200,REG0)(lo)	|	VoC_and16_ri(REG7,0x4)(hi)
0x31870FFC,	//0x0ff8		VoC_bez16_r(gsm_decode_200_end,REG7)(lo)	|	VoC_bnez16_r(gsm_decode_200,REG0)(hi)
0xFFC01016,	//0x0ffa		VoC_NAD	|	VoC_bez16_r(gsm_decode_200_end,REG7)(hi)
		//0x0ffc		gsm_decode_200
0x63DE1808,	//0x0ffc		VoC_lw16i_set_inc(REG0,0x63de,0x2)
0x63D61809,	//0x0ffe		VoC_lw16i_set_inc(REG1,0x63d6,0x2)
0x1E3C180A,	//0x1000		VoC_lw16i_set_inc(REG2,0x1e3c,0x2)
0x63EA0A8C,	//0x1002		VoC_lw16i(RL6_LO,0x63ea)
0x63E60A8D,	//0x1004		VoC_lw16i(RL6_HI,0x63e6)
0x1E500A8E,	//0x1006		VoC_lw16i(RL7_LO,0x1e50)
0xE00368CA,	//0x1008		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD9D5D98C,	//0x100a		VoC_lw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDDCDDDC4,	//0x100c		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x03314423,	//0x100e		VoC_bne16_rd(gsm_decode_200ABC,REG3,0x331)
0xFF3061C2,	//0x1010		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_LO,DEFAULT)
		//0x1012		gsm_decode_200ABC
		//0x1012		VoC_endloop0
0xFFC05E18,	//0x1012		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x10512B80,	//0x1014		VoC_jal(CII_CN_paramer)
		//0x1016		gsm_decode_200_end
0x12552B80,	//0x1016		VoC_jal(CII_Gsm_Decoder)
		//0x1018		gsm_decode_LEnd
0xDF04DFA9,	//0x1018		VoC_pop32(ACC0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF081E580,	//0x101a		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_return
		//0x101b		CII_dtx_dec_init
0x0A82F026,	//0x101c		VoC_lw16i(REG2,0x7fff)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0A887FFF,	//0x101e		VoC_lw16i(ACC0_LO,0x6958)(lo)	|	VoC_lw16i(REG2,0x7fff)(hi)
0x0A896958,	//0x1020		VoC_lw16i(ACC0_HI,0x7081)(lo)	|	VoC_lw16i(ACC0_LO,0x6958)(hi)
0x15017081,	//0x1022		VoC_sw16_d(REG1,0x6335)(lo)	|	VoC_lw16i(ACC0_HI,0x7081)(hi)
0x15026335,	//0x1024		VoC_sw16_d(REG2,0x6336)(lo)	|	VoC_sw16_d(REG1,0x6335)(hi)
0x15066336,	//0x1026		VoC_sw16_d(REG6,0x6337)(lo)	|	VoC_sw16_d(REG2,0x6336)(hi)
0x15846337,	//0x1028		VoC_sw32_d(ACC0,0x633a)(lo)	|	VoC_sw16_d(REG6,0x6337)(hi)
0x72E1633A,	//0x102a		VoC_lw16i_short(REG1,0x17,DEFAULT)	|	VoC_sw32_d(ACC0,0x633a)(hi)
0x1808FF44,	//0x102c		VoC_lw16i_set_inc(REG0,0x637e,0x2)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x1806637E,	//0x102e		VoC_lw16i_set_inc(REG2,0x6386,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x637e,0x2)(hi)
0x6F026386,	//0x1030		VoC_loop_i_short(0x38,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6386,0x1)(hi)
0xDDC4E286,	//0x1032		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
		//0x1033		VoC_endloop0
0x63381501,	//0x1034		VoC_sw16_d(REG1,0x6338)
0x63391508,	//0x1036		VoC_sw16_d(ACC0_LO,0x6339)
0x63341508,	//0x1038		VoC_sw16_d(ACC0_LO,0x6334)
0xDCA6E881,	//0x103a		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x103b		VoC_endloop0
0xE2AC714F,	//0x103c		VoC_lw16i_short(RL6_LO,0x2a,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0xa,DEFAULT)
0xE27D72AE,	//0x103e		VoC_lw16i_short(RL6_HI,0x27,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x15,DEFAULT)
0x63D61808,	//0x1040		VoC_lw16i_set_inc(REG0,0x63d6,0x2)
0x63DE180A,	//0x1042		VoC_lw16i_set_inc(REG2,0x63de,0x2)
0xDDD6DDC6,	//0x1044		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xE09C708D,	//0x1046		VoC_lw16i_short(RL6_LO,0x9,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x4,DEFAULT)
0x5DD7DDC7,	//0x1048		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xF06EE02F,	//0x104a		VoC_lw16i_short(RL7_LO,0x3,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x2,IN_PARALLEL)
0xDDD6DDC6,	//0x104c		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDD7DDC7,	//0x104e		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xDFE9E580,	//0x1050		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1051		CII_CN_paramer
0x1E4C1805,	//0x1052		VoC_lw16i_set_inc(REG1,0x1e4c,0x1)
0x1E481806,	//0x1054		VoC_lw16i_set_inc(REG2,0x1e48,0x1)
0x633A1484,	//0x1056		VoC_lw32_d(ACC0,0x633a)
0xFFC07003,	//0x1058		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x10602C09,	//0x105a		VoC_loop_i(0x1,0x4)
0xE0205C93,	//0x105c		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0x10F12B80,	//0x105e		VoC_jal(CII_pseudonoise_fr)
		//0x1060		VoC_endloop1
0x0A8CDCA7,	//0x1060		VoC_lw16i(RL6_LO,0x28)(lo)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0x0A8D0028,	//0x1062		VoC_lw16i(RL6_HI,0x78)(lo)	|	VoC_lw16i(RL6_LO,0x28)(hi)
0x18050078,	//0x1064		VoC_lw16i_set_inc(REG1,0x1e54,0x1)(lo)	|	VoC_lw16i(RL6_HI,0x78)(hi)
0x15861E54,	//0x1066		VoC_sw32_d(RL6,0x1e44)(lo)	|	VoC_lw16i_set_inc(REG1,0x1e54,0x1)(hi)
0x15861E44,	//0x1068		VoC_sw32_d(RL6,0x1e46)(lo)	|	VoC_sw32_d(RL6,0x1e44)(hi)
0x2C691E46,	//0x106a		VoC_loop_i(0x1,0x34)(lo)	|	VoC_sw32_d(RL6,0x1e46)(hi)
0xF0601074,	//0x106c		VoC_lw16i_short(REG0,0x3,DEFAULT)	|	VoC_loop_i(0x1,0x34)(hi)
		//0x106d		CN_paramer_100
0x10F12B80,	//0x106e		VoC_jal(CII_pseudonoise_fr)
0x106D3187,	//0x1070		VoC_bez16_r(CN_paramer_100,REG7)
0x0334439F,	//0x1072		VoC_be16_rd(CN_paramer_100,REG7,0x334)
		//0x1074		VoC_endloop1
0xDFA9DC97,	//0x1074		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x633A1584,	//0x1076		VoC_sw32_d(ACC0,0x633a)
0xFFC06580,	//0x1078		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x107a		CII_silence_frame_paramer
0xE2AC714F,	//0x107a		VoC_lw16i_short(RL6_LO,0x2a,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0xa,DEFAULT)
0xE27D72AE,	//0x107c		VoC_lw16i_short(RL6_HI,0x27,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x15,DEFAULT)
0x1E3C1808,	//0x107e		VoC_lw16i_set_inc(REG0,0x1e3c,0x2)
0xE09C708D,	//0x1080		VoC_lw16i_short(RL6_LO,0x9,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x4,DEFAULT)
0xE02F5DC6,	//0x1082		VoC_lw16i_short(RL7_HI,0x2,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xE03E5DC7,	//0x1084		VoC_lw16i_short(RL7_LO,0x3,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xE2855DC6,	//0x1086		VoC_lw16i_short(REG5,0x28,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xE0045DC7,	//0x1088		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x1E441807,	//0x108a		VoC_lw16i_set_inc(REG3,0x1e44,0x1)
0x1E4C1805,	//0x108c		VoC_lw16i_set_inc(REG1,0x1e4c,0x1)
0x1E481806,	//0x108e		VoC_lw16i_set_inc(REG2,0x1e48,0x1)
0x1E501804,	//0x1090		VoC_lw16i_set_inc(REG0,0x1e50,0x1)
0xE0166886,	//0x1092		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC94DC84,	//0x1094		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE0385CA6,	//0x1096		VoC_lw16i_short(ACC0_LO,0x3,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x1098		VoC_endloop0
0xE0395CB5,	//0x1098		VoC_lw16i_short(ACC0_HI,0x3,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x6B42F050,	//0x109a		VoC_loop_i_short(0x1a,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xDDC4E045,	//0x109c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
		//0x109d		VoC_endloop0
0x1E551834,	//0x109e		VoC_lw16i_set_inc(REG0,0x1e55,0xd)
0x1E571835,	//0x10a0		VoC_lw16i_set_inc(REG1,0x1e57,0xd)
0x1E581836,	//0x10a2		VoC_lw16i_set_inc(REG2,0x1e58,0xd)
0xDC85E883,	//0x10a4		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCA5DC95,	//0x10a6		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x10a7		VoC_endloop0
0x1E5D1834,	//0x10a8		VoC_lw16i_set_inc(REG0,0x1e5d,0xd)
0x1E5E1835,	//0x10aa		VoC_lw16i_set_inc(REG1,0x1e5e,0xd)
0xDC85E882,	//0x10ac		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x10ae		VoC_endloop0
0xE580DC95,	//0x10ae		VoC_return	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x10b0		CII_lost_frame_process
0x1808DFE9,	//0x10b0		VoC_lw16i_set_inc(REG0,0x637e,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x1809637E,	//0x10b2		VoC_lw16i_set_inc(REG1,0x1e3c,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x637e,0x2)(hi)
0x6CC31E3C,	//0x10b4		VoC_loop_i_short(0x26,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1e3c,0x2)(hi)
0xD9C4D9C4,	//0x10b6		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
		//0x10b8		VoC_endloop0
0xE0165DCC,	//0x10b8		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x63371407,	//0x10ba		VoC_lw16_d(REG7,0x6337)
0x1607E0E1,	//0x10bc		VoC_and16_ri(REG7,0x80)(lo)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0x16010080,	//0x10be		VoC_and16_ri(REG1,0x1)(lo)	|	VoC_and16_ri(REG7,0x80)(hi)
0x14840001,	//0x10c0		VoC_lw32_d(ACC0,0x633a)(lo)	|	VoC_and16_ri(REG1,0x1)(hi)
0x1806633A,	//0x10c2		VoC_lw16i_set_inc(REG2,0x6392,0x1)(lo)	|	VoC_lw32_d(ACC0,0x633a)(hi)
0x350E6392,	//0x10c4		VoC_be16_rr(lost_frame_process_300,REG1,REG6)(lo)	|	VoC_lw16i_set_inc(REG2,0x6392,0x1)(hi)
0x318710D6,	//0x10c6		VoC_bez16_r(lost_frame_process_200,REG7)(lo)	|	VoC_be16_rr(lost_frame_process_300,REG1,REG6)(hi)
0x180A10ED,	//0x10c8		VoC_lw16i_set_inc(REG2,0x63d6,0x2)(lo)	|	VoC_bez16_r(lost_frame_process_200,REG7)(hi)
0x180B63D6,	//0x10ca		VoC_lw16i_set_inc(REG3,0x1e3c,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x63d6,0x2)(hi)
0x68831E3C,	//0x10cc		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1e3c,0x2)(hi)
0xD9D4D9D4,	//0x10ce		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x10d0		VoC_endloop0
0x1484DDDC,	//0x10d0		VoC_lw32_d(ACC0,0x633a)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x1806633A,	//0x10d2		VoC_lw16i_set_inc(REG2,0x63e6,0x1)(lo)	|	VoC_lw32_d(ACC0,0x633a)(hi)
0xE5C363E6,	//0x10d4		VoC_jump(lost_frame_process_400)	|	VoC_lw16i_set_inc(REG2,0x63e6,0x1)(hi)
		//0x10d6		lost_frame_process_300
0x6334413E,	//0x10d6		VoC_be16_rd(lost_frame_process_200,REG6,0x6334)
		//0x10d8		lost_frame_process_400
0x1E501805,	//0x10d8		VoC_lw16i_set_inc(REG1,0x1e50,0x1)
0x1E481807,	//0x10da		VoC_lw16i_set_inc(REG3,0x1e48,0x1)
0x10EC2C09,	//0x10dc		VoC_loop_i(0x1,0x4)
0x4826D816,	//0x10de		VoC_blt16_rd(lost_frame_process_10,REG6,0x342)(lo)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0x0A860342,	//0x10e0		VoC_lw16i(REG6,0x40)(lo)	|	VoC_blt16_rd(lost_frame_process_10,REG6,0x342)(hi)
0xF80E0040,	//0x10e2		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i(REG6,0x40)(hi)
		//0x10e3		lost_frame_process_10
0x10E73246,	//0x10e4		VoC_bnltz16_r(lost_frame_process_100,REG6)
0xF040F006,	//0x10e6		VoC_lw16i_short(REG0,0x2,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x10e7		lost_frame_process_100
0xDCA6DC96,	//0x10e8		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x10F12B80,	//0x10ea		VoC_jal(CII_pseudonoise_fr)
		//0x10ec		VoC_endloop1
0xDFA9DCB7,	//0x10ec		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x10ed		lost_frame_process_200
0x633A1584,	//0x10ee		VoC_sw32_d(ACC0,0x633a)
0xF007E580,	//0x10f0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x10f1		CII_pseudonoise_fr
0xFF25661D,	//0x10f2		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x03702985,	//0x10f4		VoC_and32_rd(ACC1,0x370)
0x3345F020,	//0x10f6		VoC_bnez32_r(PSEUDONOISE102,ACC1)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF00010FA,	//0x10f8		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez32_r(PSEUDONOISE102,ACC1)(hi)
		//0x10fa		PSEUDONOISE102
0x0A8BFF45,	//0x10fa		VoC_lw16i(ACC1_HI,0x1000)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x64E51000,	//0x10fc		VoC_and32_rr(ACC1,ACC0,DEFAULT)	|	VoC_lw16i(ACC1_HI,0x1000)(hi)
0x3305E004,	//0x10fe		VoC_bez32_r(PSEUDONOISE103,ACC1)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xF0241102,	//0x1100		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez32_r(PSEUDONOISE103,ACC1)(hi)
		//0x1102		PSEUDONOISE103
0xF8FF64A0,	//0x1102		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_xor16_rr(REG0,REG4,DEFAULT)
0x2982FF22,	//0x1104		VoC_and32_rd(REG45,0x370)(lo)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xE4670370,	//0x1106		VoC_or16_rr(REG7,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x370)(hi)
0xE0147A0C,	//0x1108		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x3184E404,	//0x110a		VoC_bez16_r(PSEUDONOISE105,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0x2A04110F,	//0x110c		VoC_or32_rd(ACC0,0x372)(lo)	|	VoC_bez16_r(PSEUDONOISE105,REG4)(hi)
0xFF250372,	//0x110e		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_or32_rd(ACC0,0x372)(hi)
		//0x110f		PSEUDONOISE105
		//0x110f		VoC_endloop0
0xF023E580,	//0x1110		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_return
		//0x1111		CII_rx_dtx_fr
0x408A1402,	//0x1112		VoC_lw16_d(REG2,0x408a)
0x408C1401,	//0x1114		VoC_lw16_d(REG1,0x408c)
0x111E31C2,	//0x1116		VoC_bnez16_r(RX_DTX102,REG2)
0x03304091,	//0x1118		VoC_be16_rd(RX_DTX107,REG1,0x330)
0x112131C1,	//0x111a		VoC_bnez16_r(RX_DTX103,REG1)
0xE5C5F063,	//0x111c		VoC_jump(RX_DTX107)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
		//0x111e		RX_DTX102
0x3181F083,	//0x111e		VoC_bez16_r(RX_DTX107,REG1)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0xF0431122,	//0x1120		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_bez16_r(RX_DTX107,REG1)(hi)
		//0x1121		RX_DTX103
		//0x1122		RX_DTX107
0x1407F020,	//0x1122		VoC_lw16_d(REG7,0x6337)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x64386337,	//0x1124		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x6337)(hi)
0x1406F6E5,	//0x1126		VoC_lw16_d(REG6,0x6334)(lo)	|	VoC_movreg16(REG5,REG7,IN_PARALLEL)
0x31806334,	//0x1128		VoC_bez16_r(RX_DTX120,REG0)(lo)	|	VoC_lw16_d(REG6,0x6334)(hi)
0xF087113D,	//0x112a		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_bez16_r(RX_DTX120,REG0)(hi)
0x03704093,	//0x112c		VoC_be16_rd(RX_DTX130a,REG3,0x370)
0x00240A87,	//0x112e		VoC_lw16i(REG7,0x24)
0x033041A3,	//0x1130		VoC_be16_rd(RX_DTX130,REG3,0x330)
0x4423F027,	//0x1132		VoC_bne16_rd(RX_DTX110,REG3,0x332)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xC1BE0332,	//0x1134		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_bne16_rd(RX_DTX110,REG3,0x332)(hi)
		//0x1136		RX_DTX130a
0xE0A7E5D6,	//0x1136		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_jump(RX_DTX130)
		//0x1137		RX_DTX110
0x03314523,	//0x1138		VoC_bne16_rd(RX_DTX130,REG3,0x331)
0xE0067027,	//0x113a		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xF107E5D0,	//0x113c		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_jump(RX_DTX130)
		//0x113d		RX_DTX120
0x037040B3,	//0x113e		VoC_be16_rd(RX_DTX130,REG3,0x370)
0x00280A87,	//0x1140		VoC_lw16i(REG7,0x28)
0x03304093,	//0x1142		VoC_be16_rd(RX_DTX130,REG3,0x330)
0x02000A87,	//0x1144		VoC_lw16i(REG7,0x200)
0x03324033,	//0x1146		VoC_be16_rd(RX_DTX130,REG3,0x332)
0x441BE0A7,	//0x1148		VoC_bne16_rd(RX_DTX130,REG3,0x331)(lo)	|	VoC_movreg16(REG7,REG5,DEFAULT)
0xF0270331,	//0x114a		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bne16_rd(RX_DTX130,REG3,0x331)(hi)
		//0x114c		RX_DTX130
0x1506F020,	//0x114c		VoC_sw16_d(REG6,0x6334)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x14046334,	//0x114e		VoC_lw16_d(REG4,0x6339)(lo)	|	VoC_sw16_d(REG6,0x6334)(hi)
0x14026339,	//0x1150		VoC_lw16_d(REG2,0x6338)(lo)	|	VoC_lw16_d(REG4,0x6339)(hi)
0xE4386338,	//0x1152		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG2,0x6338)(hi)
0x115A3180,	//0x1154		VoC_bez16_r(RX_DTX140,REG0)
0xE1727004,	//0x1156		VoC_lw16i_short(REG2,0x17,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x118A2B00,	//0x1158		VoC_jump_lg(RX_DTX160)
		//0x115a		RX_DTX140
0xE438F080,	//0x115a		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x11623180,	//0x115c		VoC_bez16_r(RX_DTX141,REG0)
0xF2E2F004,	//0x115e		VoC_lw16i_short(REG2,0x17,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x63341504,	//0x1160		VoC_sw16_d(REG4,0x6334)
		//0x1162		RX_DTX141
0xE438F100,	//0x1162		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x11733180,	//0x1164		VoC_bez16_r(RX_DTX150,REG0)
0x442BF004,	//0x1166		VoC_bne16_rd(RX_DTX142,REG3,0x370)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0020370,	//0x1168		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_bne16_rd(RX_DTX142,REG3,0x370)(hi)
0xFFC065C9,	//0x116a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RX_DTX150)
		//0x116c		RX_DTX142
0x0330443B,	//0x116c		VoC_bne16_rd(RX_DTX150,REG3,0x330)
0x348AF2E1,	//0x116e		VoC_bngt16_rr(RX_DTX150,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x17,DEFAULT)
0x07121173,	//0x1170		VoC_add16_rd(REG2,REG2,0x370)(lo)	|	VoC_bngt16_rr(RX_DTX150,REG1,REG2)(hi)
0xE0E00370,	//0x1172		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x370)(hi)
		//0x1173		RX_DTX150
0x02001600,	//0x1174		VoC_and16_ri(REG0,0x200)
0x118A3180,	//0x1176		VoC_bez16_r(RX_DTX160,REG0)
0x348AF2E1,	//0x1178		VoC_bngt16_rr(RX_DTX151,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x17,DEFAULT)
0x0712117D,	//0x117a		VoC_add16_rd(REG2,REG2,0x370)(lo)	|	VoC_bngt16_rr(RX_DTX151,REG1,REG2)(hi)
0xF0210370,	//0x117c		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x370)(hi)
		//0x117d		RX_DTX151
0x408D4431,	//0x117e		VoC_bne16_rd(RX_DTX152,REG1,0x408d)
0x00101687,	//0x1180		VoC_or16_ri(REG7,0x10)
0xE5C3C10C,	//0x1182		VoC_jump(RX_DTX153)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
		//0x1184		RX_DTX152
0x00401687,	//0x1184		VoC_or16_ri(REG7,0x40)
		//0x1186		RX_DTX153
0x118A34A1,	//0x1186		VoC_bngt16_rr(RX_DTX160,REG4,REG1)
0x00801687,	//0x1188		VoC_or16_ri(REG7,0x80)
		//0x118a		RX_DTX160
0x63391504,	//0x118a		VoC_sw16_d(REG4,0x6339)
0x63381502,	//0x118c		VoC_sw16_d(REG2,0x6338)
0x1402F021,	//0x118e		VoC_lw16_d(REG2,0x6336)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x64396336,	//0x1190		VoC_and16_rr(REG1,REG7,DEFAULT)	|	VoC_lw16_d(REG2,0x6336)(hi)
0x1404C08A,	//0x1192		VoC_lw16_d(REG4,0x6335)(lo)	|	VoC_add16_rr(REG2,REG2,REG1,IN_PARALLEL)
0x31816335,	//0x1194		VoC_bez16_r(RX_DTX161,REG1)(lo)	|	VoC_lw16_d(REG4,0x6335)(hi)
0xF0841199,	//0x1196		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_bez16_r(RX_DTX161,REG1)(hi)
0xF360E5D6,	//0x1198		VoC_lw16i_short(REG0,0x1b,DEFAULT)	|	VoC_jump(RX_DTX170)
		//0x1199		RX_DTX161
0x11A83490,	//0x119a		VoC_bngt16_rr(RX_DTX162,REG2,REG0)
0x00021687,	//0x119c		VoC_or16_ri(REG7,0x2)
0x69580A80,	//0x119e		VoC_lw16i(REG0,0x6958)
0x70810A81,	//0x11a0		VoC_lw16i(REG1,0x7081)
0xE0047002,	//0x11a2		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x633A1580,	//0x11a4		VoC_sw32_d(REG01,0x633a)
0xFFC065C8,	//0x11a6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RX_DTX170)
		//0x11a8		RX_DTX162
0x11AC31C4,	//0x11a8		VoC_bnez16_r(RX_DTX163,REG4)
0xE5C3F002,	//0x11aa		VoC_jump(RX_DTX170)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x11ac		RX_DTX163
0x037007A4,	//0x11ac		VoC_sub16_rd(REG4,REG4,0x370)
		//0x11ae		RX_DTX170
0x63361502,	//0x11ae		VoC_sw16_d(REG2,0x6336)
0x63351504,	//0x11b0		VoC_sw16_d(REG4,0x6335)
0x63371507,	//0x11b2		VoC_sw16_d(REG7,0x6337)
0xFFC06580,	//0x11b4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x11b6		CII_decoder_homing_frame_test
0x1E3C1806,	//0x11b6		VoC_lw16i_set_inc(REG2,0x1e3c,0x1)
0x1F3A1804,	//0x11b8		VoC_lw16i_set_inc(REG0,0x1f3a,0x1)
0xD8A16906,	//0x11ba		VoC_lw16inc_p(REG1,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xE499D883,	//0x11bc		VoC_xor16_rr(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0x11DF31C1,	//0x11be		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x11c0		VoC_endloop0
0xE885D8A1,	//0x11c0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0x00281701,	//0x11c2		VoC_xor16_ri(REG1,0x28)
0x11DF31C1,	//0x11c4		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x11c6		VoC_endloop0
0xE985D8A1,	//0x11c6		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0x00001701,	//0x11c8		VoC_xor16_ri(REG1,0x0)
0x11DF31C1,	//0x11ca		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x11cc		VoC_endloop0
0x6D65D8A1,	//0x11cc		VoC_loop_i_short(0x2b,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0xE4A9E045,	//0x11ce		VoC_xor16_rr(REG1,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x11DF31C1,	//0x11d0		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x11d2		VoC_endloop0
0x1701D8A1,	//0x11d2		VoC_xor16_ri(REG1,0x3)(lo)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0x31C10003,	//0x11d4		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)(lo)	|	VoC_xor16_ri(REG1,0x3)(hi)
0x690511DF,	//0x11d6		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_bnez16_r(DEC_HOMING_LABLE,REG1)(hi)
0xE4A9D8A1,	//0x11d8		VoC_xor16_rr(REG1,REG5,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,IN_PARALLEL)
0x11DF31C1,	//0x11da		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x11dc		VoC_endloop0
0xF021D8A1,	//0x11dc		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0xF001E580,	//0x11de		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_return
		//0x11df		DEC_HOMING_LABLE
0xF025E580,	//0x11e0		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_return
		//0x11e1		CII_bits2prm_fr
0x00001808,	//0x11e2		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x03350700,	//0x11e4		VoC_add16_rd(REG0,REG0,0x335)
0x20D81805,	//0x11e6		VoC_lw16i_set_inc(REG1,0x20d8,0x1)
0xF3FE59C3,	//0x11e8		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x11F22C11,	//0x11ea		VoC_loop_i(0x1,0x8)
0xF6C46C05,	//0x11ec		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x20,DEFAULT)
0xFA0B642C,	//0x11ee		VoC_shr32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0xDC94E0C4,	//0x11f0		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x11f1		VoC_endloop0
		//0x11f2		VoC_endloop1
0xFFC0D9C3,	//0x11f2		VoC_NAD	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF6C46905,	//0x11f4		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xFA0B642C,	//0x11f6		VoC_shr32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0xDC94E0C4,	//0x11f8		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x11f9		VoC_endloop0
0x1E3C1804,	//0x11fa		VoC_lw16i_set_inc(REG0,0x1e3c,0x1)
0x20D81805,	//0x11fc		VoC_lw16i_set_inc(REG1,0x20d8,0x1)
0x00061FBF,	//0x11fe		VoC_lw16i_set_inc(REG3,0x6,0xffffffff)
0xFFC07002,	//0x1200		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x1202		BITS2PRM_L1
0x033148B3,	//0x1202		VoC_blt16_rd(BITS2PRM_L2,REG3,0x331)
0x120D2C05,	//0x1204		VoC_loop_i(0x1,0x2)
0xE00466C4,	//0x1206		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG3,DEFAULT)
0xFE15D895,	//0x1208		VoC_shr16_rr(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x120a		VoC_endloop0
0xDE10646C,	//0x120a		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xDC84F002,	//0x120c		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x120d		VoC_endloop1
0xE5F3DE18,	//0x120e		VoC_jump(BITS2PRM_L1)	|	VoC_inc_p(REG3,DEFAULT)
		//0x1210		BITS2PRM_L2
0x1E541804,	//0x1210		VoC_lw16i_set_inc(REG0,0x1e54,0x1)
0x1E440A86,	//0x1212		VoC_lw16i(REG6,0x1e44)
0x1E4C0A87,	//0x1214		VoC_lw16i(REG7,0x1e4c)
0x1E480A84,	//0x1216		VoC_lw16i(REG4,0x1e48)
0x1E500A85,	//0x1218		VoC_lw16i(REG5,0x1e50)
0xFF1F7F16,	//0x121a		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0xFFC07003,	//0x121c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x12532C09,	//0x121e		VoC_loop_i(0x1,0x4)
0xE00268E4,	//0x1220		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0xFE15D895,	//0x1222		VoC_shr16_rr(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x1224		VoC_endloop0
0xDE10646B,	//0x1224		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_or16_rr(REG3,REG5,DEFAULT)
0xFF327002,	//0x1226		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x6844DC63,	//0x1228		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_sw16_p(REG3,REG6,DEFAULT)
0xD896E003,	//0x122a		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x6473FE16,	//0x122c		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
		//0x122d		VoC_endloop0
0x093FDE10,	//0x122e		VoC_add32_rd(RL7,RL7,0x37c)(lo)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x5C73037C,	//0x1230		VoC_sw16_p(REG3,REG7,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x37c)(hi)
0x6844E002,	//0x1232		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xD896E003,	//0x1234		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x6473FE16,	//0x1236		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
		//0x1237		VoC_endloop0
0xF002DE10,	//0x1238		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x68C4DCC3,	//0x123a		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_sw16inc_p(REG3,REG4,DEFAULT)
0xD896E003,	//0x123c		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x6473FE16,	//0x123e		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
		//0x123f		VoC_endloop0
0x0936DE10,	//0x1240		VoC_add32_rd(RL6,RL6,0x37c)(lo)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x5C53037C,	//0x1242		VoC_sw16_p(REG3,REG5,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x37c)(hi)
0x69ADEFF2,	//0x1244		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)
0xD896E003,	//0x1246		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xD896E473,	//0x1248		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_or16_rr(REG3,REG6,DEFAULT)
0x6473FE16,	//0x124a		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
0xD896DE10,	//0x124c		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x6473FE16,	//0x124e		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
0xF003EFF2,	//0x1250		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)
		//0x1252		VoC_endloop0
0xFF3BDC83,	//0x1252		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
		//0x1253		VoC_endloop1
0xDFE9E580,	//0x1254		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1255		CII_Gsm_Decoder
0x43052004,	//0x1256		VoC_lw16d_set_inc(REG0,0x4305,0x1)
0x1FB61805,	//0x1258		VoC_lw16i_set_inc(REG1,0x1fb6,0x1)
0x1E541806,	//0x125a		VoC_lw16i_set_inc(REG2,0x1e54,0x1)
0xDFC0DFC7,	//0x125c		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xDFC2DFC1,	//0x125e		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x1D701804,	//0x1260		VoC_lw16i_set_inc(REG0,0x1d70,0x1)
0x20561805,	//0x1262		VoC_lw16i_set_inc(REG1,0x2056,0x1)
0x1E441806,	//0x1264		VoC_lw16i_set_inc(REG2,0x1e44,0x1)
0xDFC1DFC0,	//0x1266		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x1804DFC2,	//0x1268		VoC_lw16i_set_inc(REG0,0x1e4c,0x1)(lo)	|	VoC_push16(REG2,DEFAULT)
0x18051E4C,	//0x126a		VoC_lw16i_set_inc(REG1,0x1e50,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1e4c,0x1)(hi)
0x18061E50,	//0x126c		VoC_lw16i_set_inc(REG2,0x1e48,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x1e50,0x1)(hi)
0xDFC01E48,	//0x126e		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1e48,0x1)(hi)
0x5FC2DFC1,	//0x1270		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFFC0EFF7,	//0x1272		VoC_NAD	|	VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)
		//0x1274		Gsm_Decoder_Loop_start
0x0370073F,	//0x1274		VoC_add16_rd(REG7,REG7,0x370)
0x03313C27,	//0x1276		VoC_bngt16_rd(Gsm_Decoder_Loop_start2,REG7,0x331)
0x12A02B00,	//0x1278		VoC_jump_lg(Gsm_Decoder_Loop_End)
		//0x127a		Gsm_Decoder_Loop_start2
0xF0057030,	//0x127a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xFFC05AA7,	//0x127c		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x9,DEFAULT)
0x0BA12B80,	//0x127e		VoC_jal(CII_Gsm_RPE_Decoding)
0x12C02B80,	//0x1280		VoC_jal(CII_Gsm_Long_Term_Synthesis_Filtering)
0xD620D674,	//0x1282		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0x5642D631,	//0x1284		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x5613E0D5,	//0x1286		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0xd,IN_PARALLEL)
0x0900C12C,	//0x1288		VoC_add32_rd(REG01,REG01,0x37c)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)
0x0909037C,	//0x128a		VoC_add32_rd(REG23,REG23,0x37c)(lo)	|	VoC_add32_rd(REG01,REG01,0x37c)(hi)
0xDA74037C,	//0x128c		VoC_sw16_sd(REG4,0x6,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x37c)(hi)
0xF0095A20,	//0x128e		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_sw16_sd(REG0,0x1,DEFAULT)
0xF0085A31,	//0x1290		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sw16_sd(REG1,0x2,DEFAULT)
0xE0A65A42,	//0x1292		VoC_lw16i_short(REG6,0xa,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x3,DEFAULT)
0x56A7DA13,	//0x1294		VoC_lw16_sd(REG7,0x9,DEFAULT)	|	VoC_sw16_sd(REG3,0x0,DEFAULT)
0xC57DE285,	//0x1296		VoC_mult16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x28,IN_PARALLEL)
0x5660D681,	//0x1298		VoC_lw16_sd(REG0,0x5,DEFAULT)	|	VoC_lw16_sd(REG1,0x7,DEFAULT)
0xFFC0C069,	//0x129a		VoC_NAD	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x0C202B80,	//0x129c		VoC_jal(CII_copy)
0x12742B00,	//0x129e		VoC_jump_lg(Gsm_Decoder_Loop_start)
		//0x12a0		Gsm_Decoder_Loop_End
0x1E3C1804,	//0x12a0		VoC_lw16i_set_inc(REG0,0x1e3c,0x1)
0xDF84E8C1,	//0x12a2		VoC_pop16(REG4,DEFAULT)	|	VoC_loop_i_short(0x6,DEFAULT)
		//0x12a3		VoC_endloop0
0x2B80DA10,	//0x12a4		VoC_jal(CII_Gsm_Short_Term_Synthesis_Filter)(lo)	|	VoC_sw16_sd(REG0,0x0,DEFAULT)
0xDF8012EC,	//0x12a6		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_Gsm_Short_Term_Synthesis_Filter)(hi)
0x5F81DF87,	//0x12a8		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x5F86F004,	//0x12aa		VoC_pop16(REG6,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x5FA9F005,	//0x12ac		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x1405D90D,	//0x12ae		VoC_lw16_d(REG5,0x1e39)(lo)	|	VoC_lw32_sd(ACC1,0x0,IN_PARALLEL)
0x0A841E39,	//0x12b0		VoC_lw16i(REG4,0x6e14)(lo)	|	VoC_lw16_d(REG5,0x1e39)(hi)
0xCD636E14,	//0x12b2		VoC_multf32_rr(REG67,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x6e14)(hi)
0x12BC2D41,	//0x12b4		VoC_loop_i(0x1,0xa0)
0x81CDC8EB,	//0x12b6		VoC_add16_rp(REG5,REG7,REG1,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
0x1643C16B,	//0x12b8		VoC_and16_ri(REG3,0xfff8)(lo)	|	VoC_add16_rr(REG3,REG5,REG5,DEFAULT)
0xCD637FF8,	//0x12ba		VoC_multf32_rr(REG67,REG5,REG4,DEFAULT)	|	VoC_and16_ri(REG3,0xfff8)(hi)
		//0x12bc		VoC_endloop1
0x1505DC93,	//0x12bc		VoC_sw16_d(REG5,0x1e39)(lo)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xE5801E39,	//0x12be		VoC_return	|	VoC_sw16_d(REG5,0x1e39)(hi)
		//0x12c0		CII_Gsm_Long_Term_Synthesis_Filtering
0x1407D646,	//0x12c0		VoC_lw16_d(REG7,0x1e2f)(lo)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0xD8661E2F,	//0x12c2		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16_d(REG7,0x1e2f)(hi)
0x482ED90D,	//0x12c4		VoC_blt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0x340)(lo)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0x381E0340,	//0x12c6		VoC_bgt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0x344)(lo)	|	VoC_blt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0x340)(hi)
0xE0C70344,	//0x12c8		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_bgt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0x344)(hi)
		//0x12ca		Gsm_Long_Term_Syn_Filt_L1
0x0A85D634,	//0x12ca		VoC_lw16i(REG5,0x1f26)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xD8441F26,	//0x12cc		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x1f26)(hi)
0x1E2F1507,	//0x12ce		VoC_sw16_d(REG7,0x1e2f)
0x03313824,	//0x12d0		VoC_bgt16_rd(Gsm_Long_Term_Syn_Filt_LAB1,REG4,0x331)
0xFFC04165,	//0x12d2		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
		//0x12d4		Gsm_Long_Term_Syn_Filt_LAB1
0xF0065660,	//0x12d4		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0xD6524239,	//0x12d6		VoC_lw16_sd(REG2,0x4,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG7,DEFAULT)
0xF6035855,	//0x12d8		VoC_movreg16(REG3,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xED049B4B,	//0x12da		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG5,REG1,DEFAULT)
0x83D4C8EB,	//0x12dc		VoC_add16inc_rp(REG4,REG7,REG2,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
0xDC849B4B,	//0x12de		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG5,REG1,DEFAULT)
		//0x12df		VoC_endloop0
0xF00B7052,	//0x12e0		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x0344079A,	//0x12e2		VoC_sub16_rd(REG2,REG3,0x344)
0x0343079B,	//0x12e4		VoC_sub16_rd(REG3,REG3,0x343)
0xD9DCEBC4,	//0x12e6		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_i_short(0x1e,DEFAULT)
0xDDD4D9DD,	//0x12e8		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG3,DEFAULT)
		//0x12ea		VoC_endloop0
0xE580DDD5,	//0x12ea		VoC_return	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x12ec		CII_Gsm_Short_Term_Synthesis_Filter
0xE0165FE9,	//0x12ec		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x1E1E1805,	//0x12ee		VoC_lw16i_set_inc(REG1,0x1e1e,0x1)
0x1E2E1405,	//0x12f0		VoC_lw16_d(REG5,0x1e2e)
0xE08764AE,	//0x12f2		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG5,DEFAULT)
0xC5ED45F4,	//0x12f4		VoC_mult16_rr(REG5,REG7,REG5,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG7,REG6,DEFAULT)
0x1E2E1506,	//0x12f6		VoC_sw16_d(REG6,0x1e2e)
0xC0694062,	//0x12f8		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0xDFC1D620,	//0x12fa		VoC_push16(REG1,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xF0045FC2,	//0x12fc		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x09752B80,	//0x12fe		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios)
0x64821804,	//0x1300		VoC_lw16i_set_inc(REG0,0x6482,0x1)
0x63371402,	//0x1302		VoC_lw16_d(REG2,0x6337)
0x1602DFC0,	//0x1304		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_push16(REG0,DEFAULT)
0x31820001,	//0x1306		VoC_bez16_r(CII_Gsm_Short_Term_Synthesis_Filter_100,REG2)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0xFFC0133A,	//0x1308		VoC_NAD	|	VoC_bez16_r(CII_Gsm_Short_Term_Synthesis_Filter_100,REG2)(hi)
0x09A92B80,	//0x130a		VoC_jal(CII_Coefficients_0_12)
0x09E32B80,	//0x130c		VoC_jal(CII_LARp_to_rp)
0x5673D662,	//0x130e		VoC_lw16_sd(REG3,0x6,DEFAULT)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xFFC0E0D7,	//0x1310		VoC_NAD	|	VoC_lw16i_short(REG7,0xd,IN_PARALLEL)
0x0A672B80,	//0x1312		VoC_jal(CII_Short_term_synthesis_filtering)
0x09BA2B80,	//0x1314		VoC_jal(CII_Coefficients_13_26)
0x09E32B80,	//0x1316		VoC_jal(CII_LARp_to_rp)
0xE0D65662,	//0x1318		VoC_lw16i_short(REG6,0xd,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xC0B25673,	//0x131a		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0xE0E740F3,	//0x131c		VoC_lw16i_short(REG7,0xe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x0A672B80,	//0x131e		VoC_jal(CII_Short_term_synthesis_filtering)
0x09C82B80,	//0x1320		VoC_jal(CII_Coefficients_27_39)
0x09E32B80,	//0x1322		VoC_jal(CII_LARp_to_rp)
0xE1B65662,	//0x1324		VoC_lw16i_short(REG6,0x1b,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xC0B25673,	//0x1326		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0xE0D740F3,	//0x1328		VoC_lw16i_short(REG7,0xd,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x0A672B80,	//0x132a		VoC_jal(CII_Short_term_synthesis_filtering)
0x09DA2B80,	//0x132c		VoC_jal(CII_Coefficients_40_159)
0x09E32B80,	//0x132e		VoC_jal(CII_LARp_to_rp)
0xE2865662,	//0x1330		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xC0B25673,	//0x1332		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0x0A87C0F3,	//0x1334		VoC_lw16i(REG7,0x78)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x2B800078,	//0x1336		VoC_jal(CII_Short_term_synthesis_filtering)(lo)	|	VoC_lw16i(REG7,0x78)(hi)
0xE5CB0A67,	//0x1338		VoC_jump(CII_Gsm_Short_Term_Synthesis_Filter_100_end)	|	VoC_jal(CII_Short_term_synthesis_filtering)(hi)
		//0x133a		CII_Gsm_Short_Term_Synthesis_Filter_100
0x09DA2B80,	//0x133a		VoC_jal(CII_Coefficients_40_159)
0x09E32B80,	//0x133c		VoC_jal(CII_LARp_to_rp)
0xD673D662,	//0x133e		VoC_lw16_sd(REG3,0x6,DEFAULT)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0x00A00A87,	//0x1340		VoC_lw16i(REG7,0xa0)
0x0A672B80,	//0x1342		VoC_jal(CII_Short_term_synthesis_filtering)
		//0x1344		CII_Gsm_Short_Term_Synthesis_Filter_100_end
0xDF84DF84,	//0x1344		VoC_pop16(REG4,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xDFA9DF84,	//0x1346		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xE580FFC0,	//0x1348		VoC_return	|	VoC_NOP
		//0x134a		reset_fr_table
0x199A0A86,	//0x134a		VoC_lw16i(REG6,0x199a)
0x40000A87,	//0x134c		VoC_lw16i(REG7,0x4000)
0x1F221808,	//0x134e		VoC_lw16i_set_inc(REG0,0x1f22,0x2)
0x66660A88,	//0x1350		VoC_lw16i(ACC0_LO,0x6666)
0x7FFF0A89,	//0x1352		VoC_lw16i(ACC0_HI,0x7fff)
0xDDC4DDC3,	//0x1354		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x0CCD0A86,	//0x1356		VoC_lw16i(REG6,0xccd)
0x2CCD0A87,	//0x1358		VoC_lw16i(REG7,0x2ccd)
0x53330A88,	//0x135a		VoC_lw16i(ACC0_LO,0x5333)
0x7FFF0A89,	//0x135c		VoC_lw16i(ACC0_HI,0x7fff)
0xDDC4DDC3,	//0x135e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x71C80A86,	//0x1360		VoC_lw16i(REG6,0x71c8)
0x66670A87,	//0x1362		VoC_lw16i(REG7,0x6667)
0x5D180A88,	//0x1364		VoC_lw16i(ACC0_LO,0x5d18)
0x55560A89,	//0x1366		VoC_lw16i(ACC0_HI,0x5556)
0xDDC4DDC3,	//0x1368		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x4EC50A86,	//0x136a		VoC_lw16i(REG6,0x4ec5)
0x49250A87,	//0x136c		VoC_lw16i(REG7,0x4925)
0x44440A88,	//0x136e		VoC_lw16i(ACC0_LO,0x4444)
0x40000A89,	//0x1370		VoC_lw16i(ACC0_HI,0x4000)
0xDDC4DDC3,	//0x1372		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x47FF0A86,	//0x1374		VoC_lw16i(REG6,0x47ff)
0x4FFF0A87,	//0x1376		VoC_lw16i(REG7,0x4fff)
0x57FF0A88,	//0x1378		VoC_lw16i(ACC0_LO,0x57ff)
0x5FFF0A89,	//0x137a		VoC_lw16i(ACC0_HI,0x5fff)
0xDDC4DDC3,	//0x137c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x67FF0A86,	//0x137e		VoC_lw16i(REG6,0x67ff)
0x6FFF0A87,	//0x1380		VoC_lw16i(REG7,0x6fff)
0x77FF0A88,	//0x1382		VoC_lw16i(ACC0_LO,0x77ff)
0x7FFF0A89,	//0x1384		VoC_lw16i(ACC0_HI,0x7fff)
0xDDC4DDC3,	//0x1386		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00090A86,	//0x1388		VoC_lw16i(REG6,0x9)
0x00170A87,	//0x138a		VoC_lw16i(REG7,0x17)
0x000F0A88,	//0x138c		VoC_lw16i(ACC0_LO,0xf)
0x00080A89,	//0x138e		VoC_lw16i(ACC0_HI,0x8)
0xDDC4DDC3,	//0x1390		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00070A86,	//0x1392		VoC_lw16i(REG6,0x7)
0x00030A87,	//0x1394		VoC_lw16i(REG7,0x3)
0x00030A88,	//0x1396		VoC_lw16i(ACC0_LO,0x3)
0x00020A89,	//0x1398		VoC_lw16i(ACC0_HI,0x2)
0xDDC4DDC3,	//0x139a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x7F7A0AC6,	//0x139c		VoC_lw16i(REG6,0xffffff7a)
0x7E8A0AC7,	//0x139e		VoC_lw16i(REG7,0xfffffe8a)
0x00000A88,	//0x13a0		VoC_lw16i(ACC0_LO,0x0)
0x08060A89,	//0x13a2		VoC_lw16i(ACC0_HI,0x806)
0xDDC4DDC3,	//0x13a4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x166D0A86,	//0x13a6		VoC_lw16i(REG6,0x166d)
0x20000A87,	//0x13a8		VoC_lw16i(REG7,0x2000)
0x166D0A88,	//0x13aa		VoC_lw16i(ACC0_LO,0x166d)
0x08060A89,	//0x13ac		VoC_lw16i(ACC0_HI,0x806)
0xDDC4DDC3,	//0x13ae		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00000A86,	//0x13b0		VoC_lw16i(REG6,0x0)
0x7E8A0AC7,	//0x13b2		VoC_lw16i(REG7,0xfffffe8a)
0x7F7A0AC8,	//0x13b4		VoC_lw16i(ACC0_LO,0xffffff7a)
0x00000A89,	//0x13b6		VoC_lw16i(ACC0_HI,0x0)
0xDDC4DDC3,	//0x13b8		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00000A86,	//0x13ba		VoC_lw16i(REG6,0x0)
0x000C0A87,	//0x13bc		VoC_lw16i(REG7,0xc)
0x00330A88,	//0x13be		VoC_lw16i(ACC0_LO,0x33)
0x00720A89,	//0x13c0		VoC_lw16i(ACC0_HI,0x72)
0xDDC4DDC3,	//0x13c2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00CC0A86,	//0x13c4		VoC_lw16i(REG6,0xcc)
0x013E0A87,	//0x13c6		VoC_lw16i(REG7,0x13e)
0x01CA0A88,	//0x13c8		VoC_lw16i(ACC0_LO,0x1ca)
0x026E0A89,	//0x13ca		VoC_lw16i(ACC0_HI,0x26e)
0xDDC4DDC3,	//0x13cc		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x032B0A86,	//0x13ce		VoC_lw16i(REG6,0x32b)
0x04010A87,	//0x13d0		VoC_lw16i(REG7,0x401)
0x04EE0A88,	//0x13d2		VoC_lw16i(ACC0_LO,0x4ee)
0x05F30A89,	//0x13d4		VoC_lw16i(ACC0_HI,0x5f3)
0xDDC4DDC3,	//0x13d6		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x070F0A86,	//0x13d8		VoC_lw16i(REG6,0x70f)
0x08420A87,	//0x13da		VoC_lw16i(REG7,0x842)
0x098C0A88,	//0x13dc		VoC_lw16i(ACC0_LO,0x98c)
0x0AEB0A89,	//0x13de		VoC_lw16i(ACC0_HI,0xaeb)
0xDDC4DDC3,	//0x13e0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x0C5F0A86,	//0x13e2		VoC_lw16i(REG6,0xc5f)
0x0DE80A87,	//0x13e4		VoC_lw16i(REG7,0xde8)
0x0F840A88,	//0x13e6		VoC_lw16i(ACC0_LO,0xf84)
0x11350A89,	//0x13e8		VoC_lw16i(ACC0_HI,0x1135)
0xDDC4DDC3,	//0x13ea		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x12F80A86,	//0x13ec		VoC_lw16i(REG6,0x12f8)
0x14CD0A87,	//0x13ee		VoC_lw16i(REG7,0x14cd)
0x16B30A88,	//0x13f0		VoC_lw16i(ACC0_LO,0x16b3)
0x18AA0A89,	//0x13f2		VoC_lw16i(ACC0_HI,0x18aa)
0xDDC4DDC3,	//0x13f4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x1AB00A86,	//0x13f6		VoC_lw16i(REG6,0x1ab0)
0x1CC50A87,	//0x13f8		VoC_lw16i(REG7,0x1cc5)
0x1EE90A88,	//0x13fa		VoC_lw16i(ACC0_LO,0x1ee9)
0x21190A89,	//0x13fc		VoC_lw16i(ACC0_HI,0x2119)
0xDDC4DDC3,	//0x13fe		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x23560A86,	//0x1400		VoC_lw16i(REG6,0x2356)
0x259F0A87,	//0x1402		VoC_lw16i(REG7,0x259f)
0x27F20A88,	//0x1404		VoC_lw16i(ACC0_LO,0x27f2)
0x2A4F0A89,	//0x1406		VoC_lw16i(ACC0_HI,0x2a4f)
0xDDC4DDC3,	//0x1408		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x2CB40A86,	//0x140a		VoC_lw16i(REG6,0x2cb4)
0x2F210A87,	//0x140c		VoC_lw16i(REG7,0x2f21)
0x31950A88,	//0x140e		VoC_lw16i(ACC0_LO,0x3195)
0x340E0A89,	//0x1410		VoC_lw16i(ACC0_HI,0x340e)
0xDDC4DDC3,	//0x1412		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x368C0A86,	//0x1414		VoC_lw16i(REG6,0x368c)
0x390F0A87,	//0x1416		VoC_lw16i(REG7,0x390f)
0x3B930A88,	//0x1418		VoC_lw16i(ACC0_LO,0x3b93)
0x3E1A0A89,	//0x141a		VoC_lw16i(ACC0_HI,0x3e1a)
0xDDC4DDC3,	//0x141c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x40A10A86,	//0x141e		VoC_lw16i(REG6,0x40a1)
0x43280A87,	//0x1420		VoC_lw16i(REG7,0x4328)
0x45AE0A88,	//0x1422		VoC_lw16i(ACC0_LO,0x45ae)
0x48320A89,	//0x1424		VoC_lw16i(ACC0_HI,0x4832)
0xDDC4DDC3,	//0x1426		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x4AB20A86,	//0x1428		VoC_lw16i(REG6,0x4ab2)
0x4D2E0A87,	//0x142a		VoC_lw16i(REG7,0x4d2e)
0x4FA50A88,	//0x142c		VoC_lw16i(ACC0_LO,0x4fa5)
0x52160A89,	//0x142e		VoC_lw16i(ACC0_HI,0x5216)
0xDDC4DDC3,	//0x1430		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x547F0A86,	//0x1432		VoC_lw16i(REG6,0x547f)
0x56E00A87,	//0x1434		VoC_lw16i(REG7,0x56e0)
0x59380A88,	//0x1436		VoC_lw16i(ACC0_LO,0x5938)
0x5B860A89,	//0x1438		VoC_lw16i(ACC0_HI,0x5b86)
0xDDC4DDC3,	//0x143a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x5DC90A86,	//0x143c		VoC_lw16i(REG6,0x5dc9)
0x5FFF0A87,	//0x143e		VoC_lw16i(REG7,0x5fff)
0x622A0A88,	//0x1440		VoC_lw16i(ACC0_LO,0x622a)
0x64460A89,	//0x1442		VoC_lw16i(ACC0_HI,0x6446)
0xDDC4DDC3,	//0x1444		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x66540A86,	//0x1446		VoC_lw16i(REG6,0x6654)
0x68530A87,	//0x1448		VoC_lw16i(REG7,0x6853)
0x6A410A88,	//0x144a		VoC_lw16i(ACC0_LO,0x6a41)
0x6C1F0A89,	//0x144c		VoC_lw16i(ACC0_HI,0x6c1f)
0xDDC4DDC3,	//0x144e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x6DEB0A86,	//0x1450		VoC_lw16i(REG6,0x6deb)
0x6FA50A87,	//0x1452		VoC_lw16i(REG7,0x6fa5)
0x714B0A88,	//0x1454		VoC_lw16i(ACC0_LO,0x714b)
0x72DE0A89,	//0x1456		VoC_lw16i(ACC0_HI,0x72de)
0xDDC4DDC3,	//0x1458		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x745D0A86,	//0x145a		VoC_lw16i(REG6,0x745d)
0x75C70A87,	//0x145c		VoC_lw16i(REG7,0x75c7)
0x771B0A88,	//0x145e		VoC_lw16i(ACC0_LO,0x771b)
0x78590A89,	//0x1460		VoC_lw16i(ACC0_HI,0x7859)
0xDDC4DDC3,	//0x1462		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x79810A86,	//0x1464		VoC_lw16i(REG6,0x7981)
0x7A910A87,	//0x1466		VoC_lw16i(REG7,0x7a91)
0x7B8A0A88,	//0x1468		VoC_lw16i(ACC0_LO,0x7b8a)
0x7C6C0A89,	//0x146a		VoC_lw16i(ACC0_HI,0x7c6c)
0xDDC4DDC3,	//0x146c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x7D350A86,	//0x146e		VoC_lw16i(REG6,0x7d35)
0x7DE60A87,	//0x1470		VoC_lw16i(REG7,0x7de6)
0x7E7E0A88,	//0x1472		VoC_lw16i(ACC0_LO,0x7e7e)
0x7EFD0A89,	//0x1474		VoC_lw16i(ACC0_HI,0x7efd)
0xDDC4DDC3,	//0x1476		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x7F630A86,	//0x1478		VoC_lw16i(REG6,0x7f63)
0x7FB00A87,	//0x147a		VoC_lw16i(REG7,0x7fb0)
0x7FE30A88,	//0x147c		VoC_lw16i(ACC0_LO,0x7fe3)
0x7FFC0A89,	//0x147e		VoC_lw16i(ACC0_HI,0x7ffc)
0xDDC4DDC3,	//0x1480		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x1F9E1808,	//0x1482		VoC_lw16i_set_inc(REG0,0x1f9e,0x2)
0x05550A86,	//0x1484		VoC_lw16i(REG6,0x555)
0x0AAA0A87,	//0x1486		VoC_lw16i(REG7,0xaaa)
0x10000A88,	//0x1488		VoC_lw16i(ACC0_LO,0x1000)
0x15550A89,	//0x148a		VoC_lw16i(ACC0_HI,0x1555)
0xDDC4DDC3,	//0x148c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x1AAA0A86,	//0x148e		VoC_lw16i(REG6,0x1aaa)
0x20000A87,	//0x1490		VoC_lw16i(REG7,0x2000)
0x25550A88,	//0x1492		VoC_lw16i(ACC0_LO,0x2555)
0x2AAA0A89,	//0x1494		VoC_lw16i(ACC0_HI,0x2aaa)
0xDDC4DDC3,	//0x1496		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x30000A86,	//0x1498		VoC_lw16i(REG6,0x3000)
0x35550A87,	//0x149a		VoC_lw16i(REG7,0x3555)
0x3AAA0A88,	//0x149c		VoC_lw16i(ACC0_LO,0x3aaa)
0x40000A89,	//0x149e		VoC_lw16i(ACC0_HI,0x4000)
0xDDC4DDC3,	//0x14a0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x45550A86,	//0x14a2		VoC_lw16i(REG6,0x4555)
0x4AAA0A87,	//0x14a4		VoC_lw16i(REG7,0x4aaa)
0x50000A88,	//0x14a6		VoC_lw16i(ACC0_LO,0x5000)
0x55550A89,	//0x14a8		VoC_lw16i(ACC0_HI,0x5555)
0xDDC4DDC3,	//0x14aa		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x5AAA0A86,	//0x14ac		VoC_lw16i(REG6,0x5aaa)
0x60000A87,	//0x14ae		VoC_lw16i(REG7,0x6000)
0x65550A88,	//0x14b0		VoC_lw16i(ACC0_LO,0x6555)
0x6AAA0A89,	//0x14b2		VoC_lw16i(ACC0_HI,0x6aaa)
0xDDC4DDC3,	//0x14b4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x70000A86,	//0x14b6		VoC_lw16i(REG6,0x7000)
0x75550A87,	//0x14b8		VoC_lw16i(REG7,0x7555)
0x7AAA0A88,	//0x14ba		VoC_lw16i(ACC0_LO,0x7aaa)
0x7FFF0A89,	//0x14bc		VoC_lw16i(ACC0_HI,0x7fff)
0xDDC4DDC3,	//0x14be		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xFFC06580,	//0x14c0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x14c2		CII_extra_bfi_filter
0xE2847026,	//0x14c2		VoC_lw16i_short(REG4,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x00780A85,	//0x14c4		VoC_lw16i(REG5,0x78)
0x1E441805,	//0x14c6		VoC_lw16i_set_inc(REG1,0x1e44,0x1)
0x408C6E0D,	//0x14c8		VoC_bnez16_d(bfi_filter_exit,0x408c)
0xD897E88A,	//0x14ca		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x14D23427,	//0x14cc		VoC_bgt16_rr(update_bfi,REG4,REG7)
0x14D2343D,	//0x14ce		VoC_bgt16_rr(update_bfi,REG7,REG5)
0xFFC065C4,	//0x14d0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(no_update_bfi)
		//0x14d2		update_bfi
0x408A1506,	//0x14d2		VoC_sw16_d(REG6,0x408a)
		//0x14d4		no_update_bfi
		//0x14d4		VoC_endloop0
0xE580FFC0,	//0x14d4		VoC_return	|	VoC_NOP
		//0x14d5		bfi_filter_exit
