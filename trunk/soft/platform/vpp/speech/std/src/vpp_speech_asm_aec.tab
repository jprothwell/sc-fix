		//0x05d0		VoC_code_section_1
		//0x05d0		Coolsand_AEC
0x5FE9F000,	//0x05d0		VoC_push16(RA,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1500E142,	//0x05d2		VoC_sw16_d(REG0,0x20da)(lo)	|	VoC_lw16i_short(REG2,0x14,IN_PARALLEL)
0x2B8020DA,	//0x05d4		VoC_jal(Coolsand_AECReset)(lo)	|	VoC_sw16_d(REG0,0x20da)(hi)
0xF10705F0,	//0x05d6		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_jal(Coolsand_AECReset)(hi)
		//0x05d7		Coolsand_AEC_L0
0x20DA083F,	//0x05d8		VoC_mult16_rd(REG7,REG7,0x20da)
0x43071400,	//0x05da		VoC_lw16_d(REG0,0x4307)
0x43041401,	//0x05dc		VoC_lw16_d(REG1,0x4304)
0x43041402,	//0x05de		VoC_lw16_d(REG2,0x4304)
0xC0794038,	//0x05e0		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x2B80C0BA,	//0x05e2		VoC_jal(Coolsand_EchoCancelProcessing)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF021069A,	//0x05e4		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jal(Coolsand_EchoCancelProcessing)(hi)
0x20DA0709,	//0x05e6		VoC_add16_rd(REG1,REG1,0x20da)
0x1501F282,	//0x05e8		VoC_sw16_d(REG1,0x20da)(lo)	|	VoC_lw16i_short(REG2,0x14,DEFAULT)
0x3AA220DA,	//0x05ea		VoC_bgt16_rd(Coolsand_AEC_L0,REG2,0x20da)(lo)	|	VoC_sw16_d(REG1,0x20da)(hi)
0xDFA920DA,	//0x05ec		VoC_pop16(RA,DEFAULT)	|	VoC_bgt16_rd(Coolsand_AEC_L0,REG2,0x20da)(hi)
0xE580FFC0,	//0x05ee		VoC_return	|	VoC_NOP
		//0x05f0		Coolsand_AECReset
0x1400DFE9,	//0x05f0		VoC_lw16_d(REG0,0x4036)(lo)	|	VoC_push16(RA,DEFAULT)
0x31804036,	//0x05f2		VoC_bez16_r(Coolsand_AnalysisProcessing_L1,REG0)(lo)	|	VoC_lw16_d(REG0,0x4036)(hi)
0xFF440697,	//0x05f4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bez16_r(Coolsand_AnalysisProcessing_L1,REG0)(hi)
0x1B681808,	//0x05f6		VoC_lw16i_set_inc(REG0,0x1b68,0x2)
0x1BE81809,	//0x05f8		VoC_lw16i_set_inc(REG1,0x1be8,0x2)
0x1C68180A,	//0x05fa		VoC_lw16i_set_inc(REG2,0x1c68,0x2)
0x06002C80,	//0x05fc		VoC_loop_i(0x0,0x40)
0xDDCCDDC4,	//0x05fe		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0600		VoC_endloop0
0x1808DDD4,	//0x0600		VoC_lw16i_set_inc(REG0,0x1dc8,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x18091DC8,	//0x0602		VoC_lw16i_set_inc(REG1,0x1e10,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1dc8,0x2)(hi)
0x180A1E10,	//0x0604		VoC_lw16i_set_inc(REG2,0x1e58,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1e10,0x2)(hi)
0x180B1E58,	//0x0606		VoC_lw16i_set_inc(REG3,0x1ee8,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x1e58,0x2)(hi)
0x2C481EE8,	//0x0608		VoC_loop_i(0x0,0x24)(lo)	|	VoC_lw16i_set_inc(REG3,0x1ee8,0x2)(hi)
0xDDC40610,	//0x060a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x24)(hi)
0xDDD4DDCC,	//0x060c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDDDCDDD4,	//0x060e		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0610		VoC_endloop0
0x1804DDDC,	//0x0610		VoC_lw16i_set_inc(REG0,0x1f78,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x18051F78,	//0x0612		VoC_lw16i_set_inc(REG1,0x1f82,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1f78,0x1)(hi)
0x18061F82,	//0x0614		VoC_lw16i_set_inc(REG2,0x1f8c,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x1f82,0x1)(hi)
0x18071F8C,	//0x0616		VoC_lw16i_set_inc(REG3,0x1f96,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1f8c,0x1)(hi)
0x2C121F96,	//0x0618		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG3,0x1f96,0x1)(hi)
0xDC88061E,	//0x061a		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
0xDCA8DC98,	//0x061c		VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x061e		VoC_endloop0
0x1808DCB8,	//0x061e		VoC_lw16i_set_inc(REG0,0x1fe4,0x2)(lo)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
0x18091FE4,	//0x0620		VoC_lw16i_set_inc(REG1,0x2008,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1fe4,0x2)(hi)
0x180A2008,	//0x0622		VoC_lw16i_set_inc(REG2,0x201a,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x2008,0x2)(hi)
0x180B201A,	//0x0624		VoC_lw16i_set_inc(REG3,0x1ff6,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x201a,0x2)(hi)
0x2C121FF6,	//0x0626		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG3,0x1ff6,0x2)(hi)
0xDDC4062C,	//0x0628		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
0xDDD4DDCC,	//0x062a		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x062c		VoC_endloop0
0x1508DDDC,	//0x062c		VoC_sw16_d(ACC0_LO,0x225b)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x1808225B,	//0x062e		VoC_lw16i_set_inc(REG0,0x20a6,0x2)(lo)	|	VoC_sw16_d(ACC0_LO,0x225b)(hi)
0x73E420A6,	//0x0630		VoC_lw16i_short(REG4,0x1f,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x20a6,0x2)(hi)
0x7346E1B5,	//0x0632		VoC_lw16i_short(REG6,0x1a,DEFAULT)	|	VoC_lw16i_short(REG5,0x1b,IN_PARALLEL)
0x5DC2E007,	//0x0634		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x1805E014,	//0x0636		VoC_lw16i_set_inc(REG1,0x20aa,0x1)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x5DC320AA,	//0x0638		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x20aa,0x1)(hi)
0xDC94E003,	//0x063a		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x063E2C3E,	//0x063c		VoC_loop_i(0x0,0x1f)
		//0x063e		VoC_endloop0
0xFF44DC93,	//0x063e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0x20361808,	//0x0640		VoC_lw16i_set_inc(REG0,0x2036,0x2)
0x20481809,	//0x0642		VoC_lw16i_set_inc(REG1,0x2048,0x2)
0x206E180A,	//0x0644		VoC_lw16i_set_inc(REG2,0x206e,0x2)
0x2080180B,	//0x0646		VoC_lw16i_set_inc(REG3,0x2080,0x2)
0x064D2C12,	//0x0648		VoC_loop_i(0x0,0x9)
0xDDCCDDC4,	//0x064a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDDCDDD4,	//0x064c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x064d		VoC_endloop0
0x205A1804,	//0x064e		VoC_lw16i_set_inc(REG0,0x205a,0x1)
0x20641805,	//0x0650		VoC_lw16i_set_inc(REG1,0x2064,0x1)
0x23221806,	//0x0652		VoC_lw16i_set_inc(REG2,0x2322,0x1)
0x20921807,	//0x0654		VoC_lw16i_set_inc(REG3,0x2092,0x1)
0x007F0A87,	//0x0656		VoC_lw16i(REG7,0x7f)
0x065D2C12,	//0x0658		VoC_loop_i(0x0,0x9)
0xDC98DC88,	//0x065a		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDCB7DCA7,	//0x065c		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x065d		VoC_endloop0
0x224E1584,	//0x065e		VoC_sw32_d(ACC0,0x224e)
0x224C1584,	//0x0660		VoC_sw32_d(ACC0,0x224c)
0x22521584,	//0x0662		VoC_sw32_d(ACC0,0x2252)
0x22501584,	//0x0664		VoC_sw32_d(ACC0,0x2250)
0x22541508,	//0x0666		VoC_sw16_d(ACC0_LO,0x2254)
0x22551508,	//0x0668		VoC_sw16_d(ACC0_LO,0x2255)
0x225A1508,	//0x066a		VoC_sw16_d(ACC0_LO,0x225a)
0x232B1508,	//0x066c		VoC_sw16_d(ACC0_LO,0x232b)
0x23361584,	//0x066e		VoC_sw32_d(ACC0,0x2336)
0xE20A700B,	//0x0670		VoC_lw16i_short(ACC1_LO,0x20,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0x007F0A87,	//0x0672		VoC_lw16i(REG7,0x7f)
0x20481808,	//0x0674		VoC_lw16i_set_inc(REG0,0x2048,0x2)
0x225C1809,	//0x0676		VoC_lw16i_set_inc(REG1,0x225c,0x2)
0x232C1806,	//0x0678		VoC_lw16i_set_inc(REG2,0x232c,0x1)
0x2310180B,	//0x067a		VoC_lw16i_set_inc(REG3,0x2310,0x2)
0x06812C12,	//0x067c		VoC_loop_i(0x0,0x9)
0xDDCDDDC5,	//0x067e		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDDDCDCA8,	//0x0680		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x0681		VoC_endloop0
0x22771804,	//0x0682		VoC_lw16i_set_inc(REG0,0x2277,0x1)
0x06862C12,	//0x0684		VoC_loop_i(0x0,0x9)
		//0x0686		VoC_endloop0
0x1808DC88,	//0x0686		VoC_lw16i_set_inc(REG0,0x2280,0x2)(lo)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0x18092280,	//0x0688		VoC_lw16i_set_inc(REG1,0x22c8,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x2280,0x2)(hi)
0x2C4822C8,	//0x068a		VoC_loop_i(0x0,0x24)(lo)	|	VoC_lw16i_set_inc(REG1,0x22c8,0x2)(hi)
0xDDC4068E,	//0x068c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x24)(hi)
		//0x068e		VoC_endloop0
0x1482DDCC,	//0x068e		VoC_lw32_d(REG45,0x4232)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x0A824232,	//0x0690		VoC_lw16i(REG2,0x108e)(lo)	|	VoC_lw32_d(REG45,0x4232)(hi)
0x0A83108E,	//0x0692		VoC_lw16i(REG3,0x98)(lo)	|	VoC_lw16i(REG2,0x108e)(hi)
0x2B800098,	//0x0694		VoC_jal(Coolsand_AecRunDma)(lo)	|	VoC_lw16i(REG3,0x98)(hi)
0xDFA903CF,	//0x0696		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Coolsand_AecRunDma)(hi)
		//0x0697		Coolsand_AnalysisProcessing_L1
0xE580FFC0,	//0x0698		VoC_return	|	VoC_NOP
		//0x069a		Coolsand_EchoCancelProcessing
0xDFC2DFE9,	//0x069a		VoC_push16(REG2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A81DFC1,	//0x069c		VoC_lw16i(REG1,0x1b68)(lo)	|	VoC_push16(REG1,DEFAULT)
0x0A841B68,	//0x069e		VoC_lw16i(REG4,0x1d68)(lo)	|	VoC_lw16i(REG1,0x1b68)(hi)
0x0A851D68,	//0x06a0		VoC_lw16i(REG5,0x1d78)(lo)	|	VoC_lw16i(REG4,0x1d68)(hi)
0x2B801D78,	//0x06a2		VoC_jal(Coolsand_AnalysisProcessing)(lo)	|	VoC_lw16i(REG5,0x1d78)(hi)
0xDF80074A,	//0x06a4		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_AnalysisProcessing)(hi)
0x1BE80A81,	//0x06a6		VoC_lw16i(REG1,0x1be8)
0x1D880A84,	//0x06a8		VoC_lw16i(REG4,0x1d88)
0x1D980A85,	//0x06aa		VoC_lw16i(REG5,0x1d98)
0x074A2B80,	//0x06ac		VoC_jal(Coolsand_AnalysisProcessing)
0x1DC81804,	//0x06ae		VoC_lw16i_set_inc(REG0,0x1dc8,0x1)
0x1E101805,	//0x06b0		VoC_lw16i_set_inc(REG1,0x1e10,0x1)
0x1E581806,	//0x06b2		VoC_lw16i_set_inc(REG2,0x1e58,0x1)
0x1EE81807,	//0x06b4		VoC_lw16i_set_inc(REG3,0x1ee8,0x1)
0x20CA1580,	//0x06b6		VoC_sw32_d(REG01,0x20ca)
0x20CC1581,	//0x06b8		VoC_sw32_d(REG23,0x20cc)
0x1FA01804,	//0x06ba		VoC_lw16i_set_inc(REG0,0x1fa0,0x1)
0x1FAA1805,	//0x06bc		VoC_lw16i_set_inc(REG1,0x1faa,0x1)
0x1F781806,	//0x06be		VoC_lw16i_set_inc(REG2,0x1f78,0x1)
0x1F821807,	//0x06c0		VoC_lw16i_set_inc(REG3,0x1f82,0x1)
0x20D21580,	//0x06c2		VoC_sw32_d(REG01,0x20d2)
0x20CE1581,	//0x06c4		VoC_sw32_d(REG23,0x20ce)
0x1D881804,	//0x06c6		VoC_lw16i_set_inc(REG0,0x1d88,0x1)
0x1D981805,	//0x06c8		VoC_lw16i_set_inc(REG1,0x1d98,0x1)
0x1D681806,	//0x06ca		VoC_lw16i_set_inc(REG2,0x1d68,0x1)
0x1D781807,	//0x06cc		VoC_lw16i_set_inc(REG3,0x1d78,0x1)
0x20D41580,	//0x06ce		VoC_sw32_d(REG01,0x20d4)
0x1F8C1804,	//0x06d0		VoC_lw16i_set_inc(REG0,0x1f8c,0x1)
0x1F961805,	//0x06d2		VoC_lw16i_set_inc(REG1,0x1f96,0x1)
0x20D61581,	//0x06d4		VoC_sw32_d(REG23,0x20d6)
0x1FE41806,	//0x06d6		VoC_lw16i_set_inc(REG2,0x1fe4,0x1)
0x20D01580,	//0x06d8		VoC_sw32_d(REG01,0x20d0)
0x20D81502,	//0x06da		VoC_sw16_d(REG2,0x20d8)
0xFFC0F000,	//0x06dc		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x20DB1500,	//0x06de		VoC_sw16_d(REG0,0x20db)
		//0x06e0		Coolsand_EchoCancelProcessing_L0
0x07DC2B80,	//0x06e0		VoC_jal(Coolsand_AdaptiveFiltering)
0x08722B80,	//0x06e2		VoC_jal(Coolsand_UpdateSpkPower)
0x20DB1407,	//0x06e4		VoC_lw16_d(REG7,0x20db)
0x1D680A82,	//0x06e6		VoC_lw16i(REG2,0x1d68)
0x1D780A83,	//0x06e8		VoC_lw16i(REG3,0x1d78)
0xC0FB40BA,	//0x06ea		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x225B1406,	//0x06ec		VoC_lw16_d(REG6,0x225b)
0xD833D822,	//0x06ee		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x089F2B80,	//0x06f0		VoC_jal(Coolsand_FilterUpdateCotrol_Int)
0x20DB1407,	//0x06f2		VoC_lw16_d(REG7,0x20db)
0x09842B80,	//0x06f4		VoC_jal(Coolsand_UpdateFilter)
0x0709F021,	//0x06f6		VoC_add16_rd(REG1,REG1,0x20db)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF12220DB,	//0x06f8		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x20db)(hi)
0x20DB1501,	//0x06fa		VoC_sw16_d(REG1,0x20db)
0x06E03411,	//0x06fc		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L0,REG2,REG1)
0x1D891806,	//0x06fe		VoC_lw16i_set_inc(REG2,0x1d89,0x1)
0x1D991807,	//0x0700		VoC_lw16i_set_inc(REG3,0x1d99,0x1)
0x0D562B80,	//0x0702		VoC_jal(Coolsand_SumInstantPower)
0x1806FF26,	//0x0704		VoC_lw16i_set_inc(REG2,0x1d69,0x1)(lo)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x18071D69,	//0x0706		VoC_lw16i_set_inc(REG3,0x1d79,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1d69,0x1)(hi)
0x2B801D79,	//0x0708		VoC_jal(Coolsand_SumInstantPower)(lo)	|	VoC_lw16i_set_inc(REG3,0x1d79,0x1)(hi)
0xFF270D56,	//0x070a		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_jal(Coolsand_SumInstantPower)(hi)
0x1FA11806,	//0x070c		VoC_lw16i_set_inc(REG2,0x1fa1,0x1)
0x1FAB1807,	//0x070e		VoC_lw16i_set_inc(REG3,0x1fab,0x1)
0x0D562B80,	//0x0710		VoC_jal(Coolsand_SumInstantPower)
0xFFC07000,	//0x0712		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0D6E2B80,	//0x0714		VoC_jal(Coolsand_ControlLogicMergeChnlEnhanced)
0x0D802B80,	//0x0716		VoC_jal(Coolsand_ControlLogicSingleChnlEnhanced)
0xFFC0F000,	//0x0718		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x20DB1500,	//0x071a		VoC_sw16_d(REG0,0x20db)
		//0x071c		Coolsand_EchoCancelProcessing_L1
0x20DB1407,	//0x071c		VoC_lw16_d(REG7,0x20db)
0x0B4C2B80,	//0x071e		VoC_jal(Coolsand_ComputeNoiseWeight_DeciDirectCTRL)
0x0F4E2B80,	//0x0720		VoC_jal(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL)
0x0C6F2B80,	//0x0722		VoC_jal(Coolsand_PostFiltering)
0x0709F021,	//0x0724		VoC_add16_rd(REG1,REG1,0x20db)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF12220DB,	//0x0726		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x20db)(hi)
0x20DB1501,	//0x0728		VoC_sw16_d(REG1,0x20db)
0x071C3411,	//0x072a		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L1,REG2,REG1)
0x1DAF1FBE,	//0x072c		VoC_lw16i_set_inc(REG2,0x1daf,0xffffffff)
0x1DBF1FBF,	//0x072e		VoC_lw16i_set_inc(REG3,0x1dbf,0xffffffff)
0x1DB11804,	//0x0730		VoC_lw16i_set_inc(REG0,0x1db1,0x1)
0x1DC11805,	//0x0732		VoC_lw16i_set_inc(REG1,0x1dc1,0x1)
0xE00668E5,	//0x0734		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0x879DD8A4,	//0x0736		VoC_sub16inc_rp(REG5,REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDC95DC84,	//0x0738		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0739		VoC_endloop0
0x0A80DF83,	//0x073a		VoC_lw16i(REG0,0x1da8)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x0A811DA8,	//0x073c		VoC_lw16i(REG1,0x1db8)(lo)	|	VoC_lw16i(REG0,0x1da8)(hi)
0x0A821DB8,	//0x073e		VoC_lw16i(REG2,0x1c68)(lo)	|	VoC_lw16i(REG1,0x1db8)(hi)
0x2B801C68,	//0x0740		VoC_jal(Coolsand_SynthesisProcessing)(lo)	|	VoC_lw16i(REG2,0x1c68)(hi)
0xF021078E,	//0x0742		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jal(Coolsand_SynthesisProcessing)(hi)
0x225B0709,	//0x0744		VoC_add16_rd(REG1,REG1,0x225b)
0x1501DFA9,	//0x0746		VoC_sw16_d(REG1,0x225b)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580225B,	//0x0748		VoC_return	|	VoC_sw16_d(REG1,0x225b)(hi)
		//0x074a		Coolsand_AnalysisProcessing
0x6023DFE9,	//0x074a		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x4072E086,	//0x074c		VoC_add16_rr(REG2,REG1,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x8,IN_PARALLEL)
0x2B80E787,	//0x074e		VoC_jal(Coolsand_BackCopyVec)(lo)	|	VoC_lw16i_short(REG7,0x78,IN_PARALLEL)
0xF10709E0,	//0x0750		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_jal(Coolsand_BackCopyVec)(hi)
0xF0056001,	//0x0752		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xF3FE6062,	//0x0754		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x09EC2B80,	//0x0756		VoC_jal(Coolsand_FlipVec)
0xF5E86061,	//0x0758		VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x211C0A82,	//0x075a		VoC_lw16i(REG2,0x211c)
0x1CE80A83,	//0x075c		VoC_lw16i(REG3,0x1ce8)
0x00800A80,	//0x075e		VoC_lw16i(REG0,0x80)
0x09F42B80,	//0x0760		VoC_jal(Coolsand_MulVec)
0x0A87E081,	//0x0762		VoC_lw16i(REG7,0x10)(lo)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xFFC00010,	//0x0764		VoC_NAD	|	VoC_lw16i(REG7,0x10)(hi)
0x0A002B80,	//0x0766		VoC_jal(Coolsand_ClearVec)
0xE1077030,	//0x0768		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1CE80A81,	//0x076a		VoC_lw16i(REG1,0x1ce8)
0xF0067031,	//0x076c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x07742C11,	//0x076e		VoC_loop_i(0x1,0x8)
0xF6826080,	//0x0770		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x0A062B80,	//0x0772		VoC_jal(Coolsand_AddVec)
		//0x0774		VoC_endloop1
0x60A1FFC0,	//0x0774		VoC_movreg16(REG1,REG5,DEFAULT)	|	VoC_NAD
0xFFC0E107,	//0x0776		VoC_NAD	|	VoC_lw16i_short(REG7,0x10,IN_PARALLEL)
0x0A002B80,	//0x0778		VoC_jal(Coolsand_ClearVec)
0xF68060A1,	//0x077a		VoC_movreg16(REG0,REG4,IN_PARALLEL)	|	VoC_movreg16(REG1,REG5,DEFAULT)
0x2B80DF42,	//0x077c		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG45,DEFAULT)
0xDF000A0C,	//0x077e		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0097050,	//0x0780		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD982E908,	//0x0782		VoC_lw32_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x78FCD98B,	//0x0784		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0x78FEF8FD,	//0x0786		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)
0xDDC2F8FF,	//0x0788		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
		//0x078a		VoC_endloop0
0xDFA9DDCB,	//0x078a		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xE580FFC0,	//0x078c		VoC_return	|	VoC_NOP
		//0x078e		Coolsand_SynthesisProcessing
0xDF415FE9,	//0x078e		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x0790		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG01,DEFAULT)
0xDF000A0C,	//0x0792		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0087F07,	//0x0794		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xF00A6002,	//0x0796		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xD9C26905,	//0x0798		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF8ED78EC,	//0x079a		VoC_shr16_ri(REG5,0xfffffffd,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0xDDD2D9C2,	//0x079c		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x079d		VoC_endloop0
0xF0097F38,	//0x079e		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x1CE8180A,	//0x07a0		VoC_lw16i_set_inc(REG2,0x1ce8,0x2)
0x07A82C11,	//0x07a2		VoC_loop_i(0x1,0x8)
0xE1076001,	//0x07a4		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x0B1E2B80,	//0x07a6		VoC_jal(Coolsand_CopyVec)
		//0x07a8		VoC_endloop1
0x0A81FFC0,	//0x07a8		VoC_lw16i(REG1,0x1ce8)(lo)	|	VoC_NAD
0x0A821CE8,	//0x07aa		VoC_lw16i(REG2,0x219c)(lo)	|	VoC_lw16i(REG1,0x1ce8)(hi)
0x6023219C,	//0x07ac		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x219c)(hi)
0x0A80F5E8,	//0x07ae		VoC_lw16i(REG0,0x80)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)
0xFFC00080,	//0x07b0		VoC_NAD	|	VoC_lw16i(REG0,0x80)(hi)
0x09F42B80,	//0x07b2		VoC_jal(Coolsand_MulVec)
0xF0065F02,	//0x07b4		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xF6817031,	//0x07b6		VoC_movreg16(REG1,REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x1804E082,	//0x07b8		VoC_lw16i_set_inc(REG0,0x1ce8,0x1)(lo)	|	VoC_movreg16(REG2,REG4,DEFAULT)
0x0A871CE8,	//0x07ba		VoC_lw16i(REG7,0x80)(lo)	|	VoC_lw16i_set_inc(REG0,0x1ce8,0x1)(hi)
0xFFC00080,	//0x07bc		VoC_NAD	|	VoC_lw16i(REG7,0x80)(hi)
0x0A062B80,	//0x07be		VoC_jal(Coolsand_AddVec)
0xF6A26081,	//0x07c0		VoC_movreg16(REG2,REG5,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0x00080A87,	//0x07c2		VoC_lw16i(REG7,0x8)
0xF00A7051,	//0x07c4		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x0B1E2B80,	//0x07c6		VoC_jal(Coolsand_CopyVec)
0xE0836081,	//0x07c8		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xF6824059,	//0x07ca		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0xF00A7051,	//0x07cc		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x00780A87,	//0x07ce		VoC_lw16i(REG7,0x78)
0x0B1E2B80,	//0x07d0		VoC_jal(Coolsand_CopyVec)
0xE7836081,	//0x07d2		VoC_lw16i_short(REG3,0x78,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xE1074059,	//0x07d4		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x0A002B80,	//0x07d6		VoC_jal(Coolsand_ClearVec)
0xFFC0DFA9,	//0x07d8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x07da		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x07dc		Coolsand_AdaptiveFiltering
0xE0775FE9,	//0x07dc		VoC_lw16i_short(REG7,0x7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x20CA1481,	//0x07de		VoC_lw32_d(REG23,0x20ca)
0xC0FB40BA,	//0x07e0		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x20D01482,	//0x07e2		VoC_lw32_d(REG45,0x20d0)
0x5826FF08,	//0x07e4		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_movreg32(REG01,REG23,DEFAULT)
0x5837F3FE,	//0x07e6		VoC_lw16_p(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x5C46F3FF,	//0x07e8		VoC_sw16_p(REG6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x5C57DE10,	//0x07ea		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x77F0DE18,	//0x07ec		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x1483F3FD,	//0x07ee		VoC_lw32_d(REG67,0x20d6)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xE8E420D6,	//0x07f0		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw32_d(REG67,0x20d6)(hi)
0xD8B5D8A4,	//0x07f2		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDC95DC84,	//0x07f4		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x07f5		VoC_endloop0
0xD877D866,	//0x07f6		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xF00A5C06,	//0x07f8		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0xF00B5C17,	//0x07fa		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0x20CC1481,	//0x07fc		VoC_lw32_d(REG23,0x20cc)
0x1FB41804,	//0x07fe		VoC_lw16i_set_inc(REG0,0x1fb4,0x1)
0x1FBC1805,	//0x0800		VoC_lw16i_set_inc(REG1,0x1fbc,0x1)
0xFF426908,	//0x0802		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD9DBD9D4,	//0x0804		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xFBA37BA4,	//0x0806		VoC_shr32_ri(REG67,0xfffffff4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xDC89C37F,	//0x0808		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)
		//0x080a		VoC_endloop0
0x1581DC97,	//0x080a		VoC_sw32_d(REG23,0x20cc)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x148020CC,	//0x080c		VoC_lw32_d(REG01,0x20ca)(lo)	|	VoC_sw32_d(REG23,0x20cc)(hi)
0x180A20CA,	//0x080e		VoC_lw16i_set_inc(REG2,0x1fb4,0x2)(lo)	|	VoC_lw32_d(REG01,0x20ca)(hi)
0x180B1FB4,	//0x0810		VoC_lw16i_set_inc(REG3,0x1fbc,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x1fb4,0x2)(hi)
0x0A8E1FBC,	//0x0812		VoC_lw16i(RL7_LO,0x1fc4)(lo)	|	VoC_lw16i_set_inc(REG3,0x1fbc,0x2)(hi)
0x70501FC4,	//0x0814		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x1fc4)(hi)
0x59D2F009,	//0x0816		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0818		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688F,	//0x081a		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x081c		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0x070CF004,	//0x081e		VoC_sub16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x4E34870D,	//0x0820		VoC_mac32_rr(REG6,REG4,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG4,REG1,IN_PARALLEL)
0xD9DBCE3D,	//0x0822		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_mac32_rr(REG7,REG5,IN_PARALLEL)
0xF66E61C3,	//0x0824		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0xDDDCD9D2,	//0x0826		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x61C3DDDD,	//0x0828		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
		//0x0829		VoC_endloop0
0x1480F66E,	//0x082a		VoC_lw32_d(REG01,0x20ca)(lo)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0x180A20CA,	//0x082c		VoC_lw16i_set_inc(REG2,0x1fbc,0x2)(lo)	|	VoC_lw32_d(REG01,0x20ca)(hi)
0x180B1FBC,	//0x082e		VoC_lw16i_set_inc(REG3,0x1fb4,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x1fbc,0x2)(hi)
0x0A8E1FB4,	//0x0830		VoC_lw16i(RL7_LO,0x1fd4)(lo)	|	VoC_lw16i_set_inc(REG3,0x1fb4,0x2)(hi)
0x70501FD4,	//0x0832		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x1fd4)(hi)
0x59D2F009,	//0x0834		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0836		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688C,	//0x0838		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x083a		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD1395131,	//0x083c		VoC_mac32inc_rp(REG7,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x61C3D9DB,	//0x083e		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xD9D2F66E,	//0x0840		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0xDDDDDDDC,	//0x0842		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0844		VoC_endloop0
0xF66E61C3,	//0x0844		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0x20CA1580,	//0x0846		VoC_sw32_d(REG01,0x20ca)
0x20CE1481,	//0x0848		VoC_lw32_d(REG23,0x20ce)
0x1FC41808,	//0x084a		VoC_lw16i_set_inc(REG0,0x1fc4,0x2)
0x1FD41809,	//0x084c		VoC_lw16i_set_inc(REG1,0x1fd4,0x2)
0xF0077032,	//0x084e		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xFF457F44,	//0x0850		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE905FFC0,	//0x0852		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xFA5D1304,	//0x0854		VoC_shr32_ri(ACC1,0xb,IN_PARALLEL)	|	VoC_add32inc_rp(ACC0,ACC0,REG0,DEFAULT)
0xFBAC134D,	//0x0856		VoC_shr32_ri(ACC0,0xfffffff5,IN_PARALLEL)	|	VoC_add32inc_rp(ACC1,ACC1,REG1,DEFAULT)
		//0x0858		VoC_endloop0
0xFBAD7A5C,	//0x0858		VoC_shr32_ri(ACC1,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xb,DEFAULT)
0xFBFD7BA4,	//0x085a		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xF7676126,	//0x085c		VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xF0045CA9,	//0x085e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0xF0055CBB,	//0x0860		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG3,DEFAULT)
0x20D21480,	//0x0862		VoC_lw32_d(REG01,0x20d2)
0x20D41481,	//0x0864		VoC_lw32_d(REG23,0x20d4)
0x20CE1581,	//0x0866		VoC_sw32_d(REG23,0x20ce)
0xBAFDBAB4,	//0x0868		VoC_sub16inc_pr(REG5,REG3,REG7,DEFAULT)	|	VoC_sub16inc_pr(REG4,REG2,REG6,DEFAULT)
0xDC95DC84,	//0x086a		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x20D41581,	//0x086c		VoC_sw32_d(REG23,0x20d4)
0x1580DFA9,	//0x086e		VoC_sw32_d(REG01,0x20d2)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE58020D2,	//0x0870		VoC_return	|	VoC_sw32_d(REG01,0x20d2)(hi)
		//0x0872		Coolsand_UpdateSpkPower
0x7030DFE9,	//0x0872		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1480F005,	//0x0874		VoC_lw32_d(REG01,0x20d6)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x703220D6,	//0x0876		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw32_d(REG01,0x20d6)(hi)
0x5884F007,	//0x0878		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x5895F431,	//0x087a		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x6,IN_PARALLEL)
0xCD6DCD24,	//0x087c		VoC_multf32_rr(ACC1,REG5,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG4,IN_PARALLEL)
0x20D01481,	//0x087e		VoC_lw32_d(REG23,0x20d0)
0x58A4C92C,	//0x0880		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x58B5FBD4,	//0x0882		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffa,IN_PARALLEL)
0x4D6FCD26,	//0x0884		VoC_multf32_rr(RL7,REG5,REG5,DEFAULT)	|	VoC_multf32_rr(RL6,REG4,REG4,IN_PARALLEL)
0x1580FA34,	//0x0886		VoC_sw32_d(REG01,0x20d6)(lo)	|	VoC_shr32_ri(ACC0,0x6,IN_PARALLEL)
0xC9BE20D6,	//0x0888		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_sw32_d(REG01,0x20d6)(hi)
0x20D8200A,	//0x088a		VoC_lw16d_set_inc(REG2,0x20d8,0x2)
0x20D01581,	//0x088c		VoC_sw32_d(REG23,0x20d0)
0xD9957BD6,	//0x088e		VoC_lw32_p(ACC1,REG2,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffffa,DEFAULT)
0xFBFD7A36,	//0x0890		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x6,DEFAULT)
0xC92CCB34,	//0x0892		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFBF4FA0C,	//0x0894		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x33C4FA14,	//0x0896		VoC_bnltz32_r(Coolsand_UpdateSpkPower100,ACC0)(lo)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0xFF44089A,	//0x0898		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bnltz32_r(Coolsand_UpdateSpkPower100,ACC0)(hi)
		//0x089a		Coolsand_UpdateSpkPower100
0xDDD4DFA9,	//0x089a		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x20D81502,	//0x089c		VoC_sw16_d(REG2,0x20d8)
0xDFE9E580,	//0x089e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x089f		Coolsand_FilterUpdateCotrol_Int
0x1FA00A80,	//0x08a0		VoC_lw16i(REG0,0x1fa0)
0x1FAA0A81,	//0x08a2		VoC_lw16i(REG1,0x1faa)
0xDFC660E6,	//0x08a4		VoC_push16(REG6,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xF019C818,	//0x08a6		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_add32_rr(REG01,REG01,REG67,DEFAULT)
0x98C51884,	//0x08a8		VoC_multf32_rp(ACC1,REG3,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG2,REG0,DEFAULT)
0xD0915019,	//0x08aa		VoC_msu32_rp(REG2,REG1,IN_PARALLEL)	|	VoC_mac32_rp(REG3,REG1,DEFAULT)
0x7A3CFFC0,	//0x08ac		VoC_shr32_ri(ACC0,0x7,DEFAULT)	|	VoC_NOP
0x5FC7FA3D,	//0x08ae		VoC_push16(REG7,DEFAULT)	|	VoC_shr32_ri(ACC1,0x7,IN_PARALLEL)
0x7F27E085,	//0x08b0		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x8,IN_PARALLEL)
0x33C4E004,	//0x08b2		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xFF4708B8,	//0x08b4		VoC_lw32z(RL7,DEFAULT)	|	VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs,ACC0)(hi)
0xFFC04BE7,	//0x08b6		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(RL7,RL7,ACC0,DEFAULT)
		//0x08b8		Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs
0x08C036BA,	//0x08b8		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7,REG45)
0xFF277F14,	//0x08ba		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0x08C03287,	//0x08bc		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7)
0xE0087709,	//0x08be		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0xfff8,DEFAULT)
		//0x08c0		Coolsand_FilterUpdateCotrol_Int_InstantCorrI
0x33C5FF2E,	//0x08c0		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs,ACC1)(lo)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xFF4608C6,	//0x08c2		VoC_lw32z(RL6,DEFAULT)	|	VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs,ACC1)(hi)
0xFFC04BAE,	//0x08c4		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,ACC1,DEFAULT)
		//0x08c6		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs
0x08CE36B2,	//0x08c6		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6,REG45)
0xFF2E7F15,	//0x08c8		VoC_movreg32(RL6,ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x08CE3286,	//0x08ca		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6)
0xE00A770B,	//0x08cc		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0xfff8,DEFAULT)
		//0x08ce		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ
0x0A84C1FE,	//0x08ce		VoC_lw16i(REG4,0x2008)(lo)	|	VoC_add16_rr(REG6,REG7,REG7,DEFAULT)
0x0A852008,	//0x08d0		VoC_lw16i(REG5,0x201a)(lo)	|	VoC_lw16i(REG4,0x2008)(hi)
0x4134201A,	//0x08d2		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i(REG5,0x201a)(hi)
0x5F41C175,	//0x08d4		VoC_push32(REG23,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)
0x59A7F581,	//0x08d6		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)
0xD9AEF5FA,	//0x08d8		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)
0x42441406,	//0x08da		VoC_lw16_d(REG6,0x4244)
0x08E03344,	//0x08dc		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_not_Zero,ACC0)
0x08F03305,	//0x08de		VoC_bez32_r(Coolsand_FilterUpdateCotrol_Int_not_Zero_end,ACC1)
		//0x08e0		Coolsand_FilterUpdateCotrol_Int_not_Zero
0xCB39DF40,	//0x08e0		VoC_sub32_rr(REG23,ACC0,RL7,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xCCF44B70,	//0x08e2		VoC_multf32_rr(ACC0,REG3,REG6,IN_PARALLEL)	|	VoC_sub32_rr(REG01,ACC1,RL6,DEFAULT)
0xCC75790A,	//0x08e4		VoC_multf32_rr(ACC1,REG1,REG6,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xF908CE56,	//0x08e6		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_macX_rr(REG2,REG6,DEFAULT)
0x493CFA7C,	//0x08e8		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDF00CE86,	//0x08ea		VoC_pop32(REG01,DEFAULT)	|	VoC_macX_rr(REG0,REG6,IN_PARALLEL)
0xC975FA7D,	//0x08ec		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,DEFAULT)
0xDDADDDA4,	//0x08ee		VoC_sw32_p(ACC1,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG4,DEFAULT)
		//0x08f0		Coolsand_FilterUpdateCotrol_Int_not_Zero_end
0xDF42DF01,	//0x08f0		VoC_push32(REG45,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x1FF60A84,	//0x08f2		VoC_lw16i(REG4,0x1ff6)
0xF439413C,	//0x08f4		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC13C4C94,	//0x08f6		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG2,DEFAULT)
0xD9A5CE1B,	//0x08f8		VoC_lw32_p(ACC1,REG4,DEFAULT)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
0x09063304,	//0x08fa		VoC_bez32_r(Coolsand_FilterUpdateCotrol_Int_SpkDataPower,ACC0)
0xCB29F619,	//0x08fc		VoC_sub32_rr(REG23,ACC0,ACC1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)
0xF90A4CF4,	//0x08fe		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0xFFC0CE56,	//0x0900		VoC_NOP	|	VoC_macX_rr(REG2,REG6,DEFAULT)
0xC92CFA7C,	//0x0902		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDDA4FFC0,	//0x0904		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_NOP
		//0x0906		Coolsand_FilterUpdateCotrol_Int_SpkDataPower
0xD9A4DF02,	//0x0906		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDF44DF45,	//0x0908		VoC_push32(ACC0,DEFAULT)	|	VoC_push32(ACC1,DEFAULT)
0xD9ADD9A4,	//0x090a		VoC_lw32_p(ACC1,REG5,DEFAULT)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x0B242B80,	//0x090c		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xFF357A44,	//0x090e		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xDF01DF06,	//0x0910		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x091C3344,	//0x0912		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm,ACC0)
0x2B80FF3C,	//0x0914		VoC_jal(Coolsand_CmplxAppxNorm_int)(lo)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0xFA440B24,	//0x0916		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm_int)(hi)
0x091B3344,	//0x0918		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100,ACC0)
0xFF0EF048,	//0x091a		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
		//0x091b		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100
		//0x091c		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm
0xFBFEFF31,	//0x091c		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0xFA66C98E,	//0x091e		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG23,DEFAULT)
0x09233346,	//0x0920		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r,RL6)
0xF182F02C,	//0x0922		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0923		Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r
0x0B3E2B80,	//0x0924		VoC_jal(Coolsand_MSBPos)
0xC2D2F182,	//0x0926		VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0xc,DEFAULT)
0xE0057E94,	//0x0928		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG2,DEFAULT)
0x00000AC4,	//0x092a		VoC_lw16i(REG4,0x8000)
0x09313614,	//0x092c		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_CouplingFactor,REG45,ACC0)
0x0A88FF44,	//0x092e		VoC_lw16i(ACC0_LO,0x7fff)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xD81B7FFF,	//0x0930		VoC_lw16_p(ACC1_HI,REG1,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x7fff)(hi)
		//0x0931		Coolsand_FilterUpdateCotrol_Int_CouplingFactor
0xD809DF44,	//0x0932		VoC_lw16_p(ACC0_HI,REG0,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0xFA857A84,	//0x0934		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x0B242B80,	//0x0936		VoC_jal(Coolsand_CmplxAppxNorm_int)
0x1FE40A80,	//0x0938		VoC_lw16i(REG0,0x1fe4)
0xC030C1FE,	//0x093a		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG7,DEFAULT)
0x08000A84,	//0x093c		VoC_lw16i(REG4,0x800)
0x7A66D986,	//0x093e		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x3616E005,	//0x0940		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0A8C0946,	//0x0942		VoC_lw16i(RL6_LO,0x7ff)(lo)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(hi)
0xF00D07FF,	//0x0944		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i(RL6_LO,0x7ff)(hi)
		//0x0946		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s
0x09493346,	//0x0946		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100,RL6)
0xF182F02C,	//0x0948		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0949		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100
0x0B3E2B80,	//0x094a		VoC_jal(Coolsand_MSBPos)
0x43DCF187,	//0x094c		VoC_sub16_rr(REG4,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0xE434E016,	//0x094e		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x095B3184,	//0x0950		VoC_bez16_r(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos,REG4)
0xC31CF164,	//0x0952		VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0xb,DEFAULT)
0xC3A4F80C,	//0x0954		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xFF21FEA4,	//0x0956		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xC90CFBFC,	//0x0958		VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xC2FCE5C4,	//0x095a		VoC_sub16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_jump(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end)
		//0x095b		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos
0xFEA4F80C,	//0x095c		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x095e		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end
0x0A8BF00A,	//0x095e		VoC_lw16i(ACC1_HI,0x10)(lo)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0x362C0010,	//0x0960		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(lo)	|	VoC_lw16i(ACC1_HI,0x10)(hi)
0xF7E80965,	//0x0962		VoC_lw16i_short(ACC0_LO,0xffffffff,DEFAULT)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(hi)
0xDF87F1E9,	//0x0964		VoC_pop16(REG7,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xf,DEFAULT)
		//0x0965		Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor
0x202C0A80,	//0x0966		VoC_lw16i(REG0,0x202c)
0xDF864038,	//0x0968		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xE0825F05,	//0x096a		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
0x007F0A85,	//0x096c		VoC_lw16i(REG5,0x7f)
0x09813416,	//0x096e		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG2,REG6)
0x0981362C,	//0x0970		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,ACC1,ACC0)
0xF2A2FF26,	//0x0972		VoC_lw16i_short(REG2,0x15,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0B3E2B80,	//0x0974		VoC_jal(Coolsand_MSBPos)
0xC2D3F202,	//0x0976		VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xFA45FE9D,	//0x0978		VoC_shr32_ri(ACC1,0x8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0x0A84E145,	//0x097a		VoC_lw16i(REG4,0x80)(lo)	|	VoC_movreg16(REG5,ACC1_LO,DEFAULT)
0x34250080,	//0x097c		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(lo)	|	VoC_lw16i(REG4,0x80)(hi)
0x0A850981,	//0x097e		VoC_lw16i(REG5,0x7f)(lo)	|	VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(hi)
0xDFA9007F,	//0x0980		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(REG5,0x7f)(hi)
		//0x0981		Coolsand_FilterUpdateCotrol_Int_FrameCnt_end
0xE580DC05,	//0x0982		VoC_return	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x0984		Coolsand_UpdateFilter
0x0A80DFE9,	//0x0984		VoC_lw16i(REG0,0x1fe4)(lo)	|	VoC_push16(RA,DEFAULT)
0x40381FE4,	//0x0986		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x1fe4)(hi)
0xC038FF44,	//0x0988		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x42431409,	//0x098a		VoC_lw16_d(ACC0_HI,0x4243)
0x78F59102,	//0x098c		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add32_rp(REG45,ACC0,REG0,DEFAULT)
0x7815FF46,	//0x098e		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x3105E0E2,	//0x0990		VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(lo)	|	VoC_lw16i_short(REG2,0xe,IN_PARALLEL)
0xF0030995,	//0x0992		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(hi)
0xE0ACC2ED,	//0x0994		VoC_movreg16(RL6_LO,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG3,REG5,DEFAULT)
		//0x0995		Coolsand_ShrinkBit_abs
0x0B3E2B80,	//0x0996		VoC_jal(Coolsand_MSBPos)
0x3183F004,	//0x0998		VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF024099F,	//0x099a		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(hi)
0xFE1CC31B,	//0x099c		VoC_shr16_rr(REG4,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG4,REG3,DEFAULT)
0xE08CE42C,	//0x099e		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
		//0x099f		Coolsand_ShrinkBit_end
0x0B3E2B80,	//0x09a0		VoC_jal(Coolsand_MSBPos)
0x202C0A81,	//0x09a2		VoC_lw16i(REG1,0x202c)
0x1FA00A82,	//0x09a4		VoC_lw16i(REG2,0x1fa0)
0xE0744079,	//0x09a6		VoC_lw16i_short(REG4,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xC0BA42E3,	//0x09a8		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0xF5E15811,	//0x09aa		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xFF447E19,	//0x09ac		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x1FAA0A83,	//0x09ae		VoC_lw16i(REG3,0x1faa)
0xF8F140FB,	//0x09b0		VoC_shr16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xDFA97811,	//0x09b2		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x2,DEFAULT)
0xF8EF1852,	//0x09b4		VoC_shr16_ri(REG7,0xfffffffd,IN_PARALLEL)	|	VoC_multf32_rp(REG45,REG1,REG2,DEFAULT)
0xF6E6508B,	//0x09b6		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_msu32_rp(REG1,REG3,DEFAULT)
0x1DC81804,	//0x09b8		VoC_lw16i_set_inc(REG0,0x1dc8,0x1)
0x1E101805,	//0x09ba		VoC_lw16i_set_inc(REG1,0x1e10,0x1)
0xFA547A52,	//0x09bc		VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
0xFBFC7BFA,	//0x09be		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x1E58180A,	//0x09c0		VoC_lw16i_set_inc(REG2,0x1e58,0x2)
0x1EE8180B,	//0x09c2		VoC_lw16i_set_inc(REG3,0x1ee8,0x2)
0xC8594818,	//0x09c4		VoC_add32_rr(REG23,REG23,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,REG67,DEFAULT)
0xF5E14859,	//0x09c6		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,REG67,DEFAULT)
0xF45A7F23,	//0x09c8		VoC_lw16i_short(FORMATX,0xb,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xF90E790C,	//0x09ca		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xE911FFC0,	//0x09cc		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0x99C51944,	//0x09ce		VoC_multf32_rp(ACC1,REG7,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0xD1705060,	//0x09d0		VoC_macXinc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG0,DEFAULT)
0xD02950B9,	//0x09d2		VoC_mac32_rp(REG5,REG1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG1,DEFAULT)
0xD16150F1,	//0x09d4		VoC_macXinc_rp(REG4,REG1,IN_PARALLEL)	|	VoC_msuX_rp(REG6,REG1,DEFAULT)
0x7BA4FFC0,	//0x09d6		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_NOP
0x7A64FBA5,	//0x09d8		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff4,IN_PARALLEL)
0x9116FA65,	//0x09da		VoC_add32_rp(RL6,ACC0,REG2,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)
0xDDD6915F,	//0x09dc		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_add32_rp(RL7,ACC1,REG3,DEFAULT)
		//0x09de		VoC_endloop0
0xE580DDDF,	//0x09de		VoC_return	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
		//0x09e0		Coolsand_BackCopyVec
0xF3FA77D1,	//0x09e0		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0xC0BA4079,	//0x09e2		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x5E08F80F,	//0x09e4		VoC_inc_p(REG1,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xD9CCDE10,	//0x09e6		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0xD9CCE7C2,	//0x09e8		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x09ea		VoC_endloop0
0xE580DDD4,	//0x09ea		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x09ec		Coolsand_FlipVec
0xD899C0BA,	//0x09ec		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xDE1067C3,	//0x09ee		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDCA9D899,	//0x09f0		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x09f1		VoC_endloop0
0xFFC06580,	//0x09f2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x09f4		Coolsand_MulVec
0xF0067051,	//0x09f4		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF8087053,	//0x09f6		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9CB6606,	//0x09f8		VoC_lw32inc_p(REG67,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x8FD78F96,	//0x09fa		VoC_multf16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_multf16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD9CBFFC0,	//0x09fc		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_NOP
		//0x09fe		VoC_endloop0
0xE580DDDB,	//0x09fe		VoC_return	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x0a00		Coolsand_ClearVec
0x7F44F051,	//0x0a00		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xE7C1F80F,	//0x0a02		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
		//0x0a04		VoC_endloop0
0xE580DDCC,	//0x0a04		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0a06		Coolsand_AddVec
0xD88667C4,	//0x0a06		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD886838E,	//0x0a08		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
		//0x0a0a		VoC_endloop0
0xE580DCA6,	//0x0a0a		VoC_return	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x0a0c		Coolsand_IFFT16
0x7050DFE9,	//0x0a0c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x0a0e		VoC_jal(Coolsand_ReverseIndex)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0xDF010AFF,	//0x0a10		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(Coolsand_ReverseIndex)(hi)
0xF0086060,	//0x0a12		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0xFFC05F41,	//0x0a14		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x0AFF2B80,	//0x0a16		VoC_jal(Coolsand_ReverseIndex)
0xF4795F00,	//0x0a18		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x20DC180A,	//0x0a1a		VoC_lw16i_set_inc(REG2,0x20dc,0x2)
0x20FC180B,	//0x0a1c		VoC_lw16i_set_inc(REG3,0x20fc,0x2)
0xF0087051,	//0x0a1e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x7FFF0A86,	//0x0a20		VoC_lw16i(REG6,0x7fff)
0xDF406912,	//0x0a22		VoC_push32(REG01,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x59CFD9C2,	//0x0a24		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x61E7CD74,	//0x0a26		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG6,IN_PARALLEL)
0x4DF6F7CF,	//0x0a28		VoC_multf32_rr(RL6,REG7,REG6,DEFAULT)	|	VoC_movreg16(RL7_HI,RL7_LO,IN_PARALLEL)
0x7A85F68B,	//0x0a2a		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x4B65FA87,	//0x0a2c		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(RL7,0x10,IN_PARALLEL)
0x4BF7C964,	//0x0a2e		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC1,ACC0,IN_PARALLEL)
0xDDD4C9F6,	//0x0a30		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add32_rr(RL6,RL7,RL6,IN_PARALLEL)
0xDDDEDDD5,	//0x0a32		VoC_sw32inc_p(RL6,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0a34		VoC_endloop0
0x1810DDDF,	//0x0a34		VoC_lw16i_set_inc(REG0,0x20dc,0x4)(lo)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
0x181120DC,	//0x0a36		VoC_lw16i_set_inc(REG1,0x20fc,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x20dc,0x4)(hi)
0x689920FC,	//0x0a38		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x20fc,0x4)(hi)
0xDF40F402,	//0x0a3a		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x0a3c		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x0a3e		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x0a40		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x0a42		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x0a44		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x0a46		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x0a48		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BA4CEBA,	//0x0a4a		VoC_sub32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x4BEDC9A6,	//0x0a4c		VoC_sub32_rr(ACC1,RL7,ACC1,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xDDC6C9EF,	//0x0a4e		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC1,IN_PARALLEL)
0xDDCFDDC4,	//0x0a50		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0a52		VoC_endloop0
0x1810DDCD,	//0x0a52		VoC_lw16i_set_inc(REG0,0x20de,0x4)(lo)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x181120DE,	//0x0a54		VoC_lw16i_set_inc(REG1,0x20fe,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x20de,0x4)(hi)
0x689920FE,	//0x0a56		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x20fe,0x4)(hi)
0xDF40F402,	//0x0a58		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x0a5a		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x0a5c		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x0a5e		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x0a60		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x0a62		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x0a64		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x0a66		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BE4CEBA,	//0x0a68		VoC_sub32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x49ADC9E7,	//0x0a6a		VoC_add32_rr(ACC1,RL6,ACC1,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,IN_PARALLEL)
0xDDCFCBAE,	//0x0a6c		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC1,IN_PARALLEL)
0xDDC6DDCC,	//0x0a6e		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0a70		VoC_endloop0
0x1880DDC5,	//0x0a70		VoC_lw16i_set_inc(REG0,0x20dc,0x10)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x188120DC,	//0x0a72		VoC_lw16i_set_inc(REG1,0x20fc,0x10)(lo)	|	VoC_lw16i_set_inc(REG0,0x20dc,0x10)(hi)
0x180A20FC,	//0x0a74		VoC_lw16i_set_inc(REG2,0x221c,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x20fc,0x10)(hi)
0x180B221C,	//0x0a76		VoC_lw16i_set_inc(REG3,0x2224,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x221c,0x2)(hi)
0xFFC02224,	//0x0a78		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x2224,0x2)(hi)
0x0AA22C09,	//0x0a7a		VoC_loop_i(0x1,0x4)
0xE08758A4,	//0x0a7c		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDF40D8B5,	//0x0a7e		VoC_push32(REG01,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xC1CF41C6,	//0x0a80		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG7,REG0,DEFAULT)
0xDF41685C,	//0x0a82		VoC_push32(REG23,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x59BBD9B1,	//0x0a84		VoC_lw32_p(REG67,REG7,DEFAULT)	|	VoC_lw32_p(REG23,REG6,DEFAULT)
0x5F43FBF9,	//0x0a86		VoC_push32(REG67,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)
0x790AFBFB,	//0x0a88		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x4D14F90E,	//0x0a8a		VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x4E63CD55,	//0x0a8c		VoC_macX_rr(REG4,REG3,DEFAULT)	|	VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)
0x4EAECEAB,	//0x0a8e		VoC_msu32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG5,REG3,IN_PARALLEL)
0x4EEFCE26,	//0x0a90		VoC_msuX_rr(REG5,REG7,DEFAULT)	|	VoC_mac32_rr(REG4,REG6,IN_PARALLEL)
0xDF03CEA7,	//0x0a92		VoC_pop32(REG67,DEFAULT)	|	VoC_macX_rr(REG4,REG7,IN_PARALLEL)
0x91043C26,	//0x0a94		VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)	|	VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)
0x914D3C6F,	//0x0a96		VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)	|	VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)
0xE0825DB6,	//0x0a98		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_sw32_p(RL6,REG6,DEFAULT)
0xC0865DC4,	//0x0a9a		VoC_add16_rr(REG6,REG2,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC08F5DCD,	//0x0a9c		VoC_add16_rr(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0a9e		VoC_endloop0
0xDF01DDBF,	//0x0a9e		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_p(RL7,REG7,DEFAULT)
0xE0255F00,	//0x0aa0		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
		//0x0aa2		VoC_endloop1
0xC1494140,	//0x0aa2		VoC_add16_rr(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG5,REG0,DEFAULT)
0x20DC1808,	//0x0aa4		VoC_lw16i_set_inc(REG0,0x20dc,0x2)
0x20FC1809,	//0x0aa6		VoC_lw16i_set_inc(REG1,0x20fc,0x2)
0x221C1806,	//0x0aa8		VoC_lw16i_set_inc(REG2,0x221c,0x1)
0x22241807,	//0x0aaa		VoC_lw16i_set_inc(REG3,0x2224,0x1)
0x41C6F207,	//0x0aac		VoC_add16_rr(REG6,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x10,DEFAULT)
0xE91EC1CF,	//0x0aae		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)
0xD8B5D8A4,	//0x0ab0		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xD9B1DF41,	//0x0ab2		VoC_lw32_p(REG23,REG6,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFBF959BB,	//0x0ab4		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG7,DEFAULT)
0xFBFB5F43,	//0x0ab6		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xF90E790A,	//0x0ab8		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCD554D14,	//0x0aba		VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xCEAB4E63,	//0x0abc		VoC_macX_rr(REG5,REG3,IN_PARALLEL)	|	VoC_macX_rr(REG4,REG3,DEFAULT)
0xCE264EAE,	//0x0abe		VoC_mac32_rr(REG4,REG6,IN_PARALLEL)	|	VoC_msu32_rr(REG5,REG6,DEFAULT)
0xCEA74EEF,	//0x0ac0		VoC_macX_rr(REG4,REG7,IN_PARALLEL)	|	VoC_msuX_rr(REG5,REG7,DEFAULT)
0x3C26DF03,	//0x0ac2		VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x3C6F9104,	//0x0ac4		VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)	|	VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)
0x5DB6914D,	//0x0ac6		VoC_sw32_p(RL6,REG6,DEFAULT)	|	VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)
0x5DC4E104,	//0x0ac8		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,IN_PARALLEL)
0xDDCDC106,	//0x0aca		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG0,IN_PARALLEL)
0x5DBFDF01,	//0x0acc		VoC_sw32_p(RL7,REG7,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x0acd		VoC_endloop0
0xDF01C10F,	//0x0ace		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG7,REG4,REG1,IN_PARALLEL)
0x20DC1808,	//0x0ad0		VoC_lw16i_set_inc(REG0,0x20dc,0x2)
0x20FC1809,	//0x0ad2		VoC_lw16i_set_inc(REG1,0x20fc,0x2)
0xF0077032,	//0x0ad4		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x0AFB2C05,	//0x0ad6		VoC_loop_i(0x1,0x2)
0x59C5D9C4,	//0x0ad8		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x691DFF26,	//0x0ada		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0xF076FF2F,	//0x0adc		VoC_lw16i_short(STATUS,0x3,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0x6574FAFE,	//0x0ade		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x1f,DEFAULT)
0x657DFAFF,	//0x0ae0		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0x1f,IN_PARALLEL)
0x4B7DCB34,	//0x0ae2		VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x6574FA24,	//0x0ae4		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)
0xE57DFA25,	//0x0ae6		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,IN_PARALLEL)
0x0AEC2E80,	//0x0ae8		VoC_boe0z16_r(Coolsand_IFFT16_L0)
0xFFC07F47,	//0x0aea		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x0aec		Coolsand_IFFT16_L0
0x0AF02F80,	//0x0aec		VoC_boe1z16_r(Coolsand_IFFT16_L1)
0xFFC07F46,	//0x0aee		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
		//0x0af0		Coolsand_IFFT16_L1
0xCB344B7D,	//0x0af0		VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xFB857B84,	//0x0af2		VoC_shr32_ri(ACC1,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x5CA9D9C4,	//0x0af4		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C5FF26,	//0x0af6		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x0af8		VoC_endloop0
0xFF2F5CAB,	//0x0af8		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG2,DEFAULT)
0xE062E020,	//0x0afa		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x0afb		VoC_endloop1
0xFFC0DFA9,	//0x0afc		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFC0E580,	//0x0afe		VoC_push16(REG0,DEFAULT)	|	VoC_return
		//0x0aff		Coolsand_ReverseIndex
0xD9C6D9C7,	//0x0b00		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xD9C4D9C5,	//0x0b02		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xD9C2D9C3,	//0x0b04		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD801D9C1,	//0x0b06		VoC_lw16_p(REG1,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x61E6DF80,	//0x0b08		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x618AF6CF,	//0x0b0a		VoC_movreg16(ACC1_LO,RL6_LO,DEFAULT)	|	VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)
0x61A2F74C,	//0x0b0c		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_movreg16(RL6_LO,ACC1_LO,IN_PARALLEL)
0x6164F64D,	//0x0b0e		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_movreg16(RL6_HI,REG2,IN_PARALLEL)
0x6121F68B,	//0x0b10		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x60A3F629,	//0x0b12		VoC_movreg16(REG3,REG5,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG1,IN_PARALLEL)
0xDDC7F665,	//0x0b14		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xDDC5DDC6,	//0x0b16		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDC3DDC4,	//0x0b18		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC1DDC2,	//0x0b1a		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE580DC01,	//0x0b1c		VoC_return	|	VoC_sw16_p(REG1,REG0,DEFAULT)
		//0x0b1e		Coolsand_CopyVec
0xF80F59CC,	//0x0b1e		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CCE7C2,	//0x0b20		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x0b22		VoC_endloop0
0xE580DDD4,	//0x0b22		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0b24		Coolsand_CmplxAppxNorm_int
0xFAFC7F22,	//0x0b24		VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDF466562,	//0x0b26		VoC_push32(RL6,IN_PARALLEL)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0xFAFD7F2E,	//0x0b28		VoC_shr32_ri(ACC1,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xCAA4656E,	//0x0b2a		VoC_sub32_rr(ACC0,REG45,ACC0,IN_PARALLEL)	|	VoC_xor32_rr(RL6,ACC1,DEFAULT)
0x3625CBAD,	//0x0b2c		VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(lo)	|	VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)
0x7F2C0B32,	//0x0b2e		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(hi)
0xFFC0FF25,	//0x0b30		VoC_NAD	|	VoC_movreg32(ACC1,ACC0,IN_PARALLEL)
		//0x0b32		Coolsand_CmplxAppxNorm_int_300
0xFF2A7F26,	//0x0b32		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFD7BDC,	//0x0b34		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffb,DEFAULT)
0xC9554B34,	//0x0b36		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFA1D7A2C,	//0x0b38		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0xDF06492C,	//0x0b3a		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFFC06580,	//0x0b3c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0b3e		Coolsand_MSBPos
0xFAFE7F34,	//0x0b3e		VoC_shr32_ri(RL6,0x1f,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0xDF446574,	//0x0b40		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_xor32_rr(ACC0,RL6,DEFAULT)
0xE0034B34,	//0x0b42		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xF0076684,	//0x0b44		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
0x0B4A3304,	//0x0b46		VoC_bez32_r(Coolsand_MSBPos_L0,ACC0)
		//0x0b48		VoC_endloop0
0xFA0C5E18,	//0x0b48		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0b4a		Coolsand_MSBPos_L0
0xE580DF04,	//0x0b4a		VoC_return	|	VoC_pop32(ACC0,DEFAULT)
		//0x0b4c		Coolsand_ComputeNoiseWeight_DeciDirectCTRL
0x0A80DFE9,	//0x0b4c		VoC_lw16i(REG0,0x1fa0)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A811FA0,	//0x0b4e		VoC_lw16i(REG1,0x1faa)(lo)	|	VoC_lw16i(REG0,0x1fa0)(hi)
0x14071FAA,	//0x0b50		VoC_lw16_d(REG7,0x20db)(lo)	|	VoC_lw16i(REG1,0x1faa)(hi)
0xC03820DB,	//0x0b52		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x20db)(hi)
0xD800C079,	//0x0b54		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xFFC05811,	//0x0b56		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x0F452B80,	//0x0b58		VoC_jal(Cooland_InstantPower)
0x20DB1405,	//0x0b5a		VoC_lw16_d(REG5,0x20db)
0x20360A86,	//0x0b5c		VoC_lw16i(REG6,0x2036)
0x425A1407,	//0x0b5e		VoC_lw16_d(REG7,0x425a)
0xF8FD7F27,	//0x0b60		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xDFC5C1AE,	//0x0b62		VoC_push16(REG5,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x0E962B80,	//0x0b64		VoC_jal(Coolsand_SmoothPeakPower)
0x0A80DF87,	//0x0b66		VoC_lw16i(REG0,0x2048)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x0A812048,	//0x0b68		VoC_lw16i(REG1,0x2036)(lo)	|	VoC_lw16i(REG0,0x2048)(hi)
0xC0382036,	//0x0b6a		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x2036)(hi)
0xD984C079,	//0x0b6c		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xDF40D98D,	//0x0b6e		VoC_push32(REG01,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0EAA2B80,	//0x0b70		VoC_jal(Coolsand_InstantSNR)
0x0EE22B80,	//0x0b72		VoC_jal(Coolsand_OverallNoiseEstwState)
0xF284DF00,	//0x0b74		VoC_lw16i_short(REG4,0x14,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFBF9D981,	//0x0b76		VoC_shr32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0x3341FA21,	//0x0b78		VoC_bnez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0,REG23)(lo)	|	VoC_shr32_ri(REG23,0x4,DEFAULT)
0x70220B7E,	//0x0b7a		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_bnez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0,REG23)(hi)
0xFFC0E003,	//0x0b7c		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
		//0x0b7e		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0
0x0C582B80,	//0x0b7e		VoC_jal(Coolsand_ShrinkBit)
0xD98B70A4,	//0x0b80		VoC_lw32_p(REG67,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x5,DEFAULT)
0x7EA3C2E4,	//0x0b82		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0x7F1EE01E,	//0x0b84		VoC_movreg32(RL6,REG67,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
0xE4FEE00F,	//0x0b86		VoC_and32_rr(RL6,RL7,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x0B8C3306,	//0x0b88		VoC_bez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L1,RL6)
0xFFC048FB,	//0x0b8a		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
		//0x0b8c		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L1
0xFF277B8B,	//0x0b8c		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffff1,DEFAULT)
0x0A82FBE7,	//0x0b8e		VoC_lw16i(REG2,0x2064)(lo)	|	VoC_shr32_ri(RL7,0xfffffffc,DEFAULT)
0x07122064,	//0x0b90		VoC_add16_rd(REG2,REG2,0x20db)(lo)	|	VoC_lw16i(REG2,0x2064)(hi)
0xBC7F20DB,	//0x0b92		VoC_sub32_pr(RL7,REG1,RL7,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x20db)(hi)
0x33C7DC27,	//0x0b94		VoC_bnltz32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2,RL7)(lo)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0xFF470B98,	//0x0b96		VoC_lw32z(RL7,DEFAULT)	|	VoC_bnltz32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2,RL7)(hi)
		//0x0b98		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2
0x20DB1402,	//0x0b98		VoC_lw16_d(REG2,0x20db)
0xDF4478FA,	//0x0b9a		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x206E0A83,	//0x0b9c		VoC_lw16i(REG3,0x206e)
0x1401C0D3,	//0x0b9e		VoC_lw16_d(REG1,0x4247)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x599D4247,	//0x0ba0		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x4247)(hi)
0xCBEAFA27,	//0x0ba2		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_shr32_ri(RL7,0x4,IN_PARALLEL)
0xFF2C7BC2,	//0x0ba4		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xF4397A3A,	//0x0ba6		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xF5C2790C,	//0x0ba8		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE69CE21,	//0x0baa		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0xDF06FFC0,	//0x0bac		VoC_pop32(RL6,DEFAULT)	|	VoC_NOP
0xE1425F44,	//0x0bae		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x0B3E2B80,	//0x0bb0		VoC_jal(Coolsand_MSBPos)
0x226E0A81,	//0x0bb2		VoC_lw16i(REG1,0x226e)
0x20DB0709,	//0x0bb4		VoC_add16_rd(REG1,REG1,0x20db)
0xE0805F04,	//0x0bb6		VoC_lw16i_short(REG0,0x8,IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
0xFE84C2C0,	//0x0bb8		VoC_shr32_rr(ACC0,REG0,DEFAULT)	|	VoC_sub16_rr(REG0,REG3,REG0,DEFAULT)
0x20920A80,	//0x0bba		VoC_lw16i(REG0,0x2092)
0x20DB0700,	//0x0bbc		VoC_add16_rd(REG0,REG0,0x20db)
0x5803FB84,	//0x0bbe		VoC_lw16_p(REG3,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x7A81E084,	//0x0bc0		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,IN_PARALLEL)
0xDFC0DC19,	//0x0bc2		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_p(ACC0_HI,REG1,IN_PARALLEL)
0xFFC05FC9,	//0x0bc4		VoC_NAD(IN_PARALLEL)	|	VoC_push16(ACC0_HI,DEFAULT)
0x0C582B80,	//0x0bc6		VoC_jal(Coolsand_ShrinkBit)
0xFB445F80,	//0x0bc8		VoC_shr32_ri(ACC0,0xffffffe8,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xE0127ABC,	//0x0bca		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x17,DEFAULT)
0xF8CA6101,	//0x0bcc		VoC_shr16_ri(REG2,0xfffffff9,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x0BD23491,	//0x0bce		VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L3,REG2,REG1)
0xF5B84608,	//0x0bd0		VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)	|	VoC_multf16_rr(REG0,REG0,REG1,DEFAULT)
		//0x0bd2		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L3
0xF1E2DF81,	//0x0bd2		VoC_lw16i_short(REG2,0xf,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x600D8008,	//0x0bd4		VoC_movreg16(RL6_HI,REG0,DEFAULT)	|	VoC_add16_rp(REG0,REG0,REG1,DEFAULT)
0xFA86DFC1,	//0x0bd6		VoC_shr32_ri(RL6,0x10,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0x0B3E2B80,	//0x0bd8		VoC_jal(Coolsand_MSBPos)
0xE01271E0,	//0x0bda		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xf,DEFAULT)
0xF8CA42C3,	//0x0bdc		VoC_shr16_ri(REG2,0xfffffff9,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG0,DEFAULT)
0x42491401,	//0x0bde		VoC_lw16_d(REG1,0x4249)
0xDF847E19,	//0x0be0		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x3491F005,	//0x0be2		VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4,REG2,REG1)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC28D0BE6,	//0x0be4		VoC_sub16_rr(REG5,REG2,REG1,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4,REG2,REG1)(hi)
		//0x0be6		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4
0x42541400,	//0x0be6		VoC_lw16_d(REG0,0x4254)
0x20DB0800,	//0x0be8		VoC_mult16_rd(REG0,REG0,0x20db)
0x0700FFC0,	//0x0bea		VoC_add16_rd(REG0,REG0,0x424a)(lo)	|	VoC_NOP
0x3428424A,	//0x0bec		VoC_bgt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5,REG5,REG0)(lo)	|	VoC_add16_rd(REG0,REG0,0x424a)(hi)
0xE0050BF0,	//0x0bee		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_bgt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5,REG5,REG0)(hi)
		//0x0bf0		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5
0xDC45DFA9,	//0x0bf0		VoC_sw16_p(REG5,REG4,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0bf2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0bf4		Coolsand_CmplxAppxNorm
0xF8787F01,	//0x0bf4		VoC_shr16_ri(REG0,0xf,IN_PARALLEL)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xF8796482,	//0x0bf6		VoC_shr16_ri(REG1,0xf,IN_PARALLEL)	|	VoC_xor16_rr(REG2,REG0,DEFAULT)
0xC282648B,	//0x0bf8		VoC_sub16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_xor16_rr(REG3,REG1,DEFAULT)
0xE1F042CB,	//0x0bfa		VoC_lw16i_short(REG0,0x1f,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
0x0C003413,	//0x0bfc		VoC_bgt16_rr(Coolsand_CmplxAppxNorm_L0,REG2,REG3)
0xF6436062,	//0x0bfe		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
		//0x0c00		Coolsand_CmplxAppxNorm_L0
0xF41A70B9,	//0x0c00		VoC_lw16i_short(FORMATX,0x3,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x5,DEFAULT)
0xE0314C84,	//0x0c02		VoC_lw16i_short(REG1,0x3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)
0xE580CE59,	//0x0c04		VoC_return	|	VoC_macX_rr(REG3,REG1,DEFAULT)
		//0x0c06		Coolsand_FirstOrderIIRSmooth2
0x7BC2CBEA,	//0x0c06		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0x7A3AFF2C,	//0x0c08		VoC_shr32_ri(REG45,0x7,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x790CF459,	//0x0c0a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xCE21F5E2,	//0x0c0c		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffffc,IN_PARALLEL)
0xE580CE69,	//0x0c0e		VoC_return	|	VoC_macX_rr(REG5,REG1,DEFAULT)
		//0x0c10		Coolsand_NoisePSDEst
0x0A87DFE9,	//0x0c10		VoC_lw16i(REG7,0x32)(lo)	|	VoC_push16(RA,DEFAULT)
0xD9840032,	//0x0c12		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x32)(hi)
0x34BED98D,	//0x0c14		VoC_bngt16_rr(Coolsand_NoisePSDEst_L0,REG7,REG6)(lo)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xFF250C1A,	//0x0c16		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_NoisePSDEst_L0,REG7,REG6)(hi)
0x0C502B00,	//0x0c18		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)
		//0x0c1a		Coolsand_NoisePSDEst_L0
0x0C2636AC,	//0x0c1a		VoC_bngt32_rr(Coolsand_NoisePSDEst_L1,ACC1,ACC0)
0x0C223304,	//0x0c1c		VoC_bez32_r(Coolsand_NoisePSDEst_L1_sub0,ACC0)
0x2B00FF25,	//0x0c1e		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC00C50,	//0x0c20		VoC_NAD	|	VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(hi)
		//0x0c22		Coolsand_NoisePSDEst_L1_sub0
0xE00B702A,	//0x0c22		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x1,DEFAULT)
0x0C502B00,	//0x0c24		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)
		//0x0c26		Coolsand_NoisePSDEst_L1
0xE00D720C,	//0x0c26		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x10,DEFAULT)
0x0C2C362E,	//0x0c28		VoC_bgt32_rr(Coolsand_NoisePSDEst_L2,ACC1,RL6)
0xE5CFE087,	//0x0c2a		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG4,DEFAULT)
		//0x0c2c		Coolsand_NoisePSDEst_L2
0xE20C700D,	//0x0c2c		VoC_lw16i_short(RL6_LO,0x20,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x0C3236B5,	//0x0c2e		VoC_bngt32_rr(Coolsand_NoisePSDEst_L3,RL6,ACC1)
0xE5C9E0A7,	//0x0c30		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0c32		Coolsand_NoisePSDEst_L3
0xF853F8B3,	//0x0c32		VoC_shr16_ri(REG3,0xa,DEFAULT)	|	VoC_shr16_ri(REG3,0xfffffff6,DEFAULT)
0x222C0A84,	//0x0c34		VoC_lw16i(REG4,0x222c)
0xFFC0C11C,	//0x0c36		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xFFC05847,	//0x0c38		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
		//0x0c3a		Coolsand_NoisePSDEst_L4
0xF5A046BB,	//0x0c3a		VoC_lw16i_short(FORMAT16,0xfffffff4,IN_PARALLEL)	|	VoC_multf16_rr(REG3,REG2,REG7,DEFAULT)
0xDFC15F44,	//0x0c3c		VoC_push16(REG1,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xE0C478E3,	//0x0c3e		VoC_lw16i_short(REG4,0xc,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffc,DEFAULT)
0x2B80FAA1,	//0x0c40		VoC_jal(Coolsand_ShrinkBit)(lo)	|	VoC_shr32_ri(REG23,0x14,DEFAULT)
0xDF810C58,	//0x0c42		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(Coolsand_ShrinkBit)(hi)
0xF7075F07,	//0x0c44		VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
0x0C503307,	//0x0c46		VoC_bez32_r(Coolsand_NoisePSDEst_Lx,RL7)
0xFBC2CBEA,	//0x0c48		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0xF90CFA3A,	//0x0c4a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xCE277179,	//0x0c4c		VoC_mac32_rr(REG4,REG7,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xb,DEFAULT)
0xCEAF779A,	//0x0c4e		VoC_macX_rr(REG5,REG7,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffffc,DEFAULT)
		//0x0c50		Coolsand_NoisePSDEst_Lx
0xE00D708C,	//0x0c50		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x4,DEFAULT)
0x0C55362E,	//0x0c52		VoC_bgt32_rr(Coolsand_NoisePSDEst_END,ACC1,RL6)
0xDFA9FF35,	//0x0c54		VoC_pop16(RA,DEFAULT)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
		//0x0c55		Coolsand_NoisePSDEst_END
0xE580DD8D,	//0x0c56		VoC_return	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
		//0x0c58		Coolsand_ShrinkBit
0xFAF97F0E,	//0x0c58		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xF6827F0F,	//0x0c5a		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0xDF465FE9,	//0x0c5c		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0B3E2B80,	//0x0c5e		VoC_jal(Coolsand_MSBPos)
0xDF065FA9,	//0x0c60		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE0147F44,	//0x0c62		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0C6E3183,	//0x0c64		VoC_bez16_r(Coolsand_ShrinkBit_L0,REG3)
0xE005431A,	//0x0c66		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0xFE92657E,	//0x0c68		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_xor32_rr(RL6,RL7,DEFAULT)
0xE4F2CBBE,	//0x0c6a		VoC_and32_rr(REG45,RL6,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
0xCABCE57A,	//0x0c6c		VoC_sub32_rr(ACC0,REG45,RL7,DEFAULT)	|	VoC_xor32_rr(REG45,RL7,DEFAULT)
		//0x0c6e		Coolsand_ShrinkBit_L0
0xDFE9E580,	//0x0c6e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c6f		Coolsand_PostFiltering
0x20DB1407,	//0x0c70		VoC_lw16_d(REG7,0x20db)
0x23220A80,	//0x0c72		VoC_lw16i(REG0,0x2322)
0x20920A81,	//0x0c74		VoC_lw16i(REG1,0x2092)
0xC0794038,	//0x0c76		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x42541403,	//0x0c78		VoC_lw16_d(REG3,0x4254)
0xD811D800,	//0x0c7a		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xC40844FB,	//0x0c7c		VoC_mult16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG3,REG7,DEFAULT)
0x007F0A84,	//0x0c7e		VoC_lw16i(REG4,0x7f)
0x424A071B,	//0x0c80		VoC_add16_rd(REG3,REG3,0x424a)
0x0C8534A3,	//0x0c82		VoC_bngt16_rr(Coolsand_PostFiltering_L0,REG4,REG3)
0xF8CCE064,	//0x0c84		VoC_shr16_ri(REG4,0xfffffff9,DEFAULT)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x0c85		Coolsand_PostFiltering_L0
0x0C8B3484,	//0x0c86		VoC_bngt16_rr(Coolsand_PostFiltering_L1,REG0,REG4)
0x42510809,	//0x0c88		VoC_mult16_rd(REG1,REG1,0x4251)
0xF8E1E5C2,	//0x0c8a		VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)	|	VoC_jump(Coolsand_PostFiltering_L2)
		//0x0c8b		Coolsand_PostFiltering_L1
		//0x0c8c		Coolsand_PostFiltering_L2
0x209C0A82,	//0x0c8c		VoC_lw16i(REG2,0x209c)
0x0A83C0BA,	//0x0c8e		VoC_lw16i(REG3,0x2322)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x5C212322,	//0x0c90		VoC_sw16_p(REG1,REG2,DEFAULT)	|	VoC_lw16i(REG3,0x2322)(hi)
0x0A80C0FB,	//0x0c92		VoC_lw16i(REG0,0x1fa0)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x0A811FA0,	//0x0c94		VoC_lw16i(REG1,0x1faa)(lo)	|	VoC_lw16i(REG0,0x1fa0)(hi)
0x40381FAA,	//0x0c96		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x1faa)(hi)
0xF6F8C079,	//0x0c98		VoC_lw16i_short(FORMAT16,0xfffffff7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0xD811D800,	//0x0c9a		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x8C590C18,	//0x0c9c		VoC_multf16_rp(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG3,DEFAULT)
0xFF07DF40,	//0x0c9e		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x0BF42B80,	//0x0ca0		VoC_jal(Coolsand_CmplxAppxNorm)
0x6120FB84,	//0x0ca2		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x4C04F459,	//0x0ca4		VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0x0A81F6E3,	//0x0ca6		VoC_lw16i(REG1,0x2080)(lo)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0xF8FB2080,	//0x0ca8		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw16i(REG1,0x2080)(hi)
0x0A82C059,	//0x0caa		VoC_lw16i(REG2,0x209c)(lo)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0xDD8C209C,	//0x0cac		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x209c)(hi)
0xFF3840BA,	//0x0cae		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x0C10F778,	//0x0cb0		VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xfffffffb,DEFAULT)
0xFFC08C51,	//0x0cb2		VoC_NOP	|	VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)
0x2B80FF07,	//0x0cb4		VoC_jal(Coolsand_CmplxAppxNorm)(lo)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFB840BF4,	//0x0cb6		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm)(hi)
0x20920A82,	//0x0cb8		VoC_lw16i(REG2,0x2092)
0xDF0040BA,	//0x0cba		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF5B85FC9,	//0x0cbc		VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)	|	VoC_push16(ACC0_HI,DEFAULT)
0x8C510C10,	//0x0cbe		VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)
0x206E0A84,	//0x0cc0		VoC_lw16i(REG4,0x206e)
0xFFC078FF,	//0x0cc2		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x0BF42B80,	//0x0cc4		VoC_jal(Coolsand_CmplxAppxNorm)
0x225C0A81,	//0x0cc6		VoC_lw16i(REG1,0x225c)
0xC0797B84,	//0x0cc8		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0xF4596120,	//0x0cca		VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xC13C4C04,	//0x0ccc		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)
0xFF2ED98D,	//0x0cce		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xD9A57F27,	//0x0cd0		VoC_lw32_p(ACC1,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xDF475FC4,	//0x0cd2		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0x425A1401,	//0x0cd4		VoC_lw16_d(REG1,0x425a)
0x0C062B80,	//0x0cd6		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0xDF075F84,	//0x0cd8		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x5DA4FF35,	//0x0cda		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
0xFBE5FA25,	//0x0cdc		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,IN_PARALLEL)
0x42525025,	//0x0cde		VoC_bgt32_rd(Coolsand_PostFiltering_L3,ACC1,0x4252)
0x42521485,	//0x0ce0		VoC_lw32_d(ACC1,0x4252)
		//0x0ce2		Coolsand_PostFiltering_L3
0x42501402,	//0x0ce2		VoC_lw16_d(REG2,0x4250)
0x7BF8FF28,	//0x0ce4		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x7908F5C1,	//0x0ce6		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,IN_PARALLEL)
0xCC14F54A,	//0x0ce8		VoC_multf32_rr(ACC0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffe9,IN_PARALLEL)
0x1406CE4A,	//0x0cea		VoC_lw16_d(REG6,0x424a)(lo)	|	VoC_macX_rr(REG1,REG2,DEFAULT)
0xFA44424A,	//0x0cec		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_lw16_d(REG6,0x424a)(hi)
0xE1827F26,	//0x0cee		VoC_lw16i_short(REG2,0x18,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0B3E2B80,	//0x0cf0		VoC_jal(Coolsand_MSBPos)
0xE1817000,	//0x0cf2		VoC_lw16i_short(REG1,0x18,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0D0A3183,	//0x0cf4		VoC_bez16_r(Coolsand_PostFiltering_L5,REG3)
0xE17442CA,	//0x0cf6		VoC_lw16i_short(REG4,0x17,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG3,REG1,DEFAULT)
0x00011602,	//0x0cf8		VoC_and16_ri(REG2,0x1)
0x0D043182,	//0x0cfa		VoC_bez16_r(Coolsand_PostFiltering_L4,REG2)
0xE094431A,	//0x0cfc		VoC_lw16i_short(REG4,0x9,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0x42A2F80A,	//0x0cfe		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E030,	//0x0d00		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x3,IN_PARALLEL)
0xFFC065C8,	//0x0d02		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_PostFiltering_L5)
		//0x0d04		Coolsand_PostFiltering_L4
0xE0B4425A,	//0x0d04		VoC_lw16i_short(REG4,0xb,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG1,REG3,DEFAULT)
0x42A2F80A,	//0x0d06		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E010,	//0x0d08		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
		//0x0d0a		Coolsand_PostFiltering_L5
0xF4014C34,	//0x0d0a		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG6,DEFAULT)
0x1DA80A82,	//0x0d0c		VoC_lw16i(REG2,0x1da8)
0x1DB80A83,	//0x0d0e		VoC_lw16i(REG3,0x1db8)
0x20DB1407,	//0x0d10		VoC_lw16_d(REG7,0x20db)
0xC0FB40BA,	//0x0d12		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xFF3A5F81,	//0x0d14		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x7805FF45,	//0x0d16		VoC_bez32_d(Coolsand_PostFiltering_L8,0x4252)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x0A8A4252,	//0x0d18		VoC_lw16i(ACC1_LO,0x5b)(lo)	|	VoC_bez32_d(Coolsand_PostFiltering_L8,0x4252)(hi)
0xFFC0005B,	//0x0d1a		VoC_NAD	|	VoC_lw16i(ACC1_LO,0x5b)(hi)
		//0x0d1c		Coolsand_PostFiltering_L8
0x0D1F36AC,	//0x0d1c		VoC_bngt32_rr(Coolsand_PostFiltering_L6,ACC1,ACC0)
0xFB9CFF2C,	//0x0d1e		VoC_shr32_ri(ACC0,0xfffffff3,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x0d1f		Coolsand_PostFiltering_L6
0x78F8E120,	//0x0d20		VoC_shr16_ri(REG0,0xffffffff,DEFAULT)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0x3481F60C,	//0x0d22		VoC_bngt16_rr(Coolsand_PostFiltering_L7,REG0,REG1)(lo)	|	VoC_movreg16(RL6_LO,REG0,IN_PARALLEL)
0xFFC00D32,	//0x0d24		VoC_NAD	|	VoC_bngt16_rr(Coolsand_PostFiltering_L7,REG0,REG1)(hi)
0x0D382B80,	//0x0d26		VoC_jal(Coolsand_Generate)
0xF7847026,	//0x0d28		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF8F978F8,	//0x0d2a		VoC_shr16_ri(REG1,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC2714230,	//0x0d2c		VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)
0xC50D4504,	//0x0d2e		VoC_mult16_rr(REG5,REG4,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG4,REG0,DEFAULT)
0xE5C3FFC0,	//0x0d30		VoC_jump(Coolsand_PostFiltering_End)	|	VoC_NOP
		//0x0d32		Coolsand_PostFiltering_L7
0x0D382B80,	//0x0d32		VoC_jal(Coolsand_Generate)
		//0x0d34		Coolsand_PostFiltering_End
0xDC24DFA9,	//0x0d34		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE580DC35,	//0x0d36		VoC_return	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x0d38		Coolsand_Generate
0x20A61804,	//0x0d38		VoC_lw16i_set_inc(REG0,0x20a6,0x1)
0x20AA1805,	//0x0d3a		VoC_lw16i_set_inc(REG1,0x20aa,0x1)
0xE0076884,	//0x0d3c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFFC08246,	//0x0d3e		VoC_NOP	|	VoC_add16inc_rp(REG6,REG1,REG0,DEFAULT)
		//0x0d40		VoC_endloop0
0x140A81F7,	//0x0d40		VoC_lw16_d(ACC1_LO,0x20c9)(lo)	|	VoC_add16_rp(REG7,REG7,REG6,DEFAULT)
0x140B20C9,	//0x0d42		VoC_lw16_d(ACC1_HI,0x20c4)(lo)	|	VoC_lw16_d(ACC1_LO,0x20c9)(hi)
0x1FBC20C4,	//0x0d44		VoC_lw16i_set_inc(REG0,0x20c9,0xffffffff)(lo)	|	VoC_lw16_d(ACC1_HI,0x20c4)(hi)
0x1FBD20C9,	//0x0d46		VoC_lw16i_set_inc(REG1,0x20c8,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x20c9,0xffffffff)(hi)
0x60E620C8,	//0x0d48		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x20c8,0xffffffff)(hi)
0x1606F87F,	//0x0d4a		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_shr16_ri(REG7,0xf,IN_PARALLEL)
0x64BE0001,	//0x0d4c		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_and16_ri(REG6,0x1)(hi)
0x6BE3D898,	//0x0d4e		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG1,IN_PARALLEL)
0xD898C3BE,	//0x0d50		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
		//0x0d52		VoC_endloop0
0x5C86DC88,	//0x0d52		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xE580FF28,	//0x0d54		VoC_return	|	VoC_movreg32(REG01,ACC1,IN_PARALLEL)
		//0x0d56		Coolsand_SumInstantPower
0x6826DFE9,	//0x0d56		VoC_loop_i_short(0x1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xD8A0FF45,	//0x0d58		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x2B80D8B1,	//0x0d5a		VoC_jal(Coolsand_InstantPower)(lo)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
0xC9650D61,	//0x0d5c		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_jal(Coolsand_InstantPower)(hi)
		//0x0d5d		VoC_endloop0
0xFFC0DFA9,	//0x0d5e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0d60		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0d61		Coolsand_InstantPower
0xFFC05F41,	//0x0d62		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x0BF42B80,	//0x0d64		VoC_jal(Coolsand_CmplxAppxNorm)
0xFB845FA9,	//0x0d66		VoC_shr32_ri(ACC0,0xfffffff0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xF4396124,	//0x0d68		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xDF014D24,	//0x0d6a		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG4,DEFAULT)
0xFFC06580,	//0x0d6c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0d6e		Coolsand_ControlLogicMergeChnlEnhanced
0xDF445FE9,	//0x0d6e		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0DDA2B80,	//0x0d70		VoC_jal(Coolsand_ControlLogicCalVarSub)
0x1407DF07,	//0x0d72		VoC_lw16_d(REG7,0x4256)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A864256,	//0x0d74		VoC_lw16i(REG6,0x2336)(lo)	|	VoC_lw16_d(REG7,0x4256)(hi)
0xFFC02336,	//0x0d76		VoC_NAD	|	VoC_lw16i(REG6,0x2336)(hi)
0x0E962B80,	//0x0d78		VoC_jal(Coolsand_SmoothPeakPower)
0x0E122B80,	//0x0d7a		VoC_jal(Coolsand_ControlLogicChnlDecisionEnhanced)
0xFFC0DFA9,	//0x0d7c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0d7e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0d80		Coolsand_ControlLogicSingleChnlEnhanced
0xE0205FE9,	//0x0d80		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x225A27BE,	//0x0d82		VoC_lw16d_set_inc(REG2,0x225a,0xffffffff)
0x22584528,	//0x0d84		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L1,REG0,0x2258)
0x232B1404,	//0x0d86		VoC_lw16_d(REG4,0x232b)
0x425E1405,	//0x0d88		VoC_lw16_d(REG5,0x425e)
0x0D92342C,	//0x0d8a		VoC_bgt16_rr(Coolsand_ControlLogicSingleChnl_L0,REG5,REG4)
0xF6A47041,	//0x0d8c		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x425D1402,	//0x0d8e		VoC_lw16_d(REG2,0x425d)
0x0DD22B00,	//0x0d90		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0d92		Coolsand_ControlLogicSingleChnl_L0
0x1401F026,	//0x0d92		VoC_lw16_d(REG1,0x2259)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x70022259,	//0x0d94		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw16_d(REG1,0x2259)(hi)
0x2B00C134,	//0x0d96		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)
0xF0200DD2,	//0x0d98		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)(hi)
		//0x0d99		Coolsand_ControlLogicSingleChnl_L1
0x22584520,	//0x0d9a		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L4,REG0,0x2258)
0x232B1404,	//0x0d9c		VoC_lw16_d(REG4,0x232b)
0x425E1405,	//0x0d9e		VoC_lw16_d(REG5,0x425e)
0x0DA434AC,	//0x0da0		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L2,REG5,REG4)
0xFFC07004,	//0x0da2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0da4		Coolsand_ControlLogicSingleChnl_L2
0x225A6E06,	//0x0da4		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L3,0x225a)
0xE0047021,	//0x0da6		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0DD22B00,	//0x0da8		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0daa		Coolsand_ControlLogicSingleChnl_L3
0xDE107041,	//0x0daa		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0DD22B00,	//0x0dac		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0dae		Coolsand_ControlLogicSingleChnl_L4
0x4518F060,	//0x0dae		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x2258)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0x14042258,	//0x0db0		VoC_lw16_d(REG4,0x232b)(lo)	|	VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x2258)(hi)
0x1405232B,	//0x0db2		VoC_lw16_d(REG5,0x425e)(lo)	|	VoC_lw16_d(REG4,0x232b)(hi)
0x34AC425E,	//0x0db4		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(lo)	|	VoC_lw16_d(REG5,0x425e)(hi)
0xF0040DB8,	//0x0db6		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(hi)
		//0x0db8		Coolsand_ControlLogicSingleChnl_L5
0x225A6E06,	//0x0db8		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L6,0x225a)
0xE0047061,	//0x0dba		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0xFFC065D6,	//0x0dbc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0dbe		Coolsand_ControlLogicSingleChnl_L6
0xDE107041,	//0x0dbe		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC065D2,	//0x0dc0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0dc2		Coolsand_ControlLogicSingleChnl_L7
0x232B1404,	//0x0dc2		VoC_lw16_d(REG4,0x232b)
0x425E1405,	//0x0dc4		VoC_lw16_d(REG5,0x425e)
0x0DCA34AC,	//0x0dc6		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L8,REG5,REG4)
0xFFC07004,	//0x0dc8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0dca		Coolsand_ControlLogicSingleChnl_L8
0x225A6E06,	//0x0dca		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L9,0x225a)
0xE0047001,	//0x0dcc		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC065C4,	//0x0dce		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0dd0		Coolsand_ControlLogicSingleChnl_L9
0xDE107041,	//0x0dd0		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
		//0x0dd2		Coolsand_ControlLogicSingleChnl_End
0x1501DFA9,	//0x0dd2		VoC_sw16_d(REG1,0x2259)(lo)	|	VoC_pop16(RA,DEFAULT)
0x15022259,	//0x0dd4		VoC_sw16_d(REG2,0x225a)(lo)	|	VoC_sw16_d(REG1,0x2259)(hi)
0x1504225A,	//0x0dd6		VoC_sw16_d(REG4,0x232b)(lo)	|	VoC_sw16_d(REG2,0x225a)(hi)
0xE580232B,	//0x0dd8		VoC_return	|	VoC_sw16_d(REG4,0x232b)(hi)
		//0x0dda		Coolsand_ControlLogicCalVarSub
0xDF465FE9,	//0x0dda		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x42561407,	//0x0ddc		VoC_lw16_d(REG7,0x4256)
0x22500A86,	//0x0dde		VoC_lw16i(REG6,0x2250)
0x0E962B80,	//0x0de0		VoC_jal(Coolsand_SmoothPeakPower)
0x22521484,	//0x0de2		VoC_lw32_d(ACC0,0x2252)
0x22501485,	//0x0de4		VoC_lw32_d(ACC1,0x2250)
0x0EAA2B80,	//0x0de6		VoC_jal(Coolsand_InstantSNR)
0x22500A80,	//0x0de8		VoC_lw16i(REG0,0x2250)
0x22520A81,	//0x0dea		VoC_lw16i(REG1,0x2252)
0x42571402,	//0x0dec		VoC_lw16_d(REG2,0x4257)
0x225B1406,	//0x0dee		VoC_lw16_d(REG6,0x225b)
0x22550A87,	//0x0df0		VoC_lw16i(REG7,0x2255)
0x0EBC2B80,	//0x0df2		VoC_jal(Coolsand_OverallNoiseEst)
0x1407DF07,	//0x0df4		VoC_lw16_d(REG7,0x4256)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A864256,	//0x0df6		VoC_lw16i(REG6,0x224c)(lo)	|	VoC_lw16_d(REG7,0x4256)(hi)
0xFFC0224C,	//0x0df8		VoC_NAD	|	VoC_lw16i(REG6,0x224c)(hi)
0x0E962B80,	//0x0dfa		VoC_jal(Coolsand_SmoothPeakPower)
0x224E1484,	//0x0dfc		VoC_lw32_d(ACC0,0x224e)
0x224C1485,	//0x0dfe		VoC_lw32_d(ACC1,0x224c)
0x0EAA2B80,	//0x0e00		VoC_jal(Coolsand_InstantSNR)
0x224C0A80,	//0x0e02		VoC_lw16i(REG0,0x224c)
0x224E0A81,	//0x0e04		VoC_lw16i(REG1,0x224e)
0x42571402,	//0x0e06		VoC_lw16_d(REG2,0x4257)
0x225B1406,	//0x0e08		VoC_lw16_d(REG6,0x225b)
0x22540A87,	//0x0e0a		VoC_lw16i(REG7,0x2254)
0x0EBC2B80,	//0x0e0c		VoC_jal(Coolsand_OverallNoiseEst)
0xFFC0DFA9,	//0x0e0e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0e10		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0e12		Coolsand_ControlLogicChnlDecisionEnhanced
0x224E1483,	//0x0e12		VoC_lw32_d(REG67,0x224e)
0xFBFB5FE9,	//0x0e14		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x42581405,	//0x0e16		VoC_lw16_d(REG5,0x4258)
0xF401790E,	//0x0e18		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF58A4DAC,	//0x0e1a		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x1485CE7D,	//0x0e1c		VoC_lw32_d(ACC1,0x224c)(lo)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x7BE5224C,	//0x0e1e		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(ACC1,0x224c)(hi)
0x36ACE004,	//0x0e20		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xF0240E24,	//0x0e22		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(hi)
		//0x0e24		Coolsand_ControlLogicChnlDecisionEnhanced_L0
0x22521483,	//0x0e24		VoC_lw32_d(REG67,0x2252)
0x22561504,	//0x0e26		VoC_sw16_d(REG4,0x2256)
0x790EFBFB,	//0x0e28		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x4DACF401,	//0x0e2a		VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x4E7DF58A,	//0x0e2c		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)
0x1485EFF0,	//0x0e2e		VoC_lw32_d(ACC1,0x2250)(lo)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
0x14862250,	//0x0e30		VoC_lw32_d(RL6,0x224e)(lo)	|	VoC_lw32_d(ACC1,0x2250)(hi)
0x7BE5224E,	//0x0e32		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(RL6,0x224e)(hi)
0x1483E004,	//0x0e34		VoC_lw32_d(REG67,0x224e)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x36AC224E,	//0x0e36		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(lo)	|	VoC_lw32_d(REG67,0x224e)(hi)
0x642B0E3E,	//0x0e38		VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x2250)(lo)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(hi)
0xF0242250,	//0x0e3a		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x2250)(hi)
0xFFC07FC0,	//0x0e3c		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0e3e		Coolsand_ControlLogicChnlDecisionEnhanced_L1
0x22571504,	//0x0e3e		VoC_sw16_d(REG4,0x2257)
0x22576E16,	//0x0e40		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x2257)
0x22566C14,	//0x0e42		VoC_bez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x2256)
0x23361483,	//0x0e44		VoC_lw32_d(REG67,0x2336)
0x425B1405,	//0x0e46		VoC_lw16_d(REG5,0x425b)
0xF4017BFB,	//0x0e48		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xF58A790E,	//0x0e4a		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCE7DCDAC,	//0x0e4c		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x22501485,	//0x0e4e		VoC_lw32_d(ACC1,0x2250)
0x36A5FBE5,	//0x0e50		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)
0xF0200E56,	//0x0e52		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(hi)
0x0E912B00,	//0x0e54		VoC_jump_lg(Coolsand_ControlLogicChnlDecisionEnhanced_End)
		//0x0e56		Coolsand_ControlLogicChnlDecisionEnhanced_L2
0x22576E0E,	//0x0e56		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x2257)
0x22566E0C,	//0x0e58		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x2256)
0x224C1484,	//0x0e5a		VoC_lw32_d(ACC0,0x224c)
0x22501485,	//0x0e5c		VoC_lw32_d(ACC1,0x2250)
0x0E6436A5,	//0x0e5e		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L3,ACC0,ACC1)
0x2B00F060,	//0x0e60		VoC_jump_lg(Coolsand_ControlLogicChnlDecisionEnhanced_End)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0xFFC00E91,	//0x0e62		VoC_NAD	|	VoC_jump_lg(Coolsand_ControlLogicChnlDecisionEnhanced_End)(hi)
		//0x0e64		Coolsand_ControlLogicChnlDecisionEnhanced_L3
0x22501483,	//0x0e64		VoC_lw32_d(REG67,0x2250)
0x1405FBFB,	//0x0e66		VoC_lw16_d(REG5,0x4259)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x790E4259,	//0x0e68		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16_d(REG5,0x4259)(hi)
0x4DACF401,	//0x0e6a		VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xCE7DF58A,	//0x0e6c		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)
0x224C1485,	//0x0e6e		VoC_lw32_d(ACC1,0x224c)
0xE0007BE5,	//0x0e70		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)
0x0E90362C,	//0x0e72		VoC_bgt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L4,ACC1,ACC0)
0x23361483,	//0x0e74		VoC_lw32_d(REG67,0x2336)
0x425C1405,	//0x0e76		VoC_lw16_d(REG5,0x425c)
0x790EFBFB,	//0x0e78		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x4DACF401,	//0x0e7a		VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xCE7DF58A,	//0x0e7c		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)
0x224C1485,	//0x0e7e		VoC_lw32_d(ACC1,0x224c)
0x23361483,	//0x0e80		VoC_lw32_d(REG67,0x2336)
0xFBE37BE5,	//0x0e82		VoC_shr32_ri(REG67,0xfffffffc,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)
0xCAE748E6,	//0x0e84		VoC_sub32_rr(RL7,REG67,ACC0,IN_PARALLEL)	|	VoC_add32_rr(RL6,REG67,ACC0,DEFAULT)
0x0E9136B5,	//0x0e86		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_End,RL6,ACC1)
0x0E9136AF,	//0x0e88		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_End,ACC1,RL7)
0x22501484,	//0x0e8a		VoC_lw32_d(ACC0,0x2250)
0x224C1485,	//0x0e8c		VoC_lw32_d(ACC1,0x224c)
0x0E9136AC,	//0x0e8e		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_End,ACC1,ACC0)
		//0x0e90		Coolsand_ControlLogicChnlDecisionEnhanced_L4
0xDFA9F040,	//0x0e90		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
		//0x0e91		Coolsand_ControlLogicChnlDecisionEnhanced_End
0x22581500,	//0x0e92		VoC_sw16_d(REG0,0x2258)
0xFFC06580,	//0x0e94		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0e96		Coolsand_SmoothPeakPower
0xE0085FE9,	//0x0e96		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE40959B5,	//0x0e98		VoC_lw16i_short(ACC0_HI,0x40,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG6,DEFAULT)
0x0EA036BD,	//0x0e9a		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,RL7,ACC1)
0x0EA036A7,	//0x0e9c		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,ACC0,RL7)
0xE5C5FF3C,	//0x0e9e		VoC_jump(Coolsand_SmoothPeakPower_L1)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x0ea0		Coolsand_SmoothPeakPower_L0
0xFFC060E1,	//0x0ea0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0x0C062B80,	//0x0ea2		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
		//0x0ea4		Coolsand_SmoothPeakPower_L1
0x0EA733C4,	//0x0ea4		VoC_bnltz32_r(Coolsand_SmoothPeakPower_L2,ACC0)
0xDFA9FF44,	//0x0ea6		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0ea7		Coolsand_SmoothPeakPower_L2
0xE580DDB4,	//0x0ea8		VoC_return	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x0eaa		Coolsand_InstantSNR
0xFA245FE9,	//0x0eaa		VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0EB03344,	//0x0eac		VoC_bnez32_r(Coolsand_InstantSNR_L0,ACC0)
0xE0097028,	//0x0eae		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0eb0		Coolsand_InstantSNR_L0
0xE1427F26,	//0x0eb0		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0B3E2B80,	//0x0eb2		VoC_jal(Coolsand_MSBPos)
0xC2FBF7E7,	//0x0eb4		VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0xFB45FE9D,	//0x0eb6		VoC_shr32_ri(ACC1,0xffffffe8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xDFA97AC5,	//0x0eb8		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x18,DEFAULT)
0xE580E143,	//0x0eba		VoC_return	|	VoC_movreg16(REG3,ACC1_LO,DEFAULT)
		//0x0ebc		Coolsand_OverallNoiseEst
0xE105598C,	//0x0ebc		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xE1045FE9,	//0x0ebe		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xDF445FC3,	//0x0ec0		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xDF405FC7,	//0x0ec2		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x0C102B80,	//0x0ec4		VoC_jal(Coolsand_NoisePSDEst)
0xDF005F87,	//0x0ec6		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF045F83,	//0x0ec8		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x3305D985,	//0x0eca		VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(lo)	|	VoC_lw32_p(ACC1,REG0,DEFAULT)
0x70250EDF,	//0x0ecc		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(hi)
0x7006D98D,	//0x0ece		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,IN_PARALLEL)
0x37ACE204,	//0x0ed0		VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x20,IN_PARALLEL)
0x349C0ED6,	//0x0ed2		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(lo)	|	VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(hi)
0x817E0ED6,	//0x0ed4		VoC_add16_rp(REG6,REG5,REG7,DEFAULT)	|	VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(hi)
		//0x0ed6		Coolsand_OverallNoiseEst_L0
0x01F40A84,	//0x0ed6		VoC_lw16i(REG4,0x1f4)
0xFBFDD98D,	//0x0ed8		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0EDE34B4,	//0x0eda		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L1,REG6,REG4)
0xDD8DF006,	//0x0edc		VoC_sw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0ede		Coolsand_OverallNoiseEst_L1
0xDFA9DC76,	//0x0ede		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(REG6,REG7,DEFAULT)
		//0x0edf		Coolsand_OverallNoiseEst_L2
0xE580FFC0,	//0x0ee0		VoC_return	|	VoC_NOP
		//0x0ee2		Coolsand_OverallNoiseEstwState
0x20DB1407,	//0x0ee2		VoC_lw16_d(REG7,0x20db)
0xDFE978FF,	//0x0ee4		VoC_push16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x20360A80,	//0x0ee6		VoC_lw16i(REG0,0x2036)
0x20480A81,	//0x0ee8		VoC_lw16i(REG1,0x2048)
0xC0794038,	//0x0eea		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDFC77064,	//0x0eec		VoC_push16(REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x5F40D98C,	//0x0eee		VoC_push32(REG01,DEFAULT)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDF44DFC3,	//0x0ef0		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0x22594494,	//0x0ef2		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_L0,REG4,0x2259)
0x42461402,	//0x0ef4		VoC_lw16_d(REG2,0x4246)
0xE1057024,	//0x0ef6		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x225B1406,	//0x0ef8		VoC_lw16_d(REG6,0x225b)
0x0C102B80,	//0x0efa		VoC_jal(Coolsand_NoisePSDEst)
		//0x0efc		Coolsand_OverallNoiseEstwState_L0
0xDF045F83,	//0x0efc		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xDF84DF00,	//0x0efe		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x225C0A80,	//0x0f00		VoC_lw16i(REG0,0x225c)
0xD9854020,	//0x0f02		VoC_lw32_p(ACC1,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x0A87F80C,	//0x0f04		VoC_lw16i(REG7,0x205a)(lo)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1E7205A,	//0x0f06		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG7,0x205a)(hi)
0x0F1E3305,	//0x0f08		VoC_bez32_r(Coolsand_OverallNoiseEstwState_L3,ACC1)
0xD98D7025,	//0x0f0a		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xE1047006,	//0x0f0c		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0F1437AC,	//0x0f0e		VoC_bne32_rr(Coolsand_OverallNoiseEstwState_L1,ACC1,ACC0)
0x0F14349C,	//0x0f10		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L1,REG3,REG4)
0xFFC0017E,	//0x0f12		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rp(REG6,REG5,REG7,DEFAULT)
		//0x0f14		Coolsand_OverallNoiseEstwState_L1
0x01F40A84,	//0x0f14		VoC_lw16i(REG4,0x1f4)
0xFBFDD98D,	//0x0f16		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0F1D34B4,	//0x0f18		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L2,REG6,REG4)
0xDD8D7006,	//0x0f1a		VoC_sw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xDC76DD85,	//0x0f1c		VoC_sw16_p(REG6,REG7,DEFAULT)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
		//0x0f1d		Coolsand_OverallNoiseEstwState_L2
		//0x0f1e		Coolsand_OverallNoiseEstwState_L3
0x00320A84,	//0x0f1e		VoC_lw16i(REG4,0x32)
0x3C1CD98C,	//0x0f20		VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x225b)(lo)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDD84225B,	//0x0f22		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x225b)(hi)
		//0x0f24		Coolsand_OverallNoiseEstwState_L4
0xE0365984,	//0x0f24		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xE0057044,	//0x0f26		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x0F2C3344,	//0x0f28		VoC_bnez32_r(Coolsand_OverallNoiseEstwState_L5,ACC0)
0xFFC05D82,	//0x0f2a		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(REG45,REG0,DEFAULT)
		//0x0f2c		Coolsand_OverallNoiseEstwState_L5
0xE0345987,	//0x0f2c		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG0,DEFAULT)
0xFF3B598D,	//0x0f2e		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x22594514,	//0x0f30		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_End,REG4,0x2259)
0x362BFBFB,	//0x0f32		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xFF2F0F38,	//0x0f34		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(hi)
0xFFC065CC,	//0x0f36		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_OverallNoiseEstwState_End)
		//0x0f38		Coolsand_OverallNoiseEstwState_L6
0xE325790E,	//0x0f38		VoC_lw16i_short(REG5,0x32,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF4014DAC,	//0x0f3a		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0xF58A4E7D,	//0x0f3c		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x3625FFC0,	//0x0f3e		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(lo)	|	VoC_NOP
0xFF2F0F42,	//0x0f40		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(hi)
		//0x0f42		Coolsand_OverallNoiseEstwState_End
0xDD87DFA9,	//0x0f42		VoC_sw32_p(RL7,REG0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0f44		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f45		Cooland_InstantPower
0x0BF42B80,	//0x0f46		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4397B84,	//0x0f48		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0xDFA96120,	//0x0f4a		VoC_pop16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xE580CC04,	//0x0f4c		VoC_return	|	VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)
		//0x0f4e		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL
0x1407DFE9,	//0x0f4e		VoC_lw16_d(REG7,0x20db)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A8220DB,	//0x0f50		VoC_lw16i(REG2,0x1fa0)(lo)	|	VoC_lw16_d(REG7,0x20db)(hi)
0x0A831FA0,	//0x0f52		VoC_lw16i(REG3,0x1faa)(lo)	|	VoC_lw16i(REG2,0x1fa0)(hi)
0xC0BA1FAA,	//0x0f54		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG3,0x1faa)(hi)
0x5820C0FB,	//0x0f56		VoC_lw16_p(REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x5831D824,	//0x0f58		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_lw16_p(REG4,REG2,IN_PARALLEL)
0x2B80D835,	//0x0f5a		VoC_jal(Coolsand_CmplxAppxNorm)(lo)	|	VoC_lw16_p(REG5,REG3,IN_PARALLEL)
0xFB840BF4,	//0x0f5c		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm)(hi)
0xF4396126,	//0x0f5e		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0CDB4,	//0x0f60		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)
0xFA44FBC4,	//0x0f62		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xDF44FFC0,	//0x0f64		VoC_push32(ACC0,DEFAULT)	|	VoC_NOP
0x0FCE2B80,	//0x0f66		VoC_jal(Coolsand_EchoPSDEst_MFCOHFFix)
0x23100A80,	//0x0f68		VoC_lw16i(REG0,0x2310)
0x20DB1407,	//0x0f6a		VoC_lw16_d(REG7,0x20db)
0x23220A81,	//0x0f6c		VoC_lw16i(REG1,0x2322)
0xC07978FF,	//0x0f6e		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xDF07C038,	//0x0f70		VoC_pop32(RL7,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xE7F45981,	//0x0f72		VoC_lw16i_short(REG4,0x7f,IN_PARALLEL)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0x3301FA11,	//0x0f74		VoC_bez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,REG23)(lo)	|	VoC_shr32_ri(REG23,0x2,DEFAULT)
0x72040FCA,	//0x0f76		VoC_lw16i_short(REG4,0x10,DEFAULT)	|	VoC_bez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,REG23)(hi)
0x2B80DF47,	//0x0f78		VoC_jal(Coolsand_ShrinkBit)(lo)	|	VoC_push32(RL7,IN_PARALLEL)
0xF3440C58,	//0x0f7a		VoC_lw16i_short(REG4,0x1a,DEFAULT)	|	VoC_jal(Coolsand_ShrinkBit)(hi)
0xDF0342E4,	//0x0f7c		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0xFF1E7EA3,	//0x0f7e		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0xDFC47A83,	//0x0f80		VoC_push16(REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFBF37BF4,	//0x0f82		VoC_shr32_ri(REG67,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x33C7CBA7,	//0x0f84		VoC_bnltz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(lo)	|	VoC_sub32_rr(RL7,RL6,ACC0,DEFAULT)
0x702E0F8A,	//0x0f86		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_bnltz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(hi)
0xFFC0E00F,	//0x0f88		VoC_NAD	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
		//0x0f8a		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1
0x20DB1402,	//0x0f8a		VoC_lw16_d(REG2,0x20db)
0x0A83F8FA,	//0x0f8c		VoC_lw16i(REG3,0x2080)(lo)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x40D32080,	//0x0f8e		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i(REG3,0x2080)(hi)
0x1401FA27,	//0x0f90		VoC_lw16_d(REG1,0x424c)(lo)	|	VoC_shr32_ri(RL7,0x4,IN_PARALLEL)
0xD99D424C,	//0x0f92		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x424c)(hi)
0x7BC2CBEA,	//0x0f94		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0x7A3AFF2C,	//0x0f96		VoC_shr32_ri(REG45,0x7,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x790CF439,	//0x0f98		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)
0xCE21F5C2,	//0x0f9a		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0xDF84CE69,	//0x0f9c		VoC_pop16(REG4,DEFAULT)	|	VoC_macX_rr(REG5,REG1,DEFAULT)
0x232C0A80,	//0x0f9e		VoC_lw16i(REG0,0x232c)
0x20DB0700,	//0x0fa0		VoC_add16_rd(REG0,REG0,0x20db)
0x0ACEFEA4,	//0x0fa2		VoC_lw16i(RL7_LO,0x8000)(lo)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0x7F260000,	//0x0fa4		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i(RL7_LO,0x8000)(hi)
0xE4FEE00F,	//0x0fa6		VoC_and32_rr(RL6,RL7,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x0FAC3306,	//0x0fa8		VoC_bez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_LX,RL6)
0xFFC0493C,	//0x0faa		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
		//0x0fac		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_LX
0xE1027A84,	//0x0fac		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0xFF265C09,	//0x0fae		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG0,DEFAULT)
0x0B3E2B80,	//0x0fb0		VoC_jal(Coolsand_MSBPos)
0xC2C3F1C0,	//0x0fb2		VoC_sub16_rr(REG3,REG3,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0xe,DEFAULT)
0x424E1401,	//0x0fb4		VoC_lw16_d(REG1,0x424e)
0xF8C1FE19,	//0x0fb6		VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x0A82F841,	//0x0fb8		VoC_lw16i(REG2,0x80)(lo)	|	VoC_shr16_ri(REG1,0x8,DEFAULT)
0xC28C0080,	//0x0fba		VoC_sub16_rr(REG4,REG2,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x80)(hi)
0x23220A81,	//0x0fbc		VoC_lw16i(REG1,0x2322)
0x20DB0709,	//0x0fbe		VoC_add16_rd(REG1,REG1,0x20db)
0x3824F8F4,	//0x0fc0		VoC_bgt16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2,REG4,0x424f)(lo)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x1404424F,	//0x0fc2		VoC_lw16_d(REG4,0x424f)(lo)	|	VoC_bgt16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2,REG4,0x424f)(hi)
0xF814424F,	//0x0fc4		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16_d(REG4,0x424f)(hi)
		//0x0fc5		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2
0x22596C04,	//0x0fc6		VoC_bez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,0x2259)
0x007F0A84,	//0x0fc8		VoC_lw16i(REG4,0x7f)
		//0x0fca		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End
0xDC14DFA9,	//0x0fca		VoC_sw16_p(REG4,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0fcc		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0fce		Coolsand_EchoPSDEst_MFCOHFFix
0xDF445FE9,	//0x0fce		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x20DB1402,	//0x0fd0		VoC_lw16_d(REG2,0x20db)
0xF8EA5F42,	//0x0fd2		VoC_shr16_ri(REG2,0xfffffffd,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x1DC80A86,	//0x0fd4		VoC_lw16i(REG6,0x1dc8)
0x1E100A87,	//0x0fd6		VoC_lw16i(REG7,0x1e10)
0xC1D7C196,	//0x0fd8		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xF0065860,	//0x0fda		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG6,DEFAULT)
0xF0075871,	//0x0fdc		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG7,DEFAULT)
0xF8297828,	//0x0fde		VoC_shr16_ri(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x5,DEFAULT)
0x0BF42B80,	//0x0fe0		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4096101,	//0x0fe2		VoC_lw16i_short(FORMAT32,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x0A80CC4C,	//0x0fe4		VoC_lw16i(REG0,0x2277)(lo)	|	VoC_multf32_rr(ACC0,REG1,REG1,DEFAULT)
0x07002277,	//0x0fe6		VoC_add16_rd(REG0,REG0,0x20db)(lo)	|	VoC_lw16i(REG0,0x2277)(hi)
0x140120DB,	//0x0fe8		VoC_lw16_d(REG1,0x424b)(lo)	|	VoC_add16_rd(REG0,REG0,0x20db)(hi)
0x7B74424B,	//0x0fea		VoC_shr32_ri(ACC0,0xffffffee,DEFAULT)	|	VoC_lw16_d(REG1,0x424b)(hi)
0x7A94D80B,	//0x0fec		VoC_shr32_ri(ACC0,0x12,DEFAULT)	|	VoC_lw16_p(ACC1_HI,REG0,IN_PARALLEL)
0x7F27FA85,	//0x0fee		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)
0xCBEAFF19,	//0x0ff0		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_movreg32(REG23,REG67,IN_PARALLEL)
0xFF2C7BC2,	//0x0ff2		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xF4397A3A,	//0x0ff4		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xF5C2790C,	//0x0ff6		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE69CE21,	//0x0ff8		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0x7B74FFC0,	//0x0ffa		VoC_shr32_ri(ACC0,0xffffffee,DEFAULT)	|	VoC_NOP
0x7F47F459,	//0x0ffc		VoC_lw32z(RL7,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0x5F02FA94,	//0x0ffe		VoC_pop32(REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0x12,IN_PARALLEL)
0xDC08FF26,	//0x1000		VoC_sw16_p(ACC0_LO,REG0,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x20DB1407,	//0x1002		VoC_lw16_d(REG7,0x20db)
0xDF467000,	//0x1004		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x78EFC22D,	//0x1006		VoC_shr16_ri(REG7,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0x1804F5B8,	//0x1008		VoC_lw16i_set_inc(REG0,0x2280,0x1)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)
0x18052280,	//0x100a		VoC_lw16i_set_inc(REG1,0x22c8,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2280,0x1)(hi)
0x403822C8,	//0x100c		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x22c8,0x1)(hi)
0x1407C079,	//0x100e		VoC_lw16_d(REG7,0x424b)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x2C10424B,	//0x1010		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw16_d(REG7,0x424b)(hi)
0x99141046,	//0x1012		VoC_multf32_rp(ACC0,REG4,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0xFB74995D,	//0x1014		VoC_shr32_ri(ACC0,0xffffffee,DEFAULT)	|	VoC_multf32_rp(ACC1,REG5,REG3,DEFAULT)
0x7A94FB75,	//0x1016		VoC_shr32_ri(ACC0,0x12,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffee,DEFAULT)
0xCB2EFA95,	//0x1018		VoC_sub32_rr(RL6,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x12,IN_PARALLEL)
0x9B559B1C,	//0x101a		VoC_multf32inc_rp(ACC1,REG5,REG2,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)
0xFB75FB74,	//0x101c		VoC_shr32_ri(ACC1,0xffffffee,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffee,DEFAULT)
0xFA957A94,	//0x101e		VoC_shr32_ri(ACC1,0x12,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x12,DEFAULT)
0xDF41492D,	//0x1020		VoC_push32(REG23,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xFB757B76,	//0x1022		VoC_shr32_ri(ACC1,0xffffffee,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xffffffee,DEFAULT)
0xFA957A96,	//0x1024		VoC_shr32_ri(ACC1,0x12,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x12,DEFAULT)
0xF7436182,	//0x1026		VoC_movreg16(REG3,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG2,RL6_LO,DEFAULT)
0x84CB8482,	//0x1028		VoC_sub16_rp(REG3,REG3,REG1,DEFAULT)	|	VoC_sub16_rp(REG2,REG2,REG0,DEFAULT)
0xF8F378F2,	//0x102a		VoC_shr16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)
0xF8137812,	//0x102c		VoC_shr16_ri(REG3,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x2,DEFAULT)
0xC6FBC6BA,	//0x102e		VoC_multf16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_multf16_rr(REG2,REG2,REG7,DEFAULT)
0x80CB8082,	//0x1030		VoC_add16_rp(REG3,REG3,REG1,DEFAULT)	|	VoC_add16_rp(REG2,REG2,REG0,DEFAULT)
0xF8F378F2,	//0x1032		VoC_shr16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)
0xF813F812,	//0x1034		VoC_shr16_ri(REG3,0x2,DEFAULT)	|	VoC_shr16_ri(REG2,0x2,DEFAULT)
0xDC93DC82,	//0x1036		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xFF085F40,	//0x1038		VoC_movreg32(REG01,REG23,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0BF42B80,	//0x103a		VoC_jal(Coolsand_CmplxAppxNorm)
0x7A94FB74,	//0x103c		VoC_shr32_ri(ACC0,0x12,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffee,DEFAULT)
0x6106F401,	//0x103e		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x4E36FF3C,	//0x1040		VoC_mac32_rr(REG6,REG6,DEFAULT)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xDF01DF00,	//0x1042		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0xFA1CFBEC,	//0x1044		VoC_shr32_ri(ACC0,0x3,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)
		//0x1046		VoC_endloop0
0xF4597F27,	//0x1046		VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x71C2DF06,	//0x1048		VoC_lw16i_short(REG2,0xe,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xFFC0FF35,	//0x104a		VoC_NAD	|	VoC_movreg32(ACC1,RL6,IN_PARALLEL)
0x0B3E2B80,	//0x104c		VoC_jal(Coolsand_MSBPos)
0xDF0470A4,	//0x104e		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x5,DEFAULT)
0x23100A80,	//0x1050		VoC_lw16i(REG0,0x2310)
0x20DB1407,	//0x1052		VoC_lw16_d(REG7,0x20db)
0xF8FF42E3,	//0x1054		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0xC0387E9F,	//0x1056		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG3,DEFAULT)
0xFB947B97,	//0x1058		VoC_shr32_ri(ACC0,0xfffffff2,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0xfffffff2,DEFAULT)
0xFA747A77,	//0x105a		VoC_shr32_ri(ACC0,0xe,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0xe,DEFAULT)
0x10613307,	//0x105c		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L0,RL7)
0x10613305,	//0x105e		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L0,ACC1)
0xDFA9FF3C,	//0x1060		VoC_pop16(RA,DEFAULT)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x1061		Coolsand_EchoPSDEst_MFCOHFFix_L0
0xE580DD84,	//0x1062		VoC_return	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
