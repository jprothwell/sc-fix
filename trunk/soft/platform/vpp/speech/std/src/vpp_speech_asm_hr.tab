		//0x05d0		VoC_code_section_1
		//0x05d0		CII_HR_Encode
0x3182DFE9,	//0x05d0		VoC_bez16_r(Encoder_101,REG2)(lo)	|	VoC_push16(RA,DEFAULT)
0x2B8005D5,	//0x05d2		VoC_jal(CII_resetHREnc)(lo)	|	VoC_bez16_r(Encoder_101,REG2)(hi)
0xF70616C8,	//0x05d4		VoC_lw16i_short(REG6,0xfff8,DEFAULT)	|	VoC_jal(CII_resetHREnc)(hi)
		//0x05d5		Encoder_101
0x1D921809,	//0x05d6		VoC_lw16i_set_inc(REG1,0x1d92,0x2)
0x2008E0C7,	//0x05d8		VoC_lw16d_set_inc(REG0,0x4304,0x2)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x2CA04304,	//0x05da		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16d_set_inc(REG0,0x4304,0x2)(hi)
0xD9C605E0,	//0x05dc		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0xFFC0E4DE,	//0x05de		VoC_NOP	|	VoC_and32_rr(RL6,REG67,DEFAULT)
		//0x05e0		VoC_endloop0
0x1808DDCE,	//0x05e0		VoC_lw16i_set_inc(REG0,0x1d92,0x2)(lo)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0x2B801D92,	//0x05e2		VoC_jal(CII_encoder_homing_frame_test)(lo)	|	VoC_lw16i_set_inc(REG0,0x1d92,0x2)(hi)
0xDFC402FC,	//0x05e4		VoC_push16(REG4,DEFAULT)	|	VoC_jal(CII_encoder_homing_frame_test)(hi)
0x066F2B80,	//0x05e6		VoC_jal(CII_speechEncoder)
0x3180DF80,	//0x05e8		VoC_bez16_r(Encoder_homing,REG0)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xFFC005EE,	//0x05ea		VoC_NAD	|	VoC_bez16_r(Encoder_homing,REG0)(hi)
0x16C82B80,	//0x05ec		VoC_jal(CII_resetHREnc)
		//0x05ee		Encoder_homing
0x05281804,	//0x05ee		VoC_lw16i_set_inc(REG0,0x528,0x1)
0x1D836C04,	//0x05f0		VoC_bez16_d(Prm2bits_MODE0,0x1d83)
0x0D441804,	//0x05f2		VoC_lw16i_set_inc(REG0,0xd44,0x1)
		//0x05f4		Prm2bits_MODE0
0x24AA1805,	//0x05f4		VoC_lw16i_set_inc(REG1,0x24aa,0x1)
0x1D7E1806,	//0x05f6		VoC_lw16i_set_inc(REG2,0x1d7e,0x1)
0x06012C25,	//0x05f8		VoC_loop_i(0x1,0x12)
0xD8A7D886,	//0x05fa		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF025E784,	//0x05fc		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xF80FE43D,	//0x05fe		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
		//0x0600		VoC_endloop0
0x1FBFDC95,	//0x0600		VoC_lw16i_set_inc(REG3,0x24b9,0xffffffff)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x0601		VoC_endloop1
0x180524B9,	//0x0602		VoC_lw16i_set_inc(REG1,0x1a,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x24b9,0xffffffff)(hi)
0x0709001A,	//0x0604		VoC_add16_rd(REG1,REG1,0x51e)(lo)	|	VoC_lw16i_set_inc(REG1,0x1a,0x1)(hi)
0x5FA9051E,	//0x0606		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x51e)(hi)
0x2C0FE200,	//0x0608		VoC_loop_i(0x1,0x7)(lo)	|	VoC_lw16i_short(REG0,0x20,IN_PARALLEL)
0xFF420611,	//0x060a		VoC_lw32z(REG45,DEFAULT)	|	VoC_loop_i(0x1,0x7)(hi)
0xFBFAEA03,	//0x060c		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_loop_i_short(0x10,DEFAULT)
0xE474D8B6,	//0x060e		VoC_or16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x060f		VoC_endloop0
0xDC94C0C3,	//0x0610		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
		//0x0611		VoC_endloop1
0xF02AE580,	//0x0612		VoC_lw16i_short(ACC1_LO,0x1,DEFAULT)	|	VoC_return
		//0x0613		CII_avgGsHistQntz_gsQuant_opt
0xFF445FE9,	//0x0614		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE00B6B88,	//0x0616		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x1c,DEFAULT)
0xD9C75986,	//0x0618		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0xFA2F7A26,	//0x061a		VoC_shr32_ri(RL7,0x5,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
0xC93C64EE,	//0x061c		VoC_add32_rr(ACC0,ACC0,RL7,IN_PARALLEL)	|	VoC_and32_rr(RL6,ACC1,DEFAULT)
		//0x061e		VoC_endloop0
0xFF25C934,	//0x061e		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0x12490A84,	//0x0620		VoC_lw16i(REG4,0x1249)
0x0E6F2B80,	//0x0622		VoC_jal(CII_L_mpy_ls_opt)
0x03DC1808,	//0x0624		VoC_lw16i_set_inc(REG0,0x3dc,0x2)
0x1485C964,	//0x0626		VoC_lw32_d(ACC1,0x374)(lo)	|	VoC_add32_rr(ACC0,ACC1,ACC0,DEFAULT)
0x18050374,	//0x0628		VoC_lw16i_set_inc(REG1,0x0,0x1)(lo)	|	VoC_lw32_d(ACC1,0x374)(hi)
0xDFA90000,	//0x062a		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x0,0x1)(hi)
0x9706EC0A,	//0x062c		VoC_sub32inc_rp(RL6,ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0x063233C6,	//0x062e		VoC_bnltz32_r(CII_gsQuant_opt_abs_pos,RL6)
0x05180BB6,	//0x0630		VoC_sub32_dr(RL6,0x518,RL6)
		//0x0632		CII_gsQuant_opt_abs_pos
0x063636AE,	//0x0632		VoC_bngt32_rr(CII_gsQuant_opt_no_new_min,ACC1,RL6)
0xFF356022,	//0x0634		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x0636		CII_gsQuant_opt_no_new_min
		//0x0636		VoC_endloop0
0xE580DE08,	//0x0636		VoC_return	|	VoC_inc_p(REG1,DEFAULT)
		//0x0638		CII_getPnBits_opt
0xE00268F7,	//0x0638		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0xFA0C7F26,	//0x063a		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0D402986,	//0x063c		VoC_and32_rd(RL6,0xd40)
0xFF377A0E,	//0x063e		VoC_movreg32(RL7,RL6,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
		//0x0640		GTPNB_opt_while_begin
0x06453306,	//0x0640		VoC_bez32_r(GTPNB_opt_while_end,RL6)
0xFA0E6577,	//0x0642		VoC_shr32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_xor32_rr(RL7,RL6,DEFAULT)
0xF8FAE5FC,	//0x0644		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_jump(GTPNB_opt_while_begin)
		//0x0645		GTPNB_opt_while_end
0x03702987,	//0x0646		VoC_and32_rd(RL7,0x370)
0x064C3307,	//0x0648		VoC_bez32_r(GTPNB_opt_FeedBack,RL7)
0x03722A04,	//0x064a		VoC_or32_rd(ACC0,0x372)
		//0x064c		GTPNB_opt_FeedBack
0x2804E104,	//0x064c		VoC_and16_rd(REG4,0x370)(lo)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xE4620370,	//0x064e		VoC_or16_rr(REG2,REG4,DEFAULT)	|	VoC_and16_rd(REG4,0x370)(hi)
		//0x064f		VoC_endloop0
0xD884E580,	//0x0650		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_return
		//0x0651		CII_lpcZsFir_opt
0xFF467027,	//0x0652		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xDCA4423E,	//0x0654		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG0,REG7,DEFAULT)
0x0A8CC3BE,	//0x0656		VoC_lw16i(RL6_LO,0x800)(lo)	|	VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)
0xFFC00800,	//0x0658		VoC_NAD	|	VoC_lw16i(RL6_LO,0x800)(hi)
0x066D2C4F,	//0x065a		VoC_loop_i(0x1,0x27)
0xFF347144,	//0x065c		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x0524381F,	//0x065e		VoC_bgt16_rd(CII_lpcZsFir_100,REG7,0x524)
0xC1F3E0E4,	//0x0660		VoC_add16_rr(REG3,REG7,REG6,DEFAULT)	|	VoC_movreg16(REG4,REG7,DEFAULT)
		//0x0661		CII_lpcZsFir_100
0xD895E702,	//0x0662		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x0664		VoC_endloop0
0x0AC5D12B,	//0x0664		VoC_lw16i(REG5,0x8000)(lo)	|	VoC_mac32inc_rp(REG5,REG3,DEFAULT)
0x1B470000,	//0x0666		VoC_multf32inc_rp(RL7,REG5,REG0,DEFAULT)	|	VoC_lw16i(REG5,0x8000)(hi)
0xFBE4C261,	//0x0668		VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x073FCB3C,	//0x066a		VoC_add16_rd(REG7,REG7,0x370)(lo)	|	VoC_sub32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDCA90370,	//0x066c		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x370)(hi)
		//0x066d		VoC_endloop1
0xDFE9E580,	//0x066e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x066f		CII_speechEncoder
0x0BB81804,	//0x0670		VoC_lw16i_set_inc(REG0,0xbb8,0x1)
0x1D921805,	//0x0672		VoC_lw16i_set_inc(REG1,0x1d92,0x1)
0x2064180A,	//0x0674		VoC_lw16i_set_inc(REG2,0x2064,0x2)
0x20681807,	//0x0676		VoC_lw16i_set_inc(REG3,0x2068,0x1)
0x7024DFC1,	//0x0678		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x2B80E005,	//0x067a		VoC_jal(CII_iir_d_opt)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xD6111627,	//0x067c		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_jal(CII_iir_d_opt)(hi)
0x0BBD1804,	//0x067e		VoC_lw16i_set_inc(REG0,0xbbd,0x1)
0xEFF57004,	//0x0680		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x16272B80,	//0x0682		VoC_jal(CII_iir_d_opt)
0x1804DF81,	//0x0684		VoC_lw16i_set_inc(REG0,0x21e3,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xD89221E3,	//0x0686		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x21e3,0x1)(hi)
0x068B2D40,	//0x0688		VoC_loop_i(0x0,0xa0)
0xDC82D892,	//0x068a		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
		//0x068b		VoC_endloop0
0x253A1805,	//0x068c		VoC_lw16i_set_inc(REG1,0x253a,0x1)
0x21D91804,	//0x068e		VoC_lw16i_set_inc(REG0,0x21d9,0x1)
0x08632B80,	//0x0690		VoC_jal(CII_aflat_opt)
0x24AD1401,	//0x0692		VoC_lw16_d(REG1,0x24ad)
0x0B780A80,	//0x0694		VoC_lw16i(REG0,0xb78)
0xC040C049,	//0x0696		VoC_add16_rr(REG0,REG1,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG1,DEFAULT)
0x63781FB9,	//0x0698		VoC_lw16i_set_inc(REG1,0x6378,0xfffffffe)
0x1804D800,	//0x069a		VoC_lw16i_set_inc(REG0,0x24b0,0x1)(lo)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x150024B0,	//0x069c		VoC_sw16_d(REG0,0x24ac)(lo)	|	VoC_lw16i_set_inc(REG0,0x24b0,0x1)(hi)
0x2B8024AC,	//0x069e		VoC_jal(CII_rcToADp_opt_new)(lo)	|	VoC_sw16_d(REG0,0x24ac)(hi)
0xF00419B5,	//0x06a0		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jal(CII_rcToADp_opt_new)(hi)
0x06BA3187,	//0x06a2		VoC_bez16_r(EN_CODE_100,REG7)
0x20841804,	//0x06a4		VoC_lw16i_set_inc(REG0,0x2084,0x1)
0x24EA1805,	//0x06a6		VoC_lw16i_set_inc(REG1,0x24ea,0x1)
0xD884E944,	//0x06a8		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x207A1806,	//0x06aa		VoC_lw16i_set_inc(REG2,0x207a,0x1)
		//0x06ac		VoC_endloop0
0x1804DC94,	//0x06ac		VoC_lw16i_set_inc(REG0,0x2070,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x18052070,	//0x06ae		VoC_lw16i_set_inc(REG1,0x24b0,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2070,0x1)(hi)
0x180724B0,	//0x06b0		VoC_lw16i_set_inc(REG3,0x6378,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x24b0,0x1)(hi)
0xE9446378,	//0x06b2		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x6378,0x1)(hi)
0xD8A5D884,	//0x06b4		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDCB5DC94,	//0x06b6		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x06b7		VoC_endloop0
0x07182B00,	//0x06b8		VoC_jump_lg(EN_CODE_100_end)
		//0x06ba		EN_CODE_100
0x1804F032,	//0x06ba		VoC_lw16i_set_inc(REG0,0x6378,0x1)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x18056378,	//0x06bc		VoC_lw16i_set_inc(REG1,0xbc2,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x6378,0x1)(hi)
0x14860BC2,	//0x06be		VoC_lw32_d(RL6,0x382)(lo)	|	VoC_lw16i_set_inc(REG1,0xbc2,0x1)(hi)
0x18070382,	//0x06c0		VoC_lw16i_set_inc(REG3,0x2528,0x1)(lo)	|	VoC_lw32_d(RL6,0x382)(hi)
0x0A852528,	//0x06c2		VoC_lw16i(REG5,0x400)(lo)	|	VoC_lw16i_set_inc(REG3,0x2528,0x1)(hi)
0xDFC30400,	//0x06c4		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i(REG5,0x400)(hi)
0x06D42C05,	//0x06c6		VoC_loop_i(0x1,0x2)
0x9E0BE949,	//0x06c8		VoC_multf32inc_pp(REG67,REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x06CE3525,	//0x06ca		VoC_be16_rr(getNWCoefs_LABEL1,REG4,REG5)
0xE5C4C8F3,	//0x06cc		VoC_jump(getNWCoefs_LABEL2)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
		//0x06ce		getNWCoefs_LABEL1
0x1806CB9B,	//0x06ce		VoC_lw16i_set_inc(REG2,0x2564,0x1)(lo)	|	VoC_sub32_rr(REG67,RL6,REG67,DEFAULT)
0xDCB72564,	//0x06d0		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x2564,0x1)(hi)
		//0x06d1		getNWCoefs_LABEL2
		//0x06d1		VoC_endloop0
0x05240780,	//0x06d2		VoC_sub16_rd(REG0,REG0,0x524)
		//0x06d4		VoC_endloop1
0x7021E0A4,	//0x06d4		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0xC28DFF46,	//0x06d6		VoC_sub16_rr(REG5,REG2,REG1,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x08000A8C,	//0x06d8		VoC_lw16i(RL6_LO,0x800)
0xF3FF5CA4,	//0x06da		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0x06E92C4F,	//0x06dc		VoC_loop_i(0x1,0x27)
0xFF347144,	//0x06de		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x05243819,	//0x06e0		VoC_bgt16_rd(CII_lpcIrZsIir_100,REG1,0x524)
0xC14BE024,	//0x06e2		VoC_add16_rr(REG3,REG5,REG1,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
		//0x06e3		CII_lpcIrZsIir_100
0xD483E701,	//0x06e4		VoC_msu32inc_pp(REG0,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x06e5		VoC_endloop0
0xFBE4C220,	//0x06e6		VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)
0xDCA9DE08,	//0x06e8		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
		//0x06e9		VoC_endloop1
0x25641804,	//0x06ea		VoC_lw16i_set_inc(REG0,0x2564,0x1)
0x253C1806,	//0x06ec		VoC_lw16i_set_inc(REG2,0x253c,0x1)
0xDFC2DF81,	//0x06ee		VoC_push16(REG2,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x06512B80,	//0x06f0		VoC_jal(CII_lpcZsFir_opt)
0x0A81D610,	//0x06f2		VoC_lw16i(REG1,0x2532)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xE0022532,	//0x06f4		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_lw16i(REG1,0x2532)(hi)
0x06512B80,	//0x06f6		VoC_jal(CII_lpcZsFir_opt)
0xF050D610,	//0x06f8		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x0F232B80,	//0x06fa		VoC_jal(CII_g_corr1_opt_paris)
0x1808F031,	//0x06fc		VoC_lw16i_set_inc(REG0,0x258e,0x2)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x0B0F258E,	//0x06fe		VoC_sub16_dr(REG7,0x36e,REG1)(lo)	|	VoC_lw16i_set_inc(REG0,0x258e,0x2)(hi)
0x600C036E,	//0x0700		VoC_movreg16(RL6_LO,REG0,DEFAULT)	|	VoC_sub16_dr(REG7,0x36e,REG1)(hi)
0x0A86E283,	//0x0702		VoC_lw16i(REG6,0x2564)(lo)	|	VoC_lw16i_short(REG3,0x28,IN_PARALLEL)
0x2C172564,	//0x0704		VoC_loop_i(0x1,0xb)(lo)	|	VoC_lw16i(REG6,0x2564)(hi)
0xC3990710,	//0x0706		VoC_sub16_rr(REG1,REG6,REG3,DEFAULT)	|	VoC_loop_i(0x1,0xb)(hi)
0xD6127F44,	//0x0708		VoC_lw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xD8A4E6C2,	//0x070a		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
		//0x070c		VoC_endloop0
0xDE18D121,	//0x070c		VoC_inc_p(REG3,DEFAULT)	|	VoC_mac32inc_rp(REG4,REG1,DEFAULT)
0xD61DFEBC,	//0x070e		VoC_lw16_sd(RL6_HI,0x0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
		//0x0710		VoC_endloop1
0x2B80DDC4,	//0x0710		VoC_jal(CII_aFlatRcDp_opt)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDF80191B,	//0x0712		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_aFlatRcDp_opt)(hi)
0x24EA1FB9,	//0x0714		VoC_lw16i_set_inc(REG1,0x24ea,0xfffffffe)
0x19B52B80,	//0x0716		VoC_jal(CII_rcToADp_opt_new)
		//0x0718		EN_CODE_100_end
0x1804F025,	//0x0718		VoC_lw16i_set_inc(REG0,0x6378,0x1)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x15056378,	//0x071a		VoC_sw16_d(REG5,0x63ab)(lo)	|	VoC_lw16i_set_inc(REG0,0x6378,0x1)(hi)
0x180663AB,	//0x071c		VoC_lw16i_set_inc(REG2,0x6382,0x1)(lo)	|	VoC_sw16_d(REG5,0x63ab)(hi)
0x18076382,	//0x071e		VoC_lw16i_set_inc(REG3,0x207a,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x6382,0x1)(hi)
0x0A84207A,	//0x0720		VoC_lw16i(REG4,0x2070)(lo)	|	VoC_lw16i_set_inc(REG3,0x207a,0x1)(hi)
0x0A8C2070,	//0x0722		VoC_lw16i(RL6_LO,0x24ea)(lo)	|	VoC_lw16i(REG4,0x2070)(hi)
0x0A8D24EA,	//0x0724		VoC_lw16i(RL6_HI,0x24f4)(lo)	|	VoC_lw16i(RL6_LO,0x24ea)(hi)
0x180524F4,	//0x0726		VoC_lw16i_set_inc(REG1,0x251e,0x1)(lo)	|	VoC_lw16i(RL6_HI,0x24f4)(hi)
0x0A86251E,	//0x0728		VoC_lw16i(REG6,0x24b0)(lo)	|	VoC_lw16i_set_inc(REG1,0x251e,0x1)(hi)
0x0A8F24B0,	//0x072a		VoC_lw16i(RL7_HI,0xbea)(lo)	|	VoC_lw16i(REG6,0x24b0)(hi)
0x0A8E0BEA,	//0x072c		VoC_lw16i(RL7_LO,0xbee)(lo)	|	VoC_lw16i(RL7_HI,0xbea)(hi)
0x0A880BEE,	//0x072e		VoC_lw16i(ACC0_LO,0x2084)(lo)	|	VoC_lw16i(RL7_LO,0xbee)(hi)
0x14052084,	//0x0730		VoC_lw16_d(REG5,0x2052)(lo)	|	VoC_lw16i(ACC0_LO,0x2084)(hi)
0x7F352052,	//0x0732		VoC_movreg32(ACC1,RL6,DEFAULT)	|	VoC_lw16_d(REG5,0x2052)(hi)
0x1407F709,	//0x0734		VoC_lw16_d(REG7,0x24ac)(lo)	|	VoC_movreg16(ACC0_HI,ACC0_LO,IN_PARALLEL)
0x2B8024AC,	//0x0736		VoC_jal(CII_getSfrmLpcTx_opt)(lo)	|	VoC_lw16_d(REG7,0x24ac)(hi)
0xF0052623,	//0x0738		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jal(CII_getSfrmLpcTx_opt)(hi)
0x212E1805,	//0x073a		VoC_lw16i_set_inc(REG1,0x212e,0x1)
0x208E1804,	//0x073c		VoC_lw16i_set_inc(REG0,0x208e,0x1)
0x2D22D899,	//0x073e		VoC_loop_i(0x0,0x91)(lo)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xD8990742,	//0x0740		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x91)(hi)
		//0x0742		VoC_endloop0
0xDFC5DC89,	//0x0742		VoC_push16(REG5,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x0743		WEIGHTSPEECHFRAME_LOOP_START
0x21C01FBC,	//0x0744		VoC_lw16i_set_inc(REG0,0x21c0,0xffffffff)
0x63821807,	//0x0746		VoC_lw16i_set_inc(REG3,0x6382,0x1)
0x25281805,	//0x0748		VoC_lw16i_set_inc(REG1,0x2528,0x1)
0x22A21806,	//0x074a		VoC_lw16i_set_inc(REG2,0x22a2,0x1)
0x0A87F146,	//0x074c		VoC_lw16i(REG7,0x28)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0xC57F0028,	//0x074e		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_lw16i(REG7,0x28)(hi)
0x4038C576,	//0x0750		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG5,REG6,DEFAULT)
0xC0F3C079,	//0x0752		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x2B80DF43,	//0x0754		VoC_jal(CII_lpcFir_opt)(lo)	|	VoC_push32(REG67,DEFAULT)
0xDF0319E5,	//0x0756		VoC_pop32(REG67,DEFAULT)	|	VoC_jal(CII_lpcFir_opt)(hi)
0x25281804,	//0x0758		VoC_lw16i_set_inc(REG0,0x2528,0x1)
0x24F41807,	//0x075a		VoC_lw16i_set_inc(REG3,0x24f4,0x1)
0x211F1FBD,	//0x075c		VoC_lw16i_set_inc(REG1,0x211f,0xffffffff)
0x22AC1806,	//0x075e		VoC_lw16i_set_inc(REG2,0x22ac,0x1)
0xC0794038,	//0x0760		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x2B80C0F3,	//0x0762		VoC_jal(CII_lpcIir_opt_paris)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xDF851582,	//0x0764		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CII_lpcIir_opt_paris)(hi)
0x0370072D,	//0x0766		VoC_add16_rd(REG5,REG5,0x370)
0x051E4025,	//0x0768		VoC_be16_rd(WEIGHTSPEECHFRAME_go,REG5,0x51e)
0x07432B00,	//0x076a		VoC_jump_lg(WEIGHTSPEECHFRAME_LOOP_START)
		//0x076c		WEIGHTSPEECHFRAME_go
0x20531400,	//0x076c		VoC_lw16_d(REG0,0x2053)
0x24AD1401,	//0x076e		VoC_lw16_d(REG1,0x24ad)
0x24BE0A82,	//0x0770		VoC_lw16i(REG2,0x24be)
0x24DE0A83,	//0x0772		VoC_lw16i(REG3,0x24de)
0x24E20A84,	//0x0774		VoC_lw16i(REG4,0x24e2)
0x24E60A85,	//0x0776		VoC_lw16i(REG5,0x24e6)
0x24BA0A86,	//0x0778		VoC_lw16i(REG6,0x24ba)
0x43021407,	//0x077a		VoC_lw16_d(REG7,0x4302)
0x23A92B80,	//0x077c		VoC_jal(CII_openLoopLagSearch_new)
0x1500F007,	//0x077e		VoC_sw16_d(REG0,0x24cd)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x150024CD,	//0x0780		VoC_sw16_d(REG0,0x251d)(lo)	|	VoC_sw16_d(REG0,0x24cd)(hi)
0x1804251D,	//0x0782		VoC_lw16i_set_inc(REG0,0x24ba,0x1)(lo)	|	VoC_sw16_d(REG0,0x251d)(hi)
0x140624BA,	//0x0784		VoC_lw16_d(REG6,0x22d0)(lo)	|	VoC_lw16i_set_inc(REG0,0x24ba,0x1)(hi)
0x2C0922D0,	//0x0786		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16_d(REG6,0x22d0)(hi)
0xD805079A,	//0x0788		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0x078E34B5,	//0x078a		VoC_bngt16_rr(PERIODICITYUPDATE101,REG6,REG5)
0xF6C560A6,	//0x078c		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x078e		PERIODICITYUPDATE101
0xE864FFC0,	//0x078e		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_NAD
0x07933435,	//0x0790		VoC_bgt16_rr(PERIODICITYUPDATE102,REG6,REG5)
0xF024C375,	//0x0792		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG6,DEFAULT)
		//0x0793		PERIODICITYUPDATE102
		//0x0793		VoC_endloop0
0x4823C3AB,	//0x0794		VoC_blt16_rd(PERIODICITYUPDATE103,REG3,0x51c)(lo)	|	VoC_sub16_rr(REG3,REG6,REG5,DEFAULT)
0x4C1D051C,	//0x0796		VoC_bnlt16_rd(PERIODICITYUPDATE104,REG5,0x51c)(lo)	|	VoC_blt16_rd(PERIODICITYUPDATE103,REG3,0x51c)(hi)
0xC1E7051C,	//0x0798		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_bnlt16_rd(PERIODICITYUPDATE104,REG5,0x51c)(hi)
		//0x0799		PERIODICITYUPDATE103
		//0x079a		PERIODICITYUPDATE104
		//0x079a		VoC_endloop1
0x1405D886,	//0x079a		VoC_lw16_d(REG5,0x22ce)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x150622CE,	//0x079c		VoC_sw16_d(REG6,0x22d0)(lo)	|	VoC_lw16_d(REG5,0x22ce)(hi)
0xC17E22D0,	//0x079e		VoC_add16_rr(REG6,REG5,REG7,DEFAULT)	|	VoC_sw16_d(REG6,0x22d0)(hi)
0x05214C1E,	//0x07a0		VoC_bnlt16_rd(PERIODICITYUPDATE105,REG6,0x521)
0xF033F004,	//0x07a2		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x07a3		PERIODICITYUPDATE105
0x22CE1507,	//0x07a4		VoC_sw16_d(REG7,0x22ce)
0x22841504,	//0x07a6		VoC_sw16_d(REG4,0x2284)
0x22860A80,	//0x07a8		VoC_lw16i(REG0,0x2286)
0x24CE0A83,	//0x07aa		VoC_lw16i(REG3,0x24ce)
0xD881E983,	//0x07ac		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_loop_i_short(0xc,DEFAULT)
0xDCB1F7F1,	//0x07ae		VoC_sw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
		//0x07af		VoC_endloop0
0x24BE0A86,	//0x07b0		VoC_lw16i(REG6,0x24be)
0xFFC07007,	//0x07b2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x07b4		EN_LOOP_START
0x25261506,	//0x07b4		VoC_sw16_d(REG6,0x2526)
0x24CE1812,	//0x07b6		VoC_lw16i_set_inc(REG2,0x24ce,0x4)
0x0A83C0BA,	//0x07b8		VoC_lw16i(REG3,0x640a)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xE882640A,	//0x07ba		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i(REG3,0x640a)(hi)
0xDE10DCB2,	//0x07bc		VoC_inc_p(REG2,DEFAULT)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
		//0x07bd		VoC_endloop0
0x05240838,	//0x07be		VoC_mult16_rd(REG0,REG7,0x524)
0x24F40A83,	//0x07c0		VoC_lw16i(REG3,0x24f4)
0xF8F040C3,	//0x07c2		VoC_shr16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
0x211F0A81,	//0x07c4		VoC_lw16i(REG1,0x211f)
0xD8A1C040,	//0x07c6		VoC_lw16inc_p(REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG0,REG1,REG0,DEFAULT)
0x58A6D8A4,	//0x07c8		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x7032F6C2,	//0x07ca		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_movreg16(REG2,REG6,IN_PARALLEL)
0x0A85DFC1,	//0x07cc		VoC_lw16i(REG5,0x251e)(lo)	|	VoC_push16(REG1,IN_PARALLEL)
0xC17D251E,	//0x07ce		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i(REG5,0x251e)(hi)
0xDFC7417D,	//0x07d0		VoC_push16(REG7,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x43021407,	//0x07d2		VoC_lw16_d(REG7,0x4302)
0x11092B80,	//0x07d4		VoC_jal(CII_sfrmAnalysis_opt)
0x5F82DF87,	//0x07d6		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x0716E013,	//0x07d8		VoC_add16_rd(REG6,REG2,0x2526)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0xC1DF2526,	//0x07da		VoC_add16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG6,REG2,0x2526)(hi)
0x051E4027,	//0x07dc		VoC_be16_rd(EN_LOOP_END,REG7,0x51e)
0x07B42B00,	//0x07de		VoC_jump_lg(EN_LOOP_START)
		//0x07e0		EN_LOOP_END
0x24CD1404,	//0x07e0		VoC_lw16_d(REG4,0x24cd)
0x43026E0F,	//0x07e2		VoC_bnez16_d(EN_CODE_200,0x4302)
0x22961400,	//0x07e4		VoC_lw16_d(REG0,0x2296)
0x22921805,	//0x07e6		VoC_lw16i_set_inc(REG1,0x2292,0x1)
0x24AD1500,	//0x07e8		VoC_sw16_d(REG0,0x24ad)
0x24CA1806,	//0x07ea		VoC_lw16i_set_inc(REG2,0x24ca,0x1)
0xD8936863,	//0x07ec		VoC_lw16inc_p(REG3,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDCA3D893,	//0x07ee		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
		//0x07ef		VoC_endloop0
0xF8D4E5DA,	//0x07f0		VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)	|	VoC_jump(EN_CODE_200_END)
		//0x07f1		EN_CODE_200
0x1B6C0A82,	//0x07f2		VoC_lw16i(REG2,0x1b6c)
0x24D61805,	//0x07f4		VoC_lw16i_set_inc(REG1,0x24d6,0x1)
0x22852004,	//0x07f6		VoC_lw16d_set_inc(REG0,0x2285,0x1)
0x03DC0A83,	//0x07f8		VoC_lw16i(REG3,0x3dc)
0xE88CC0E3,	//0x07fa		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xF8FED896,	//0x07fc		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x0806C0F5,	//0x07fe		VoC_mult16_rd(REG6,REG0,0x51c)(lo)	|	VoC_add16_rr(REG5,REG3,REG6,DEFAULT)
0xD9AC051C,	//0x0800		VoC_lw32_p(ACC0,REG5,DEFAULT)	|	VoC_mult16_rd(REG6,REG0,0x51c)(hi)
0xDE00C0B7,	//0x0802		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG2,REG6,DEFAULT)
0x08463C18,	//0x0804		VoC_bngt16_rd(EN_LOOP1_100,REG0,0x846)
0xDDBCF000,	//0x0806		VoC_sw32_p(ACC0,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0807		EN_LOOP1_100
		//0x0807		VoC_endloop0
0x22851500,	//0x0808		VoC_sw16_d(REG0,0x2285)
		//0x080a		EN_CODE_200_END
0x24AC1482,	//0x080a		VoC_lw32_d(REG45,0x24ac)
0x24B00A80,	//0x080c		VoC_lw16i(REG0,0x24b0)
0x20521582,	//0x080e		VoC_sw32_d(REG45,0x2052)
0x20700A81,	//0x0810		VoC_lw16i(REG1,0x2070)
0x63780A82,	//0x0812		VoC_lw16i(REG2,0x6378)
0x207A0A83,	//0x0814		VoC_lw16i(REG3,0x207a)
0xD884E944,	//0x0816		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC94D8A5,	//0x0818		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x081a		VoC_endloop0
0x0A80DCB5,	//0x081a		VoC_lw16i(REG0,0x24ea)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x0A8124EA,	//0x081c		VoC_lw16i(REG1,0x2084)(lo)	|	VoC_lw16i(REG0,0x24ea)(hi)
0xD8842084,	//0x081e		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i(REG1,0x2084)(hi)
0xD884E942,	//0x0820		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x0822		VoC_endloop0
0x6E19DC94,	//0x0822		VoC_bnez16_d(EN_CODE_300,0x4302)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xF0674302,	//0x0824		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_bnez16_d(EN_CODE_300,0x4302)(hi)
0x1507F026,	//0x0826		VoC_sw16_d(REG7,0x251d)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x1506251D,	//0x0828		VoC_sw16_d(REG6,0x251c)(lo)	|	VoC_sw16_d(REG7,0x251d)(hi)
0x0A87251C,	//0x082a		VoC_lw16i(REG7,0x1ff)(lo)	|	VoC_sw16_d(REG6,0x251c)(hi)
0xF3E601FF,	//0x082c		VoC_lw16i_short(REG6,0x1f,DEFAULT)	|	VoC_lw16i(REG7,0x1ff)(hi)
0x24CE1804,	//0x082e		VoC_lw16i_set_inc(REG0,0x24ce,0x1)
0x24D61805,	//0x0830		VoC_lw16i_set_inc(REG1,0x24d6,0x1)
0xDC87E882,	//0x0832		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0834		VoC_endloop0
0x0A80DC96,	//0x0834		VoC_lw16i(REG0,0x24da)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xF80F24DA,	//0x0836		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_lw16i(REG0,0x24da)(hi)
0xDC87F80E,	//0x0838		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xDC86E861,	//0x083a		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x083b		VoC_endloop0
		//0x083c		EN_CODE_300
0x1D7E1804,	//0x083c		VoC_lw16i_set_inc(REG0,0x1d7e,0x1)
0x24AD1406,	//0x083e		VoC_lw16_d(REG6,0x24ad)
0x24CA1805,	//0x0840		VoC_lw16i_set_inc(REG1,0x24ca,0x1)
0xD896E862,	//0x0842		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0844		VoC_endloop0
0x1482DC86,	//0x0844		VoC_lw32_d(REG45,0x251c)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x1805251C,	//0x0846		VoC_lw16i_set_inc(REG1,0x24ce,0x1)(lo)	|	VoC_lw32_d(REG45,0x251c)(hi)
0x180624CE,	//0x0848		VoC_lw16i_set_inc(REG2,0x24d2,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x24ce,0x1)(hi)
0x180724D2,	//0x084a		VoC_lw16i_set_inc(REG3,0x24d6,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x24d2,0x1)(hi)
0x6A0524D6,	//0x084c		VoC_bngtz16_d(CII_fillBitAlloc_100,0x251d)(lo)	|	VoC_lw16i_set_inc(REG3,0x24d6,0x1)(hi)
0xE022251D,	//0x084e		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_bngtz16_d(CII_fillBitAlloc_100,0x251d)(hi)
0x24DA0A81,	//0x0850		VoC_lw16i(REG1,0x24da)
		//0x0852		CII_fillBitAlloc_100
0xDC86E8A6,	//0x0852		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDC85DC84,	//0x0854		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xD8A4D896,	//0x0856		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
		//0x0858		VoC_endloop0
0xDFA9D8B5,	//0x0858		VoC_pop16(RA,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x21C01804,	//0x085a		VoC_lw16i_set_inc(REG0,0x21c0,0x1)
0x56840701,	//0x085c		VoC_add16_rd(REG1,REG0,0x5684)
0xD894EC63,	//0x085e		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_i_short(0x23,DEFAULT)
0xDC84FFC0,	//0x0860		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x0861		VoC_endloop0
0xDFE9E580,	//0x0862		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0863		CII_aflat_opt
0x2B80DFC1,	//0x0864		VoC_jal(CII_flat_opt)(lo)	|	VoC_push16(REG1,DEFAULT)
0xD6140BD6,	//0x0866		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_flat_opt)(hi)
0xE080F050,	//0x0868		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x255A1809,	//0x086a		VoC_lw16i_set_inc(REG1,0x255a,0x2)
0xDF446845,	//0x086c		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x1507D9C6,	//0x086e		VoC_sw16_d(REG7,0x2560)(lo)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDDCE2560,	//0x0870		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_sw16_d(REG7,0x2560)(hi)
		//0x0871		VoC_endloop0
0x24AD1506,	//0x0872		VoC_sw16_d(REG6,0x24ad)
0x25440A81,	//0x0874		VoC_lw16i(REG1,0x2544)
0x16682B80,	//0x0876		VoC_jal(CII_rcToCorrDpL_opt)
0x17202B80,	//0x0878		VoC_jal(CII_vad_algorithm)
0x6E03E004,	//0x087a		VoC_bnez16_d(AFLAT100,0x4045)(lo)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0xF0244045,	//0x087c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnez16_d(AFLAT100,0x4045)(hi)
		//0x087e		AFLAT100
0x1504DF04,	//0x087e		VoC_sw16_d(REG4,0x4301)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0x18084301,	//0x0880		VoC_lw16i_set_inc(REG0,0x2544,0x2)(lo)	|	VoC_sw16_d(REG4,0x4301)(hi)
0x70272544,	//0x0882		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2544,0x2)(hi)
0x31C4E006,	//0x0884		VoC_bnez16_r(SWCOMFORTNOISE_opt_100,REG4)(lo)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x1406088A,	//0x0886		VoC_lw16_d(REG6,0x1b69)(lo)	|	VoC_bnez16_r(SWCOMFORTNOISE_opt_100,REG4)(hi)
0xC1BE1B69,	//0x0888		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16_d(REG6,0x1b69)(hi)
		//0x088a		SWCOMFORTNOISE_opt_100
0x1B6B073D,	//0x088a		VoC_add16_rd(REG5,REG7,0x1b6b)
0x091C3186,	//0x088c		VoC_bez16_r(SWCOMFORTNOISE_opt_RETURN1,REG6)
0x1B6A1404,	//0x088e		VoC_lw16_d(REG4,0x1b6a)
0x04E30823,	//0x0890		VoC_mult16_rd(REG3,REG4,0x4e3)
0x1BB4180A,	//0x0892		VoC_lw16i_set_inc(REG2,0x1bb4,0x2)
0x180BC09A,	//0x0894		VoC_lw16i_set_inc(REG3,0x1ba4,0x2)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xC0E31BA4,	//0x0896		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1ba4,0x2)(hi)
0xD9C76963,	//0x0898		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDDD7D9C7,	//0x089a		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
		//0x089b		VoC_endloop0
0xC13CC13C,	//0x089c		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x0527441C,	//0x089e		VoC_bne16_rd(updateCNHist_no_modulo,REG4,0x527)
0xDD9CF004,	//0x08a0		VoC_sw32_p(ACC0,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x08a1		updateCNHist_no_modulo
0x1B6A1504,	//0x08a2		VoC_sw16_d(REG4,0x1b6a)
0x1C6A1404,	//0x08a4		VoC_lw16_d(REG4,0x1c6a)
0x03704436,	//0x08a6		VoC_bne16_rd(SWCOMFORTNOISE_opt_101,REG6,0x370)
0x4C1DF004,	//0x08a8		VoC_bnlt16_rd(SWCOMFORTNOISE_opt_101,REG5,0x807)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0240807,	//0x08aa		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnlt16_rd(SWCOMFORTNOISE_opt_101,REG5,0x807)(hi)
		//0x08ac		SWCOMFORTNOISE_opt_101
0x01090A8F,	//0x08ac		VoC_lw16i(RL7_HI,0x109)
0x19880A8E,	//0x08ae		VoC_lw16i(RL7_LO,0x1988)
0x08B631C4,	//0x08b0		VoC_bnez16_r(SWCOMFORTNOISE_opt_Lbrst,REG4)
0x05224506,	//0x08b2		VoC_bne16_rd(SWCOMFORTNOISE_opt_no_1st_SID,REG6,0x522)
0xFFC065C4,	//0x08b4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SWCOMFORTNOISE_opt_1st_SID)
		//0x08b6		SWCOMFORTNOISE_opt_Lbrst
0x037044A6,	//0x08b6		VoC_bne16_rd(SWCOMFORTNOISE_opt_no_1st_SID,REG6,0x370)
		//0x08b8		SWCOMFORTNOISE_opt_1st_SID
0x1C6C1587,	//0x08b8		VoC_sw32_d(RL7,0x1c6c)
0x1808DF42,	//0x08ba		VoC_lw16i_set_inc(REG0,0x1b6c,0x2)(lo)	|	VoC_push32(REG45,DEFAULT)
0x2B801B6C,	//0x08bc		VoC_jal(CII_avgGsHistQntz_gsQuant_opt)(lo)	|	VoC_lw16i_set_inc(REG0,0x1b6c,0x2)(hi)
0xDF020613,	//0x08be		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CII_avgGsHistQntz_gsQuant_opt)(hi)
0x1C651502,	//0x08c0		VoC_sw16_d(REG2,0x1c65)
		//0x08c2		SWCOMFORTNOISE_opt_no_1st_SID
0x05224C86,	//0x08c2		VoC_bnlt16_rd(SWCOMFORTNOISE_opt_106,REG6,0x522)
0x09193184,	//0x08c4		VoC_bez16_r(SWCOMFORTNOISE_opt_RETURN,REG4)
0xDF425FC6,	//0x08c6		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x08F42B00,	//0x08c8		VoC_jump_lg(SWCOMFORTNOISE_opt_swSP_0)
		//0x08ca		SWCOMFORTNOISE_opt_106
0xDFC6F005,	//0x08ca		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFF435F42,	//0x08cc		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x25741808,	//0x08ce		VoC_lw16i_set_inc(REG0,0x2574,0x2)
0x1BB4189A,	//0x08d0		VoC_lw16i_set_inc(REG2,0x1bb4,0x16)
0x1BA4180B,	//0x08d2		VoC_lw16i_set_inc(REG3,0x1ba4,0x2)
0xD9DEE903,	//0x08d4		VoC_lw32inc_p(RL6,REG3,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xC8F3FA1E,	//0x08d6		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x3,DEFAULT)
		//0x08d7		VoC_endloop0
0xF6437024,	//0x08d8		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x08E72C17,	//0x08da		VoC_loop_i(0x1,0xb)
0xFF466908,	//0x08dc		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD9D55994,	//0x08de		VoC_lw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0xFA1D7A14,	//0x08e0		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0xC9AE64D4,	//0x08e2		VoC_add32_rr(RL6,RL6,ACC1,IN_PARALLEL)	|	VoC_and32_rr(ACC0,REG45,DEFAULT)
		//0x08e4		VoC_endloop0
0x5E18C9A6,	//0x08e4		VoC_inc_p(REG3,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0xDDC6F662,	//0x08e6		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
		//0x08e7		VoC_endloop1
0x0E202B80,	//0x08e8		VoC_jal(CII_r0Quant_opt)
0x1C641506,	//0x08ea		VoC_sw16_d(REG6,0x1c64)
0x25741808,	//0x08ec		VoC_lw16i_set_inc(REG0,0x2574,0x2)
0x256A0A84,	//0x08ee		VoC_lw16i(REG4,0x256a)
0x1C660A85,	//0x08f0		VoC_lw16i(REG5,0x1c66)
0x09D42B80,	//0x08f2		VoC_jal(CII_lpcCorrQntz_opt)
		//0x08f4		SWCOMFORTNOISE_opt_swSP_0
0x1C641403,	//0x08f4		VoC_lw16_d(REG3,0x1c64)
0x1C661804,	//0x08f6		VoC_lw16i_set_inc(REG0,0x1c66,0x1)
0x228E1805,	//0x08f8		VoC_lw16i_set_inc(REG1,0x228e,0x1)
0x22961503,	//0x08fa		VoC_sw16_d(REG3,0x2296)
0x1C651403,	//0x08fc		VoC_lw16_d(REG3,0x1c65)
0xDC93E881,	//0x08fe		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x08ff		VoC_endloop0
0xD8836863,	//0x0900		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC93D883,	//0x0902		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x0903		VoC_endloop0
0xDF02DF86,	//0x0904		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x1804F007,	//0x0906		VoC_lw16i_set_inc(REG0,0x2286,0x1)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x18052286,	//0x0908		VoC_lw16i_set_inc(REG1,0x228a,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2286,0x1)(hi)
0x1484228A,	//0x090a		VoC_lw32_d(ACC0,0x1c6c)(lo)	|	VoC_lw16i_set_inc(REG1,0x228a,0x1)(hi)
0xDF421C6C,	//0x090c		VoC_push32(REG45,DEFAULT)	|	VoC_lw32_d(ACC0,0x1c6c)(hi)
0x09152C09,	//0x090e		VoC_loop_i(0x1,0x4)
0x06382B80,	//0x0910		VoC_jal(CII_getPnBits_opt)
0x2B80DC82,	//0x0912		VoC_jal(CII_getPnBits_opt)(lo)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xDC920638,	//0x0914		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_jal(CII_getPnBits_opt)(hi)
		//0x0915		VoC_endloop1
0x1584DF02,	//0x0916		VoC_sw32_d(ACC0,0x1c6c)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0501C6C,	//0x0918		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_sw32_d(ACC0,0x1c6c)(hi)
		//0x0919		SWCOMFORTNOISE_opt_RETURN
0x1C6A1504,	//0x091a		VoC_sw16_d(REG4,0x1c6a)
		//0x091c		SWCOMFORTNOISE_opt_RETURN1
0x1B6B1505,	//0x091c		VoC_sw16_d(REG5,0x1b6b)
0x1B691506,	//0x091e		VoC_sw16_d(REG6,0x1b69)
0x1507DF80,	//0x0920		VoC_sw16_d(REG7,0x4302)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x18094302,	//0x0922		VoC_lw16i_set_inc(REG1,0x24b0,0x2)(lo)	|	VoC_sw16_d(REG7,0x4302)(hi)
0x31C724B0,	//0x0924		VoC_bnez16_r(AFLAT101,REG7)(lo)	|	VoC_lw16i_set_inc(REG1,0x24b0,0x2)(hi)
0xD9C7092C,	//0x0926		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_bnez16_r(AFLAT101,REG7)(hi)
0xD9C7E8A2,	//0x0928		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x092a		VoC_endloop0
0xE5C8DDCF,	//0x092a		VoC_jump(AFLATRETURNN)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x092c		AFLAT101
0x0A80E024,	//0x092c		VoC_lw16i(REG0,0x2544)(lo)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0x0A852544,	//0x092e		VoC_lw16i(REG5,0x24ca)(lo)	|	VoC_lw16i(REG0,0x2544)(hi)
0x2B8024CA,	//0x0930		VoC_jal(CII_lpcCorrQntz_opt)(lo)	|	VoC_lw16i(REG5,0x24ca)(hi)
0xDFA909D4,	//0x0932		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_lpcCorrQntz_opt)(hi)
		//0x0933		AFLATRETURNN
0xE580FFC0,	//0x0934		VoC_return	|	VoC_NOP
		//0x0936		CII_aflatRecursionLoop_opt
0x1804C155,	//0x0936		VoC_lw16i_set_inc(REG0,0x63aa,0x1)(lo)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x086B63AA,	//0x0938		VoC_mult16_rp(REG3,REG1,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63aa,0x1)(hi)
0xDFE9D851,	//0x093a		VoC_push16(RA,DEFAULT)	|	VoC_lw16_p(REG1,REG5,IN_PARALLEL)
0xDC83DC81,	//0x093c		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0x2B80DF40,	//0x093e		VoC_jal(CII_setupPreQ)(lo)	|	VoC_push32(REG01,DEFAULT)
0xF8F20B8E,	//0x0940		VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_jal(CII_setupPreQ)(hi)
0x55BC0A83,	//0x0942		VoC_lw16i(REG3,0x55bc)
0x1807C09A,	//0x0944		VoC_lw16i_set_inc(REG3,0x25ac,0x1)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x82D025AC,	//0x0946		VoC_add16inc_rp(REG0,REG3,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x25ac,0x1)(hi)
0xDFC0D821,	//0x0948		VoC_push16(REG0,DEFAULT)	|	VoC_lw16_p(REG1,REG2,DEFAULT)
0xF0065FC1,	//0x094a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
		//0x094c		CII_aflatRecurLoop_begin
0x2B80DFC3,	//0x094c		VoC_jal(CII_getNextVec_opt)(lo)	|	VoC_push16(REG3,DEFAULT)
0xD6300B58,	//0x094e		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_jal(CII_getNextVec_opt)(hi)
0x1484D91D,	//0x0950		VoC_lw32_d(ACC0,0x382)(lo)	|	VoC_lw32_sd(ACC1,0x2,DEFAULT)
0x1E030382,	//0x0952		VoC_multf32inc_pp(REG67,REG0,REG0,DEFAULT)	|	VoC_lw32_d(ACC0,0x382)(hi)
0x1805E005,	//0x0954		VoC_lw16i_set_inc(REG1,0x25f2,0x1)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x562425F2,	//0x0956		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x25f2,0x1)(hi)
0xE703C8E3,	//0x0958		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,IN_PARALLEL)
0xDC979E03,	//0x095a		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_multf32inc_pp(REG67,REG0,REG0,DEFAULT)
		//0x095c		VoC_endloop0
0x5911C8E3,	//0x095c		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0x5630C261,	//0x095e		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x5FC5DF45,	//0x0960		VoC_push16(REG5,DEFAULT)	|	VoC_push32(ACC1,IN_PARALLEL)
0x5886DF41,	//0x0962		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0x5897F3FF,	//0x0964		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x7025DF44,	//0x0966		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_push32(ACC0,IN_PARALLEL)
0x5940DF40,	//0x0968		VoC_lw32_sd(REG01,0x7,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x2E21C32C,	//0x096a		VoC_loop_r(1,REG4)(lo)	|	VoC_sub16_rr(REG4,REG4,REG5,IN_PARALLEL)
0xC32C09B7,	//0x096c		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_loop_r(1,REG4)(hi)
0x5131E023,	//0x096e		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x5133D914,	//0x0970		VoC_mac32inc_rp(REG6,REG3,DEFAULT)	|	VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)
0x50A8F705,	//0x0972		VoC_msu32_rp(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
0xD138DF42,	//0x0974		VoC_mac32inc_rp(REG7,REG0,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0x09803184,	//0x0976		VoC_bez16_r(CII_aflatRecurLoop_skipL1,REG4)
0xD8B4E707,	//0x0978		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD91C5131,	//0x097a		VoC_lw32_sd(ACC0,0x2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xDCA94E34,	//0x097c		VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_mac32_rr(REG6,REG4,DEFAULT)
0xD1A8D038,	//0x097e		VoC_msu32inc_rp(REG5,REG0,DEFAULT)	|	VoC_mac32_rp(REG7,REG0,DEFAULT)
		//0x097f		VoC_endloop0
		//0x0980		CII_aflatRecurLoop_skipL1
0xF7F0DF02,	//0x0980		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xC2A27033,	//0x0982		VoC_sub16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xF3FD5C29,	//0x0984		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG2,DEFAULT)
0xD822591D,	//0x0986		VoC_lw16_p(REG2,REG2,IN_PARALLEL)	|	VoC_lw32_sd(ACC1,0x2,DEFAULT)
0x037E481A,	//0x0988		VoC_blt16_rd(CII_aflatRecurLoop_PNew,REG2,0x37e)
0xE162DA15,	//0x098a		VoC_movreg16(REG2,ACC1_HI,DEFAULT)	|	VoC_sw16_sd(REG5,0x0,DEFAULT)
		//0x098b		CII_aflatRecurLoop_PNew
0x1B85F7F2,	//0x098c		VoC_multf32inc_rp(ACC1,REG6,REG0,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0x40A2D914,	//0x098e		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)
0xD1A9F705,	//0x0990		VoC_msu32inc_rp(REG5,REG1,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
0xFBFD513B,	//0x0992		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
0x09AB3184,	//0x0994		VoC_bez16_r(CII_aflatRecurLoop_skipL2,REG4)
0xD91FD926,	//0x0996		VoC_lw32_sd(RL7,0x2,DEFAULT)	|	VoC_lw32_sd(RL6,0x3,DEFAULT)
0xE707DD1E,	//0x0998		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_sw32_sd(RL6,0x2,DEFAULT)
0xC92E1B85,	//0x099a		VoC_add32_rr(RL6,ACC0,ACC1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC1,REG6,REG0,DEFAULT)
0xD91451A9,	//0x099c		VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)	|	VoC_msu32inc_rp(REG5,REG1,DEFAULT)
0xFBFD513B,	//0x099e		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
		//0x09a0		VoC_endloop0
0x7030DCAD,	//0x09a0		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG2,DEFAULT)
0xE707DD27,	//0x09a2		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_sw32_sd(RL7,0x3,IN_PARALLEL)
0xC92E1B85,	//0x09a4		VoC_add32_rr(RL6,ACC0,ACC1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC1,REG6,REG0,DEFAULT)
0xD91451A9,	//0x09a6		VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)	|	VoC_msu32inc_rp(REG5,REG1,DEFAULT)
0xFBFD513B,	//0x09a8		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
		//0x09aa		VoC_endloop0
0xC92EDCAD,	//0x09aa		VoC_add32_rr(RL6,ACC0,ACC1,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG2,DEFAULT)
		//0x09ab		CII_aflatRecurLoop_skipL2
0x7032F031,	//0x09ac		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x5CADD908,	//0x09ae		VoC_sw16inc_p(RL6_HI,REG2,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0x5919F004,	//0x09b0		VoC_lw32_sd(REG23,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x5897D886,	//0x09b2		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0x5920F3FF,	//0x09b4		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0xDD08E015,	//0x09b6		VoC_sw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
		//0x09b7		VoC_endloop1
0xDF045F84,	//0x09b8		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xDF045033,	//0x09ba		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG3,DEFAULT)
0xDF055033,	//0x09bc		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG3,DEFAULT)
0xDF05503A,	//0x09be		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0x00000AC0,	//0x09c0		VoC_lw16i(REG0,0x8000)
0x5F00D082,	//0x09c2		VoC_pop32(REG01,DEFAULT)	|	VoC_msu32_rp(REG0,REG2,DEFAULT)
0x3184DF83,	//0x09c4		VoC_bez16_r(CII_aflatRecurLoop_no_max,REG4)(lo)	|	VoC_pop16(REG3,IN_PARALLEL)
0x0A8909C9,	//0x09c6		VoC_lw16i(ACC0_HI,0x7fff)(lo)	|	VoC_bez16_r(CII_aflatRecurLoop_no_max,REG4)(hi)
0xC2697FFF,	//0x09c8		VoC_sub16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_lw16i(ACC0_HI,0x7fff)(hi)
		//0x09c9		CII_aflatRecurLoop_no_max
0xDC897033,	//0x09ca		VoC_sw16inc_p(ACC0_HI,REG0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x31C1DF40,	//0x09cc		VoC_bnez16_r(CII_aflatRecurLoop_begin,REG1)(lo)	|	VoC_push32(REG01,DEFAULT)
0xDF80094C,	//0x09ce		VoC_pop16(REG0,DEFAULT)	|	VoC_bnez16_r(CII_aflatRecurLoop_begin,REG1)(hi)
0xDFA9DF80,	//0x09d0		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xE580DF00,	//0x09d2		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x09d4		CII_lpcCorrQntz_opt
0xDF42DFE9,	//0x09d4		VoC_push32(REG45,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x25B81809,	//0x09d6		VoC_lw16i_set_inc(REG1,0x25b8,0x2)
0x25DC180A,	//0x09d8		VoC_lw16i_set_inc(REG2,0x25dc,0x2)
0x25DC1FBB,	//0x09da		VoC_lw16i_set_inc(REG3,0x25dc,0xfffffffe)
0xE927DFC1,	//0x09dc		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFA17D9C7,	//0x09de		VoC_shr32_ri(RL7,0x2,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xE0B770E6,	//0x09e0		VoC_lw16i_short(REG7,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0xDDD7DDCF,	//0x09e2		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x09e4		VoC_endloop0
0xD9C7DDDF,	//0x09e4		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
0xD9C6FA17,	//0x09e6		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_shr32_ri(RL7,0x2,DEFAULT)
0xDDCFFA16,	//0x09e8		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_shr32_ri(RL6,0x2,DEFAULT)
0xDDD6DDD7,	//0x09ea		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x25A71805,	//0x09ec		VoC_lw16i_set_inc(REG1,0x25a7,0x1)
0xC27B4270,	//0x09ee		VoC_sub16_rr(REG3,REG1,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG1,REG6,DEFAULT)
0xC2FC42F2,	//0x09f0		VoC_sub16_rr(REG4,REG3,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG3,REG6,DEFAULT)
0xDF404335,	//0x09f2		VoC_push32(REG01,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG4,REG6,DEFAULT)
0x25A51805,	//0x09f4		VoC_lw16i_set_inc(REG1,0x25a5,0x1)
0xDF425F82,	//0x09f6		VoC_push32(REG45,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xF0045F41,	//0x09f8		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x03821487,	//0x09fa		VoC_lw32_d(RL7,0x382)
0x93D493D6,	//0x09fc		VoC_add32inc_rp(ACC0,RL7,REG2,DEFAULT)	|	VoC_add32inc_rp(RL6,RL7,REG2,DEFAULT)
0xDC8D93D5,	//0x09fe		VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_add32inc_rp(ACC1,RL7,REG2,DEFAULT)
0xDC8BDC89,	//0x0a00		VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0xDC9DDC99,	//0x0a02		VoC_sw16inc_p(RL6_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0xDC9993D6,	//0x0a04		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_add32inc_rp(RL6,RL7,REG2,DEFAULT)
0xE0125C9B,	//0x0a06		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)
0xDFC2DC9D,	//0x0a08		VoC_push16(REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG1,DEFAULT)
		//0x0a09		CII_lpcCorrQntz_opt_iSeg_loop
0x0A85F001,	//0x0a0a		VoC_lw16i(REG5,0x54bb)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0A8654BB,	//0x0a0c		VoC_lw16i(REG6,0x5408)(lo)	|	VoC_lw16i(REG5,0x54bb)(hi)
0x0A8E5408,	//0x0a0e		VoC_lw16i(RL7_LO,0x5468)(lo)	|	VoC_lw16i(REG6,0x5408)(hi)
0x0A8F5468,	//0x0a10		VoC_lw16i(RL7_HI,0x5498)(lo)	|	VoC_lw16i(RL7_LO,0x5468)(hi)
0x2B805498,	//0x0a12		VoC_jal(CII_aflatRecursionLoop_opt)(lo)	|	VoC_lw16i(RL7_HI,0x5498)(hi)
0xF0840936,	//0x0a14		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_jal(CII_aflatRecursionLoop_opt)(hi)
0x63EC0A80,	//0x0a16		VoC_lw16i(REG0,0x63ec)
0x63AA0A83,	//0x0a18		VoC_lw16i(REG3,0x63aa)
0x0B2A2B80,	//0x0a1a		VoC_jal(CII_findBestInQuantList_opt)
		//0x0a1c		CII_lpcCorrQntz_opt_iVec_loop
0x00420A82,	//0x0a1c		VoC_lw16i(REG2,0x42)
0xC5145FC4,	//0x0a1e		VoC_mult16_rr(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0x64F5180A,	//0x0a20		VoC_lw16i_set_inc(REG2,0x64f5,0x2)
0xD622C2A4,	//0x0a22		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)
0x0A85D841,	//0x0a24		VoC_lw16i(REG5,0x54b7)(lo)	|	VoC_lw16_p(REG1,REG4,DEFAULT)
0x0A8654B7,	//0x0a26		VoC_lw16i(REG6,0x4308)(lo)	|	VoC_lw16i(REG5,0x54b7)(hi)
0x0A8E4308,	//0x0a28		VoC_lw16i(RL7_LO,0x4f08)(lo)	|	VoC_lw16i(REG6,0x4308)(hi)
0x0A8F4F08,	//0x0a2a		VoC_lw16i(RL7_HI,0x5208)(lo)	|	VoC_lw16i(RL7_LO,0x4f08)(hi)
0x2B805208,	//0x0a2c		VoC_jal(CII_aflatRecursionLoop_opt)(lo)	|	VoC_lw16i(RL7_HI,0x5208)(hi)
0xF0240936,	//0x0a2e		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_jal(CII_aflatRecursionLoop_opt)(hi)
0x64F40A80,	//0x0a30		VoC_lw16i(REG0,0x64f4)
0x63AA0A83,	//0x0a32		VoC_lw16i(REG3,0x63aa)
0x0B2A2B80,	//0x0a34		VoC_jal(CII_findBestInQuantList_opt)
0xE0235622,	//0x0a36		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x00420A80,	//0x0a38		VoC_lw16i(REG0,0x42)
0x1808C486,	//0x0a3a		VoC_lw16i_set_inc(REG0,0x64f4,0x2)(lo)	|	VoC_mult16_rr(REG6,REG2,REG0,DEFAULT)
0x418164F4,	//0x0a3c		VoC_add16_rr(REG1,REG6,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x64f4,0x2)(hi)
0x401CC186,	//0x0a3e		VoC_add16_rr(REG4,REG0,REG3,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)
0xC05DF009,	//0x0a40		VoC_add16_rr(REG5,REG1,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xD855D844,	//0x0a42		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xE0175F83,	//0x0a44		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x051E4023,	//0x0a46		VoC_be16_rd(CII_lpcCorrQntz_opt_copy,REG3,0x51e)
0x0A4E34AC,	//0x0a48		VoC_bngt16_rr(CII_lpcCorrQntz_opt_no_copy,REG5,REG4)
		//0x0a4a		CII_lpcCorrQntz_opt_copy
0xEC22D9C4,	//0x0a4a		VoC_loop_i_short(0x21,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDCCD9C4,	//0x0a4c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0a4d		VoC_endloop0
		//0x0a4e		CII_lpcCorrQntz_opt_no_copy
0x31C4C2FC,	//0x0a4e		VoC_bnez16_r(CII_lpcCorrQntz_opt_iVec_loop,REG4)(lo)	|	VoC_sub16_rr(REG4,REG3,REG7,DEFAULT)
0xC1BB0A1C,	//0x0a50		VoC_add16_rr(REG3,REG6,REG7,DEFAULT)	|	VoC_bnez16_r(CII_lpcCorrQntz_opt_iVec_loop,REG4)(hi)
0x43080A86,	//0x0a52		VoC_lw16i(REG6,0x4308)
0x4F080A8E,	//0x0a54		VoC_lw16i(RL7_LO,0x4f08)
0x52080A8F,	//0x0a56		VoC_lw16i(RL7_HI,0x5208)
0x2B80D833,	//0x0a58		VoC_jal(CII_setupPreQ)(lo)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xD9210B8E,	//0x0a5a		VoC_lw32_sd(REG23,0x3,DEFAULT)	|	VoC_jal(CII_setupPreQ)(hi)
0x03700793,	//0x0a5c		VoC_sub16_rd(REG3,REG2,0x370)
0x0B582B80,	//0x0a5e		VoC_jal(CII_getNextVec_opt)
0x482FD617,	//0x0a60		VoC_blt16_rd(CII_lpcCorrQntz_opt_no_NewRecur1,REG7,0x51d)(lo)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x2B00051D,	//0x0a62		VoC_jump_lg(CII_lpcCorrQntz_opt_no_NewRecur)(lo)	|	VoC_blt16_rd(CII_lpcCorrQntz_opt_no_NewRecur1,REG7,0x51d)(hi)
0xFFC00B15,	//0x0a64		VoC_NAD	|	VoC_jump_lg(CII_lpcCorrQntz_opt_no_NewRecur)(hi)
		//0x0a66		CII_lpcCorrQntz_opt_no_NewRecur1
0x25B81808,	//0x0a66		VoC_lw16i_set_inc(REG0,0x25b8,0x2)
0x25DE1809,	//0x0a68		VoC_lw16i_set_inc(REG1,0x25de,0x2)
0x051E083E,	//0x0a6a		VoC_mult16_rd(REG6,REG7,0x51e)
0x55BC0A83,	//0x0a6c		VoC_lw16i(REG3,0x55bc)
0xD921419E,	//0x0a6e		VoC_lw32_sd(REG23,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0x80B2D91A,	//0x0a70		VoC_add16_rp(REG2,REG2,REG6,DEFAULT)	|	VoC_lw32_sd(REG45,0x2,DEFAULT)
0x03700792,	//0x0a72		VoC_sub16_rd(REG2,REG2,0x370)
0x0A84DF42,	//0x0a74		VoC_lw16i(REG4,0x65fc)(lo)	|	VoC_push32(REG45,DEFAULT)
0x0A8565FC,	//0x0a76		VoC_lw16i(REG5,0x6622)(lo)	|	VoC_lw16i(REG4,0x65fc)(hi)
0x5FC26622,	//0x0a78		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i(REG5,0x6622)(hi)
0x5F42DF40,	//0x0a7a		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x180BF8F7,	//0x0a7c		VoC_lw16i_set_inc(REG3,0x55bc,0x2)(lo)	|	VoC_shr16_ri(REG7,0xfffffffe,IN_PARALLEL)
0x40FB55BC,	//0x0a7e		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x55bc,0x2)(hi)
0x180AE0A4,	//0x0a80		VoC_lw16i_set_inc(REG2,0x6636,0x2)(lo)	|	VoC_lw16i_short(REG4,0xa,IN_PARALLEL)
0xD8B56636,	//0x0a82		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6636,0x2)(hi)
0xD8B7D8B6,	//0x0a84		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x1FBBD8B7,	//0x0a86		VoC_lw16i_set_inc(REG3,0x665c,0xfffffffe)(lo)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0x432D665C,	//0x0a88		VoC_sub16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x665c,0xfffffffe)(hi)
0x5F41E004,	//0x0a8a		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x5F43DFC3,	//0x0a8c		VoC_push32(REG67,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0xDFC4DFC5,	//0x0a8e		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG5,IN_PARALLEL)
0xD654DFC4,	//0x0a90		VoC_lw16_sd(REG4,0x4,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
		//0x0a91		CII_afNBR_loop_start
0x9D23E023,	//0x0a92		VoC_multf32_pp(REG67,REG4,REG4,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x091BF02E,	//0x0a94		VoC_add32_rd(REG67,REG67,0x382)(lo)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0xD8460382,	//0x0a96		VoC_lw16_p(REG6,REG4,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x382)(hi)
0x0ABA2E29,	//0x0a98		VoC_loop_r(1,REG5)
0xF6C459CC,	//0x0a9a		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0x0E6F2B80,	//0x0a9c		VoC_jal(CII_L_mpy_ls_opt)
0x59C49105,	//0x0a9e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add32_rp(ACC1,ACC0,REG0,DEFAULT)
0x2B80F6E4,	//0x0aa0		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_movreg16(REG4,REG7,IN_PARALLEL)
0xC92D0E6F,	//0x0aa2		VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xF6C459DC,	//0x0aa4		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x0E6F2B80,	//0x0aa6		VoC_jal(CII_L_mpy_ls_opt)
0x3307C92D,	//0x0aa8		VoC_bez32_r(CII_afNBR_swNShift_cmpt,RL7)(lo)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xDFC00AB7,	//0x0aaa		VoC_push16(REG0,DEFAULT)	|	VoC_bez32_r(CII_afNBR_swNShift_cmpt,RL7)(hi)
0xF7625FC2,	//0x0aac		VoC_movreg16(REG2,ACC1_HI,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x0F382B80,	//0x0aae		VoC_jal(CII_norm_s_opt)
0x0704DF82,	//0x0ab0		VoC_add16_rd(REG4,REG0,0x51c)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x5F80051C,	//0x0ab2		VoC_pop16(REG0,DEFAULT)	|	VoC_add16_rd(REG4,REG0,0x51c)(hi)
0xFF47F008,	//0x0ab4		VoC_lw32z(RL7,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xD614DA14,	//0x0ab6		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_sw16_sd(REG4,0x0,DEFAULT)
		//0x0ab7		CII_afNBR_swNShift_cmpt
0xFFC0FEA5,	//0x0ab8		VoC_NOP	|	VoC_shr32_rr(ACC1,REG4,DEFAULT)
		//0x0aba		VoC_endloop1
0xFF1FDDD5,	//0x0aba		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xE0165634,	//0x0abc		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xC3345642,	//0x0abe		VoC_sub16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x3,DEFAULT)
0xF68778FC,	//0x0ac0		VoC_movreg16(REG7,REG4,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xC0A25A34,	//0x0ac2		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x2,DEFAULT)
0xF3F84134,	//0x0ac4		VoC_lw16i_short(INC0,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF00B77D1,	//0x0ac6		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0xF3FA6713,	//0x0ac8		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xF7E459DC,	//0x0aca		VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x0E6F2B80,	//0x0acc		VoC_jal(CII_L_mpy_ls_opt)
0x59C4930D,	//0x0ace		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add32inc_rp(ACC1,ACC0,REG1,DEFAULT)
0x2B80F7C4,	//0x0ad0		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)
0xFBFC0E6F,	//0x0ad2		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0x31C7C92D,	//0x0ad4		VoC_bnez16_r(CII_afNBR_incr_invert,REG7)(lo)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xF0500AD8,	//0x0ad6		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_bnez16_r(CII_afNBR_incr_invert,REG7)(hi)
		//0x0ad8		CII_afNBR_incr_invert
0xFEA5D614,	//0x0ad8		VoC_shr32_rr(ACC1,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xDDD5C3F7,	//0x0ada		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
		//0x0adb		VoC_endloop0
0xD90B5624,	//0x0adc		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0xD9117027,	//0x0ade		VoC_lw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xD9185625,	//0x0ae0		VoC_lw32_sd(REG01,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0x07B6E43D,	//0x0ae2		VoC_sub16_rd(REG6,REG6,0x51c)(lo)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0x34B4051C,	//0x0ae4		VoC_bngt16_rr(CII_afNBR_swap1,REG6,REG4)(lo)	|	VoC_sub16_rd(REG6,REG6,0x51c)(hi)
0x31C50AED,	//0x0ae6		VoC_bnez16_r(CII_afNBR_swap1,REG5)(lo)	|	VoC_bngt16_rr(CII_afNBR_swap1,REG6,REG4)(hi)
0x60400AED,	//0x0ae8		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_bnez16_r(CII_afNBR_swap1,REG5)(hi)
0x6061F602,	//0x0aea		VoC_movreg16(REG1,REG3,DEFAULT)	|	VoC_movreg16(REG2,REG0,IN_PARALLEL)
0xF051F623,	//0x0aec		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_movreg16(REG3,REG1,IN_PARALLEL)
		//0x0aed		CII_afNBR_swap1
0x0AF535A6,	//0x0aee		VoC_bne16_rr(CII_afNBR_swap2,REG4,REG6)
0x0AF431C5,	//0x0af0		VoC_bnez16_r(CII_afNBR_swap3,REG5)
0xF6616040,	//0x0af2		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
		//0x0af4		CII_afNBR_swap3
0xD655D921,	//0x0af4		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_lw32_sd(REG23,0x3,DEFAULT)
		//0x0af5		CII_afNBR_swap2
0x413CC17D,	//0x0af6		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xDA55D90B,	//0x0af8		VoC_sw16_sd(REG5,0x4,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,IN_PARALLEL)
0xF3FB5A24,	//0x0afa		VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x1,DEFAULT)
0x5A43D635,	//0x0afc		VoC_sw16_sd(REG3,0x3,DEFAULT)	|	VoC_lw16_sd(REG5,0x2,DEFAULT)
0x35A6F00A,	//0x0afe		VoC_bne16_rr(CII_afNBR_loop_start,REG4,REG6)(lo)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xE8A20A91,	//0x0b00		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_bne16_rr(CII_afNBR_loop_start,REG4,REG6)(hi)
0x5F84FF01,	//0x0b02		VoC_pop16(REG4,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
		//0x0b03		VoC_endloop0
0x7030DF00,	//0x0b04		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0x1484F005,	//0x0b06		VoC_lw32_d(ACC0,0x382)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x67C30382,	//0x0b08		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw32_d(ACC0,0x382)(hi)
0x93159315,	//0x0b0a		VoC_add32inc_rp(ACC1,ACC0,REG2,DEFAULT)	|	VoC_add32inc_rp(ACC1,ACC0,REG2,IN_PARALLEL)
		//0x0b0c		VoC_endloop0
0x6062DC8B,	//0x0b0c		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)
0x67C5F620,	//0x0b0e		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_movreg16(REG0,REG1,IN_PARALLEL)
0x9316F3FD,	//0x0b10		VoC_add32inc_rp(RL6,ACC0,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xDC8D931F,	//0x0b12		VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_add32inc_rp(RL7,ACC0,REG3,DEFAULT)
		//0x0b14		VoC_endloop0
0xDF82DC9F,	//0x0b14		VoC_pop16(REG2,DEFAULT)	|	VoC_sw16inc_p(RL7_HI,REG1,DEFAULT)
		//0x0b15		CII_lpcCorrQntz_opt_no_NewRecur
0x0712F052,	//0x0b16		VoC_add16_rd(REG2,REG2,0x370)(lo)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x0B130370,	//0x0b18		VoC_sub16_dr(REG3,0x51e,REG2)(lo)	|	VoC_add16_rd(REG2,REG2,0x370)(hi)
0x31C3051E,	//0x0b1a		VoC_bnez16_r(CII_lpcCorrQntz_opt_iSeg_loop,REG3)(lo)	|	VoC_sub16_dr(REG3,0x51e,REG2)(hi)
0x5FA90A09,	//0x0b1c		VoC_pop16(RA,DEFAULT)	|	VoC_bnez16_r(CII_lpcCorrQntz_opt_iSeg_loop,REG3)(hi)
0x7031DF00,	//0x0b1e		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0xDF00DF00,	//0x0b20		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0x65371A08,	//0x0b22		VoC_lw16i_set_inc(REG0,0x6537,0x42)
0xD887DF01,	//0x0b24		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xD887E862,	//0x0b26		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0b28		VoC_endloop0
0xE580DCB7,	//0x0b28		VoC_return	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x0b2a		CII_findBestInQuantList_opt
0x0A81DFC0,	//0x0b2a		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_push16(REG0,DEFAULT)
0x70257FFF,	//0x0b2c		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16i(REG1,0x7fff)(hi)
0xD8B2D8B6,	//0x0b2e		VoC_lw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)
0xDC85E705,	//0x0b30		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x0700DC82,	//0x0b32		VoC_add16_rd(REG0,REG0,0x342)(lo)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xDC010342,	//0x0b34		VoC_sw16_p(REG1,REG0,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x342)(hi)
		//0x0b35		VoC_endloop0
0xF1085F80,	//0x0b36		VoC_lw16i_short(INC0,0x42,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x051C0700,	//0x0b38		VoC_add16_rd(REG0,REG0,0x51c)
0xF1094229,	//0x0b3a		VoC_lw16i_short(INC1,0x42,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG5,DEFAULT)
0xDF40FFC0,	//0x0b3c		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0x0B552E31,	//0x0b3e		VoC_loop_r(1,REG6)
0xE00658B5,	//0x0b40		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xD9086712,	//0x0b42		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0x0B5031C6,	//0x0b44		VoC_bnez16_r(findBestInQuantList_LABEL3,REG6)
0x343DD807,	//0x0b46		VoC_bgt16_rr(findBestInQuantList_LABEL1,REG7,REG5)(lo)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x5E080B4C,	//0x0b48		VoC_inc_p(REG1,DEFAULT)	|	VoC_bgt16_rr(findBestInQuantList_LABEL1,REG7,REG5)(hi)
0xE5C9DE00,	//0x0b4a		VoC_jump(findBestInQuantList_LABEL2)	|	VoC_inc_p(REG0,IN_PARALLEL)
		//0x0b4c		findBestInQuantList_LABEL1
0xD8177026,	//0x0b4c		VoC_lw16_p(REG7,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xE5C3DC92,	//0x0b4e		VoC_jump(findBestInQuantList_LABEL4)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
		//0x0b50		findBestInQuantList_LABEL3
0xDC97D817,	//0x0b50		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
		//0x0b52		findBestInQuantList_LABEL4
0xDC85D805,	//0x0b52		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
		//0x0b54		findBestInQuantList_LABEL2
		//0x0b54		VoC_endloop0
0xDE10FFC0,	//0x0b54		VoC_inc_p(REG2,DEFAULT)	|	VoC_NOP
		//0x0b55		VoC_endloop1
0xE580DF00,	//0x0b56		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0b58		CII_getNextVec_opt
0x22BB2005,	//0x0b58		VoC_lw16d_set_inc(REG1,0x22bb,0x1)
0x22B60709,	//0x0b5a		VoC_add16_rd(REG1,REG1,0x22b6)
0x54C00A80,	//0x0b5c		VoC_lw16i(REG0,0x54c0)
0xD8947005,	//0x0b5e		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFBC26086,	//0x0b60		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x00FF1606,	//0x0b62		VoC_and16_ri(REG6,0xff)
0xD8944187,	//0x0b64		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG6,REG0,DEFAULT)
0x22B8071B,	//0x0b66		VoC_add16_rd(REG3,REG3,0x22b8)
0xD8774146,	//0x0b68		VoC_lw16_p(REG7,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG0,DEFAULT)
0x22B60789,	//0x0b6a		VoC_sub16_rd(REG1,REG1,0x22b6)
0xE0055866,	//0x0b6c		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xDF43E087,	//0x0b6e		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0x00FF1607,	//0x0b70		VoC_and16_ri(REG7,0xff)
0xC1C77BC2,	//0x0b72		VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xE0354146,	//0x0b74		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG0,DEFAULT)
0xC0EA5877,	//0x0b76		VoC_add16_rr(REG2,REG3,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xDF02D866,	//0x0b78		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x22B96C0D,	//0x0b7a		VoC_bez16_d(N_iThree_L2,0x22b9)
0x22BA6E07,	//0x0b7c		VoC_bnez16_d(N_iThree_L1,0x22ba)
0xF6A47020,	//0x0b7e		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF6E660C5,	//0x0b80		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF000E5C6,	//0x0b82		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jump(N_iThree_LE)
		//0x0b83		N_iThree_L1
0x03700789,	//0x0b84		VoC_sub16_rd(REG1,REG1,0x370)
0xDC27E5C2,	//0x0b86		VoC_sw16_p(REG7,REG2,DEFAULT)	|	VoC_jump(N_iThree_LE)
		//0x0b87		N_iThree_L2
		//0x0b88		N_iThree_LE
0xDCB5DCB4,	//0x0b88		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x1580DC36,	//0x0b8a		VoC_sw32_d(REG01,0x22ba)(lo)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
0xE58022BA,	//0x0b8c		VoC_return	|	VoC_sw32_d(REG01,0x22ba)(hi)
		//0x0b8e		CII_setupPreQ
0xC2B9F027,	//0x0b8e		VoC_sub16_rr(REG1,REG2,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x0A80F8F1,	//0x0b90		VoC_lw16i(REG0,0x55c0)(lo)	|	VoC_shr16_ri(REG1,0xfffffffe,DEFAULT)
0xC04055C0,	//0x0b92		VoC_add16_rr(REG0,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG0,0x55c0)(hi)
0xD805C03C,	//0x0b94		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_add16_rr(REG4,REG0,REG7,DEFAULT)
0x1505B928,	//0x0b96		VoC_sw16_d(REG5,0x22b8)(lo)	|	VoC_sub16_pr(REG0,REG4,REG5,DEFAULT)
0x401822B8,	//0x0b98		VoC_be16_rd(SETUPPREQ_100,REG0,0x51c)(lo)	|	VoC_sw16_d(REG5,0x22b8)(hi)
0xF007051C,	//0x0b9a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_be16_rd(SETUPPREQ_100,REG0,0x51c)(hi)
		//0x0b9c		SETUPPREQ_100
0xF7C57024,	//0x0b9c		VoC_movreg16(REG5,RL7_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x051C402A,	//0x0b9e		VoC_be16_rd(SETUPPREQ_2,REG2,0x51c)
0x051D40A2,	//0x0ba0		VoC_be16_rd(SETUPPREQ_3,REG2,0x51d)
0xE060E0C5,	//0x0ba2		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x0ba3		SETUPPREQ_2
0x051D081B,	//0x0ba4		VoC_mult16_rd(REG3,REG3,0x51d)
0xF80BE420,	//0x0ba6		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_and16_rr(REG0,REG4,DEFAULT)
0x0BAE3180,	//0x0ba8		VoC_bez16_r(SETUPPREQ_end,REG0)
0xE5C3F004,	//0x0baa		VoC_jump(SETUPPREQ_end)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0bac		SETUPPREQ_3
0xF8FB61E5,	//0x0bac		VoC_shr16_ri(REG3,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_HI,DEFAULT)
		//0x0bae		SETUPPREQ_end
0x22B91507,	//0x0bae		VoC_sw16_d(REG7,0x22b9)
0x22B61505,	//0x0bb0		VoC_sw16_d(REG5,0x22b6)
0x22BB1503,	//0x0bb2		VoC_sw16_d(REG3,0x22bb)
0x22BA1504,	//0x0bb4		VoC_sw16_d(REG4,0x22ba)
0xDFE9E580,	//0x0bb6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0bb7		CII_flat_recursion_opt
0xDD09DD10,	//0x0bb8		VoC_sw32_sd(REG23,0x0,DEFAULT)	|	VoC_sw32_sd(REG01,0x1,DEFAULT)
0xD919D920,	//0x0bba		VoC_lw32_sd(REG23,0x2,DEFAULT)	|	VoC_lw32_sd(REG01,0x3,DEFAULT)
0x59CDD9C4,	//0x0bbc		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x59D6FEB4,	//0x0bbe		VoC_lw32inc_p(RL6,REG2,DEFAULT)	|	VoC_shr32_rr(ACC0,REG6,IN_PARALLEL)
0x59DFFEB5,	//0x0bc0		VoC_lw32inc_p(RL7,REG3,DEFAULT)	|	VoC_shr32_rr(ACC1,REG6,IN_PARALLEL)
0x5D44FEB6,	//0x0bc2		VoC_sw32_sd(ACC0,0x7,DEFAULT)	|	VoC_shr32_rr(RL6,REG6,IN_PARALLEL)
0x5D3DFEB7,	//0x0bc4		VoC_sw32_sd(ACC1,0x6,DEFAULT)	|	VoC_shr32_rr(RL7,REG6,IN_PARALLEL)
0x2B80C92C,	//0x0bc6		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
0xDD360E6F,	//0x0bc8		VoC_sw32_sd(RL6,0x5,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0x5D2FFF25,	//0x0bca		VoC_sw32_sd(RL7,0x4,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x2B80C9F4,	//0x0bcc		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_add32_rr(ACC0,RL7,RL6,IN_PARALLEL)
0xDFA90E6F,	//0x0bce		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xDD20FF26,	//0x0bd0		VoC_sw32_sd(REG01,0x3,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xD910DD19,	//0x0bd2		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_sw32_sd(REG23,0x2,DEFAULT)
0xE580D909,	//0x0bd4		VoC_return	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
		//0x0bd6		CII_flat_opt
0x0A82DFE9,	//0x0bd6		VoC_lw16i(REG2,0x256a)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A83256A,	//0x0bd8		VoC_lw16i(REG3,0x653a)(lo)	|	VoC_lw16i(REG2,0x256a)(hi)
0x0A84653A,	//0x0bda		VoC_lw16i(REG4,0x63aa)(lo)	|	VoC_lw16i(REG3,0x653a)(hi)
0xDFC163AA,	//0x0bdc		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i(REG4,0x63aa)(hi)
0xDF415FC4,	//0x0bde		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xDFC1DFC0,	//0x0be0		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDFC3DFC2,	//0x0be2		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xF229DFC4,	//0x0be4		VoC_lw16i_short(ACC0_HI,0x11,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x7F0B0A88,	//0x0be6		VoC_lw16i(ACC0_LO,0x7f0b)
0x0BEC2D40,	//0x0be8		VoC_loop_i(0x0,0xa0)
0xF81ED886,	//0x0bea		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x0bec		VoC_endloop0
0xD650CE36,	//0x0bec		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_mac32_rr(REG6,REG6,DEFAULT)
0x56840701,	//0x0bee		VoC_add16_rd(REG1,REG0,0x5684)
0xE948FF26,	//0x0bf0		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xD894D886,	//0x0bf2		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF81C781E,	//0x0bf4		VoC_shr16_ri(REG4,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
0xCE24CEB6,	//0x0bf6		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_msu32_rr(REG6,REG6,DEFAULT)
0xE526FFC0,	//0x0bf8		VoC_or32_rr(RL6,ACC0,DEFAULT)	|	VoC_NOP
		//0x0bf9		VoC_endloop0
0x2B80FF34,	//0x0bfa		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0xF00702BA,	//0x0bfc		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05200B09,	//0x0bfe		VoC_sub16_dr(REG1,0x520,REG1)
0x0C063201,	//0x0c00		VoC_bltz16_r(COV32a,REG1)
0xC077F026,	//0x0c02		VoC_add16_rr(REG7,REG1,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC1F7F80F,	//0x0c04		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x0c06		COV32a
0xF8FEE0E6,	//0x0c06		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xDFC6D650,	//0x0c08		VoC_push16(REG6,DEFAULT)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x26FA1805,	//0x0c0a		VoC_lw16i_set_inc(REG1,0x26fa,0x1)
0x2D54D884,	//0x0c0c		VoC_loop_i(0x0,0xaa)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFE3C0C11,	//0x0c0e		VoC_shr16_rr(REG4,REG7,DEFAULT)	|	VoC_loop_i(0x0,0xaa)(hi)
0xDC94D884,	//0x0c10		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x0c11		VoC_endloop0
0x2C15F7E5,	//0x0c12		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0xFF440CBE,	//0x0c14		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x0370072D,	//0x0c16		VoC_add16_rd(REG5,REG5,0x370)
0x2704180B,	//0x0c18		VoC_lw16i_set_inc(REG3,0x2704,0x2)
0xC2E8F050,	//0x0c1a		VoC_sub16_rr(REG0,REG3,REG5,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xE200DFC7,	//0x0c1c		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x0C212CA0,	//0x0c1e		VoC_loop_i(0x0,0x50)
0xD233D9C3,	//0x0c20		VoC_bimac32inc_rp(REG67,REG3)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0c21		VoC_endloop0
0xF0075F87,	//0x0c22		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x31C5F030,	//0x0c24		VoC_bnez16_r(LAP1,REG5)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDFC70C29,	//0x0c26		VoC_push16(REG7,DEFAULT)	|	VoC_bnez16_r(LAP1,REG5)(hi)
0xFF25FF26,	//0x0c28		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
		//0x0c29		LAP1
0x25280A81,	//0x0c2a		VoC_lw16i(REG1,0x2528)
0xC069C069,	//0x0c2c		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x05234CB5,	//0x0c2e		VoC_bnlt16_rd(cov32kk,REG5,0x523)
0x3185DD8C,	//0x0c30		VoC_bez16_r(LAP2,REG5)(lo)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
0x18070C4D,	//0x0c32		VoC_lw16i_set_inc(REG3,0x2704,0x1)(lo)	|	VoC_bez16_r(LAP2,REG5)(hi)
0xC2E82704,	//0x0c34		VoC_sub16_rr(REG0,REG3,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x2704,0x1)(hi)
0xD1B0D8B6,	//0x0c36		VoC_msu32inc_rp(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xD886E743,	//0x0c38		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDD8CD1B3,	//0x0c3a		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_msu32inc_rp(REG6,REG3,DEFAULT)
		//0x0c3b		VoC_endloop0
		//0x0c3c		cov32kk
0x5617FF2C,	//0x0c3c		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0x0A87FEBC,	//0x0c3e		VoC_lw16i(REG7,0xbd4)(lo)	|	VoC_shr32_rr(ACC0,REG7,IN_PARALLEL)
0xC1EF0BD4,	//0x0c40		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i(REG7,0xbd4)(hi)
0xDF42C1EF,	//0x0c42		VoC_push32(REG45,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
0xFF22D9BB,	//0x0c44		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_lw32_p(REG67,REG7,DEFAULT)
0x2B80DF43,	//0x0c46		VoC_jal(CII_L_mpy_ll_opt)(lo)	|	VoC_push32(REG67,DEFAULT)
0xDF070E62,	//0x0c48		VoC_pop32(RL7,DEFAULT)	|	VoC_jal(CII_L_mpy_ll_opt)(hi)
0xFF2C7F25,	//0x0c4a		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xF7F1DF02,	//0x0c4c		VoC_lw16i_short(INC1,0xffffffff,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
		//0x0c4d		LAP2
0x05240B2C,	//0x0c4e		VoC_sub16_dr(REG4,0x524,REG5)
0x27A31FBC,	//0x0c50		VoC_lw16i_set_inc(REG0,0x27a3,0xffffffff)
0x1FBEC229,	//0x0c52		VoC_lw16i_set_inc(REG2,0x2703,0xffffffff)(lo)	|	VoC_sub16_rr(REG1,REG0,REG5,DEFAULT)
0x0A862703,	//0x0c54		VoC_lw16i(REG6,0x27a4)(lo)	|	VoC_lw16i_set_inc(REG2,0x2703,0xffffffff)(hi)
0xC17627A4,	//0x0c56		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x27a4)(hi)
0xF7F3C176,	//0x0c58		VoC_lw16i_short(INC3,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x31C5C2AB,	//0x0c5a		VoC_bnez16_r(LAP8,REG5)(lo)	|	VoC_sub16_rr(REG3,REG2,REG5,DEFAULT)
0xDDB60C5E,	//0x0c5c		VoC_sw32_p(RL6,REG6,DEFAULT)	|	VoC_bnez16_r(LAP8,REG5)(hi)
		//0x0c5e		LAP8
0xD887E708,	//0x0c5e		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD8A7D1B9,	//0x0c60		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_msu32inc_rp(REG7,REG1,DEFAULT)
0x0736D13B,	//0x0c62		VoC_add16_rd(REG6,REG6,0x51c)(lo)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
0xE526051C,	//0x0c64		VoC_or32_rr(RL6,ACC0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x51c)(hi)
		//0x0c66		VoC_endloop0
0x31C5DDB4,	//0x0c66		VoC_bnez16_r(LAP3,REG5)(lo)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xDF460C86,	//0x0c68		VoC_push32(RL6,DEFAULT)	|	VoC_bnez16_r(LAP3,REG5)(hi)
0xDF047F26,	//0x0c6a		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x02BA2B80,	//0x0c6c		VoC_jal(CII_NORM_L_ACC0)
0xC38ED626,	//0x0c6e		VoC_sub16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0x03700B0F,	//0x0c70		VoC_sub16_dr(REG7,0x370,REG1)
0xFEBD7EBE,	//0x0c72		VoC_shr32_rr(ACC1,REG7,IN_PARALLEL)	|	VoC_shr32_rr(RL6,REG7,DEFAULT)
0xFF35C9AE,	//0x0c74		VoC_movreg32(ACC1,RL6,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
0x03722985,	//0x0c76		VoC_and32_rd(ACC1,0x372)
0x0C7D3345,	//0x0c78		VoC_bnez32_r(cov32and,ACC1)
0x07B6FBFE,	//0x0c7a		VoC_sub16_rd(REG6,REG6,0x370)(lo)	|	VoC_shr32_ri(RL6,0xffffffff,DEFAULT)
0xDF460370,	//0x0c7c		VoC_push32(RL6,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x370)(hi)
		//0x0c7d		cov32and
0x0B0FDA26,	//0x0c7e		VoC_sub16_dr(REG7,0x51c,REG1)(lo)	|	VoC_sw16_sd(REG6,0x1,DEFAULT)
0x1485051C,	//0x0c80		VoC_lw32_d(ACC1,0x27a4)(lo)	|	VoC_sub16_dr(REG7,0x51c,REG1)(hi)
0xFEBD27A4,	//0x0c82		VoC_shr32_rr(ACC1,REG7,DEFAULT)	|	VoC_lw32_d(ACC1,0x27a4)(hi)
0xFF2CDFC7,	//0x0c84		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
		//0x0c86		LAP3
0x0A86D642,	//0x0c86		VoC_lw16i(REG6,0x27a6)(lo)	|	VoC_lw16_sd(REG2,0x3,DEFAULT)
0x565027A6,	//0x0c88		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_lw16i(REG6,0x27a6)(hi)
0x0713F0B0,	//0x0c8a		VoC_add16_rd(REG3,REG2,0x800)(lo)	|	VoC_lw16i_short(INC0,0x2c,IN_PARALLEL)
0x082F0800,	//0x0c8c		VoC_mult16_rd(REG7,REG5,0x51e)(lo)	|	VoC_add16_rd(REG3,REG2,0x800)(hi)
0x5661051E,	//0x0c8e		VoC_lw16_sd(REG1,0x5,DEFAULT)	|	VoC_mult16_rd(REG7,REG5,0x51e)(hi)
0x4038F0B3,	//0x0c90		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_short(INC3,0x2c,IN_PARALLEL)
0xC079F0B2,	//0x0c92		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i_short(INC2,0x2c,IN_PARALLEL)
0x082FC0BA,	//0x0c94		VoC_mult16_rd(REG7,REG5,0x800)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x07920800,	//0x0c96		VoC_sub16_rd(REG2,REG2,0x51e)(lo)	|	VoC_mult16_rd(REG7,REG5,0x800)(hi)
0xC0FB051E,	//0x0c98		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x51e)(hi)
0xC176C176,	//0x0c9a		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x3185DDC5,	//0x0c9c		VoC_bez16_r(LAP10,REG5)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDD950CA0,	//0x0c9e		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_bez16_r(LAP10,REG5)(hi)
		//0x0ca0		LAP10
0xD617DE10,	//0x0ca0		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0xF0B1671A,	//0x0ca2		VoC_lw16i_short(INC1,0x2c,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0x0736D9B4,	//0x0ca4		VoC_add16_rd(REG6,REG6,0x51c)(lo)	|	VoC_lw32_p(ACC0,REG6,DEFAULT)
0xFEBC051C,	//0x0ca6		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x51c)(hi)
0x0CB23185,	//0x0ca8		VoC_bez16_r(LAP7,REG5)
0xFF3B5F43,	//0x0caa		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xFF225F42,	//0x0cac		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x0E622B80,	//0x0cae		VoC_jal(CII_L_mpy_ll_opt)
0xDF03DF02,	//0x0cb0		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
		//0x0cb2		LAP7
0x03704034,	//0x0cb2		VoC_be16_rd(LAP5,REG4,0x370)
0xDDC4DDD4,	//0x0cb4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE5C4DDDC,	//0x0cb6		VoC_jump(LAP6)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0cb8		LAP5
0x0CBB3185,	//0x0cb8		VoC_bez16_r(LAP6,REG5)
0xDDCCDDD4,	//0x0cba		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0cbb		LAP6
		//0x0cbc		VoC_endloop0
0x037007A4,	//0x0cbc		VoC_sub16_rd(REG4,REG4,0x370)
		//0x0cbe		VoC_endloop1
0x1808FF44,	//0x0cbe		VoC_lw16i_set_inc(REG0,0x26fa,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x180926FA,	//0x0cc0		VoC_lw16i_set_inc(REG1,0x2704,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x26fa,0x2)(hi)
0x2CA12704,	//0x0cc2		VoC_loop_i(0x1,0x50)(lo)	|	VoC_lw16i_set_inc(REG1,0x2704,0x2)(hi)
0xD9C30CC6,	//0x0cc4		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x50)(hi)
		//0x0cc6		VoC_endloop1
0x1483D231,	//0x0cc6		VoC_lw32_d(REG67,0xbe8)(lo)	|	VoC_bimac32inc_rp(REG67,REG1)
0x56130BE8,	//0x0cc8		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_lw32_d(REG67,0xbe8)(hi)
0xFE9AFF22,	//0x0cca		VoC_shr32_rr(REG45,REG3,DEFAULT)	|	VoC_movreg32(REG45,ACC0,IN_PARALLEL)
0x0E622B80,	//0x0ccc		VoC_jal(CII_L_mpy_ll_opt)
0xDF075F87,	//0x0cce		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF85DF86,	//0x0cd0		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x0A84DF87,	//0x0cd2		VoC_lw16i(REG4,0x24)(lo)	|	VoC_pop16(REG7,DEFAULT)
0xC1E70024,	//0x0cd4		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x24)(hi)
0xDF84E881,	//0x0cd6		VoC_pop16(REG4,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0cd7		VoC_endloop0
0xDFC6DDBC,	//0x0cd8		VoC_push16(REG6,DEFAULT)	|	VoC_sw32_p(ACC0,REG7,DEFAULT)
0x05220B2C,	//0x0cda		VoC_sub16_dr(REG4,0x522,REG5)
0x3307F007,	//0x0cdc		VoC_bez32_r(EN_FLAT_opt_100,RL7)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x2B800CE1,	//0x0cde		VoC_jal(CII_sqroot_opt)(lo)	|	VoC_bez32_r(EN_FLAT_opt_100,RL7)(hi)
0xF0060F43,	//0x0ce0		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jal(CII_sqroot_opt)(hi)
		//0x0ce1		EN_FLAT_opt_100
0x2805E085,	//0x0ce2		VoC_and16_rd(REG5,0x370)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xDFC60370,	//0x0ce4		VoC_push16(REG6,DEFAULT)	|	VoC_and16_rd(REG5,0x370)(hi)
0x3185DFC6,	//0x0ce6		VoC_bez16_r(EN_FLAT_opt_101,REG5)(lo)	|	VoC_push16(REG6,DEFAULT)
0x0A3B0CEB,	//0x0ce8		VoC_multf32_rd(REG67,REG7,0x350)(lo)	|	VoC_bez16_r(EN_FLAT_opt_101,REG5)(hi)
0xF80C0350,	//0x0cea		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_multf32_rd(REG67,REG7,0x350)(hi)
		//0x0ceb		EN_FLAT_opt_101
0x0CF03204,	//0x0cec		VoC_bltz16_r(EN_FLAT_opt_103,REG4)
0xE5C2FEA3,	//0x0cee		VoC_jump(EN_FLAT_opt_104)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
		//0x0cf0		EN_FLAT_opt_103
0xDF43FF43,	//0x0cf0		VoC_push32(REG67,DEFAULT)	|	VoC_lw32z(REG67,DEFAULT)
		//0x0cf1		EN_FLAT_opt_104
0x0E202B80,	//0x0cf2		VoC_jal(CII_r0Quant_opt)
0xFF435FC6,	//0x0cf4		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
		//0x0cf6		EN_FLAT_opt_LOOP_START
0x0833F033,	//0x0cf6		VoC_mult16_rd(REG3,REG6,0x892)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x0A850892,	//0x0cf8		VoC_lw16i(REG5,0x18c)(lo)	|	VoC_mult16_rd(REG3,REG6,0x892)(hi)
0x7024018C,	//0x0cfa		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16i(REG5,0x18c)(hi)
0xE426C35B,	//0x0cfc		VoC_and16_rr(REG6,REG4,DEFAULT)	|	VoC_sub16_rr(REG3,REG5,REG3,IN_PARALLEL)
0xD655F8FE,	//0x0cfe		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x4175DFC6,	//0x0d00		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xC134C15C,	//0x0d02		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG4,REG5,REG3,IN_PARALLEL)
0xD9A6D9AF,	//0x0d04		VoC_lw32_p(RL6,REG4,DEFAULT)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xFEBF7EBE,	//0x0d06		VoC_shr32_rr(RL7,REG7,IN_PARALLEL)	|	VoC_shr32_rr(RL6,REG7,DEFAULT)
0xD91249F5,	//0x0d08		VoC_lw32_sd(REG45,0x1,IN_PARALLEL)	|	VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)
0xC1344175,	//0x0d0a		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xC11E415D,	//0x0d0c		VoC_add16_rr(REG6,REG4,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xD9A6D9AF,	//0x0d0e		VoC_lw32_p(RL6,REG4,DEFAULT)	|	VoC_lw32_p(RL7,REG5,DEFAULT)
0xFEBF7EBE,	//0x0d10		VoC_shr32_rr(RL7,REG7,IN_PARALLEL)	|	VoC_shr32_rr(RL6,REG7,DEFAULT)
0xD9AF49F4,	//0x0d12		VoC_lw32_p(RL7,REG5,IN_PARALLEL)	|	VoC_add32_rr(ACC0,RL7,RL6,DEFAULT)
0xFEBF59B6,	//0x0d14		VoC_shr32_rr(RL7,REG7,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG6,DEFAULT)
0xC9F7FEBE,	//0x0d16		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_shr32_rr(RL6,REG7,DEFAULT)
0xFA0CC9E4,	//0x0d18		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,RL7,ACC0,DEFAULT)
0xFFC06122,	//0x0d1a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG2,ACC0_HI,DEFAULT)
0x0F382B80,	//0x0d1c		VoC_jal(CII_norm_s_opt)
0x03821482,	//0x0d1e		VoC_lw32_d(REG45,0x382)
0xFE857E84,	//0x0d20		VoC_shr32_rr(ACC1,REG0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG0,DEFAULT)
0xC8A148A8,	//0x0d22		VoC_add32_rr(REG23,REG45,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG45,ACC1,DEFAULT)
0xF6206062,	//0x0d24		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x0D2A3240,	//0x0d26		VoC_bnltz16_r(EN_FLAT_opt_ABS_SWNUM,REG0)
0xE0154340,	//0x0d28		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)
		//0x0d2a		EN_FLAT_opt_ABS_SWNUM
0xD637D673,	//0x0d2a		VoC_lw16_sd(REG7,0x2,DEFAULT)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0x0D353410,	//0x0d2c		VoC_bgt16_rr(EN_FLAT_opt_NOT_NULL_DIV,REG2,REG0)
0x05240B3F,	//0x0d2e		VoC_sub16_dr(REG7,0x524,REG7)
0xE7C1F006,	//0x0d30		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0d32		VoC_endloop0
0x2B00DCB6,	//0x0d32		VoC_jump_lg(EN_FLAT_opt_END)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xE0410E16,	//0x0d34		VoC_movreg16(REG1,REG2,DEFAULT)	|	VoC_jump_lg(EN_FLAT_opt_END)(hi)
		//0x0d35		EN_FLAT_opt_NOT_NULL_DIV
0x02CC2B80,	//0x0d36		VoC_jal(CII_DIV_S)
0x0D3B31C5,	//0x0d38		VoC_bnez16_r(EN_FLAT_opt_NEG_DIV,REG5)
0xF125C352,	//0x0d3a		VoC_lw16i_short(REG5,0x9,DEFAULT)	|	VoC_sub16_rr(REG2,REG5,REG2,DEFAULT)
		//0x0d3b		EN_FLAT_opt_NEG_DIV
0xDA73DCB2,	//0x0d3c		VoC_sw16_sd(REG3,0x6,DEFAULT)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
0x0E16353D,	//0x0d3e		VoC_be16_rr(EN_FLAT_opt_END,REG7,REG5)
0xF0105F44,	//0x0d40		VoC_lw16i_short(INC0,0x4,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xF0A15F44,	//0x0d42		VoC_lw16i_short(INC1,0x28,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xF0125F44,	//0x0d44		VoC_lw16i_short(INC2,0x4,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xF0135F44,	//0x0d46		VoC_lw16i_short(INC3,0x4,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xCC93C37D,	//0x0d48		VoC_multf32_rr(REG67,REG2,REG2,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG7,DEFAULT)
0x091BE044,	//0x0d4a		VoC_add32_rd(REG67,REG67,0x382)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x56160382,	//0x0d4c		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x382)(hi)
0xDFC4D931,	//0x0d4e		VoC_push16(REG4,DEFAULT)	|	VoC_lw32_sd(REG23,0x5,IN_PARALLEL)
0x5680DFC7,	//0x0d50		VoC_lw16_sd(REG0,0x7,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xC0F3C0B2,	//0x0d52		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)
0xC0304031,	//0x0d54		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG6,DEFAULT)
0xF045DFC5,	//0x0d56		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0D5B3186,	//0x0d58		VoC_bez16_r(EN_FLAT_opt_j_1_is_ZERO,REG6)
0xDF40F7C5,	//0x0d5a		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
		//0x0d5b		EN_FLAT_opt_j_1_is_ZERO
0x5F41C028,	//0x0d5c		VoC_push32(REG23,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x40AAC069,	//0x0d5e		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0xDF40C0EB,	//0x0d60		VoC_push32(REG01,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0xDFC55F41,	//0x0d62		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x2B80D686,	//0x0d64		VoC_jal(CII_flat_recursion_opt)(lo)	|	VoC_lw16_sd(REG6,0x7,DEFAULT)
0xD6250BB7,	//0x0d66		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_jal(CII_flat_recursion_opt)(hi)
0xD934E754,	//0x0d68		VoC_lw32_sd(ACC0,0x5,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0x2B80D634,	//0x0d6a		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xD92F0E6F,	//0x0d6c		VoC_lw32_sd(RL7,0x4,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC92CC93C,	//0x0d6e		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDDCD644,	//0x0d70		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0x0BB72B80,	//0x0d72		VoC_jal(CII_flat_recursion_opt)
0xD634D93C,	//0x0d74		VoC_lw16_sd(REG4,0x2,DEFAULT)	|	VoC_lw32_sd(ACC0,0x6,DEFAULT)
0x0E6F2B80,	//0x0d76		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD947,	//0x0d78		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x7,DEFAULT)
0xFFC0C934,	//0x0d7a		VoC_NOP	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x0d7c		VoC_endloop0
0x5625DDC4,	//0x0d7c		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC37DE017,	//0x0d7e		VoC_sub16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x0DD53145,	//0x0d80		VoC_bngtz16_r(LOOP_END_LABEL_FLAT,REG5)
0x0DD22E29,	//0x0d82		VoC_loop_r(1,REG5)
0x0A86D655,	//0x0d84		VoC_lw16i(REG6,0x2c)(lo)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x56A0002C,	//0x0d86		VoC_lw16_sd(REG0,0x9,DEFAULT)	|	VoC_lw16i(REG6,0x2c)(hi)
0xD951C5BC,	//0x0d88		VoC_lw32_sd(REG23,0x9,DEFAULT)	|	VoC_mult16_rr(REG4,REG6,REG7,IN_PARALLEL)
0x4020C12C,	//0x0d8a		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x40A2C021,	//0x0d8c		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG4,IN_PARALLEL)
0x5D20C0E3,	//0x0d8e		VoC_sw32_sd(REG01,0x3,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x5D19D614,	//0x0d90		VoC_sw32_sd(REG23,0x2,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x432DE045,	//0x0d92		VoC_sub16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x4028C336,	//0x0d94		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG6,IN_PARALLEL)
0x40B2C029,	//0x0d96		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG5,IN_PARALLEL)
0x5D10C0E3,	//0x0d98		VoC_sw32_sd(REG01,0x1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x5D09D626,	//0x0d9a		VoC_sw32_sd(REG23,0x0,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,IN_PARALLEL)
0xD644C3BE,	//0x0d9c		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
0xD68667A1,	//0x0d9e		VoC_lw16_sd(REG6,0x7,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x0BB72B80,	//0x0da0		VoC_jal(CII_flat_recursion_opt)
0xD6345934,	//0x0da2		VoC_lw16_sd(REG4,0x2,IN_PARALLEL)	|	VoC_lw32_sd(ACC0,0x5,DEFAULT)
0x0E6F2B80,	//0x0da4		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD92F,	//0x0da6		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x4,DEFAULT)
0xD944C92C,	//0x0da8		VoC_lw32_sd(ACC0,0x7,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x2B80DDDC,	//0x0daa		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xD93F0E6F,	//0x0dac		VoC_lw32_sd(RL7,0x6,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC934C93C,	//0x0dae		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDCCD92C,	//0x0db0		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32_sd(ACC0,0x4,DEFAULT)
0x0E6F2B80,	//0x0db2		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD937,	//0x0db4		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x5,DEFAULT)
0xD93CC92C,	//0x0db6		VoC_lw32_sd(ACC0,0x6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x2B80DDD4,	//0x0db8		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9470E6F,	//0x0dba		VoC_lw32_sd(RL7,0x7,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC934C93C,	//0x0dbc		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDC4D644,	//0x0dbe		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
		//0x0dbf		VoC_endloop0
0x0BB72B80,	//0x0dc0		VoC_jal(CII_flat_recursion_opt)
0xD634592C,	//0x0dc2		VoC_lw16_sd(REG4,0x2,IN_PARALLEL)	|	VoC_lw32_sd(ACC0,0x4,DEFAULT)
0x0E6F2B80,	//0x0dc4		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD937,	//0x0dc6		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x5,DEFAULT)
0xD93CC92C,	//0x0dc8		VoC_lw32_sd(ACC0,0x6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x2B80DDD4,	//0x0dca		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9470E6F,	//0x0dcc		VoC_lw32_sd(RL7,0x7,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC934C93C,	//0x0dce		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDC4D644,	//0x0dd0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
		//0x0dd2		VoC_endloop1
0x0370073F,	//0x0dd2		VoC_add16_rd(REG7,REG7,0x370)
0xD644E5C5,	//0x0dd4		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_jump(LOOP_END_LABEL_FLAT1)
		//0x0dd5		LOOP_END_LABEL_FLAT
0x00240A83,	//0x0dd6		VoC_lw16i(REG3,0x24)
0xD920C29A,	//0x0dd8		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)
		//0x0dd9		LOOP_END_LABEL_FLAT1
0x00240A83,	//0x0dda		VoC_lw16i(REG3,0x24)
0xC2594018,	//0x0ddc		VoC_sub16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xDD20D918,	//0x0dde		VoC_sw32_sd(REG01,0x3,DEFAULT)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0xC0594018,	//0x0de0		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xDD18C09A,	//0x0de2		VoC_sw32_sd(REG01,0x2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x0BB72B80,	//0x0de4		VoC_jal(CII_flat_recursion_opt)
0xDF075F87,	//0x0de6		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF075F87,	//0x0de8		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF07DF07,	//0x0dea		VoC_pop32(RL7,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF845F04,	//0x0dec		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
0x0E6F2B80,	//0x0dee		VoC_jal(CII_L_mpy_ls_opt)
0xC93CDF07,	//0x0df0		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF07492C,	//0x0df2		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDF075F86,	//0x0df4		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x5F84DDD4,	//0x0df6		VoC_pop16(REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x7045D911,	//0x0df8		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,IN_PARALLEL)
0x4364F0B2,	//0x0dfa		VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_lw16i_short(INC2,0x2c,IN_PARALLEL)
0x40A2F0B3,	//0x0dfc		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0x2c,IN_PARALLEL)
0xFF44C0E3,	//0x0dfe		VoC_lw32z(ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xD9D667C4,	//0x0e00		VoC_lw32inc_p(RL6,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD9DF6534,	//0x0e02		VoC_lw32inc_p(RL7,REG3,IN_PARALLEL)	|	VoC_or32_rr(ACC0,RL6,DEFAULT)
		//0x0e04		VoC_endloop0
0xD9D6653C,	//0x0e04		VoC_lw32inc_p(RL6,REG2,IN_PARALLEL)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0xD6267007,	//0x0e06		VoC_lw16_sd(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x03700736,	//0x0e08		VoC_add16_rd(REG6,REG6,0x370)
0x0E1032C4,	//0x0e0a		VoC_bngtz32_r(EN_FLAT_opt_L_TmpA_NPOS,ACC0)
0x02BA2B80,	//0x0e0c		VoC_jal(CII_NORM_L_ACC0)
0x051C0B0F,	//0x0e0e		VoC_sub16_dr(REG7,0x51c,REG1)
		//0x0e10		EN_FLAT_opt_L_TmpA_NPOS
0xDA37DA26,	//0x0e10		VoC_sw16_sd(REG7,0x2,DEFAULT)	|	VoC_sw16_sd(REG6,0x1,DEFAULT)
0x35B1F141,	//0x0e12		VoC_bne16_rr(EN_FLAT_opt_LOOP_START,REG6,REG1)(lo)	|	VoC_lw16i_short(REG1,0xa,DEFAULT)
0xE5C20CF6,	//0x0e14		VoC_jump(EN_FLAT_opt_END_bis)	|	VoC_bne16_rr(EN_FLAT_opt_LOOP_START,REG6,REG1)(hi)
		//0x0e16		EN_FLAT_opt_END
0xDF86DF80,	//0x0e16		VoC_pop16(REG6,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
		//0x0e17		EN_FLAT_opt_END_bis
0xDF87E861,	//0x0e18		VoC_pop16(REG7,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0e19		VoC_endloop0
0x5F80DF80,	//0x0e1a		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDFA9DF04,	//0x0e1c		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(ACC0,IN_PARALLEL)
0xE580DF05,	//0x0e1e		VoC_return	|	VoC_pop32(ACC1,DEFAULT)
		//0x0e20		CII_r0Quant_opt
0x0382091B,	//0x0e20		VoC_add32_rd(REG67,REG67,0x382)
0x0B791808,	//0x0e22		VoC_lw16i_set_inc(REG0,0xb79,0x2)
0xE0066BE5,	//0x0e24		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x1f,DEFAULT)
0x340FD881,	//0x0e26		VoC_bgt16_rr(CII_r0Quant_opt_100,REG1,REG7)(lo)	|	VoC_lw16inc_p(REG1,REG0,DEFAULT)
0x07360E2B,	//0x0e28		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_bgt16_rr(CII_r0Quant_opt_100,REG1,REG7)(hi)
		//0x0e29		VoC_endloop0
0xE5800370,	//0x0e2a		VoC_return	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
		//0x0e2b		CII_r0Quant_opt_100
		//0x0e2c		CII_hnwFilt_opt
0x27301505,	//0x0e2c		VoC_sw16_d(REG5,0x2730)
0x0A85E0C7,	//0x0e2e		VoC_lw16i(REG5,0x27)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x412E0027,	//0x0e30		VoC_add16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x27)(hi)
0x40EBDFC0,	//0x0e32		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_push16(REG0,IN_PARALLEL)
0x5E08E004,	//0x0e34		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x3207E015,	//0x0e36		VoC_bltz16_r(END_LOOP_ADDR_LABEL_ADDED0,REG7)(lo)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x2E390E5F,	//0x0e38		VoC_loop_r(1,REG7)(lo)	|	VoC_bltz16_r(END_LOOP_ADDR_LABEL_ADDED0,REG7)(hi)
0xDFC30E5E,	//0x0e3a		VoC_push16(REG3,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x084C0717,	//0x0e3c		VoC_add16_rd(REG7,REG2,0x84c)
0xE05343E7,	//0x0e3e		VoC_lw16i_short(REG3,0x5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)
0x037E1484,	//0x0e40		VoC_lw32_d(ACC0,0x37e)
0xD007E100,	//0x0e42		VoC_mac32_rp(REG0,REG7,DEFAULT)	|	VoC_movreg16(REG0,ACC0_LO,DEFAULT)
0xC3A75620,	//0x0e44		VoC_sub16_rr(REG7,REG6,REG4,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xC01841DF,	//0x0e46		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG3,DEFAULT)
0x6E0AC0BB,	//0x0e48		VoC_bnez16_d(hnwFilt06,0x2730)(lo)	|	VoC_add16_rr(REG3,REG2,REG7,DEFAULT)
0xE8C52730,	//0x0e4a		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_bnez16_d(hnwFilt06,0x2730)(hi)
0x0E5B3207,	//0x0e4c		VoC_bltz16_r(hnwFilt06_bis,REG7)
0xC3EF5833,	//0x0e4e		VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
		//0x0e50		VoC_endloop0
0xC0BB5118,	//0x0e50		VoC_add16_rr(REG3,REG2,REG7,IN_PARALLEL)	|	VoC_mac32inc_rp(REG3,REG0,DEFAULT)
0xE8C6E5C9,	//0x0e52		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_jump(hnwFilt06_bis)
		//0x0e53		hnwFilt06
0x0E573247,	//0x0e54		VoC_bnltz16_r(hnwFilt05,REG7)
0xC3EFC1CB,	//0x0e56		VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG1,DEFAULT)
		//0x0e57		hnwFilt05
0x5118D833,	//0x0e58		VoC_mac32inc_rp(REG3,REG0,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
		//0x0e59		VoC_endloop0
0xDF83C0BB,	//0x0e5a		VoC_pop16(REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG2,REG7,IN_PARALLEL)
		//0x0e5b		hnwFilt06_bis
0xC12CFBFC,	//0x0e5c		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
		//0x0e5e		VoC_endloop1
0xC069DCB9,	//0x0e5e		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
		//0x0e5f		END_LOOP_ADDR_LABEL_ADDED0
0xE580DF80,	//0x0e60		VoC_return	|	VoC_pop16(REG0,DEFAULT)
		//0x0e62		CII_L_mpy_ll_opt
0xF90C790E,	//0x0e62		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCDE4CD36,	//0x0e64		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_multf32_rr(RL6,REG4,REG6,DEFAULT)
0xFA0CFA86,	//0x0e66		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_shr32_ri(RL6,0x10,DEFAULT)
0xC934CD76,	//0x0e68		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_multf32_rr(RL6,REG5,REG6,DEFAULT)
0xC934FA0E,	//0x0e6a		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0xFA744E2F,	//0x0e6c		VoC_shr32_ri(ACC0,0xe,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG7,DEFAULT)
0xE105E580,	//0x0e6e		VoC_movreg16(REG5,ACC0_LO,DEFAULT)	|	VoC_return
		//0x0e6f		CII_L_mpy_ls_opt
0xCD64F90D,	//0x0e70		VoC_multf32_rr(ACC0,REG5,REG4,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0x4E2CE125,	//0x0e72		VoC_mac32_rr(REG5,REG4,DEFAULT)	|	VoC_movreg16(REG5,ACC0_HI,DEFAULT)
0xE580FA7C,	//0x0e74		VoC_return	|	VoC_shr32_ri(ACC0,0xf,IN_PARALLEL)
		//0x0e76		CII_scaleExcite_opt
0xDFE9993E,	//0x0e76		VoC_push16(RA,DEFAULT)	|	VoC_multf32_rp(RL6,REG4,REG7,DEFAULT)
0xDFC061A2,	//0x0e78		VoC_push16(REG0,IN_PARALLEL)	|	VoC_movreg16(REG2,RL6_HI,DEFAULT)
0x0F382B80,	//0x0e7a		VoC_jal(CII_norm_s_opt)
0xE0137E86,	//0x0e7c		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_shr32_rr(RL6,REG0,DEFAULT)
0xF00441DF,	//0x0e7e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG3,DEFAULT)
0x03821487,	//0x0e80		VoC_lw32_d(RL7,0x382)
0xDF8039C2,	//0x0e82		VoC_pop16(REG0,IN_PARALLEL)	|	VoC_sub16_pr(REG2,REG7,REG0,DEFAULT)
0xE004429A,	//0x0e84		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)
0x0E8B3242,	//0x0e86		VoC_bnltz16_r(scaleExcite01,REG2)
0xF883C314,	//0x0e88		VoC_shr16_ri(REG3,0xfffffff0,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)
0xFE96E5C4,	//0x0e8a		VoC_shr32_rr(RL6,REG2,DEFAULT)	|	VoC_jump(scaleExcite_loop)
		//0x0e8b		scaleExcite01
0xF002C9B9,	//0x0e8c		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_add32_rr(REG23,RL6,RL7,DEFAULT)
		//0x0e8e		scaleExcite_loop
0x49BBDFA9,	//0x0e8e		VoC_add32_rr(REG67,RL6,RL7,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x9BC4FEA7,	//0x0e90		VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)	|	VoC_shr32_rr(RL7,REG4,IN_PARALLEL)
0xC93CED04,	//0x0e92		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0x9BC4FE94,	//0x0e94		VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG2,DEFAULT)
		//0x0e96		VoC_endloop0
0xE580DC99,	//0x0e96		VoC_return	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0e98		CII_quantLag_opt_paris
0x56691402,	//0x0e98		VoC_lw16_d(REG2,0x5669)
0xF6407001,	//0x0e9a		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x56680A84,	//0x0e9c		VoC_lw16i(REG4,0x5668)
0xF808C115,	//0x0e9e		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG5,REG4,REG2,DEFAULT)
		//0x0e9f		QUANTLAG103
0x341ED853,	//0x0ea0		VoC_bgt16_rr(QUANTLAG102,REG3,REG6)(lo)	|	VoC_lw16_p(REG3,REG5,DEFAULT)
0xE0410EA4,	//0x0ea2		VoC_movreg16(REG1,REG2,DEFAULT)	|	VoC_bgt16_rr(QUANTLAG102,REG3,REG6)(hi)
		//0x0ea4		QUANTLAG102
0xC115C042,	//0x0ea4		VoC_add16_rr(REG5,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG1,REG0,DEFAULT)
0x0E9F358A,	//0x0ea6		VoC_bne16_rr(QUANTLAG103,REG1,REG2)
0xE580D853,	//0x0ea8		VoC_return	|	VoC_lw16_p(REG3,REG5,DEFAULT)
		//0x0eaa		CII_get_ipjj_opt_paris
0x034C0A20,	//0x0eaa		VoC_multf32_rd(REG01,REG4,0x34c)
0xF908FFC0,	//0x0eac		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_NOP
0x05200A04,	//0x0eae		VoC_multf32_rd(ACC0,REG0,0x520)
0x0924FFC0,	//0x0eb0		VoC_add32_rd(ACC0,ACC0,0x382)(lo)	|	VoC_NOP
0xE1200382,	//0x0eb2		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x382)(hi)
0x05204428,	//0x0eb4		VoC_bne16_rd(GETIPJJ100,REG0,0x520)
0x0709F000,	//0x0eb6		VoC_add16_rd(REG1,REG1,0x370)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE5800370,	//0x0eb8		VoC_return	|	VoC_add16_rd(REG1,REG1,0x370)(hi)
		//0x0eb9		GETIPJJ100
		//0x0eba		CII_fp_ex_opt
0xE0C4F007,	//0x0eba		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0ebc		fp_ex0
0x0800481F,	//0x0ebc		VoC_blt16_rd(fp_ex03_go,REG7,0x800)
0xDFE9E580,	//0x0ebe		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ebf		fp_ex03_go
0x0EAA2B80,	//0x0ec0		VoC_jal(CII_get_ipjj_opt_paris)
0xDFA9DF43,	//0x0ec2		VoC_pop16(RA,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x08000B3E,	//0x0ec4		VoC_sub16_dr(REG6,0x800,REG7)
0x08004C19,	//0x0ec6		VoC_bnlt16_rd(fp_ex00,REG1,0x800)
0xC1EBC27E,	//0x0ec8		VoC_add16_rr(REG3,REG7,REG5,DEFAULT)	|	VoC_sub16_rr(REG6,REG1,REG7,DEFAULT)
		//0x0ec9		fp_ex00
0x42C9F033,	//0x0eca		VoC_sub16_rr(REG1,REG3,REG1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xDFC6F005,	//0x0ecc		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x0EE73146,	//0x0ece		VoC_bngtz16_r(fp_ex_else,REG6)
0x0ED731C0,	//0x0ed0		VoC_bnez16_r(fp_ex01,REG0)
0xD8906783,	//0x0ed2		VoC_lw16inc_p(REG0,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xDCB0D890,	//0x0ed4		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_lw16inc_p(REG0,REG1,DEFAULT)
		//0x0ed5		VoC_endloop0
0xF0A7E5D1,	//0x0ed6		VoC_lw16i_short(REG7,0x5,DEFAULT)	|	VoC_jump(fp_ex_else)
		//0x0ed7		fp_ex01
0x562C181A,	//0x0ed8		VoC_lw16i_set_inc(REG2,0x562c,0x6)
0x2E31C082,	//0x0eda		VoC_loop_r(1,REG6)(lo)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0xC2790EE5,	//0x0edc		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_loop_r(1,REG6)(hi)
0x1484DFC2,	//0x0ede		VoC_lw32_d(ACC0,0x382)(lo)	|	VoC_push16(REG2,DEFAULT)
0xE9410382,	//0x0ee0		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw32_d(ACC0,0x382)(hi)
		//0x0ee2		VoC_endloop0
0xC279D40A,	//0x0ee2		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG2,DEFAULT)
0x5E08DF82,	//0x0ee4		VoC_inc_p(REG1,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x0ee5		VoC_endloop1
0xDF81DCB9,	//0x0ee6		VoC_pop16(REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)
		//0x0ee7		fp_ex_else
0x41CFDF03,	//0x0ee8		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x3101C134,	//0x0eea		VoC_bgtz16_r(fp_ex0,REG1)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)
0xE5800EBC,	//0x0eec		VoC_return	|	VoC_bgtz16_r(fp_ex0,REG1)(hi)
		//0x0eee		CII_maxCCOverGWithSign_opt_paris
0x00001804,	//0x0eee		VoC_lw16i_set_inc(REG0,0x0,0x1)
0xD8A4E7DB,	//0x0ef0		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDF41D8B5,	//0x0ef2		VoC_push32(REG23,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x0EF83180,	//0x0ef4		VoC_bez16_r(MAXCCOVERGVI103,REG0)
0x0F0A3145,	//0x0ef6		VoC_bngtz16_r(MAXCCOVERGVI101,REG5)
		//0x0ef8		MAXCCOVERGVI103
0xFFC0CD21,	//0x0ef8		VoC_NOP	|	VoC_multf32_rr(REG23,REG4,REG4,DEFAULT)
0x03820909,	//0x0efa		VoC_add32_rd(REG23,REG23,0x382)
0x0F003244,	//0x0efc		VoC_bnltz16_r(MAXCCOVERGVI100,REG4)
0x05180B1B,	//0x0efe		VoC_sub16_dr(REG3,0x518,REG3)
		//0x0f00		MAXCCOVERGVI100
0xCEAFCCF4,	//0x0f00		VoC_msu32_rr(REG5,REG7,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0x0F073180,	//0x0f02		VoC_bez16_r(MAXCCOVERGVI102,REG0)
0x0F073284,	//0x0f04		VoC_bgtz32_r(MAXCCOVERGVI102,ACC0)
0xE067E5C4,	//0x0f06		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_jump(MAXCCOVERGVI101)
		//0x0f07		MAXCCOVERGVI102
0xF60160A6,	//0x0f08		VoC_movreg16(REG1,REG0,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0f0a		MAXCCOVERGVI101
0xDE00DF01,	//0x0f0a		VoC_inc_p(REG0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x0f0b		VoC_endloop0
0xE043E580,	//0x0f0c		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_return
		//0x0f0d		CII_v_con_opt
0x7F0EF033,	//0x0f0e		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x6005F005,	//0x0f10		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x2C29E026,	//0x0f12		VoC_loop_i(0x1,0x14)(lo)	|	VoC_lw16i_short(REG6,0x2,IN_PARALLEL)
0xFF440F21,	//0x0f14		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x14)(hi)
0xC1757F45,	//0x0f16		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xE701FFC0,	//0x0f18		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_NAD
		//0x0f1a		VoC_endloop0
0xD4185410,	//0x0f1a		VoC_mac32inc_pp(REG3,REG0,IN_PARALLEL)	|	VoC_mac32inc_pp(REG2,REG0,DEFAULT)
0x7BFCFF31,	//0x0f1c		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0xE0A0FBFD,	//0x0f1e		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xDC9BDC99,	//0x0f20		VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0f21		VoC_endloop1
0xDFE9E580,	//0x0f22		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f23		CII_g_corr1_opt_paris
0xEA81FF44,	//0x0f24		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0f26		VoC_endloop0
0x2B80D500,	//0x0f26		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0xDFA902BA,	//0x0f28		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xE580FFC0,	//0x0f2a		VoC_return	|	VoC_NOP
		//0x0f2c		CII_b_con_opt
0x03721481,	//0x0f2c		VoC_lw32_d(REG23,0x372)
0xF026E708,	//0x0f2e		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xF667642E,	//0x0f30		VoC_movreg16(REG7,REG3,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG5,DEFAULT)
0x0F3531C6,	//0x0f32		VoC_bnez16_r(b_con01,REG6)
0xF80DC29F,	//0x0f34		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_sub16_rr(REG7,REG2,REG3,DEFAULT)
		//0x0f35		b_con01
		//0x0f36		VoC_endloop0
0xE580DC87,	//0x0f36		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0f38		CII_norm_s_opt
0x00001FBC,	//0x0f38		VoC_lw16i_set_inc(REG0,0x0,0xffffffff)
0x0F423182,	//0x0f3a		VoC_bez16_r(NORM_S_RETURN,REG2)
0xE9E3FFC0,	//0x0f3c		VoC_loop_i_short(0xf,DEFAULT)	|	VoC_NAD
0x037E4C22,	//0x0f3e		VoC_bnlt16_rd(NORM_S_RETURN,REG2,0x37e)
		//0x0f40		VoC_endloop0
0xDE0078FA,	//0x0f40		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
		//0x0f42		NORM_S_RETURN
0xFA0FE580,	//0x0f42		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_return
		//0x0f43		CII_sqroot_opt
0x037209BB,	//0x0f44		VoC_sub32_rd(REG67,RL7,0x372)
0x0372093F,	//0x0f46		VoC_add32_rd(RL7,RL7,0x372)
0xF6E66847,	//0x0f48		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0xCEBEFF44,	//0x0f4a		VoC_msu32_rr(REG7,REG6,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x6126E0C5,	//0x0f4c		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xC93FFA0C,	//0x0f4e		VoC_add32_rr(RL7,ACC0,RL7,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)
		//0x0f4f		VoC_endloop0
0xFFC0CDBC,	//0x0f50		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)
0x03820924,	//0x0f52		VoC_add32_rd(ACC0,ACC0,0x382)
0xE127CEBE,	//0x0f54		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_msu32_rr(REG7,REG6,DEFAULT)
0xCE35CEB5,	//0x0f56		VoC_mac32_rr(REG6,REG5,DEFAULT)	|	VoC_msu32_rr(REG6,REG5,DEFAULT)
0xC9E4E126,	//0x0f58		VoC_add32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x50000A85,	//0x0f5a		VoC_lw16i(REG5,0x5000)
0x0A85CEBD,	//0x0f5c		VoC_lw16i(REG5,0x7000)(lo)	|	VoC_msu32_rr(REG7,REG5,DEFAULT)
0xCDAF7000,	//0x0f5e		VoC_multf32_rr(RL7,REG6,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x7000)(hi)
0xC9E3FFC0,	//0x0f60		VoC_add32_rr(REG67,RL7,ACC0,DEFAULT)	|	VoC_NOP
0xDFE9E580,	//0x0f62		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f63		CII_sub_rs_rrNs
0x2800E020,	//0x0f64		VoC_and16_rd(REG0,0x370)(lo)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x7F270370,	//0x0f66		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_and16_rd(REG0,0x370)(hi)
0x2B80FF05,	//0x0f68		VoC_jal(CII_sqroot_opt)(lo)	|	VoC_movreg32(ACC1,REG01,IN_PARALLEL)
0xFF2A0F43,	//0x0f6a		VoC_movreg32(REG45,ACC1,DEFAULT)	|	VoC_jal(CII_sqroot_opt)(hi)
0x3184F006,	//0x0f6c		VoC_bez16_r(rs_rrNs00,REG4)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x07AD0F73,	//0x0f6e		VoC_sub16_rd(REG5,REG5,0x370)(lo)	|	VoC_bez16_r(rs_rrNs00,REG4)(hi)
0x0A3B0370,	//0x0f70		VoC_multf32_rd(REG67,REG7,0x350)(lo)	|	VoC_sub16_rd(REG5,REG5,0x370)(hi)
0xDF010350,	//0x0f72		VoC_pop32(REG23,DEFAULT)	|	VoC_multf32_rd(REG67,REG7,0x350)(hi)
		//0x0f73		rs_rrNs00
0x2B80FF1C,	//0x0f74		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xF80D02BA,	//0x0f76		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B09,	//0x0f78		VoC_sub16_dr(REG1,0x518,REG1)
0xFE8B434D,	//0x0f7a		VoC_shr32_rr(REG67,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
0x03820918,	//0x0f7c		VoC_add32_rd(REG01,REG67,0x382)
0xF808D8A0,	//0x0f7e		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16inc_p(REG0,REG2,DEFAULT)
0xFFC05826,	//0x0f80		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG6,REG2,DEFAULT)
0x02CC2B80,	//0x0f82		VoC_jal(CII_DIV_S)
0x0F382B80,	//0x0f84		VoC_jal(CII_norm_s_opt)
0x07ADC3AD,	//0x0f86		VoC_sub16_rd(REG5,REG5,0x370)(lo)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
0x43450370,	//0x0f88		VoC_sub16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x370)(hi)
0xDCB2DFA9,	//0x0f8a		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_pop16(RA,IN_PARALLEL)
0xE580DCB5,	//0x0f8c		VoC_return	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x0f8e		CII_rs_rrNs_opt
0xDF415FE9,	//0x0f8e		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0F232B80,	//0x0f90		VoC_jal(CII_g_corr1_opt_paris)
0x0F632B80,	//0x0f92		VoC_jal(CII_sub_rs_rrNs)
0xF050DFA9,	//0x0f94		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE0C2E580,	//0x0f96		VoC_movreg16(REG2,REG6,DEFAULT)	|	VoC_return
		//0x0f97		CII_lpcZsIir_opt
0x1809F052,	//0x0f98		VoC_lw16i_set_inc(REG1,0x648c,0x2)(lo)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xDF47648C,	//0x0f9a		VoC_push32(RL7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x648c,0x2)(hi)
0xD9D76A83,	//0x0f9c		VoC_lw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xDDCFD9D7,	//0x0f9e		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG2,DEFAULT)
		//0x0f9f		VoC_endloop0
0x60A0DFC7,	//0x0fa0		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x6061F004,	//0x0fa2		VoC_movreg16(REG1,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x5885F3FD,	//0x0fa4		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0x1806FF47,	//0x0fa6		VoC_lw16i_set_inc(REG2,0x648c,0x1)(lo)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x5C15648C,	//0x0fa8		VoC_sw16_p(REG5,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x648c,0x1)(hi)
0x0A8EE016,	//0x0faa		VoC_lw16i(RL7_LO,0x800)(lo)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x7F3C0800,	//0x0fac		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_lw16i(RL7_LO,0x800)(hi)
0x0AC7DE18,	//0x0fae		VoC_lw16i(REG7,0x8000)(lo)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x2C150000,	//0x0fb0		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i(REG7,0x8000)(hi)
0xE7810FBD,	//0x0fb2		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
		//0x0fb4		VoC_endloop0
0x42B2D491,	//0x0fb4		VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_msu32inc_pp(REG2,REG1,DEFAULT)
0x51B8F661,	//0x0fb6		VoC_msu32inc_rp(REG7,REG0,DEFAULT)	|	VoC_movreg16(REG1,REG3,IN_PARALLEL)
0x4036FBE4,	//0x0fb8		VoC_be16_rd(lpcZsIir_NP_IS_MIN,REG6,0x524)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0x07360524,	//0x0fba		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_be16_rd(lpcZsIir_NP_IS_MIN,REG6,0x524)(hi)
0x5CB90370,	//0x0fbc		VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
		//0x0fbd		VoC_endloop1
0xF126FF3C,	//0x0fbe		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
		//0x0fbf		lpcZsIir_NP_IS_MIN
0xF00977D2,	//0x0fc0		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xfffffffe,DEFAULT)
0xC0B24271,	//0x0fc2		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG6,DEFAULT)
0x0FCE2C3B,	//0x0fc4		VoC_loop_i(0x1,0x1d)
0x620ADFC2,	//0x0fc6		VoC_aligninc_pp(REG1,REG2,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x68A2FF3C,	//0x0fc8		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xD591DCB9,	//0x0fca		VoC_bimsu32inc_pp(REG2,REG1)	|	VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)
		//0x0fcb		VoC_endloop0
0xC2F15F82,	//0x0fcc		VoC_sub16_rr(REG1,REG3,REG6,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
		//0x0fce		VoC_endloop1
0xFBE451B8,	//0x0fce		VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)	|	VoC_msu32inc_rp(REG7,REG0,DEFAULT)
0xDF075F87,	//0x0fd0		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xF0057032,	//0x0fd2		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xE580DCB9,	//0x0fd4		VoC_return	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
		//0x0fd6		CII_v_srch_opt
0x07A5DFE9,	//0x0fd6		VoC_sub16_rd(REG5,REG4,0x370)(lo)	|	VoC_push16(RA,DEFAULT)
0xF0500370,	//0x0fd8		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_sub16_rd(REG5,REG4,0x370)(hi)
0xF0095FC0,	//0x0fda		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x666A180A,	//0x0fdc		VoC_lw16i_set_inc(REG2,0x666a,0x2)
0x00280A83,	//0x0fde		VoC_lw16i(REG3,0x28)
0xFF46670D,	//0x0fe0		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0x2C29FF44,	//0x0fe2		VoC_loop_i(0x1,0x14)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xD9C30FE6,	//0x0fe4		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x14)(hi)
		//0x0fe6		VoC_endloop1
0xC259D231,	//0x0fe6		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_bimac32inc_rp(REG67,REG1)
0x0FEC33C4,	//0x0fe8		VoC_bnltz32_r(v_srch02,ACC0)
0x036E0BA4,	//0x0fea		VoC_sub32_dr(ACC0,0x36e,ACC0)
		//0x0fec		v_srch02
0xC9A6DDD4,	//0x0fec		VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0fed		VoC_endloop0
0xF0057030,	//0x0fee		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xFFC07F34,	//0x0ff0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0x02BA2B80,	//0x0ff2		VoC_jal(CII_NORM_L_ACC0)
0x05180B09,	//0x0ff4		VoC_sub16_dr(REG1,0x518,REG1)
0x180AFF43,	//0x0ff6		VoC_lw16i_set_inc(REG2,0x666a,0x2)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0xE705666A,	//0x0ff8		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x666a,0x2)(hi)
0xFE8FD997,	//0x0ffa		VoC_shr32_rr(RL7,REG1,DEFAULT)	|	VoC_lw32_p(RL7,REG2,DEFAULT)
0xDDD7FA0F,	//0x0ffc		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
		//0x0ffe		VoC_endloop0
0xDF82CAFB,	//0x0ffe		VoC_pop16(REG2,DEFAULT)	|	VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)
0x6472180B,	//0x1000		VoC_lw16i_set_inc(REG3,0x6472,0x2)
0x08470820,	//0x1002		VoC_mult16_rd(REG0,REG4,0x847)
0x6603DF41,	//0x1004		VoC_loop_r_short(REG0,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xD9D4D9D4,	//0x1006		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x1008		VoC_endloop0
0x1809DDDC,	//0x1008		VoC_lw16i_set_inc(REG1,0x65da,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x700065DA,	//0x100a		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x65da,0x2)(hi)
0x071BDF01,	//0x100c		VoC_add16_rd(REG3,REG3,0x800)(lo)	|	VoC_pop32(REG23,IN_PARALLEL)
0xDFC20800,	//0x100e		VoC_push16(REG2,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x800)(hi)
		//0x1010		v_srch_loop0
0xDFC3C346,	//0x1010		VoC_push16(REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG0,DEFAULT)
0xDFC25E08,	//0x1012		VoC_push16(REG2,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x10213146,	//0x1014		VoC_bngtz16_r(COMPILED_NEW_ADDR6,REG6)
0x10202E31,	//0x1016		VoC_loop_r(1,REG6)
0xFF446A82,	//0x1018		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x101a		VoC_endloop0
0xD612D513,	//0x101a		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG3)
0xF72A610B,	//0x101c		VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,ACC0_LO,DEFAULT)
0x00280A86,	//0x101e		VoC_lw16i(REG6,0x28)
		//0x1020		VoC_endloop1
0xDE00DDCD,	//0x1020		VoC_inc_p(REG0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x1021		COMPILED_NEW_ADDR6
0xE003DF82,	//0x1022		VoC_movreg16(REG3,REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xC059F8FB,	//0x1024		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0x40B2DF83,	//0x1026		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x3485C0F3,	//0x1028		VoC_bngt16_rr(v_srch_loop0,REG0,REG5)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)
0x72861010,	//0x102a		VoC_lw16i_short(REG6,0x14,DEFAULT)	|	VoC_bngt16_rr(v_srch_loop0,REG0,REG5)(hi)
0xC536FF44,	//0x102c		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xE781DF82,	//0x102e		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x1030		VoC_endloop0
0x1807D512,	//0x1030		VoC_lw16i_set_inc(REG3,0x65da,0x1)(lo)	|	VoC_bimac32inc_pp(REG2,REG2)
0xFF2665DA,	//0x1032		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x65da,0x1)(hi)
0x02BA2B80,	//0x1034		VoC_jal(CII_NORM_L_ACC0)
0x051E0B09,	//0x1036		VoC_sub16_dr(REG1,0x51e,REG1)
0x0789FE8E,	//0x1038		VoC_sub16_rd(REG1,REG1,0x370)(lo)	|	VoC_shr32_rr(RL6,REG1,DEFAULT)
0x60620370,	//0x103a		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x370)(hi)
0xDFC7E000,	//0x103c		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0x10552E29,	//0x103e		VoC_loop_r(1,REG5)
0xDE10C346,	//0x1040		VoC_inc_p(REG2,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG0,DEFAULT)
0xD9D45E18,	//0x1042		VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x678AE107,	//0x1044		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0xFE8BF726,	//0x1046		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,IN_PARALLEL)
0x48F6D9D4,	//0x1048		VoC_add32_rr(RL6,REG67,RL6,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0x091BFBFB,	//0x104a		VoC_add32_rd(REG67,REG67,0x382)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x61070382,	//0x104c		VoC_movreg16(REG7,ACC0_LO,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x382)(hi)
0xDCB7F726,	//0x104e		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,IN_PARALLEL)
		//0x104f		VoC_endloop0
0x051C0792,	//0x1050		VoC_sub16_rd(REG2,REG2,0x51c)
0xE006DE00,	//0x1052		VoC_movreg16(REG6,REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x40B2F8FE,	//0x1054		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
		//0x1055		VoC_endloop1
0x7105C0C3,	//0x1056		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)
0x1805F024,	//0x1058		VoC_lw16i_set_inc(REG1,0x2730,0x1)(lo)	|	VoC_lw16i_short(INC0,0x9,IN_PARALLEL)
0x40242730,	//0x105a		VoC_be16_rd(v_srch_siEBits,REG4,0x523)(lo)	|	VoC_lw16i_set_inc(REG1,0x2730,0x1)(hi)
0x70C50523,	//0x105c		VoC_lw16i_short(REG5,0x6,DEFAULT)	|	VoC_be16_rd(v_srch_siEBits,REG4,0x523)(hi)
0xE020F01C,	//0x105e		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x7,IN_PARALLEL)
		//0x105f		v_srch_siEBits
0x666A180B,	//0x1060		VoC_lw16i_set_inc(REG3,0x666a,0x2)
0x40AAC142,	//0x1062		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG2,REG5,REG0,DEFAULT)
0x1487F6B2,	//0x1064		VoC_lw32_d(RL7,0x382)(lo)	|	VoC_movreg16(INC2,REG5,IN_PARALLEL)
0x67430382,	//0x1066		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw32_d(RL7,0x382)(hi)
0x93DB93DB,	//0x1068		VoC_add32inc_rp(REG67,RL7,REG3,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG3,IN_PARALLEL)
		//0x106a		VoC_endloop0
0xC068DC87,	//0x106a		VoC_add16_rr(REG0,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x037007AF,	//0x106c		VoC_sub16_rd(REG7,REG5,0x370)
0x1807C239,	//0x106e		VoC_lw16i_set_inc(REG3,0x65db,0x1)(lo)	|	VoC_sub16_rr(REG1,REG0,REG7,DEFAULT)
0xFFC065DB,	//0x1070		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x65db,0x1)(hi)
0x10882E29,	//0x1072		VoC_loop_r(1,REG5)
0x107C3147,	//0x1074		VoC_bngtz16_r(COMPILED_NEW_LABEL7,REG7)
0xD8B6E7C5,	//0x1076		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xFFC0F8FE,	//0x1078		VoC_NOP	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xDCA6DC96,	//0x107a		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x107b		VoC_endloop0
		//0x107c		COMPILED_NEW_LABEL7
0x0B36D8B6,	//0x107c		VoC_sub16_dr(REG6,0x518,REG6)(lo)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC33E0518,	//0x107e		VoC_sub16_rr(REG6,REG4,REG7,DEFAULT)	|	VoC_sub16_dr(REG6,0x518,REG6)(hi)
0x40F3DC86,	//0x1080		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xC3F7E016,	//0x1082		VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x40B2C149,	//0x1084		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG5,REG1,DEFAULT)
0xC279C57E,	//0x1086		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG5,REG7,IN_PARALLEL)
		//0x1088		VoC_endloop1
0xC56AC2B2,	//0x1088		VoC_mult16_rr(REG2,REG5,REG5,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0x1807F007,	//0x108a		VoC_lw16i_set_inc(REG3,0x2730,0x1)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x5E102730,	//0x108c		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x2730,0x1)(hi)
0xD8B6C0D1,	//0x108e		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG3,REG2,IN_PARALLEL)
0xC3F0E683,	//0x1090		VoC_sub16_rr(REG0,REG7,REG6,DEFAULT)	|	VoC_loop_r_short(REG2,DEFAULT)
0xDC90D8B6,	//0x1092		VoC_sw16inc_p(REG0,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x1093		VoC_endloop0
0x64681805,	//0x1094		VoC_lw16i_set_inc(REG1,0x6468,0x1)
0x40000AC0,	//0x1096		VoC_lw16i(REG0,0xc000)
0xDC90E741,	//0x1098		VoC_sw16inc_p(REG0,REG1,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x1099		VoC_endloop0
0x5FC4DF85,	//0x109a		VoC_push16(REG4,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x1804F006,	//0x109c		VoC_lw16i_set_inc(REG0,0xff,0x1)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x150700FF,	//0x109e		VoC_sw16_d(REG7,0x667c)(lo)	|	VoC_lw16i_set_inc(REG0,0xff,0x1)(hi)
0x1805667C,	//0x10a0		VoC_lw16i_set_inc(REG1,0xbf2,0x1)(lo)	|	VoC_sw16_d(REG7,0x667c)(hi)
0x0A860BF2,	//0x10a2		VoC_lw16i(REG6,0xd32)(lo)	|	VoC_lw16i_set_inc(REG1,0xbf2,0x1)(hi)
0xF0E70D32,	//0x10a4		VoC_lw16i_short(REG7,0x7,DEFAULT)	|	VoC_lw16i(REG6,0xd32)(hi)
0x05234084,	//0x10a6		VoC_be16_rd(v_srch_psw_other,REG4,0x523)
0xE0577810,	//0x10a8		VoC_lw16i_short(REG7,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0CF21805,	//0x10aa		VoC_lw16i_set_inc(REG1,0xcf2,0x1)
0x0D3C0A86,	//0x10ac		VoC_lw16i(REG6,0xd3c)
		//0x10ae		v_srch_psw_other
0xF6227004,	//0x10ae		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xFF15700C,	//0x10b0		VoC_movreg32(ACC1,REG45,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0xCD6A7F34,	//0x10b2		VoC_multf32_rr(REG45,REG5,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0x03821486,	//0x10b4		VoC_lw32_d(RL6,0x382)
0xE124C8B2,	//0x10b6		VoC_movreg16(REG4,ACC0_HI,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL6,DEFAULT)
0x27301807,	//0x10b8		VoC_lw16i_set_inc(REG3,0x2730,0x1)
0x64680A84,	//0x10ba		VoC_lw16i(REG4,0x6468)
0xF6C55F42,	//0x10bc		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xF6067000,	//0x10be		VoC_movreg16(REG6,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDFC35F42,	//0x10c0		VoC_push16(REG3,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x10E92E31,	//0x10c2		VoC_loop_r(1,REG6)
0xDE005896,	//0x10c4		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x00FF1606,	//0x10c6		VoC_and16_ri(REG6,0xff)
0xD8A640F3,	//0x10c8		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x4136F946,	//0x10ca		VoC_add16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x5F40C171,	//0x10cc		VoC_push32(REG01,DEFAULT)	|	VoC_add16_rr(REG1,REG5,REG6,IN_PARALLEL)
0xFFC0F780,	//0x10ce		VoC_NAD	|	VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)
0xD18367C4,	//0x10d0		VoC_msu32inc_rp(REG0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x8149010E,	//0x10d2		VoC_add16_rp(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG4,REG1,DEFAULT)
		//0x10d4		VoC_endloop0
0xE0015433,	//0x10d4		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_mac32inc_pp(REG6,REG3,DEFAULT)
0x84755083,	//0x10d6		VoC_sub16_rp(REG5,REG1,REG6,IN_PARALLEL)	|	VoC_msu32_rp(REG0,REG3,DEFAULT)
0xD91A6161,	//0x10d8		VoC_lw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC1_HI,DEFAULT)
0xCC485C65,	//0x10da		VoC_multf32_rr(REG01,REG1,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG6,DEFAULT)
0xC830E126,	//0x10dc		VoC_add32_rr(REG01,REG01,RL6,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xCC624DAF,	//0x10de		VoC_multf32_rr(REG45,REG1,REG4,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG6,REG5,DEFAULT)
0x3697FFC0,	//0x10e0		VoC_bngt32_rr(v_srch_no_update,REG45,RL7)(lo)	|	VoC_NOP
0xE0C010E8,	//0x10e2		VoC_movreg16(REG0,REG6,DEFAULT)	|	VoC_bngt32_rr(v_srch_no_update,REG45,RL7)(hi)
0xDD18D908,	//0x10e4		VoC_sw32_sd(REG01,0x2,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x667C1500,	//0x10e6		VoC_sw16_d(REG0,0x667c)
		//0x10e8		v_srch_no_update
0x590ADF00,	//0x10e8		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x10e9		VoC_endloop1
0x5F83D613,	//0x10ea		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16_sd(REG3,0x0,IN_PARALLEL)
0x5F84DF02,	//0x10ec		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x1406DF06,	//0x10ee		VoC_lw16_d(REG6,0x667c)(lo)	|	VoC_pop32(RL6,IN_PARALLEL)
0x60C0667C,	//0x10f0		VoC_movreg16(REG0,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x667c)(hi)
0x7808FF46,	//0x10f2		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x64B0E015,	//0x10f4		VoC_xor16_rr(REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x1809E002,	//0x10f6		VoC_lw16i_set_inc(REG1,0x666a,0x2)(lo)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xE70A666A,	//0x10f8		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x666a,0x2)(hi)
0x60A7F8FA,	//0x10fa		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x6407F8FD,	//0x10fc		VoC_and16_rr(REG7,REG0,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)
0x31C7DE10,	//0x10fe		VoC_bnez16_r(v_srch111,REG7)(lo)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x958E1103,	//0x1100		VoC_sub32_rp(RL6,RL6,REG1,DEFAULT)	|	VoC_bnez16_r(v_srch111,REG7)(hi)
0x938E958E,	//0x1102		VoC_add32inc_rp(RL6,RL6,REG1,DEFAULT)	|	VoC_sub32_rp(RL6,RL6,REG1,DEFAULT)
		//0x1103		v_srch111
		//0x1103		VoC_endloop0
0x33C6DFA9,	//0x1104		VoC_bnltz32_r(v_srch333,RL6)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE4901108,	//0x1106		VoC_xor16_rr(REG0,REG2,DEFAULT)	|	VoC_bnltz32_r(v_srch333,RL6)(hi)
		//0x1108		v_srch333
0xDFE9E580,	//0x1108		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1109		CII_sfrmAnalysis_opt
0x6416152A,	//0x110a		VoC_sw16_d(SP16,0x6416)
0x64140A88,	//0x110c		VoC_lw16i(ACC0_LO,0x6414)
0x64120A8A,	//0x110e		VoC_lw16i(ACC1_LO,0x6412)
0x64100A8C,	//0x1110		VoC_lw16i(RL6_LO,0x6410)
0xDFCADFC8,	//0x1112		VoC_push16(ACC1_LO,DEFAULT)	|	VoC_push16(ACC0_LO,DEFAULT)
0xDFC3DFCC,	//0x1114		VoC_push16(REG3,DEFAULT)	|	VoC_push16(RL6_LO,DEFAULT)
0x1405DFC5,	//0x1116		VoC_lw16_d(REG5,0x640c)(lo)	|	VoC_push16(REG5,DEFAULT)
0x1403640C,	//0x1118		VoC_lw16_d(REG3,0x24cd)(lo)	|	VoC_lw16_d(REG5,0x640c)(hi)
0xD85524CD,	//0x111a		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_d(REG3,0x24cd)(hi)
0xDFC5DFC3,	//0x111c		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x640A1403,	//0x111e		VoC_lw16_d(REG3,0x640a)
0x640B1405,	//0x1120		VoC_lw16_d(REG5,0x640b)
0xD855D833,	//0x1122		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xDFC5DFC3,	//0x1124		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x63AA0A83,	//0x1126		VoC_lw16i(REG3,0x63aa)
0x240E0A85,	//0x1128		VoC_lw16i(REG5,0x240e)
0xDFC5DFC3,	//0x112a		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x25280A83,	//0x112c		VoC_lw16i(REG3,0x2528)
0x64180A85,	//0x112e		VoC_lw16i(REG5,0x6418)
0xDFC5DFC3,	//0x1130		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x23520A83,	//0x1132		VoC_lw16i(REG3,0x2352)
0x5677071B,	//0x1134		VoC_add16_rd(REG3,REG3,0x5677)
0x63D20A85,	//0x1136		VoC_lw16i(REG5,0x63d2)
0xDFC5DFC3,	//0x1138		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x6417152A,	//0x113a		VoC_sw16_d(SP16,0x6417)
0x14F13187,	//0x113c		VoC_bez16_r(sfrmAnalysis_mid,REG7)
0xDFC1DFC0,	//0x113e		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDFC4DFC2,	//0x1140		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xD6B1DFC6,	//0x1142		VoC_lw16_sd(REG1,0xa,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x5713D6A2,	//0x1144		VoC_lw16_sd(REG3,0x10,DEFAULT)	|	VoC_lw16_sd(REG2,0x9,DEFAULT)
0x5FC7FF47,	//0x1146		VoC_push16(REG7,DEFAULT)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x0A8EE005,	//0x1148		VoC_lw16i(RL7_LO,0x800)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x2C150800,	//0x114a		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i(RL7_LO,0x800)(hi)
0xF1441160,	//0x114c		VoC_lw16i_short(REG4,0xa,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x3185FF3C,	//0x114e		VoC_bez16_r(lpcZiIir_skip_1st,REG5)(lo)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0xE7411157,	//0x1150		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_bez16_r(lpcZiIir_skip_1st,REG5)(hi)
		//0x1152		VoC_endloop0
0x4069D48B,	//0x1152		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG3,DEFAULT)
0x0709C32C,	//0x1154		VoC_add16_rd(REG1,REG1,0x370)(lo)	|	VoC_sub16_rr(REG4,REG4,REG5,IN_PARALLEL)
0xE7020370,	//0x1156		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x370)(hi)
		//0x1157		lpcZiIir_skip_1st
0xD1BBD8A7,	//0x1158		VoC_msu32inc_rp(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
		//0x1159		VoC_endloop0
0x0370072D,	//0x115a		VoC_add16_rd(REG5,REG5,0x370)
0xFBE442A2,	//0x115c		VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0x0524079B,	//0x115e		VoC_sub16_rd(REG3,REG3,0x524)
		//0x1160		VoC_endloop1
0x77D1DC19,	//0x1160		VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)	|	VoC_sw16_p(ACC0_HI,REG1,DEFAULT)
0xFFC0F00B,	//0x1162		VoC_NAD	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0x11712C3D,	//0x1164		VoC_loop_i(0x1,0x1e)
0xDFC16209,	//0x1166		VoC_push16(REG1,IN_PARALLEL)	|	VoC_aligninc_pp(REG1,REG1,DEFAULT)
0xFF3C68A2,	//0x1168		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x116a		VoC_endloop0
0x5F81D58B,	//0x116a		VoC_pop16(REG1,DEFAULT)	|	VoC_bimsu32inc_pp(REG1,REG3)
0x7BE4E012,	//0x116c		VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0x079BC051,	//0x116e		VoC_sub16_rd(REG3,REG3,0x524)(lo)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xDC190524,	//0x1170		VoC_sw16_p(ACC0_HI,REG1,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0x524)(hi)
		//0x1171		VoC_endloop1
0xD6B2DF87,	//0x1172		VoC_lw16_sd(REG2,0xa,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x63E21809,	//0x1174		VoC_lw16i_set_inc(REG1,0x63e2,0x2)
0xDFC1A614,	//0x1176		VoC_push16(REG1,DEFAULT)	|	VoC_sub16inc_pp(REG4,REG0,REG2,DEFAULT)
0xA615EA83,	//0x1178		VoC_sub16inc_pp(REG5,REG0,REG2,DEFAULT)	|	VoC_loop_i_short(0x14,DEFAULT)
0xDDCAA614,	//0x117a		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_sub16inc_pp(REG4,REG0,REG2,DEFAULT)
		//0x117b		VoC_endloop0
0x0AC8F3A9,	//0x117c		VoC_lw16i(ACC0_LO,0xff4c)(lo)	|	VoC_lw16i_short(ACC0_HI,0x1d,DEFAULT)
0xD6127F4C,	//0x117e		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i(ACC0_LO,0xff4c)(hi)
0xD8A4ED03,	//0x1180		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xCE24F814,	//0x1182		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
		//0x1183		VoC_endloop0
0x0922F006,	//0x1184		VoC_add32_rd(REG45,ACC0,0x382)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0A810382,	//0x1186		VoC_lw16i(REG1,0x7ff)(lo)	|	VoC_add32_rd(REG45,ACC0,0x382)(hi)
0x34A907FF,	//0x1188		VoC_bngt16_rr(sfrmAnalysis_000,REG5,REG1)(lo)	|	VoC_lw16i(REG1,0x7ff)(hi)
0xF026118F,	//0x118a		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_bngt16_rr(sfrmAnalysis_000,REG5,REG1)(hi)
0x03493C1D,	//0x118c		VoC_bngt16_rd(sfrmAnalysis_000,REG5,0x349)
0xD611F046,	//0x118e		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
		//0x118f		sfrmAnalysis_000
0xF6225FC6,	//0x1190		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xD9CA7052,	//0x1192		VoC_lw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xFE34EA84,	//0x1194		VoC_shr16_rr(REG4,REG6,DEFAULT)	|	VoC_loop_i_short(0x14,DEFAULT)
0xD9CAFE35,	//0x1196		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_shr16_rr(REG5,REG6,DEFAULT)
		//0x1198		VoC_endloop0
0xF000DDD2,	//0x1198		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x640D1403,	//0x119a		VoC_lw16_d(REG3,0x640d)
0x640E1500,	//0x119c		VoC_sw16_d(REG0,0x640e)
0xDFC0DC30,	//0x119e		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_p(REG0,REG3,DEFAULT)
0x25500A83,	//0x11a0		VoC_lw16i(REG3,0x2550)
0xDFC3D720,	//0x11a2		VoC_push16(REG3,DEFAULT)	|	VoC_lw16_sd(REG0,0x11,DEFAULT)
0x12A93140,	//0x11a4		VoC_bngtz16_r(sfrmAnalysis_011,REG0)
0xD752D670,	//0x11a6		VoC_lw16_sd(REG2,0x14,DEFAULT)	|	VoC_lw16_sd(REG0,0x6,DEFAULT)
0xD643D687,	//0x11a8		VoC_lw16_sd(REG3,0x3,DEFAULT)	|	VoC_lw16_sd(REG7,0x7,DEFAULT)
0x23520A81,	//0x11aa		VoC_lw16i(REG1,0x2352)
0xE025F004,	//0x11ac		VoC_movreg16(REG5,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x11ad		closedLoopLagSearch_loopstart
0xC100DF40,	//0x11ae		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x5677072D,	//0x11b0		VoC_add16_rd(REG5,REG5,0x5677)
0xDF42D806,	//0x11b2		VoC_push32(REG45,DEFAULT)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x0EBA2B80,	//0x11b4		VoC_jal(CII_fp_ex_opt)
0x0822DF02,	//0x11b6		VoC_mult16_rd(REG2,REG4,0x800)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x0A830800,	//0x11b8		VoC_lw16i(REG3,0x2730)(lo)	|	VoC_mult16_rd(REG2,REG4,0x800)(hi)
0xC0D32730,	//0x11ba		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i(REG3,0x2730)(hi)
0xDFC4D756,	//0x11bc		VoC_push16(REG4,DEFAULT)	|	VoC_lw16_sd(REG6,0x14,DEFAULT)
0x0F972B80,	//0x11be		VoC_jal(CII_lpcZsIir_opt)
0xD687DF84,	//0x11c0		VoC_lw16_sd(REG7,0x7,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x03700724,	//0x11c2		VoC_add16_rd(REG4,REG4,0x370)
0x343CDF00,	//0x11c4		VoC_bgt16_rr(closedLoopLagSearch_loopstart,REG7,REG4)(lo)	|	VoC_pop32(REG01,DEFAULT)
0xD75211AD,	//0x11c6		VoC_lw16_sd(REG2,0x14,DEFAULT)	|	VoC_bgt16_rr(closedLoopLagSearch_loopstart,REG7,REG4)(hi)
0x27301804,	//0x11c8		VoC_lw16i_set_inc(REG0,0x2730,0x1)
0x0AC8F3A9,	//0x11ca		VoC_lw16i(ACC0_LO,0xff4c)(lo)	|	VoC_lw16i_short(ACC0_HI,0x1d,DEFAULT)
0xED037F4C,	//0x11cc		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16i(ACC0_LO,0xff4c)(hi)
0xF815D885,	//0x11ce		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x11d0		VoC_endloop0
0x07BECE2D,	//0x11d0		VoC_sub16_rd(REG6,REG7,0x370)(lo)	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
0x70050370,	//0x11d2		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sub16_rd(REG6,REG7,0x370)(hi)
0x3206F0A0,	//0x11d4		VoC_bltz16_r(jump_labellele0,REG6)(lo)	|	VoC_lw16i_short(INC0,0x28,IN_PARALLEL)
0xE78311DC,	//0x11d6		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_bltz16_r(jump_labellele0,REG6)(hi)
0xF815D885,	//0x11d8		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x11da		VoC_endloop0
0xFFC04E2D,	//0x11da		VoC_NAD(IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
		//0x11dc		jump_labellele0
0x64681808,	//0x11dc		VoC_lw16i_set_inc(REG0,0x6468,0x2)
0x64741809,	//0x11de		VoC_lw16i_set_inc(REG1,0x6474,0x2)
0x03820922,	//0x11e0		VoC_add32_rd(REG45,ACC0,0x382)
0x0A82F004,	//0x11e2		VoC_lw16i(REG2,0x7ff)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x34AA07FF,	//0x11e4		VoC_bngt16_rr(CLOSEDLOOPLAG100,REG5,REG2)(lo)	|	VoC_lw16i(REG2,0x7ff)(hi)
0xF02411EB,	//0x11e6		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt16_rr(CLOSEDLOOPLAG100,REG5,REG2)(hi)
0x03493C1D,	//0x11e8		VoC_bngt16_rd(CLOSEDLOOPLAG100,REG5,0x349)
0xFF06F044,	//0x11ea		VoC_movreg32(RL6,REG01,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x11eb		CLOSEDLOOPLAG100
0x27301806,	//0x11ec		VoC_lw16i_set_inc(REG2,0x2730,0x1)
0x2E39DFC4,	//0x11ee		VoC_loop_r(1,REG7)(lo)	|	VoC_push16(REG4,DEFAULT)
0xD65311FC,	//0x11f0		VoC_lw16_sd(REG3,0x4,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0xFF457F44,	//0x11f2		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xD825ED05,	//0x11f4		VoC_lw16_p(REG5,REG2,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0x4E2DFE25,	//0x11f6		VoC_mac32_rr(REG5,REG5,DEFAULT)	|	VoC_shr16_rr(REG5,REG4,DEFAULT)
0xDCA5D12B,	//0x11f8		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG3,IN_PARALLEL)
		//0x11f9		VoC_endloop0
0xDDCCFFC0,	//0x11fa		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
		//0x11fc		VoC_endloop1
0xFF30DDC5,	//0x11fc		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x7F44FF41,	//0x11fe		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32z(REG23,DEFAULT)
0xE7C7FF45,	//0x1200		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD9CFD9C2,	//0x1202		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x120733C2,	//0x1204		VoC_bnltz32_r(CLOSEDLOOPLAG901,REG45)
0xE514CA52,	//0x1206		VoC_or32_rr(ACC0,REG45,DEFAULT)	|	VoC_sub32_rr(REG45,REG23,REG45,DEFAULT)
		//0x1207		CLOSEDLOOPLAG901
		//0x1208		VoC_endloop0
0x2B80E53D,	//0x1208		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_or32_rr(ACC1,RL7,DEFAULT)
0xFF2C02BA,	//0x120a		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B0D,	//0x120c		VoC_sub16_dr(REG5,0x518,REG1)
0x02BA2B80,	//0x120e		VoC_jal(CII_NORM_L_ACC0)
0x05180B0C,	//0x1210		VoC_sub16_dr(REG4,0x518,REG1)
0x1806FF30,	//0x1212		VoC_lw16i_set_inc(REG2,0x6480,0x1)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x18076480,	//0x1214		VoC_lw16i_set_inc(REG3,0x6486,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x6480,0x1)(hi)
0x14846486,	//0x1216		VoC_lw32_d(ACC0,0x382)(lo)	|	VoC_lw16i_set_inc(REG3,0x6486,0x1)(hi)
0xF0510382,	//0x1218		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_lw32_d(ACC0,0x382)(hi)
0xE7C8DF41,	//0x121a		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xD9CED9C7,	//0x121c		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFEA67EAF,	//0x121e		VoC_shr32_rr(RL6,REG4,IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG5,DEFAULT)
0xC9A6C9E7,	//0x1220		VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xDCBDDCAF,	//0x1222		VoC_sw16inc_p(RL6_HI,REG3,DEFAULT)	|	VoC_sw16inc_p(RL7_HI,REG2,DEFAULT)
		//0x1223		VoC_endloop0
0x2B80DF01,	//0x1224		VoC_jal(CII_maxCCOverGWithSign_opt_paris)(lo)	|	VoC_pop32(REG23,DEFAULT)
0xD6820EEE,	//0x1226		VoC_lw16_sd(REG2,0x7,DEFAULT)	|	VoC_jal(CII_maxCCOverGWithSign_opt_paris)(hi)
0xFFC0C056,	//0x1228		VoC_NOP	|	VoC_add16_rr(REG6,REG1,REG2,DEFAULT)
0x2B80D866,	//0x122a		VoC_jal(CII_quantLag_opt_paris)(lo)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xDF850E98,	//0x122c		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CII_quantLag_opt_paris)(hi)
0x640E1506,	//0x122e		VoC_sw16_d(REG6,0x640e)
0x640F1505,	//0x1230		VoC_sw16_d(REG5,0x640f)
0x1403D7A1,	//0x1232		VoC_lw16_d(REG3,0x640d)(lo)	|	VoC_lw16_sd(REG1,0x19,DEFAULT)
0x1404640D,	//0x1234		VoC_lw16_d(REG4,0x1e45)(lo)	|	VoC_lw16_d(REG3,0x640d)(hi)
0x15021E45,	//0x1236		VoC_sw16_d(REG2,0x1e45)(lo)	|	VoC_lw16_d(REG4,0x1e45)(hi)
0x31811E45,	//0x1238		VoC_bez16_r(sfrmAnalysis_003,REG1)(lo)	|	VoC_sw16_d(REG2,0x1e45)(hi)
0xC2A2123E,	//0x123a		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_bez16_r(sfrmAnalysis_003,REG1)(hi)
0x05220712,	//0x123c		VoC_add16_rd(REG2,REG2,0x522)
		//0x123e		sfrmAnalysis_003
0xDC32D664,	//0x123e		VoC_sw16_p(REG2,REG3,DEFAULT)	|	VoC_lw16_sd(REG4,0x5,DEFAULT)
0x0EAA2B80,	//0x1240		VoC_jal(CII_get_ipjj_opt_paris)
0x5768181A,	//0x1242		VoC_lw16i_set_inc(REG2,0x5768,0x6)
0x0A85C082,	//0x1244		VoC_lw16i(REG5,0x2a)(lo)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x1804002A,	//0x1246		VoC_lw16i_set_inc(REG0,0x63dc,0x1)(lo)	|	VoC_lw16i(REG5,0x2a)(hi)
0xD65363DC,	//0x1248		VoC_lw16_sd(REG3,0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63dc,0x1)(hi)
0xD8A7DA60,	//0x124a		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16_sd(REG0,0x5,DEFAULT)
0xEFD468C9,	//0x124c		VoC_lw16i_short(REG4,0xfffd,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0x05180B3E,	//0x124e		VoC_sub16_dr(REG6,0x518,REG7)
0xFFC0CD9B,	//0x1250		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG3,DEFAULT)
0x0382091B,	//0x1252		VoC_add32_rd(REG67,REG67,0x382)
0xDC87D8A7,	//0x1254		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
		//0x1255		VoC_endloop0
0xC34DC30C,	//0x1256		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG1,DEFAULT)
0xDA25DA74,	//0x1258		VoC_sw16_sd(REG5,0x1,DEFAULT)	|	VoC_sw16_sd(REG4,0x6,DEFAULT)
0xF0065692,	//0x125a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x8,DEFAULT)
0xE0155643,	//0x125c		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x3,DEFAULT)
0x0A86C2A9,	//0x125e		VoC_lw16i(REG6,0x28)(lo)	|	VoC_sub16_rr(REG1,REG2,REG5,DEFAULT)
0xD6600028,	//0x1260		VoC_lw16_sd(REG0,0x5,DEFAULT)	|	VoC_lw16i(REG6,0x28)(hi)
0xF3FF77F0,	//0x1262		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xDF427031,	//0x1264		VoC_push32(REG45,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x0E2C2B80,	//0x1266		VoC_jal(CII_hnwFilt_opt)
0xD6F2DF02,	//0x1268		VoC_lw16_sd(REG2,0xe,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x00280A86,	//0x126a		VoC_lw16i(REG6,0x28)
0xF6435660,	//0x126c		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x24181805,	//0x126e		VoC_lw16i_set_inc(REG1,0x2418,0x1)
0x00900A87,	//0x1270		VoC_lw16i(REG7,0x90)
0x2B80C079,	//0x1272		VoC_jal(CII_hnwFilt_opt)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xD6F20E2C,	//0x1274		VoC_lw16_sd(REG2,0xe,DEFAULT)	|	VoC_jal(CII_hnwFilt_opt)(hi)
0xD641D630,	//0x1276		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xED04D8A6,	//0x1278		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xFE03B873,	//0x127a		VoC_shr16_rr(REG3,REG0,DEFAULT)	|	VoC_sub16_pr(REG3,REG1,REG6,DEFAULT)
0xDC93D8A6,	//0x127c		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
		//0x127d		VoC_endloop0
0x640E1406,	//0x127e		VoC_lw16_d(REG6,0x640e)
0x2B80D6B5,	//0x1280		VoC_jal(CII_fp_ex_opt)(lo)	|	VoC_lw16_sd(REG5,0xa,DEFAULT)
0xD6B10EBA,	//0x1282		VoC_lw16_sd(REG1,0xa,DEFAULT)	|	VoC_jal(CII_fp_ex_opt)(hi)
0xF030D6D0,	//0x1284		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0xc,DEFAULT)
0xED02D892,	//0x1286		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xDC82D892,	//0x1288		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
		//0x1289		VoC_endloop0
0xD6D5D613,	//0x128a		VoC_lw16_sd(REG5,0xc,DEFAULT)	|	VoC_lw16_sd(REG3,0x0,DEFAULT)
0x2B80D756,	//0x128c		VoC_jal(CII_lpcZsIir_opt)(lo)	|	VoC_lw16_sd(REG6,0x14,DEFAULT)
0xD6740F97,	//0x128e		VoC_lw16_sd(REG4,0x6,DEFAULT)	|	VoC_jal(CII_lpcZsIir_opt)(hi)
0x25501FBF,	//0x1290		VoC_lw16i_set_inc(REG3,0x2550,0xffffffff)
0xD6266062,	//0x1292		VoC_lw16_sd(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0xD6607005,	//0x1294		VoC_lw16_sd(REG0,0x5,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x77F0F001,	//0x1296		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x3146F005,	//0x1298		VoC_bngtz16_r(sfrmAnalysis_004,REG6)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x2B80129D,	//0x129a		VoC_jal(CII_hnwFilt_opt)(lo)	|	VoC_bngtz16_r(sfrmAnalysis_004,REG6)(hi)
0xD6D00E2C,	//0x129c		VoC_lw16_sd(REG0,0xc,DEFAULT)	|	VoC_jal(CII_hnwFilt_opt)(hi)
		//0x129d		sfrmAnalysis_004
0x640F1404,	//0x129e		VoC_lw16_d(REG4,0x640f)
0xF0045611,	//0x12a0		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xD802ED06,	//0x12a2		VoC_lw16_p(REG2,REG0,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xFE22D813,	//0x12a4		VoC_shr16_rr(REG2,REG4,DEFAULT)	|	VoC_lw16_p(REG3,REG1,DEFAULT)
0xDC82FE23,	//0x12a6		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_shr16_rr(REG3,REG4,DEFAULT)
		//0x12a8		VoC_endloop0
0xF0E6DC93,	//0x12a8		VoC_lw16i_short(REG6,0x7,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
		//0x12a9		sfrmAnalysis_011
0x07E00A85,	//0x12aa		VoC_lw16i(REG5,0x7e0)
0x24CD6A05,	//0x12ac		VoC_bngtz16_d(sfrmAnalysis_012,0x24cd)
0x0A85F126,	//0x12ae		VoC_lw16i(REG5,0xa10)(lo)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0xF0000A10,	//0x12b0		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i(REG5,0xa10)(hi)
		//0x12b1		sfrmAnalysis_012
0xDFC5DFC6,	//0x12b2		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
		//0x12b4		sfrmAnalysis_loop0
0x0801D776,	//0x12b4		VoC_mult16_rd(REG1,REG0,0x800)(lo)	|	VoC_lw16_sd(REG6,0x16,DEFAULT)
0x18070800,	//0x12b6		VoC_lw16i_set_inc(REG3,0x2578,0x1)(lo)	|	VoC_mult16_rd(REG1,REG0,0x800)(hi)
0xC0CB2578,	//0x12b8		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x2578,0x1)(hi)
0x414DD615,	//0x12ba		VoC_add16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_lw16_sd(REG5,0x0,DEFAULT)
0xDFC3DFC0,	//0x12bc		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG0,IN_PARALLEL)
0x0F972B80,	//0x12be		VoC_jal(CII_lpcZsIir_opt)
0xF7F3DF83,	//0x12c0		VoC_lw16i_short(INC3,0xffffffff,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xD6566062,	//0x12c2		VoC_lw16_sd(REG6,0x4,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x12CD3146,	//0x12c4		VoC_bngtz16_r(sfrmAnalysis_009,REG6)
0xE0015690,	//0x12c6		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x8,DEFAULT)
0xE00556A4,	//0x12c8		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x9,DEFAULT)
0x2B80F7F0,	//0x12ca		VoC_jal(CII_hnwFilt_opt)(lo)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF0300E2C,	//0x12cc		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_jal(CII_hnwFilt_opt)(hi)
		//0x12cd		sfrmAnalysis_009
0xD621DF80,	//0x12ce		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x3408DE00,	//0x12d0		VoC_bgt16_rr(sfrmAnalysis_loop0,REG1,REG0)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x180712B4,	//0x12d2		VoC_lw16i_set_inc(REG3,0x2578,0x1)(lo)	|	VoC_bgt16_rr(sfrmAnalysis_loop0,REG1,REG0)(hi)
0x18042578,	//0x12d4		VoC_lw16i_set_inc(REG0,0x2550,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x2578,0x1)(hi)
0xDFC32550,	//0x12d6		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2550,0x1)(hi)
0x24CD6A05,	//0x12d8		VoC_bngtz16_d(CII_sfrmAnalysis_100,0x24cd)
0x2B80D635,	//0x12da		VoC_jal(CII_decorr_opt)(lo)	|	VoC_lw16_sd(REG5,0x2,DEFAULT)
0xD63415CB,	//0x12dc		VoC_lw16_sd(REG4,0x2,DEFAULT)	|	VoC_jal(CII_decorr_opt)(hi)
		//0x12dd		CII_sfrmAnalysis_100
0xD671D610,	//0x12de		VoC_lw16_sd(REG1,0x6,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x0FD62B80,	//0x12e0		VoC_jal(CII_v_srch_opt)
0x5634DB40,	//0x12e2		VoC_lw16_sd(REG4,0x2,DEFAULT)	|	VoC_sw16_sd(REG0,0x13,DEFAULT)
0xD6D0F605,	//0x12e4		VoC_lw16_sd(REG0,0xc,DEFAULT)	|	VoC_movreg16(REG5,REG0,IN_PARALLEL)
0x0F2C2B80,	//0x12e6		VoC_jal(CII_b_con_opt)
0x56D2D620,	//0x12e8		VoC_lw16_sd(REG2,0xc,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xD634F0A0,	//0x12ea		VoC_lw16_sd(REG4,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x28,IN_PARALLEL)
0x64181809,	//0x12ec		VoC_lw16i_set_inc(REG1,0x6418,0x2)
0x0F0D2B80,	//0x12ee		VoC_jal(CII_v_con_opt)
0x0A81F000,	//0x12f0		VoC_lw16i(REG1,0x6418)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDB306418,	//0x12f2		VoC_sw16_sd(REG0,0x12,DEFAULT)	|	VoC_lw16i(REG1,0x6418)(hi)
0x6E38DA21,	//0x12f4		VoC_bnez16_d(CII_sfrmAnalysis_300_END,0x24cd)(lo)	|	VoC_sw16_sd(REG1,0x1,DEFAULT)
0xD61024CD,	//0x12f6		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_bnez16_d(CII_sfrmAnalysis_300_END,0x24cd)(hi)
0x26E00A81,	//0x12f8		VoC_lw16i(REG1,0x26e0)
0xD634D6D2,	//0x12fa		VoC_lw16_sd(REG4,0x2,DEFAULT)	|	VoC_lw16_sd(REG2,0xc,DEFAULT)
0x0F0D2B80,	//0x12fc		VoC_jal(CII_v_con_opt)
0x0A80D637,	//0x12fe		VoC_lw16i(REG0,0x8f8)(lo)	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xF00408F8,	//0x1300		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x8f8)(hi)
0xFFC05FC0,	//0x1302		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
		//0x1304		sfrmAnalysis_LOOP_100_START
0x08000821,	//0x1304		VoC_mult16_rd(REG1,REG4,0x800)
0x40CBD623,	//0x1306		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0xD615D796,	//0x1308		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_lw16_sd(REG6,0x18,IN_PARALLEL)
0xFFC0414D,	//0x130a		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x0F972B80,	//0x130c		VoC_jal(CII_lpcZsIir_opt)
0x03700724,	//0x130e		VoC_add16_rd(REG4,REG4,0x370)
0x130435BC,	//0x1310		VoC_bne16_rr(sfrmAnalysis_LOOP_100_START,REG7,REG4)
0x0A80D645,	//0x1312		VoC_lw16i(REG0,0x26e0)(lo)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0xD62326E0,	//0x1314		VoC_lw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16i(REG0,0x26e0)(hi)
0x15CB2B80,	//0x1316		VoC_jal(CII_decorr_opt)
0x1804D644,	//0x1318		VoC_lw16i_set_inc(REG0,0x2578,0x1)(lo)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0x18052578,	//0x131a		VoC_lw16i_set_inc(REG1,0x63e2,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2578,0x1)(hi)
0x2B8063E2,	//0x131c		VoC_jal(CII_v_srch_opt)(lo)	|	VoC_lw16i_set_inc(REG1,0x63e2,0x1)(hi)
0xDB400FD6,	//0x131e		VoC_sw16_sd(REG0,0x13,DEFAULT)	|	VoC_jal(CII_v_srch_opt)(hi)
0xF6055644,	//0x1320		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0x2B80D6E0,	//0x1322		VoC_jal(CII_b_con_opt)(lo)	|	VoC_lw16_sd(REG0,0xd,DEFAULT)
0xDF800F2C,	//0x1324		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_b_con_opt)(hi)
0x64401809,	//0x1326		VoC_lw16i_set_inc(REG1,0x6440,0x2)
0xF0A056D2,	//0x1328		VoC_lw16i_short(INC0,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0xc,DEFAULT)
0x2B80D634,	//0x132a		VoC_jal(CII_v_con_opt)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xD6F50F0D,	//0x132c		VoC_lw16_sd(REG5,0xe,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
		//0x132d		CII_sfrmAnalysis_300_END
0x26E00A83,	//0x132e		VoC_lw16i(REG3,0x26e0)
0xDA23D786,	//0x1330		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x17,DEFAULT)
0x0F972B80,	//0x1332		VoC_jal(CII_lpcZsIir_opt)
0x77F0D656,	//0x1334		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG6,0x4,DEFAULT)
0xF031F3FF,	//0x1336		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x13413146,	//0x1338		VoC_bngtz16_r(CII_sfrmAnalysis_400,REG6)
0x5622D690,	//0x133a		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x8,DEFAULT)
0xD623E005,	//0x133c		VoC_lw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x2B80D6A4,	//0x133e		VoC_jal(CII_hnwFilt_opt)(lo)	|	VoC_lw16_sd(REG4,0x9,DEFAULT)
0xF0330E2C,	//0x1340		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_jal(CII_hnwFilt_opt)(hi)
		//0x1341		CII_sfrmAnalysis_400
0x24CD6E0B,	//0x1342		VoC_bnez16_d(CII_sfrmAnalysis_500,0x24cd)
0x0A87D623,	//0x1344		VoC_lw16i(REG7,0x28)(lo)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0x56F50028,	//0x1346		VoC_lw16_sd(REG5,0xe,DEFAULT)	|	VoC_lw16i(REG7,0x28)(hi)
0x5786C0FB,	//0x1348		VoC_lw16_sd(REG6,0x17,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x2B80C17D,	//0x134a		VoC_jal(CII_lpcZsIir_opt)(lo)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xF0500F97,	//0x134c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_jal(CII_lpcZsIir_opt)(hi)
		//0x134d		CII_sfrmAnalysis_500
0x24CD6A07,	//0x134e		VoC_bngtz16_d(CII_sfrmAnalysis_600,0x24cd)
0xD772D700,	//0x1350		VoC_lw16_sd(REG2,0x16,DEFAULT)	|	VoC_lw16_sd(REG0,0xf,DEFAULT)
0x2B80D793,	//0x1352		VoC_jal(CII_rs_rrNs_opt)(lo)	|	VoC_lw16_sd(REG3,0x18,DEFAULT)
0xD6F00F8E,	//0x1354		VoC_lw16_sd(REG0,0xe,DEFAULT)	|	VoC_jal(CII_rs_rrNs_opt)(hi)
		//0x1355		CII_sfrmAnalysis_600
0x57A3D772,	//0x1356		VoC_lw16_sd(REG3,0x19,DEFAULT)	|	VoC_lw16_sd(REG2,0x16,DEFAULT)
0xFFC0F005,	//0x1358		VoC_NAD	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x0F8E2B80,	//0x135a		VoC_jal(CII_rs_rrNs_opt)
0x24CD6E0A,	//0x135c		VoC_bnez16_d(CII_sfrmAnalysis_700,0x24cd)
0x0A87D6F0,	//0x135e		VoC_lw16i(REG7,0x28)(lo)	|	VoC_lw16_sd(REG0,0xe,DEFAULT)
0x57720028,	//0x1360		VoC_lw16_sd(REG2,0x16,DEFAULT)	|	VoC_lw16i(REG7,0x28)(hi)
0xD7B3C038,	//0x1362		VoC_lw16_sd(REG3,0x1a,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)
0x0F8E2B80,	//0x1364		VoC_jal(CII_rs_rrNs_opt)
		//0x1366		CII_sfrmAnalysis_700
0xD621D670,	//0x1366		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x6,DEFAULT)
0x00280A87,	//0x1368		VoC_lw16i(REG7,0x28)
0xD643C07A,	//0x136a		VoC_lw16_sd(REG3,0x3,DEFAULT)	|	VoC_add16_rr(REG2,REG1,REG7,DEFAULT)
0xD7A5D7B4,	//0x136c		VoC_lw16_sd(REG5,0x19,DEFAULT)	|	VoC_lw16_sd(REG4,0x1a,DEFAULT)
0xD667D796,	//0x136e		VoC_lw16_sd(REG7,0x5,DEFAULT)	|	VoC_lw16_sd(REG6,0x18,DEFAULT)
0x1507D767,	//0x1370		VoC_sw16_d(REG7,0x2730)(lo)	|	VoC_lw16_sd(REG7,0x15,DEFAULT)
0x70302730,	//0x1372		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_sw16_d(REG7,0x2730)(hi)
0xDFC7F005,	//0x1374		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF425FC6,	//0x1376		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x137C3187,	//0x1378		VoC_bez16_r(CII_g_quant_vl_Lable0,REG7)
0xF6616022,	//0x137a		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x137c		CII_g_quant_vl_Lable0
0x27320A83,	//0x137c		VoC_lw16i(REG3,0x2732)
0x2C0DF006,	//0x137e		VoC_loop_i(0x1,0x6)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xDF4013A2,	//0x1380		VoC_push32(REG01,DEFAULT)	|	VoC_loop_i(0x1,0x6)(hi)
0xF031DFC2,	//0x1382		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x03704426,	//0x1384		VoC_bne16_rd(CII_g_quant_vl_Lable1,REG6,0x370)
0xFFC06041,	//0x1386		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x1388		CII_g_quant_vl_Lable1
0x051C4086,	//0x1388		VoC_be16_rd(CII_g_quant_vl_Lable2,REG6,0x51c)
0x051D4426,	//0x138a		VoC_bne16_rd(CII_g_quant_vl_Lable3,REG6,0x51d)
0xFFC06020,	//0x138c		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x138e		CII_g_quant_vl_Lable3
0x051E4426,	//0x138e		VoC_bne16_rd(CII_g_quant_vl_Lable4,REG6,0x51e)
		//0x1390		CII_g_quant_vl_Lable2
0xFFC06040,	//0x1390		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
		//0x1392		CII_g_quant_vl_Lable4
0x051C382E,	//0x1392		VoC_bgt16_rd(CII_g_quant_vl_Lable10,REG6,0x51c)
0x16192B80,	//0x1394		VoC_jal(CII_g_corr2_opt)
0xF050E5C6,	//0x1396		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_jump(CII_g_quant_vl_Lable11)
		//0x1397		CII_g_quant_vl_Lable10
0x0F232B80,	//0x1398		VoC_jal(CII_g_corr1_opt_paris)
0xFF25F030,	//0x139a		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
		//0x139c		CII_g_quant_vl_Lable11
0x0382092A,	//0x139c		VoC_add32_rd(REG45,ACC1,0x382)
0xDCB5DF82,	//0x139e		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xDF00DCB1,	//0x13a0		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
		//0x13a2		VoC_endloop1
0x03700736,	//0x13a2		VoC_add16_rd(REG6,REG6,0x370)
0x0525079F,	//0x13a4		VoC_sub16_rd(REG7,REG3,0x525)
0x0A85DFC7,	//0x13a6		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_push16(REG7,DEFAULT)
0x0A837FFF,	//0x13a8		VoC_lw16i(REG3,0x2740)(lo)	|	VoC_lw16i(REG5,0x7fff)(hi)
0x15052740,	//0x13aa		VoC_sw16_d(REG5,0x273e)(lo)	|	VoC_lw16i(REG3,0x2740)(hi)
0xF005273E,	//0x13ac		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16_d(REG5,0x273e)(hi)
0xDF43DFC7,	//0x13ae		VoC_push32(REG67,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
		//0x13af		LOOP_START0
0x7046DFC5,	//0x13b0		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0738F005,	//0x13b2		VoC_add16_rd(REG0,REG7,0x520)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xC0320520,	//0x13b4		VoC_add16_rr(REG2,REG0,REG6,DEFAULT)	|	VoC_add16_rd(REG0,REG7,0x520)(hi)
0x443DC0B1,	//0x13b6		VoC_bne16_rd(LOOP_ADDR2,REG5,0x370)(lo)	|	VoC_add16_rr(REG1,REG2,REG6,DEFAULT)
0x07380370,	//0x13b8		VoC_add16_rd(REG0,REG7,0x51e)(lo)	|	VoC_bne16_rd(LOOP_ADDR2,REG5,0x370)(hi)
0xE001051E,	//0x13ba		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_add16_rd(REG0,REG7,0x51e)(hi)
0x0524073A,	//0x13bc		VoC_add16_rd(REG2,REG7,0x524)
		//0x13be		LOOP_ADDR2
0x051C4435,	//0x13be		VoC_bne16_rd(LOOP_ADDR3,REG5,0x51c)
0xE001C1F0,	//0x13c0		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG7,REG6,DEFAULT)
0x0520073A,	//0x13c2		VoC_add16_rd(REG2,REG7,0x520)
		//0x13c4		LOOP_ADDR3
0x051D4435,	//0x13c4		VoC_bne16_rd(LOOP_ADDR4,REG5,0x51d)
0xC1F160E0,	//0x13c6		VoC_add16_rr(REG1,REG7,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0xFFC04072,	//0x13c8		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG6,DEFAULT)
		//0x13ca		LOOP_ADDR4
0x051E4435,	//0x13ca		VoC_bne16_rd(LOOP_ADDR5,REG5,0x51e)
0xF6E260E0,	//0x13cc		VoC_movreg16(REG2,REG7,IN_PARALLEL)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x05220739,	//0x13ce		VoC_add16_rd(REG1,REG7,0x522)
		//0x13d0		LOOP_ADDR5
0xF007D884,	//0x13d0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDFC19B0C,	//0x13d2		VoC_push16(REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0x2C05D805,	//0x13d4		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0xFF2513E3,	//0x13d6		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x2B80E0C8,	//0x13d8		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xFF2C02BA,	//0x13da		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B09,	//0x13dc		VoC_sub16_dr(REG1,0x518,REG1)
0xFE8CC34D,	//0x13de		VoC_shr32_rr(ACC0,REG1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
0x03820923,	//0x13e0		VoC_add32_rd(REG67,ACC0,0x382)
0xF00699D4,	//0x13e2		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
		//0x13e3		VoC_endloop1
0xDF815E10,	//0x13e4		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x814D8155,	//0x13e6		VoC_add16_rp(REG5,REG5,REG1,DEFAULT)	|	VoC_add16_rp(REG5,REG5,REG2,DEFAULT)
0x4426D616,	//0x13e8		VoC_bne16_rd(LOOP_END1,REG6,0x51d)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x07AD051D,	//0x13ea		VoC_sub16_rd(REG5,REG5,0x370)(lo)	|	VoC_bne16_rd(LOOP_END1,REG6,0x51d)(hi)
0xDCB70370,	//0x13ec		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x370)(hi)
		//0x13ed		LOOP_END1
0x3825DCB5,	//0x13ee		VoC_bgt16_rd(LOOP_END0,REG5,0x273e)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x1505273E,	//0x13f0		VoC_sw16_d(REG5,0x273e)(lo)	|	VoC_bgt16_rd(LOOP_END0,REG5,0x273e)(hi)
0xDF03273E,	//0x13f2		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG5,0x273e)(hi)
		//0x13f3		LOOP_END0
0x072DDF85,	//0x13f4		VoC_add16_rd(REG5,REG5,0x370)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x40250370,	//0x13f6		VoC_be16_rd(LOOP_START0_new,REG5,0x34a)(lo)	|	VoC_add16_rd(REG5,REG5,0x370)(hi)
0x2B00034A,	//0x13f8		VoC_jump_lg(LOOP_START0)(lo)	|	VoC_be16_rd(LOOP_START0_new,REG5,0x34a)(hi)
0xF00613AF,	//0x13fa		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jump_lg(LOOP_START0)(hi)
		//0x13fb		LOOP_START0_new
0x273E1404,	//0x13fc		VoC_lw16_d(REG4,0x273e)
0x27401808,	//0x13fe		VoC_lw16i_set_inc(REG0,0x2740,0x2)
0x27411809,	//0x1400		VoC_lw16i_set_inc(REG1,0x2741,0x2)
0xD807E8A9,	//0x1402		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x3143BA63,	//0x1404		VoC_bngtz16_r(gainTweak55,REG3)(lo)	|	VoC_sub16inc_pr(REG3,REG1,REG4,DEFAULT)
0xFE9B1408,	//0x1406		VoC_shr32_rr(REG67,REG3,DEFAULT)	|	VoC_bngtz16_r(gainTweak55,REG3)(hi)
		//0x1408		gainTweak55
0x0382091B,	//0x1408		VoC_add32_rd(REG67,REG67,0x382)
0xDC87F006,	//0x140a		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x140b		VoC_endloop0
0x27401405,	//0x140c		VoC_lw16_d(REG5,0x2740)
0x274207AD,	//0x140e		VoC_sub16_rd(REG5,REG5,0x2742)
0x14703145,	//0x1410		VoC_bngtz16_r(gainTweak_end,REG5)
0x27441406,	//0x1412		VoC_lw16_d(REG6,0x2744)
0x274607B6,	//0x1414		VoC_sub16_rd(REG6,REG6,0x2746)
0x27480736,	//0x1416		VoC_add16_rd(REG6,REG6,0x2748)
0x14703146,	//0x1418		VoC_bngtz16_r(gainTweak_end,REG6)
0x147034AE,	//0x141a		VoC_bngt16_rr(gainTweak_end,REG5,REG6)
0xE0A9FF44,	//0x141c		VoC_movreg16(ACC0_HI,REG5,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x02BA2B80,	//0x141e		VoC_jal(CII_NORM_L_ACC0)
0x05180B09,	//0x1420		VoC_sub16_dr(REG1,0x518,REG1)
0x03840B0A,	//0x1422		VoC_sub16_dr(REG2,0x384,REG1)
0xF80DFE0D,	//0x1424		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_shr16_rr(REG5,REG1,DEFAULT)
0xE0C9FF44,	//0x1426		VoC_movreg16(ACC0_HI,REG6,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x02BA2B80,	//0x1428		VoC_jal(CII_NORM_L_ACC0)
0x05180B09,	//0x142a		VoC_sub16_dr(REG1,0x518,REG1)
0xFE0EC08F,	//0x142c		VoC_shr16_rr(REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG7,REG2,REG1,DEFAULT)
0xF6C160A0,	//0x142e		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x02CC2B80,	//0x1430		VoC_jal(CII_DIV_S)
0xE049FF44,	//0x1432		VoC_movreg16(ACC0_HI,REG2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x2B80FF27,	//0x1434		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFF4602BA,	//0x1436		VoC_lw32z(RL6,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B09,	//0x1438		VoC_sub16_dr(REG1,0x518,REG1)
0xFE8FC3CA,	//0x143a		VoC_shr32_rr(RL7,REG1,DEFAULT)	|	VoC_sub16_rr(REG2,REG7,REG1,DEFAULT)
0x0F432B80,	//0x143c		VoC_jal(CII_sqroot_opt)
0xE040E0ED,	//0x143e		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_movreg16(RL6_HI,REG7,DEFAULT)
0x00011600,	//0x1440		VoC_and16_ri(REG0,0x1)
0x14483180,	//0x1442		VoC_bez16_r(gainTweak99,REG0)
0x03500A3E,	//0x1444		VoC_multf32_rd(RL6,REG7,0x350)
0x03700792,	//0x1446		VoC_sub16_rd(REG2,REG2,0x370)
		//0x1448		gainTweak99
0xE1A9FF44,	//0x1448		VoC_movreg16(ACC0_HI,RL6_HI,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x02BA2B80,	//0x144a		VoC_jal(CII_NORM_L_ACC0)
0x0B09F80A,	//0x144c		VoC_sub16_dr(REG1,0x518,REG1)(lo)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x408A0518,	//0x144e		VoC_add16_rr(REG2,REG2,REG1,DEFAULT)	|	VoC_sub16_dr(REG1,0x518,REG1)(hi)
0x0932FE8E,	//0x1450		VoC_add32_rd(REG45,RL6,0x382)(lo)	|	VoC_shr32_rr(RL6,REG1,IN_PARALLEL)
0x0A840382,	//0x1452		VoC_lw16i(REG4,0x5a82)(lo)	|	VoC_add32_rd(REG45,RL6,0x382)(hi)
0x399A5A82,	//0x1454		VoC_bgt16_rd(gainTweak_end,REG2,0x384)(lo)	|	VoC_lw16i(REG4,0x5a82)(hi)
0x382D0384,	//0x1456		VoC_bgt16_rd(gainTweak003,REG5,0x350)(lo)	|	VoC_bgt16_rd(gainTweak_end,REG2,0x384)(hi)
0x481A0350,	//0x1458		VoC_blt16_rd(gainTweak003,REG2,0x384)(lo)	|	VoC_bgt16_rd(gainTweak003,REG5,0x350)(hi)
0xE0A40384,	//0x145a		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_blt16_rd(gainTweak003,REG2,0x384)(hi)
		//0x145c		gainTweak003
0xF030D610,	//0x145c		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x146F2C05,	//0x145e		VoC_loop_i(0x1,0x2)
0x9B03E003,	//0x1460		VoC_multf32inc_rp(REG67,REG4,REG0,DEFAULT)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xE0E9FF44,	//0x1462		VoC_movreg16(ACC0_HI,REG7,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x02BA2B80,	//0x1464		VoC_jal(CII_NORM_L_ACC0)
0x05180B09,	//0x1466		VoC_sub16_dr(REG1,0x518,REG1)
0x0792B80A,	//0x1468		VoC_sub16_rd(REG2,REG2,0x370)(lo)	|	VoC_sub16_pr(REG2,REG0,REG1,DEFAULT)
0xFE8B0370,	//0x146a		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x370)(hi)
0x0382091B,	//0x146c		VoC_add32_rd(REG67,REG67,0x382)
0xDC37DC82,	//0x146e		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
		//0x146f		VoC_endloop1
		//0x1470		gainTweak_end
0xDF87DF83,	//0x1470		VoC_pop16(REG7,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xDF025F86,	//0x1472		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x14783187,	//0x1474		VoC_bez16_r(CII_g_quant_vl_Lable20,REG7)
0xF6C560A4,	//0x1476		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x1478		CII_g_quant_vl_Lable20
0x7FFF0A80,	//0x1478		VoC_lw16i(REG0,0x7fff)
0x1500F006,	//0x147a		VoC_sw16_d(REG0,0x2731)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x2C0B2731,	//0x147c		VoC_loop_i(0x1,0x5)(lo)	|	VoC_sw16_d(REG0,0x2731)(hi)
0xDF4214C1,	//0x147e		VoC_push32(REG45,DEFAULT)	|	VoC_loop_i(0x1,0x5)(hi)
0x3186DF43,	//0x1480		VoC_bez16_r(CII_g_quant_vl_Lable21,REG6)(lo)	|	VoC_push32(REG67,DEFAULT)
0x441E1485,	//0x1482		VoC_bne16_rd(CII_g_quant_vl_Lable23,REG6,0x51d)(lo)	|	VoC_bez16_r(CII_g_quant_vl_Lable21,REG6)(hi)
0xE0A4051D,	//0x1484		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_bne16_rd(CII_g_quant_vl_Lable23,REG6,0x51d)(hi)
		//0x1485		CII_g_quant_vl_Lable21
		//0x1486		CII_g_quant_vl_Lable23
0x051E441E,	//0x1486		VoC_bne16_rd(CII_g_quant_vl_Lable24,REG6,0x51e)
0xFF44E085,	//0x1488		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x1489		CII_g_quant_vl_Lable24
0x03703D8E,	//0x148a		VoC_bngt16_rd(CII_g_quant_vl_Lable28,REG6,0x370)
0x985ED851,	//0x148c		VoC_multf32_rp(RL6,REG1,REG3,DEFAULT)	|	VoC_lw16_p(REG1,REG5,DEFAULT)
0x0370072D,	//0x148e		VoC_add16_rd(REG5,REG5,0x370)
0x2B80E1A9,	//0x1490		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,RL6_HI,DEFAULT)
0xFF4402BA,	//0x1492		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B09,	//0x1494		VoC_sub16_dr(REG1,0x518,REG1)
0x0370071A,	//0x1496		VoC_add16_rd(REG2,REG3,0x370)
0x3888FE8E,	//0x1498		VoC_sub16_pr(REG0,REG2,REG1,DEFAULT)	|	VoC_shr32_rr(RL6,REG1,DEFAULT)
0x0936F005,	//0x149a		VoC_add32_rd(RL6,RL6,0x382)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE1A70382,	//0x149c		VoC_movreg16(REG7,RL6_HI,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x382)(hi)
0x07198028,	//0x149e		VoC_add16_rd(REG1,REG3,0x370)(lo)	|	VoC_add16_rp(REG0,REG0,REG5,DEFAULT)
0xDC370370,	//0x14a0		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG1,REG3,0x370)(hi)
0xD841DC10,	//0x14a2		VoC_lw16_p(REG1,REG4,DEFAULT)	|	VoC_sw16_p(REG0,REG1,DEFAULT)
		//0x14a3		CII_g_quant_vl_Lable28
0x0724985E,	//0x14a4		VoC_add16_rd(REG4,REG4,0x370)(lo)	|	VoC_multf32_rp(RL6,REG1,REG3,DEFAULT)
0xE1A90370,	//0x14a6		VoC_movreg16(ACC0_HI,RL6_HI,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x370)(hi)
0x02BA2B80,	//0x14a8		VoC_jal(CII_NORM_L_ACC0)
0x0B09F031,	//0x14aa		VoC_sub16_dr(REG1,0x518,REG1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x071A0518,	//0x14ac		VoC_add16_rd(REG2,REG3,0x370)(lo)	|	VoC_sub16_dr(REG1,0x518,REG1)(hi)
0xFE8E0370,	//0x14ae		VoC_shr32_rr(RL6,REG1,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x370)(hi)
0x0936B888,	//0x14b0		VoC_add32_rd(RL6,RL6,0x382)(lo)	|	VoC_sub16_pr(REG0,REG2,REG1,DEFAULT)
0xE1A70382,	//0x14b2		VoC_movreg16(REG7,RL6_HI,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x382)(hi)
0x3C268020,	//0x14b4		VoC_bngt16_rd(CII_g_quant_vl_Lable29,REG6,0x370)(lo)	|	VoC_add16_rp(REG0,REG0,REG4,DEFAULT)
0x07000370,	//0x14b6		VoC_add16_rd(REG0,REG0,0x2730)(lo)	|	VoC_bngt16_rd(CII_g_quant_vl_Lable29,REG6,0x370)(hi)
0xDCB72730,	//0x14b8		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x2730)(hi)
		//0x14b9		CII_g_quant_vl_Lable29
0x3820DCB0,	//0x14ba		VoC_bgt16_rd(CII_g_quant_vl_Lable30,REG0,0x2731)(lo)	|	VoC_sw16inc_p(REG0,REG3,DEFAULT)
0x15002731,	//0x14bc		VoC_sw16_d(REG0,0x2731)(lo)	|	VoC_bgt16_rd(CII_g_quant_vl_Lable30,REG0,0x2731)(hi)
0xDF032731,	//0x14be		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG0,0x2731)(hi)
		//0x14bf		CII_g_quant_vl_Lable30
0x0736DF02,	//0x14c0		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_pop32(REG45,DEFAULT)
		//0x14c1		VoC_endloop1
0x079B0370,	//0x14c2		VoC_sub16_rd(REG3,REG3,0x524)(lo)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
0x14040524,	//0x14c4		VoC_lw16_d(REG4,0x2731)(lo)	|	VoC_sub16_rd(REG3,REG3,0x524)(hi)
0xE8AD2731,	//0x14c6		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw16_d(REG4,0x2731)(hi)
0xFF43E060,	//0x14c8		VoC_lw32z(REG67,DEFAULT)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0xBAE2D8B7,	//0x14ca		VoC_sub16inc_pr(REG2,REG3,REG4,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0x14D03142,	//0x14cc		VoC_bngtz16_r(g_quant_vl_111,REG2)
0xFFC07E93,	//0x14ce		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_rr(REG67,REG2,DEFAULT)
		//0x14d0		g_quant_vl_111
0x0382091B,	//0x14d0		VoC_add32_rd(REG67,REG67,0x382)
0x03761487,	//0x14d2		VoC_lw32_d(RL7,0x376)
		//0x14d4		VoC_endloop0
0xDF87DC07,	//0x14d4		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16_p(REG7,REG0,DEFAULT)
0x5684083A,	//0x14d6		VoC_mult16_rd(REG2,REG7,0x5684)
0x05601804,	//0x14d8		VoC_lw16i_set_inc(REG0,0x560,0x1)
0xF00B4010,	//0x14da		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x0524079B,	//0x14dc		VoC_sub16_rd(REG3,REG3,0x524)
0x2C41F001,	//0x14de		VoC_loop_i(0x1,0x20)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFF4414EB,	//0x14e0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x20)(hi)
0xD8B6E8A2,	//0x14e2		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x14e4		VoC_endloop0
0x079BD130,	//0x14e4		VoC_sub16_rd(REG3,REG3,0x524)(lo)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0x36A70524,	//0x14e6		VoC_bngt32_rr(g_quant_vl_222,ACC0,RL7)(lo)	|	VoC_sub16_rd(REG3,REG3,0x524)(hi)
0x7F2714EB,	//0x14e8		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_bngt32_rr(g_quant_vl_222,ACC0,RL7)(hi)
0xDE08F625,	//0x14ea		VoC_inc_p(REG1,DEFAULT)	|	VoC_movreg16(REG5,REG1,IN_PARALLEL)
		//0x14eb		g_quant_vl_222
		//0x14eb		VoC_endloop1
0x142ADB55,	//0x14ec		VoC_lw16_d(SP16,0x6417)(lo)	|	VoC_sw16_sd(REG5,0x14,DEFAULT)
0x2B006417,	//0x14ee		VoC_jump_lg(sfrmAnalysis_midend)(lo)	|	VoC_lw16_d(SP16,0x6417)(hi)
0xF0E4151A,	//0x14f0		VoC_lw16i_short(REG4,0x7,DEFAULT)	|	VoC_jump_lg(sfrmAnalysis_midend)(hi)
		//0x14f1		sfrmAnalysis_mid
0xD685D610,	//0x14f2		VoC_lw16_sd(REG5,0x7,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x2B80DFC4,	//0x14f4		VoC_jal(CII_b_con_opt)(lo)	|	VoC_push16(REG4,DEFAULT)
0xD6410F2C,	//0x14f6		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_jal(CII_b_con_opt)(hi)
0x07E01920,	//0x14f8		VoC_lw16i_set_inc(REG0,0x7e0,0x28)
0xF0095622,	//0x14fa		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x2B80D614,	//0x14fc		VoC_jal(CII_v_con_opt)(lo)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xD6140F0D,	//0x14fe		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
0xF0045620,	//0x1500		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0x2B80D685,	//0x1502		VoC_jal(CII_b_con_opt)(lo)	|	VoC_lw16_sd(REG5,0x7,DEFAULT)
0xD6220F2C,	//0x1504		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_jal(CII_b_con_opt)(hi)
0x08F81920,	//0x1506		VoC_lw16i_set_inc(REG0,0x8f8,0x28)
0x64401809,	//0x1508		VoC_lw16i_set_inc(REG1,0x6440,0x2)
0x2B80DF84,	//0x150a		VoC_jal(CII_v_con_opt)(lo)	|	VoC_pop16(REG4,DEFAULT)
0xD6B20F0D,	//0x150c		VoC_lw16_sd(REG2,0xa,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
0x64181808,	//0x150e		VoC_lw16i_set_inc(REG0,0x6418,0x2)
0xF00656E3,	//0x1510		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0xd,DEFAULT)
0x0F8E2B80,	//0x1512		VoC_jal(CII_rs_rrNs_opt)
0xD6F3D6B2,	//0x1514		VoC_lw16_sd(REG3,0xe,DEFAULT)	|	VoC_lw16_sd(REG2,0xa,DEFAULT)
0x64401808,	//0x1516		VoC_lw16i_set_inc(REG0,0x6440,0x2)
0x0F8E2B80,	//0x1518		VoC_jal(CII_rs_rrNs_opt)
		//0x151a		sfrmAnalysis_midend
0xD691D6A6,	//0x151a		VoC_lw16_sd(REG1,0x8,DEFAULT)	|	VoC_lw16_sd(REG6,0x9,DEFAULT)
0x56840830,	//0x151c		VoC_mult16_rd(REG0,REG6,0x5684)
0x034A0809,	//0x151e		VoC_mult16_rd(REG1,REG1,0x34a)
0x05600A84,	//0x1520		VoC_lw16i(REG4,0x560)
0xC10CC104,	//0x1522		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0xDFC4D6E7,	//0x1524		VoC_push16(REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0xd,DEFAULT)
0x5640D844,	//0x1526		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x7030D641,	//0x1528		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG1,0x3,IN_PARALLEL)
0x31C6F005,	//0x152a		VoC_bnez16_r(sfrmAnalysis_0000,REG6)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x2B80153E,	//0x152c		VoC_jal(CII_scaleExcite_opt)(lo)	|	VoC_bnez16_r(sfrmAnalysis_0000,REG6)(hi)
0xD6140E76,	//0x152e		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_scaleExcite_opt)(hi)
0x03700724,	//0x1530		VoC_add16_rd(REG4,REG4,0x370)
0x64400A81,	//0x1532		VoC_lw16i(REG1,0x6440)
0x5707D844,	//0x1534		VoC_lw16_sd(REG7,0xf,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x2B80F620,	//0x1536		VoC_jal(CII_scaleExcite_opt)(lo)	|	VoC_movreg16(REG0,REG1,IN_PARALLEL)
0xD6400E76,	//0x1538		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_jal(CII_scaleExcite_opt)(hi)
0x1806D671,	//0x153a		VoC_lw16i_set_inc(REG2,0x6440,0x1)(lo)	|	VoC_lw16_sd(REG1,0x6,DEFAULT)
0xE5D26440,	//0x153c		VoC_jump(sfrmAnalysis_0001)	|	VoC_lw16i_set_inc(REG2,0x6440,0x1)(hi)
		//0x153e		sfrmAnalysis_0000
0x5650D6E7,	//0x153e		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_lw16_sd(REG7,0xd,DEFAULT)
0x2B80D651,	//0x1540		VoC_jal(CII_scaleExcite_opt)(lo)	|	VoC_lw16_sd(REG1,0x4,IN_PARALLEL)
0xD6140E76,	//0x1542		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_scaleExcite_opt)(hi)
0x03700724,	//0x1544		VoC_add16_rd(REG4,REG4,0x370)
0xD6405641,	//0x1546		VoC_lw16_sd(REG0,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x3,DEFAULT)
0xD844D6F7,	//0x1548		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0xe,DEFAULT)
0x0E762B80,	//0x154a		VoC_jal(CII_scaleExcite_opt)
0xD642D650,	//0x154c		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0xD883D671,	//0x154e		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16_sd(REG1,0x6,DEFAULT)
		//0x154f		sfrmAnalysis_0001
0x82D4ED03,	//0x1550		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xDC94D883,	//0x1552		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x1553		VoC_endloop0
0x237A1805,	//0x1554		VoC_lw16i_set_inc(REG1,0x237a,0x1)
0x23521804,	//0x1556		VoC_lw16i_set_inc(REG0,0x2352,0x1)
0x2CD6D892,	//0x1558		VoC_loop_i(0x0,0x6b)(lo)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xD892155C,	//0x155a		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x6b)(hi)
		//0x155c		VoC_endloop0
0xD671DC82,	//0x155c		VoC_lw16_sd(REG1,0x6,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xD892ED04,	//0x155e		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0x24401807,	//0x1560		VoC_lw16i_set_inc(REG3,0x2440,0x1)
		//0x1562		VoC_endloop0
0x1806DC82,	//0x1562		VoC_lw16i_set_inc(REG2,0x2418,0x1)(lo)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xD8B12418,	//0x1564		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x2418,0x1)(hi)
0x15692CD2,	//0x1566		VoC_loop_i(0x0,0x69)
0xDCA1D8B1,	//0x1568		VoC_sw16inc_p(REG1,REG2,DEFAULT)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
		//0x1569		VoC_endloop0
0x1FBDD670,	//0x156a		VoC_lw16i_set_inc(REG1,0x2481,0xffffffff)(lo)	|	VoC_lw16_sd(REG0,0x6,DEFAULT)
0xD6622481,	//0x156c		VoC_lw16_sd(REG2,0x5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x2481,0xffffffff)(hi)
0xD6A5D6D3,	//0x156e		VoC_lw16_sd(REG5,0x9,DEFAULT)	|	VoC_lw16_sd(REG3,0xc,DEFAULT)
0x640C1404,	//0x1570		VoC_lw16_d(REG4,0x640c)
0xDC45D696,	//0x1572		VoC_sw16_p(REG5,REG4,DEFAULT)	|	VoC_lw16_sd(REG6,0x8,DEFAULT)
0x640A1404,	//0x1574		VoC_lw16_d(REG4,0x640a)
0xDC46D687,	//0x1576		VoC_sw16_p(REG6,REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0x7,DEFAULT)
0x640B1404,	//0x1578		VoC_lw16_d(REG4,0x640b)
0x6416142A,	//0x157a		VoC_lw16_d(SP16,0x6416)
0x2B80DC47,	//0x157c		VoC_jal(CII_lpcIir_opt_paris)(lo)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
0xDFA91582,	//0x157e		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_lpcIir_opt_paris)(hi)
0xE580FFC0,	//0x1580		VoC_return	|	VoC_NOP
		//0x1582		CII_lpcIir_opt_paris
0x64920A82,	//0x1582		VoC_lw16i(REG2,0x6492)
0xD8B8DF41,	//0x1584		VoC_lw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xD8B8E942,	//0x1586		VoC_lw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1588		VoC_endloop0
0x5F01DCA8,	//0x1588		VoC_pop32(REG23,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0xFF44DE08,	//0x158a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0x08000A88,	//0x158c		VoC_lw16i(ACC0_LO,0x800)
0x64920A83,	//0x158e		VoC_lw16i(REG3,0x6492)
0xDF445FC7,	//0x1590		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xE0A47005,	//0x1592		VoC_lw16i_short(REG4,0xa,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x00000AC7,	//0x1594		VoC_lw16i(REG7,0x8000)
0x15A72C15,	//0x1596		VoC_loop_i(0x1,0xa)
0x3185C32C,	//0x1598		VoC_bez16_r(lpcIir_skip_1st,REG5)(lo)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0x6742159E,	//0x159a		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_bez16_r(lpcIir_skip_1st,REG5)(hi)
0xD48BD90C,	//0x159c		VoC_msu32inc_pp(REG1,REG3,DEFAULT)	|	VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)
		//0x159d		VoC_endloop0
		//0x159e		lpcIir_skip_1st
0xD493E701,	//0x159e		VoC_msu32inc_pp(REG2,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x159f		VoC_endloop0
0x0370072D,	//0x15a0		VoC_add16_rd(REG5,REG5,0x370)
0xFBE451B8,	//0x15a2		VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)	|	VoC_msu32inc_rp(REG7,REG0,DEFAULT)
0xC06942A2,	//0x15a4		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0x5C19F144,	//0x15a6		VoC_sw16_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
		//0x15a7		VoC_endloop1
0x5FC2C2E3,	//0x15a8		VoC_push16(REG2,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x7125DF47,	//0x15aa		VoC_lw16i_short(REG5,0x9,DEFAULT)	|	VoC_push32(RL7,IN_PARALLEL)
0x7051F622,	//0x15ac		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_movreg16(REG2,REG1,IN_PARALLEL)
0x42A9F3FB,	//0x15ae		VoC_sub16_rr(REG1,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)
0xD917C0EB,	//0x15b0		VoC_lw32_sd(RL7,0x1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x15BC2C3D,	//0x15b2		VoC_loop_i(0x1,0x1e)
0x620BDFC3,	//0x15b4		VoC_aligninc_pp(REG1,REG3,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x68A2FF3C,	//0x15b6		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xD58BDCA9,	//0x15b8		VoC_bimsu32inc_pp(REG1,REG3)	|	VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)
		//0x15b9		VoC_endloop0
0xDF8342A9,	//0x15ba		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG2,REG5,DEFAULT)
		//0x15bc		VoC_endloop1
0xFBE451B8,	//0x15bc		VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)	|	VoC_msu32inc_rp(REG7,REG0,DEFAULT)
0xF3FD4069,	//0x15be		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xF0075F82,	//0x15c0		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xDF075C29,	//0x15c2		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG2,DEFAULT)
0xE942D895,	//0x15c4		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xDCA5D895,	//0x15c6		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x15c7		VoC_endloop0
0xDF045F87,	//0x15c8		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDFE9E580,	//0x15ca		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x15cb		CII_decorr_opt
0x1500F050,	//0x15cc		VoC_sw16_d(REG0,0x2730)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xF0042730,	//0x15ce		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_sw16_d(REG0,0x2730)(hi)
0x0F232B80,	//0x15d0		VoC_jal(CII_g_corr1_opt_paris)
0x070FE126,	//0x15d2		VoC_add16_rd(REG7,REG1,0x370)(lo)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x31860370,	//0x15d4		VoC_bez16_r(decorr_end,REG6)(lo)	|	VoC_add16_rd(REG7,REG1,0x370)(hi)
0xF0301616,	//0x15d6		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_bez16_r(decorr_end,REG6)(hi)
0x2E29F031,	//0x15d8		VoC_loop_r(1,REG5)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE0601614,	//0x15da		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_loop_r(1,REG5)(hi)
0x03821487,	//0x15dc		VoC_lw32_d(RL7,0x382)
0x27301401,	//0x15de		VoC_lw16_d(REG1,0x2730)
0x16192B80,	//0x15e0		VoC_jal(CII_g_corr2_opt)
0x33C5C27D,	//0x15e2		VoC_bnltz32_r(decorr01,ACC1)(lo)	|	VoC_sub16_rr(REG5,REG1,REG7,DEFAULT)
0x0BAC15E7,	//0x15e4		VoC_sub32_dr(ACC0,0x518,ACC1)(lo)	|	VoC_bnltz32_r(decorr01,ACC1)(hi)
0xFA0C0518,	//0x15e6		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_sub32_dr(ACC0,0x518,ACC1)(hi)
		//0x15e7		decorr01
0x6020C938,	//0x15e8		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_add32_rr(REG01,ACC0,RL7,DEFAULT)
0xFFC0F6C1,	//0x15ea		VoC_NAD	|	VoC_movreg16(REG1,REG6,IN_PARALLEL)
0x02CC2B80,	//0x15ec		VoC_jal(CII_DIV_S)
0x15F132C5,	//0x15ee		VoC_bngtz32_r(decorr02,ACC1)
0xFF44C312,	//0x15f0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
		//0x15f1		decorr02
0x2B80E049,	//0x15f2		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
0xC14802BA,	//0x15f4		VoC_add16_rr(REG0,REG5,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B09,	//0x15f6		VoC_sub16_dr(REG1,0x518,REG1)
0xE045FE0A,	//0x15f8		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_shr16_rr(REG2,REG1,DEFAULT)
0x16033140,	//0x15fa		VoC_bngtz16_r(decorr04,REG0)
0x0912FE82,	//0x15fc		VoC_add32_rd(REG45,REG45,0x382)(lo)	|	VoC_shr32_rr(REG45,REG0,DEFAULT)
0x3C180382,	//0x15fe		VoC_bngt16_rd(decorr03,REG0,0x4dc)(lo)	|	VoC_add32_rd(REG45,REG45,0x382)(hi)
0xF00504DC,	//0x1600		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bngt16_rd(decorr03,REG0,0x4dc)(hi)
		//0x1602		decorr03
0xDF43F000,	//0x1602		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x1603		decorr04
0x27302005,	//0x1604		VoC_lw16d_set_inc(REG1,0x2730,0x1)
0x03821483,	//0x1606		VoC_lw32_d(REG67,0x382)
0xD8947F1C,	//0x1608		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xFE047033,	//0x160a		VoC_shr16_rr(REG4,REG0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xED05CE2C,	//0x160c		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_mac32_rr(REG5,REG4,DEFAULT)
0xD894D0B3,	//0x160e		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_msu32_rp(REG6,REG3,DEFAULT)
0xFE047F1C,	//0x1610		VoC_shr16_rr(REG4,REG0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
		//0x1612		VoC_endloop0
0xDCB94E2C,	//0x1612		VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG4,DEFAULT)
		//0x1614		VoC_endloop1
0xDF037004,	//0x1614		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x1616		decorr_end
0xFFC0DFA9,	//0x1616		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1618		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1619		CII_g_corr2_opt
0xED02FF44,	//0x161a		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD111D882,	//0x161c		VoC_mac32inc_rp(REG2,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
		//0x161d		VoC_endloop0
0xFF25FFC0,	//0x161e		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_NOP
0x02BA2B80,	//0x1620		VoC_jal(CII_NORM_L_ACC0)
0x0B0ADFA9,	//0x1622		VoC_sub16_dr(REG2,0x518,REG1)(lo)	|	VoC_pop16(RA,DEFAULT)
0xFE950518,	//0x1624		VoC_shr32_rr(ACC1,REG2,DEFAULT)	|	VoC_sub16_dr(REG2,0x518,REG1)(hi)
0xD88CE580,	//0x1626		VoC_lw16inc_p(RL6_LO,REG0,DEFAULT)	|	VoC_return
		//0x1627		CII_iir_d_opt
0xD88ED88D,	//0x1628		VoC_lw16inc_p(RL7_LO,REG0,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG0,DEFAULT)
0x5807D88F,	//0x162a		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG0,DEFAULT)
0x1808F7E6,	//0x162c		VoC_lw16i_set_inc(REG0,0x2528,0x2)(lo)	|	VoC_movreg16(REG6,RL7_HI,IN_PARALLEL)
0xDF412528,	//0x162e		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2528,0x2)(hi)
0xDDC3DDC3,	//0x1630		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC6E1C6,	//0x1632		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0xD8B6DC06,	//0x1634		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0xD8B7D8BC,	//0x1636		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(RL6_LO,REG3,DEFAULT)
0xD997D8BD,	//0x1638		VoC_lw32_p(RL7,REG2,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG3,DEFAULT)
0x25280A80,	//0x163a		VoC_lw16i(REG0,0x2528)
0x5FC0D989,	//0x163c		VoC_push16(REG0,DEFAULT)	|	VoC_lw32_p(REG23,REG1,DEFAULT)
0x2CA1FF44,	//0x163e		VoC_loop_i(0x1,0x50)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xFE23165F,	//0x1640		VoC_shr16_rr(REG3,REG4,DEFAULT)	|	VoC_loop_i(0x1,0x50)(hi)
0xE85AFE22,	//0x1642		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_shr16_rr(REG2,REG4,DEFAULT)
0xFF32DF42,	//0x1644		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7F3AD220,	//0x1646		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG0)
0x7A74F7EE,	//0x1648		VoC_shr32_ri(ACC0,0xe,DEFAULT)	|	VoC_movreg16(RL7_LO,RL7_HI,IN_PARALLEL)
0xD230F64F,	//0x164a		VoC_bimac32inc_rp(REG67,REG0)	|	VoC_movreg16(RL7_HI,REG2,IN_PARALLEL)
0x5010D220,	//0x164c		VoC_mac32_rp(REG2,REG0,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG0)
0x5610DF02,	//0x164e		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x7BFCF6E6,	//0x1650		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_movreg16(REG6,REG7,IN_PARALLEL)
0x6127F7AC,	//0x1652		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_movreg16(RL6_LO,RL6_HI,IN_PARALLEL)
0x7812F702,	//0x1654		VoC_shr16_ri(REG2,0x2,DEFAULT)	|	VoC_movreg16(REG2,ACC0_LO,IN_PARALLEL)
0x1602FEAC,	//0x1656		VoC_and16_ri(REG2,0x3fff)(lo)	|	VoC_shr32_rr(ACC0,REG5,IN_PARALLEL)
0x09243FFF,	//0x1658		VoC_add32_rd(ACC0,ACC0,0x382)(lo)	|	VoC_and16_ri(REG2,0x3fff)(hi)
0x604D0382,	//0x165a		VoC_movreg16(RL6_HI,REG2,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x382)(hi)
0x5C99F662,	//0x165c		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
		//0x165d		VoC_endloop0
0xD989FF44,	//0x165e		VoC_lw32_p(REG23,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x165f		VoC_endloop1
0xDF80DF01,	//0x1660		VoC_pop16(REG0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDCBCDCB6,	//0x1662		VoC_sw16inc_p(RL6_LO,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCBDDCB7,	//0x1664		VoC_sw16inc_p(RL6_HI,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0xE580DDD7,	//0x1666		VoC_return	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x1668		CII_rcToCorrDpL_opt
0x03741487,	//0x1668		VoC_lw32_d(RL7,0x374)
0x5DCFDFE9,	//0x166a		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x180AF008,	//0x166c		VoC_lw16i_set_inc(REG2,0x256a,0x2)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xE043256A,	//0x166e		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x256a,0x2)(hi)
0xDF41E040,	//0x1670		VoC_push32(REG23,DEFAULT)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x257E1FBB,	//0x1672		VoC_lw16i_set_inc(REG3,0x257e,0xfffffffe)
0x0A86E062,	//0x1674		VoC_lw16i(REG6,0x800)(lo)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x5F410800,	//0x1676		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i(REG6,0x800)(hi)
0x2C15E007,	//0x1678		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xF02516A2,	//0x167a		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0xC1655844,	//0x167c		VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xC0FB5E18,	//0x167e		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xDFC540FB,	//0x1680		VoC_push16(REG5,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x168B3187,	//0x1682		VoC_bez16_r(rcToCorrDpL_opt_First_Loop,REG7)
0xD9DC67C6,	//0x1684		VoC_lw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x0E6F2B80,	//0x1686		VoC_jal(CII_L_mpy_ls_opt)
0xD9DC9314,	//0x1688		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)
		//0x168a		VoC_endloop0
0xCDA4DDC4,	//0x168a		VoC_multf32_rr(ACC0,REG6,REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x168b		rcToCorrDpL_opt_First_Loop
0x073FFF45,	//0x168c		VoC_add16_rd(REG7,REG7,0x370)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0xDDC40370,	//0x168e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x370)(hi)
0xD90CD911,	//0x1690		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xF6235D09,	//0x1692		VoC_movreg16(REG3,REG1,IN_PARALLEL)	|	VoC_sw32_sd(REG23,0x0,DEFAULT)
0xDE18DD14,	//0x1694		VoC_inc_p(REG3,DEFAULT)	|	VoC_sw32_sd(ACC0,0x1,DEFAULT)
0xDF4367C6,	//0x1696		VoC_push32(REG67,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD9DBD9D2,	//0x1698		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x0E622B80,	//0x169a		VoC_jal(CII_L_mpy_ll_opt)
		//0x169c		VoC_endloop0
0xFBE5CB65,	//0x169c		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xDF035F84,	//0x169e		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xD911DDCD,	//0x16a0		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x16a2		VoC_endloop1
0xF6405909,	//0x16a2		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xDF015FA9,	//0x16a4		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE580DF01,	//0x16a6		VoC_return	|	VoC_pop32(REG23,DEFAULT)
		//0x16a8		CII_resetDec
0x1CBF1502,	//0x16a8		VoC_sw16_d(REG2,0x1cbf)
0x1E32180A,	//0x16aa		VoC_lw16i_set_inc(REG2,0x1e32,0x2)
0xFFC07F44,	//0x16ac		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x16B32C07,	//0x16ae		VoC_loop_i(0x1,0x3)
0x16B22D64,	//0x16b0		VoC_loop_i(0x0,0xb2)
		//0x16b2		VoC_endloop0
0x1808DDD4,	//0x16b2		VoC_lw16i_set_inc(REG0,0x578c,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x16b3		VoC_endloop1
0x1809578C,	//0x16b4		VoC_lw16i_set_inc(REG1,0x1cb2,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x578c,0x2)(hi)
0xD9C41CB2,	//0x16b6		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1cb2,0x2)(hi)
0xD9C4E8A2,	//0x16b8		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x16ba		VoC_endloop0
0xF024DDCC,	//0x16ba		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE0B370E2,	//0x16bc		VoC_lw16i_short(REG3,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x7,DEFAULT)
0x1504FF44,	//0x16be		VoC_sw16_d(REG4,0x1cbe)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x15021CBE,	//0x16c0		VoC_sw16_d(REG2,0x1cc0)(lo)	|	VoC_sw16_d(REG4,0x1cbe)(hi)
0x15031CC0,	//0x16c2		VoC_sw16_d(REG3,0x1cc1)(lo)	|	VoC_sw16_d(REG2,0x1cc0)(hi)
0x15841CC1,	//0x16c4		VoC_sw32_d(ACC0,0x1d7c)(lo)	|	VoC_sw16_d(REG3,0x1cc1)(hi)
0xE5801D7C,	//0x16c6		VoC_return	|	VoC_sw32_d(ACC0,0x1d7c)(hi)
		//0x16c8		CII_resetHREnc
0x2052180A,	//0x16c8		VoC_lw16i_set_inc(REG2,0x2052,0x2)
0xFFC07F44,	//0x16ca		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x16D32C09,	//0x16cc		VoC_loop_i(0x1,0x4)
0x16D02D16,	//0x16ce		VoC_loop_i(0x0,0x8b)
		//0x16d0		VoC_endloop0
0x1508DDD4,	//0x16d0		VoC_sw16_d(ACC0_LO,0x1b69)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x15081B69,	//0x16d2		VoC_sw16_d(ACC0_LO,0x1b6a)(lo)	|	VoC_sw16_d(ACC0_LO,0x1b69)(hi)
		//0x16d3		VoC_endloop1
0x70221B6A,	//0x16d4		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_sw16_d(ACC0_LO,0x1b6a)(hi)
0x0A88E074,	//0x16d6		VoC_lw16i(ACC0_LO,0x6000)(lo)	|	VoC_lw16i_short(REG4,0x7,IN_PARALLEL)
0x72A56000,	//0x16d8		VoC_lw16i_short(REG5,0x15,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x6000)(hi)
0x0A89EFF6,	//0x16da		VoC_lw16i(ACC0_HI,0x5573)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,IN_PARALLEL)
0x15025573,	//0x16dc		VoC_sw16_d(REG2,0x2284)(lo)	|	VoC_lw16i(ACC0_HI,0x5573)(hi)
0x15082284,	//0x16de		VoC_sw16_d(ACC0_LO,0x22bc)(lo)	|	VoC_sw16_d(REG2,0x2284)(hi)
0x150422BC,	//0x16e0		VoC_sw16_d(REG4,0x22c6)(lo)	|	VoC_sw16_d(ACC0_LO,0x22bc)(hi)
0x150522C6,	//0x16e2		VoC_sw16_d(REG5,0x22c9)(lo)	|	VoC_sw16_d(REG4,0x22c6)(hi)
0x0A8822C9,	//0x16e4		VoC_lw16i(ACC0_LO,0x32)(lo)	|	VoC_sw16_d(REG5,0x22c9)(hi)
0x15090032,	//0x16e6		VoC_sw16_d(ACC0_HI,0x22ca)(lo)	|	VoC_lw16i(ACC0_LO,0x32)(hi)
0x150622CA,	//0x16e8		VoC_sw16_d(REG6,0x22cd)(lo)	|	VoC_sw16_d(ACC0_HI,0x22ca)(hi)
0x150522CD,	//0x16ea		VoC_sw16_d(REG5,0x22d0)(lo)	|	VoC_sw16_d(REG6,0x22cd)(hi)
0x150822D0,	//0x16ec		VoC_sw16_d(ACC0_LO,0x1b6b)(lo)	|	VoC_sw16_d(REG5,0x22d0)(hi)
0xE5801B6B,	//0x16ee		VoC_return	|	VoC_sw16_d(ACC0_LO,0x1b6b)(hi)
		//0x16f0		CII_step_up_opt
0x1809F006,	//0x16f0		VoC_lw16i_set_inc(REG1,0x63f0,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0A8763F0,	//0x16f2		VoC_lw16i(REG7,0x2000)(lo)	|	VoC_lw16i_set_inc(REG1,0x63f0,0x2)(hi)
0xDFC12000,	//0x16f4		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i(REG7,0x2000)(hi)
0x1808DDCB,	//0x16f6		VoC_lw16i_set_inc(REG0,0x6404,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xFF056404,	//0x16f8		VoC_movreg32(ACC1,REG01,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6404,0x2)(hi)
0x2E29F004,	//0x16fa		VoC_loop_r(1,REG5)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xD8A61716,	//0x16fc		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_loop_r(1,REG5)(hi)
0x3184E023,	//0x16fe		VoC_bez16_r(VAD_STEP_UP_LABEL1,REG4)(lo)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xFF28170F,	//0x1700		VoC_movreg32(REG01,ACC1,DEFAULT)	|	VoC_bez16_r(VAD_STEP_UP_LABEL1,REG4)(hi)
0xE1E7D9DF,	//0x1702		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xCDBCE705,	//0x1704		VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x930CD9DF,	//0x1706		VoC_add32inc_rp(ACC0,ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xDDC4E1E7,	//0x1708		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_movreg16(REG7,RL7_HI,DEFAULT)
		//0x1709		VoC_endloop0
0xE703FF28,	//0x170a		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0xFFC0D9C7,	//0x170c		VoC_NOP	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
		//0x170e		VoC_endloop0
0xF007DDCF,	//0x170e		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x170f		VAD_STEP_UP_LABEL1
0x17133246,	//0x1710		VoC_bnltz16_r(STEP_UP_01,REG6)
0xF020F7E7,	//0x1712		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x1713		STEP_UP_01
0xC104FB93,	//0x1714		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
		//0x1716		VoC_endloop1
0x4145DD8B,	//0x1716		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sw32_p(REG67,REG1,DEFAULT)
0xE1A2DF80,	//0x1718		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0xD9C3E744,	//0x171a		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0xFFC0FA1B,	//0x171c		VoC_NOP	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
		//0x171e		VoC_endloop0
0xE580DCA7,	//0x171e		VoC_return	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x1720		CII_vad_algorithm
0x1808DFE9,	//0x1720		VoC_lw16i_set_inc(REG0,0x2528,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x20072528,	//0x1722		VoC_lw16d_set_inc(REG3,0x2560,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2528,0x2)(hi)
0x18062560,	//0x1724		VoC_lw16i_set_inc(REG2,0x22bc,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x2560,0x1)(hi)
0x140C22BC,	//0x1726		VoC_lw16_d(RL6_LO,0x22c6)(lo)	|	VoC_lw16i_set_inc(REG2,0x22bc,0x1)(hi)
0x148222C6,	//0x1728		VoC_lw32_d(REG45,0x376)(lo)	|	VoC_lw16_d(RL6_LO,0x22c6)(hi)
0xD9840376,	//0x172a		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw32_d(REG45,0x376)(hi)
0x3304FF17,	//0x172c		VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(lo)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0x2B801750,	//0x172e		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(hi)
0xF8FB02BA,	//0x1730		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x00200A84,	//0x1732		VoC_lw16i(REG4,0x20)
0xC2CDC0E3,	//0x1734		VoC_sub16_rr(REG5,REG3,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x051D0B09,	//0x1736		VoC_sub16_dr(REG1,0x51d,REG1)
0xFF44692B,	//0x1738		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFE8BD9C3,	//0x173a		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x4434D13A,	//0x173c		VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0x968)(lo)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
0xF8EF0968,	//0x173e		VoC_shr16_ri(REG7,0xfffffffd,DEFAULT)	|	VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0x968)(hi)
0xFA0CE0E4,	//0x1740		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0xF1C4FF17,	//0x1742		VoC_lw16i_short(REG4,0xe,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x1743		ENERGY_COMPUTATION_First
		//0x1743		VoC_endloop0
0xF7844165,	//0x1744		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x3284C365,	//0x1746		VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(lo)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0x1484174C,	//0x1748		VoC_lw32_d(ACC0,0x370)(lo)	|	VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(hi)
0xFFC00370,	//0x174a		VoC_NAD	|	VoC_lw32_d(ACC0,0x370)(hi)
		//0x174c		ENERGY_COMPUTATION_100
0x02BA2B80,	//0x174c		VoC_jal(CII_NORM_L_ACC0)
0xF724434D,	//0x174e		VoC_movreg16(REG4,ACC0_HI,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
		//0x1750		ENERGY_COMPUTATION_EXIT
0x63DC1587,	//0x1750		VoC_sw32_d(RL7,0x63dc)
0x63DA1582,	//0x1752		VoC_sw32_d(REG45,0x63da)
0x25601401,	//0x1754		VoC_lw16_d(REG1,0x2560)
0x25281808,	//0x1756		VoC_lw16i_set_inc(REG0,0x2528,0x2)
0x63B6180A,	//0x1758		VoC_lw16i_set_inc(REG2,0x63b6,0x2)
0x63C8180B,	//0x175a		VoC_lw16i_set_inc(REG3,0x63c8,0x2)
0x0B0DF8F9,	//0x175c		VoC_sub16_dr(REG5,0x524,REG1)(lo)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xF0060524,	//0x175e		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_sub16_dr(REG5,0x524,REG1)(hi)
0x00220A87,	//0x1760		VoC_lw16i(REG7,0x22)
0xF044DF41,	//0x1762		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x22C70824,	//0x1764		VoC_mult16_rd(REG4,REG4,0x22c7)
0x22D2188B,	//0x1766		VoC_lw16i_set_inc(REG3,0x22d2,0x12)
0xE92AC0E4,	//0x1768		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_add16_rr(REG4,REG3,REG4,DEFAULT)
0xFEAFD9C7,	//0x176a		VoC_shr32_rr(RL7,REG5,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0x93DFFF3E,	//0x176c		VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x91DF93DF,	//0x176e		VoC_add32_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)
0x0724DDA6,	//0x1770		VoC_add16_rd(REG4,REG4,0x51c)(lo)	|	VoC_sw32_p(RL6,REG4,DEFAULT)
0x5DD7051C,	//0x1772		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x51c)(hi)
		//0x1773		VoC_endloop0
0xF046CA59,	//0x1774		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_sub32_rr(REG23,REG23,REG67,IN_PARALLEL)
0x22C80830,	//0x1776		VoC_mult16_rd(REG0,REG6,0x22c8)
0x2308180B,	//0x1778		VoC_lw16i_set_inc(REG3,0x2308,0x2)
0xDF01C018,	//0x177a		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD983E924,	//0x177c		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xDDDBD9D2,	//0x177e		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x1780		VoC_endloop0
0x7244DDC2,	//0x1780		VoC_lw16i_short(REG4,0x12,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x072EE095,	//0x1782		VoC_add16_rd(REG6,REG5,0x22c7)(lo)	|	VoC_lw16i_short(REG5,0x9,IN_PARALLEL)
0x441C22C7,	//0x1784		VoC_bne16_rd(ACF_AVERAGING101,REG4,0x22c7)(lo)	|	VoC_add16_rd(REG6,REG5,0x22c7)(hi)
0xF00622C7,	//0x1786		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING101,REG4,0x22c7)(hi)
		//0x1788		ACF_AVERAGING101
0x072FF364,	//0x1788		VoC_add16_rd(REG7,REG5,0x22c8)(lo)	|	VoC_lw16i_short(REG4,0x1b,DEFAULT)
0x441C22C8,	//0x178a		VoC_bne16_rd(ACF_AVERAGING103,REG4,0x22c8)(lo)	|	VoC_add16_rd(REG7,REG5,0x22c8)(hi)
0xF00722C8,	//0x178c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING103,REG4,0x22c8)(hi)
		//0x178e		ACF_AVERAGING103
0x1506F033,	//0x178e		VoC_sw16_d(REG6,0x22c7)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x150722C7,	//0x1790		VoC_sw16_d(REG7,0x22c8)(lo)	|	VoC_sw16_d(REG6,0x22c7)(hi)
0x180A22C8,	//0x1792		VoC_lw16i_set_inc(REG2,0x63c8,0x2)(lo)	|	VoC_sw16_d(REG7,0x22c8)(hi)
0x0A8063C8,	//0x1794		VoC_lw16i(REG0,0x63e8)(lo)	|	VoC_lw16i_set_inc(REG2,0x63c8,0x2)(hi)
0xD99463E8,	//0x1796		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i(REG0,0x63e8)(hi)
0xF00AE00B,	//0x1798		VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG0,DEFAULT)
0x17B63304,	//0x179a		VoC_bez32_r(schur_recursion_End1,ACC0)
0x02BA2B80,	//0x179c		VoC_jal(CII_NORM_L_ACC0)
0x05180B09,	//0x179e		VoC_sub16_dr(REG1,0x518,REG1)
0x643D1FBC,	//0x17a0		VoC_lw16i_set_inc(REG0,0x643d,0xffffffff)
0x642A1807,	//0x17a2		VoC_lw16i_set_inc(REG3,0x642a,0x1)
0xD9D3E925,	//0x17a4		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFFC0FE8B,	//0x17a6		VoC_NOP	|	VoC_shr32_rr(REG67,REG1,DEFAULT)
0xDCB7DC87,	//0x17a8		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x17a9		VoC_endloop0
0x17E42C11,	//0x17aa		VoC_loop_i(0x1,0x8)
0x642A1482,	//0x17ac		VoC_lw32_d(REG45,0x642a)
0x05180B2F,	//0x17ae		VoC_sub16_dr(REG7,0x518,REG5)
0x17B33205,	//0x17b0		VoC_bltz16_r(abs_end,REG5)
0xFF29E0A7,	//0x17b2		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x17b3		abs_end
0x17BE34BC,	//0x17b4		VoC_bngt16_rr(SCHUR_RECURSION_130,REG7,REG4)
		//0x17b6		schur_recursion_End1
0x0B12FF29,	//0x17b6		VoC_sub16_dr(REG2,0x522,REG2)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xF0070522,	//0x17b8		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sub16_dr(REG2,0x522,REG2)(hi)
0xDCB7E681,	//0x17ba		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x17bb		VoC_endloop0
0x17E52B00,	//0x17bc		VoC_jump_lg(schur_recursion_End)
		//0x17be		SCHUR_RECURSION_130
0xE081E0E0,	//0x17be		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x02CC2B80,	//0x17c0		VoC_jal(CII_DIV_S)
0x17C63145,	//0x17c2		VoC_bngtz16_r(SCHUR_RECURSION_210,REG5)
0x05180B12,	//0x17c4		VoC_sub16_dr(REG2,0x518,REG2)
		//0x17c6		SCHUR_RECURSION_210
0x1486CD54,	//0x17c6		VoC_lw32_d(RL6,0x382)(lo)	|	VoC_multf32_rr(ACC0,REG5,REG2,DEFAULT)
0xDCB20382,	//0x17c8		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw32_d(RL6,0x382)(hi)
0xF6456142,	//0x17ca		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,ACC1_LO,DEFAULT)
0x0521418A,	//0x17cc		VoC_be16_rd(schur_recursion_End,REG2,0x521)
0x05210B16,	//0x17ce		VoC_sub16_dr(REG6,0x521,REG2)
0xDE104930,	//0x17d0		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)
0xFF0D4067,	//0x17d2		VoC_movreg32(ACC1,REG23,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG1,REG4,DEFAULT)
0x642A1805,	//0x17d4		VoC_lw16i_set_inc(REG1,0x642a,0x1)
0x643C1FBC,	//0x17d6		VoC_lw16i_set_inc(REG0,0x643c,0xffffffff)
0x051C070A,	//0x17d8		VoC_add16_rd(REG2,REG1,0x51c)
0xE788DC97,	//0x17da		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x99549944,	//0x17dc		VoC_multf32_rp(ACC0,REG5,REG2,DEFAULT)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0x83D4C933,	//0x17de		VoC_add16inc_rp(REG4,REG7,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x81C7C933,	//0x17e0		VoC_add16_rp(REG7,REG7,REG0,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xDC87DC94,	//0x17e2		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x17e3		VoC_endloop0
		//0x17e4		VoC_endloop1
0xF105FFC0,	//0x17e4		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_NOP
		//0x17e5		schur_recursion_End
0x63DE1FBB,	//0x17e6		VoC_lw16i_set_inc(REG3,0x63de,0xfffffffe)
0x63E81806,	//0x17e8		VoC_lw16i_set_inc(REG2,0x63e8,0x1)
0x2B80E06D,	//0x17ea		VoC_jal(CII_step_up_opt)(lo)	|	VoC_movreg16(RL6_HI,REG3,DEFAULT)
0xF03116F0,	//0x17ec		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_jal(CII_step_up_opt)(hi)
0x63DE1806,	//0x17ee		VoC_lw16i_set_inc(REG2,0x63de,0x1)
0x63AC1807,	//0x17f0		VoC_lw16i_set_inc(REG3,0x63ac,0x1)
0x64021808,	//0x17f2		VoC_lw16i_set_inc(REG0,0x6402,0x2)
0xDFC0F126,	//0x17f4		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0x2C13E041,	//0x17f6		VoC_loop_i(0x1,0x9)(lo)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0xFF441801,	//0x17f8		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x9)(hi)
0xD895E782,	//0x17fa		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x17fc		VoC_endloop0
0xC2B2D12A,	//0x17fc		VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG2,DEFAULT)
0x037007B6,	//0x17fe		VoC_sub16_rd(REG6,REG6,0x370)
0xDDC4C271,	//0x1800		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG6,DEFAULT)
		//0x1801		VoC_endloop1
0xF006DF80,	//0x1802		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x2B80D984,	//0x1804		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xC38902BA,	//0x1806		VoC_sub16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xD9C2E924,	//0x1808		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xC38AFE8A,	//0x180a		VoC_sub16_rr(REG2,REG6,REG1,DEFAULT)	|	VoC_shr32_rr(REG45,REG1,DEFAULT)
		//0x180c		VoC_endloop0
0x1502DCB5,	//0x180c		VoC_sw16_d(REG2,0x63ef)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x180863EF,	//0x180e		VoC_lw16i_set_inc(REG0,0x63b6,0x2)(lo)	|	VoC_sw16_d(REG2,0x63ef)(hi)
0xDFC263B6,	//0x1810		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63b6,0x2)(hi)
0x63AD1806,	//0x1812		VoC_lw16i_set_inc(REG2,0x63ad,0x1)
0xFF22D9C4,	//0x1814		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x02BA2B80,	//0x1816		VoC_jal(CII_NORM_L_ACC0)
0x051D0B0B,	//0x1818		VoC_sub16_dr(REG3,0x51d,REG1)
0xFF447E9A,	//0x181a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_rr(REG45,REG3,DEFAULT)
0xFF156909,	//0x181c		VoC_movreg32(ACC1,REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xFE9BD9C3,	//0x181e		VoC_shr32_rr(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x18253345,	//0x1820		VoC_bnez32_r(SPECTRAL_COMPARISON1020,ACC1)
0x0FFF0A87,	//0x1822		VoC_lw16i(REG7,0xfff)
0xD13AE0E5,	//0x1824		VoC_mac32inc_rp(REG7,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x1825		SPECTRAL_COMPARISON1020
		//0x1825		VoC_endloop0
0xE0017F43,	//0x1826		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x33C4FF25,	//0x1828		VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xCAE4182C,	//0x182a		VoC_sub32_rr(ACC0,REG67,ACC0,DEFAULT)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(hi)
		//0x182c		SPECTRAL_COMPARISON104
0x18443304,	//0x182c		VoC_bez32_r(SPECTRAL_COMPARISON106,ACC0)
0x2B80F8ED,	//0x182e		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_shr16_ri(REG5,0xfffffffd,DEFAULT)
0xC3C902BA,	//0x1830		VoC_sub16_rr(REG1,REG7,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xDF40E120,	//0x1832		VoC_push32(REG01,DEFAULT)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0x18393485,	//0x1834		VoC_bngt16_rr(SPECTRAL_COMPARISON109,REG0,REG5)
0x1483C228,	//0x1836		VoC_lw32_d(REG67,0x382)(lo)	|	VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)
0xE0A10382,	//0x1838		VoC_movreg16(REG1,REG5,DEFAULT)	|	VoC_lw32_d(REG67,0x382)(hi)
		//0x1839		SPECTRAL_COMPARISON109
0x02CC2B80,	//0x183a		VoC_jal(CII_DIV_S)
0xE0035F00,	//0x183c		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xFBFBC8CB,	//0x183e		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG23,DEFAULT)
0x184433C5,	//0x1840		VoC_bnltz32_r(SPECTRAL_COMPARISON106,ACC1)
0x05180B9B,	//0x1842		VoC_sub32_dr(REG67,0x518,REG67)
		//0x1844		SPECTRAL_COMPARISON106
0x0B09FB93,	//0x1844		VoC_sub16_dr(REG1,0x518,REG1)(lo)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
0xFE8B0518,	//0x1846		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_sub16_dr(REG1,0x518,REG1)(hi)
0x63AC1404,	//0x1848		VoC_lw16_d(REG4,0x63ac)
0xFBAAF005,	//0x184a		VoC_shr32_ri(REG45,0xfffffff5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDF84C8D3,	//0x184c		VoC_pop16(REG4,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG45,DEFAULT)
0x099AFEA3,	//0x184e		VoC_sub32_rd(REG45,REG67,0x2350)(lo)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0x15832350,	//0x1850		VoC_sw32_d(REG67,0x2350)(lo)	|	VoC_sub32_rd(REG45,REG67,0x2350)(hi)
0x33C22350,	//0x1852		VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)(lo)	|	VoC_sw32_d(REG67,0x2350)(hi)
0x0B921857,	//0x1854		VoC_sub32_dr(REG45,0x518,REG45)(lo)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)(hi)
0xF0030518,	//0x1856		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_sub32_dr(REG45,0x518,REG45)(hi)
		//0x1857		SPECTRAL_COMPARISON113
0x11680A82,	//0x1858		VoC_lw16i(REG2,0x1168)
0x185D368A,	//0x185a		VoC_bngt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)
0xF045F023,	//0x185c		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x185d		SPECTRAL_COMPARISON115
0x255A1806,	//0x185e		VoC_lw16i_set_inc(REG2,0x255a,0x1)
0x63AA1503,	//0x1860		VoC_sw16_d(REG3,0x63aa)
0x64261FBB,	//0x1862		VoC_lw16i_set_inc(REG3,0x6426,0xfffffffe)
0x2B80E06D,	//0x1864		VoC_jal(CII_step_up_opt)(lo)	|	VoC_movreg16(RL6_HI,REG3,DEFAULT)
0xF00616F0,	//0x1866		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jal(CII_step_up_opt)(hi)
0x64271400,	//0x1868		VoC_lw16_d(REG0,0x6427)
0xCC02F8E8,	//0x186a		VoC_multf32_rr(REG45,REG0,REG0,DEFAULT)	|	VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)
0xCAD4FBEB,	//0x186c		VoC_sub32_rr(ACC0,REG67,REG45,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)
0x188732C4,	//0x186e		VoC_bngtz32_r(TONE_DETECTION_End,ACC0)
0x0C750A83,	//0x1870		VoC_lw16i(REG3,0xc75)
0x18783240,	//0x1872		VoC_bnltz16_r(TONE_DETECTION_101,REG0)
0xFFC0CD5D,	//0x1874		VoC_NOP	|	VoC_multf32_rr(ACC1,REG5,REG3,DEFAULT)
0x1887362C,	//0x1876		VoC_bgt32_rr(TONE_DETECTION_End,ACC1,ACC0)
		//0x1878		TONE_DETECTION_101
0x7FFF0A87,	//0x1878		VoC_lw16i(REG7,0x7fff)
0x255A1804,	//0x187a		VoC_lw16i_set_inc(REG0,0x255a,0x1)
0xAE05E885,	//0x187c		VoC_multf16inc_pp(REG5,REG0,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x0B2DFFC0,	//0x187e		VoC_sub16_dr(REG5,0x380,REG5)(lo)	|	VoC_NOP
0xC7EF0380,	//0x1880		VoC_multf16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_sub16_dr(REG5,0x380,REG5)(hi)
		//0x1881		VoC_endloop0
0x0A80F023,	//0x1882		VoC_lw16i(REG0,0x5b8)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x340705B8,	//0x1884		VoC_bgt16_rr(TONE_DETECTION_120,REG0,REG7)(lo)	|	VoC_lw16i(REG0,0x5b8)(hi)
0xF0031888,	//0x1886		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bgt16_rr(TONE_DETECTION_120,REG0,REG7)(hi)
		//0x1887		TONE_DETECTION_End
		//0x1888		TONE_DETECTION_120
0x63AA1400,	//0x1888		VoC_lw16_d(REG0,0x63aa)
0x22841401,	//0x188a		VoC_lw16_d(REG1,0x2284)
0x63DC1482,	//0x188c		VoC_lw32_d(REG45,0x63dc)
0x63DA1486,	//0x188e		VoC_lw32_d(RL6,0x63da)
0x22CA1406,	//0x1890		VoC_lw16_d(REG6,0x22ca)
0x22C91407,	//0x1892		VoC_lw16_d(REG7,0x22c9)
0x0A8EF28F,	//0x1894		VoC_lw16i(RL7_LO,0x445c)(lo)	|	VoC_lw16i_short(RL7_HI,0x14,DEFAULT)
0xF249445C,	//0x1896		VoC_lw16i_short(ACC0_HI,0x12,DEFAULT)	|	VoC_lw16i(RL7_LO,0x445c)(hi)
0x668A0A88,	//0x1898		VoC_lw16i(ACC0_LO,0x668a)
0x18FD3622,	//0x189a		VoC_bgt32_rr(THRESHOLD_ADAPTATION_End,ACC0,REG45)
0xF024F005,	//0x189c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x03705C80,	//0x189e		VoC_bne32_rd(THRESHOLD_ADAPTATION107,REG01,0x370)
0x03704033,	//0x18a0		VoC_be16_rd(THRESHOLD_ADAPTATION107,REG3,0x370)
0x22CB0725,	//0x18a2		VoC_add16_rd(REG5,REG4,0x22cb)
0x0522383D,	//0x18a4		VoC_bgt16_rd(THRESHOLD_ADAPTATION108,REG5,0x522)
		//0x18a6		THRESHOLD_ADAPTATION107
0x1505FF1F,	//0x18a6		VoC_sw16_d(REG5,0x22cb)(lo)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x2B0022CB,	//0x18a8		VoC_jump_lg(THRESHOLD_ADAPTATION_End)(lo)	|	VoC_sw16_d(REG5,0x22cb)(hi)
0xE0C518FD,	//0x18aa		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_jump_lg(THRESHOLD_ADAPTATION_End)(hi)
		//0x18ab		THRESHOLD_ADAPTATION108
0xC376F82E,	//0x18ac		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,DEFAULT)
0x037E4C2E,	//0x18ae		VoC_bnlt16_rd(THRESHOLD_ADAPTATION109,REG6,0x37e)
0x07BFF8FE,	//0x18b0		VoC_sub16_rd(REG7,REG7,0x370)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xFF300370,	//0x18b2		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x370)(hi)
		//0x18b3		THRESHOLD_ADAPTATION109
0x51990A83,	//0x18b4		VoC_lw16i(REG3,0x5199)
0xF020CC1A,	//0x18b6		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)
0xC0417A7A,	//0x18b8		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0x03805422,	//0x18ba		VoC_bngt32_rd(THRESHOLD_ADAPTATION110,REG45,0x380)
0xC0417A0A,	//0x18bc		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
		//0x18be		THRESHOLD_ADAPTATION110
0x3683E080,	//0x18be		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(lo)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xFF4418D0,	//0x18c0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(hi)
0xE00360C2,	//0x18c2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xE0C8F822,	//0x18c4		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_shr16_ri(REG2,0x4,DEFAULT)
0x5429C909,	//0x18c6		VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x380)(lo)	|	VoC_add32_rr(REG23,ACC0,REG23,DEFAULT)
0xFA090380,	//0x18c8		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x380)(hi)
0x0370073F,	//0x18ca		VoC_add16_rd(REG7,REG7,0x370)
		//0x18cc		THRESHOLD_ADAPTATION113
0x3698E046,	//0x18cc		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(lo)	|	VoC_movreg16(REG6,REG2,DEFAULT)
0xFF0318D0,	//0x18ce		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(hi)
		//0x18d0		THRESHOLD_ADAPTATION117
0x0A82F363,	//0x18d0		VoC_lw16i(REG2,0x6acf)(lo)	|	VoC_lw16i_short(REG3,0x1b,DEFAULT)
0xFF1F6ACF,	//0x18d2		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw16i(REG2,0x6acf)(hi)
0xFF45FF32,	//0x18d4		VoC_lw32z(ACC1,DEFAULT)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x18DE351D,	//0x18d6		VoC_be16_rr(THRESHOLD_ADAPTATION120,REG3,REG5)
0x7FFF0A8A,	//0x18d8		VoC_lw16i(ACC1_LO,0x7fff)
0x18DE342B,	//0x18da		VoC_bgt16_rr(THRESHOLD_ADAPTATION120,REG5,REG3)
0xFF0A7F11,	//0x18dc		VoC_movreg32(REG45,REG23,IN_PARALLEL)	|	VoC_movreg32(REG23,REG45,DEFAULT)
		//0x18de		THRESHOLD_ADAPTATION120
0x60A6C358,	//0x18de		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_sub16_rr(REG0,REG5,REG3,DEFAULT)
0x7005FE02,	//0x18e0		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_shr16_rr(REG2,REG0,IN_PARALLEL)
0xC88AE003,	//0x18e2		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x18EA3695,	//0x18e4		VoC_bngt32_rr(THRESHOLD_ADAPTATION121,REG45,ACC1)
0x0735FA0A,	//0x18e6		VoC_add16_rd(REG5,REG6,0x370)(lo)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
0xE5C30370,	//0x18e8		VoC_jump(THRESHOLD_ADAPTATION124)	|	VoC_add16_rd(REG5,REG6,0x370)(hi)
		//0x18ea		THRESHOLD_ADAPTATION121
0xFFC060C5,	//0x18ea		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x18ec		THRESHOLD_ADAPTATION124
0x63EF1401,	//0x18ec		VoC_lw16_d(REG1,0x63ef)
0x22BC1804,	//0x18ee		VoC_lw16i_set_inc(REG0,0x22bc,0x1)
0x22C61501,	//0x18f0		VoC_sw16_d(REG1,0x22c6)
0x63AC1806,	//0x18f2		VoC_lw16i_set_inc(REG2,0x63ac,0x1)
0x18F736BA,	//0x18f4		VoC_bngt32_rr(THRESHOLD_ADAPTATION127,RL7,REG45)
0xE923FF17,	//0x18f6		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x18f7		THRESHOLD_ADAPTATION127
0xF125D8A3,	//0x18f8		VoC_lw16i_short(REG5,0x9,DEFAULT)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
		//0x18fa		VoC_endloop0
0x1505DC83,	//0x18fa		VoC_sw16_d(REG5,0x22cb)(lo)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0xF00022CB,	//0x18fc		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw16_d(REG5,0x22cb)(hi)
		//0x18fd		THRESHOLD_ADAPTATION_End
0x22CA150E,	//0x18fe		VoC_sw16_d(RL7_LO,0x22ca)
0x22C9150F,	//0x1900		VoC_sw16_d(RL7_HI,0x22c9)
0x190636B7,	//0x1902		VoC_bngt32_rr(DECISION_PENG_101,RL6,RL7)
0xFFC07020,	//0x1904		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x1906		DECISION_PENG_101
0x22CC1483,	//0x1906		VoC_lw32_d(REG67,0x22cc)
0x03700736,	//0x1908		VoC_add16_rd(REG6,REG6,0x370)
0x03704018,	//0x190a		VoC_be16_rd(VAD_HANDOVER101,REG0,0x370)
0xDFA9F006,	//0x190c		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x190d		VAD_HANDOVER101
0x051D4826,	//0x190e		VoC_blt16_rd(VAD_HANDOVER103,REG6,0x51d)
0xE03670A7,	//0x1910		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x5,DEFAULT)
		//0x1912		VAD_HANDOVER103
0x19163207,	//0x1912		VoC_bltz16_r(VAD_HANDOVER104,REG7)
0xC3C7F020,	//0x1914		VoC_sub16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x1916		VAD_HANDOVER104
0x43011500,	//0x1916		VoC_sw16_d(REG0,0x4301)
0x22CC1583,	//0x1918		VoC_sw32_d(REG67,0x22cc)
0xDFE9E580,	//0x191a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x191b		CII_aFlatRcDp_opt
0x64D00A8E,	//0x191c		VoC_lw16i(RL7_LO,0x64d0)
0x651C0A8F,	//0x191e		VoC_lw16i(RL7_HI,0x651c)
0x64BC0A8A,	//0x1920		VoC_lw16i(ACC1_LO,0x64bc)
0x64F60A8B,	//0x1922		VoC_lw16i(ACC1_HI,0x64f6)
0xFF307050,	//0x1924		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD9C4F006,	//0x1926		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xFFC059C2,	//0x1928		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x19B02C15,	//0x192a		VoC_loop_i(0x1,0xa)
0x19383186,	//0x192c		VoC_bez16_r(CII_aFlatRcDp201,REG6)
0xFF3D7F29,	//0x192e		VoC_movreg32(ACC1,RL7,IN_PARALLEL)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xD994FF0F,	//0x1930		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x02BA2B80,	//0x1932		VoC_jal(CII_NORM_L_ACC0)
0x05180B09,	//0x1934		VoC_sub16_dr(REG1,0x518,REG1)
0xFE8AD99A,	//0x1936		VoC_shr32_rr(REG45,REG1,DEFAULT)	|	VoC_lw32_p(REG45,REG3,DEFAULT)
		//0x1938		CII_aFlatRcDp201
0x0912F031,	//0x1938		VoC_add32_rd(REG45,REG45,0x382)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x09210382,	//0x193a		VoC_add32_rd(REG23,ACC0,0x382)(lo)	|	VoC_add32_rd(REG45,REG45,0x382)(hi)
0x70070382,	//0x193c		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_add32_rd(REG23,ACC0,0x382)(hi)
0x3105F6A4,	//0x193e		VoC_bgtz16_r(CII_aFlatRcDp100,REG5)(lo)	|	VoC_movreg16(REG4,REG5,IN_PARALLEL)
0xC3ED1942,	//0x1940		VoC_sub16_rr(REG5,REG7,REG5,DEFAULT)	|	VoC_bgtz16_r(CII_aFlatRcDp100,REG5)(hi)
		//0x1942		CII_aFlatRcDp100
0x1948341D,	//0x1942		VoC_bgt16_rr(CII_aFlatRcDp101,REG3,REG5)
0xDC97E941,	//0x1944		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1945		VoC_endloop0
0x19B22B00,	//0x1946		VoC_jump_lg(aFlatRcDp_end)
		//0x1948		CII_aFlatRcDp101
0xDF476061,	//0x1948		VoC_push32(RL7,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0xF6A05F46,	//0x194a		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x02CC2B80,	//0x194c		VoC_jal(CII_DIV_S)
0xFF30DF06,	//0x194e		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x35A5C189,	//0x1950		VoC_bne16_rr(CII_aFlatRcDp102,REG4,REG5)(lo)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0xC3D21954,	//0x1952		VoC_sub16_rr(REG2,REG7,REG2,DEFAULT)	|	VoC_bne16_rr(CII_aFlatRcDp102,REG4,REG5)(hi)
		//0x1954		CII_aFlatRcDp102
0x5C12DFC6,	//0x1954		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x7051F00A,	//0x1956		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xE044F3FB,	//0x1958		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)
0x196931C6,	//0x195a		VoC_bnez16_r(CII_aFlatRcDp202,REG6)
0xD983E964,	//0x195c		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0xD909FA13,	//0x195e		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
		//0x1960		VoC_endloop0
0x6061DDC3,	//0x1960		VoC_movreg16(REG1,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xE945F780,	//0x1962		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)
0xDDDBD9C3,	//0x1964		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDD3D984,	//0x1966		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
		//0x1968		VoC_endloop0
0xCD23DDCC,	//0x1968		VoC_multf32_rr(REG67,REG4,REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x1969		CII_aFlatRcDp202
0xFF297050,	//0x196a		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0382091B,	//0x196c		VoC_add32_rd(REG67,REG67,0x382)
0xD9085616,	//0x196e		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xDFC46023,	//0x1970		VoC_push16(REG4,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x05230B35,	//0x1972		VoC_sub16_dr(REG5,0x523,REG6)
0x19873145,	//0x1974		VoC_bngtz16_r(CII_aFlatRcDp301,REG5)
0xD9CC6750,	//0x1976		VoC_lw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x0E6F2B80,	//0x1978		VoC_jal(CII_L_mpy_ls_opt)
0x60E49107,	//0x197a		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_add32_rp(RL7,ACC0,REG0,DEFAULT)
0x2B80D9C4,	//0x197c		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0xC9E70E6F,	//0x197e		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xD61459DC,	//0x1980		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x0E6F2B80,	//0x1982		VoC_jal(CII_L_mpy_ls_opt)
0xD9CCC9E7,	//0x1984		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
		//0x1986		VoC_endloop0
0xD908DDD7,	//0x1986		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x1987		CII_aFlatRcDp301
0xF3F878FE,	//0x1988		VoC_lw16i_short(INC0,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x05260B35,	//0x198a		VoC_sub16_dr(REG5,0x526,REG6)
0xF7626006,	//0x198c		VoC_movreg16(REG2,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xC269406B,	//0x198e		VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG1,REG5,DEFAULT)
0xC2AA4028,	//0x1990		VoC_sub16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x051C0792,	//0x1992		VoC_sub16_rd(REG2,REG2,0x51c)
0x051D072D,	//0x1994		VoC_add16_rd(REG5,REG5,0x51d)
0x19AD3145,	//0x1996		VoC_bngtz16_r(CII_aFlatRcDp302,REG5)
0x03704425,	//0x1998		VoC_bne16_rd(CII_aFlatRcDp105,REG5,0x370)
0x051C0730,	//0x199a		VoC_add16_rd(REG0,REG6,0x51c)
		//0x199c		CII_aFlatRcDp105
0xF6E46750,	//0x199c		VoC_movreg16(REG4,REG7,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x3586D9DC,	//0x199e		VoC_bne16_rr(CII_aFlatRcDp103,REG0,REG6)(lo)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0xF05019A2,	//0x19a0		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_bne16_rr(CII_aFlatRcDp103,REG0,REG6)(hi)
		//0x19a2		CII_aFlatRcDp103
0x0E6F2B80,	//0x19a2		VoC_jal(CII_L_mpy_ls_opt)
0x5614930F,	//0x19a4		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_add32inc_rp(RL7,ACC0,REG1,DEFAULT)
0x2B80D9C4,	//0x19a6		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0xFBFC0E6F,	//0x19a8		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xE0E4C9E7,	//0x19aa		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
		//0x19ac		VoC_endloop0
0xDF84DDD7,	//0x19ac		VoC_pop16(REG4,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x19ad		CII_aFlatRcDp302
0xDF865F07,	//0x19ae		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
		//0x19b0		VoC_endloop1
0x03700736,	//0x19b0		VoC_add16_rd(REG6,REG6,0x370)
		//0x19b2		aFlatRcDp_end
0xF030DFA9,	//0x19b2		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF007E580,	//0x19b4		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x19b5		CII_rcToADp_opt_new
0xF00B7052,	//0x19b6		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x257E0A8C,	//0x19b8		VoC_lw16i(RL6_LO,0x257e)
0xF62D7006,	//0x19ba		VoC_movreg16(RL6_HI,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x19D62C15,	//0x19bc		VoC_loop_i(0x1,0xa)
0x3146FF31,	//0x19be		VoC_bngtz16_r(rcToADp100,REG6)(lo)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0x678B19CE,	//0x19c0		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_bngtz16_r(rcToADp100,REG6)(hi)
0xD9CCDFE9,	//0x19c2		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_push16(RA,IN_PARALLEL)
0x0E6F2B80,	//0x19c4		VoC_jal(CII_L_mpy_ls_opt)
0x58249314,	//0x19c6		VoC_be32_rd(rcToADp_sat,ACC0,0x374)(lo)	|	VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)
0x5C1C0374,	//0x19c8		VoC_bne32_rd(rcToADp_nosat,ACC0,0x376)(lo)	|	VoC_be32_rd(rcToADp_sat,ACC0,0x374)(hi)
0xF0270376,	//0x19ca		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bne32_rd(rcToADp_nosat,ACC0,0x376)(hi)
		//0x19cb		rcToADp_sat
		//0x19cc		rcToADp_nosat
		//0x19cc		VoC_endloop0
0xDFA9DDDC,	//0x19cc		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x19ce		rcToADp100
0x08000A84,	//0x19ce		VoC_lw16i(REG4,0x800)
0x61AC9B05,	//0x19d0		VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG4,REG0,DEFAULT)
0xD804F78D,	//0x19d2		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(RL6_HI,RL6_LO,IN_PARALLEL)
0xF6615D9D,	//0x19d4		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG3,DEFAULT)
		//0x19d6		VoC_endloop1
0x03700736,	//0x19d6		VoC_add16_rd(REG6,REG6,0x370)
0x03821485,	//0x19d8		VoC_lw32_d(ACC1,0x382)
0xF0077F31,	//0x19da		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0x9352E947,	//0x19dc		VoC_add32inc_rp(REG45,ACC1,REG2,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x03824025,	//0x19de		VoC_be16_rd(isSwLimit2,REG5,0x382)
0x0380441D,	//0x19e0		VoC_bne16_rd(isSwLimit1,REG5,0x380)
		//0x19e2		isSwLimit2
0xDCB5F027,	//0x19e2		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x19e3		isSwLimit1
		//0x19e3		VoC_endloop0
0xF005E580,	//0x19e4		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_return
		//0x19e5		CII_lpcFir_opt
0xFF447144,	//0x19e6		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x08000A88,	//0x19e8		VoC_lw16i(ACC0_LO,0x800)
0x00000AC7,	//0x19ea		VoC_lw16i(REG7,0x8000)
0xDF44DFC7,	//0x19ec		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x1A022C15,	//0x19ee		VoC_loop_i(0x1,0xa)
0x19F93185,	//0x19f0		VoC_bez16_r(lpcFir_skip_1st,REG5)
0xD90C6742,	//0x19f2		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x19f4		VoC_endloop0
0x432CD403,	//0x19f4		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG3,DEFAULT)
0x0700C028,	//0x19f6		VoC_add16_rd(REG0,REG0,0x370)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)
0xE7010370,	//0x19f8		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x370)(hi)
		//0x19f9		lpcFir_skip_1st
		//0x19fa		VoC_endloop0
0x42A2D413,	//0x19fa		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_mac32inc_pp(REG2,REG3,DEFAULT)
0x50B8E0A4,	//0x19fc		VoC_msu32_rp(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0xa,IN_PARALLEL)
0x072DFBE4,	//0x19fe		VoC_add16_rd(REG5,REG5,0x370)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0xC2E30370,	//0x1a00		VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x370)(hi)
		//0x1a02		VoC_endloop1
0x5FC2DC99,	//0x1a02		VoC_push16(REG2,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x4022E014,	//0x1a04		VoC_add16_rr(REG2,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x77D0C261,	//0x1a06		VoC_lw16i_short(INC0,0xfffffffe,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x2C3DF00B,	//0x1a08		VoC_loop_i(0x1,0x1e)(lo)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xDFC31A13,	//0x1a0a		VoC_push16(REG3,DEFAULT)	|	VoC_loop_i(0x1,0x1e)(hi)
0xD90C6200,	//0x1a0c		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG0,DEFAULT)
0xDC9968A2,	//0x1a0e		VoC_sw16inc_p(ACC0_HI,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1a10		VoC_endloop0
0x5F83D503,	//0x1a10		VoC_pop16(REG3,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG3)
0x51BAF640,	//0x1a12		VoC_msu32inc_rp(REG7,REG2,DEFAULT)	|	VoC_movreg16(REG0,REG2,IN_PARALLEL)
		//0x1a13		VoC_endloop1
0xF7F0FBE4,	//0x1a14		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0x5C99DF82,	//0x1a16		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xD885F007,	//0x1a18		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xD885E942,	//0x1a1a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1a1c		VoC_endloop0
0x5F87DCA5,	//0x1a1c		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xE580DF04,	//0x1a1e		VoC_return	|	VoC_pop32(ACC0,IN_PARALLEL)
		//0x1a20		CII_res_eng_opt
0x1486DFE9,	//0x1a20		VoC_lw32_d(RL6,0x382)(lo)	|	VoC_push16(RA,DEFAULT)
0x61830382,	//0x1a22		VoC_movreg16(REG3,RL6_LO,DEFAULT)	|	VoC_lw32_d(RL6,0x382)(hi)
0x2C15EFA4,	//0x1a24		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i_short(REG4,0xfffffffa,IN_PARALLEL)
0x9E041A35,	//0x1a26		VoC_multf32inc_pp(ACC0,REG0,REG0,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0xC934FFC0,	//0x1a28		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_NOP
0x03760923,	//0x1a2a		VoC_add32_rd(REG67,ACC0,0x376)
0xF008CCFD,	//0x1a2c		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_multf32_rr(ACC1,REG3,REG7,DEFAULT)
0x2B80E169,	//0x1a2e		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,ACC1_HI,DEFAULT)
0xC10C02BA,	//0x1a30		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B09,	//0x1a32		VoC_sub16_dr(REG1,0x518,REG1)
0xC971FE8D,	//0x1a34		VoC_add32_rr(REG23,ACC1,RL6,DEFAULT)	|	VoC_shr32_rr(ACC1,REG1,DEFAULT)
		//0x1a35		VoC_endloop1
0x3103F002,	//0x1a36		VoC_bgtz16_r(CII_abs_s_new,REG3)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xC29B1A3A,	//0x1a38		VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_bgtz16_r(CII_abs_s_new,REG3)(hi)
		//0x1a3a		CII_abs_s_new
0xFF0FDFC5,	//0x1a3a		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0F432B80,	//0x1a3c		VoC_jal(CII_sqroot_opt)
0xE083DF85,	//0x1a3e		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x3182FA09,	//0x1a40		VoC_bez16_r(res_eng00,REG2)(lo)	|	VoC_shr32_ri(REG23,0x1,DEFAULT)
0x0A3B1A47,	//0x1a42		VoC_multf32_rd(REG67,REG7,0x350)(lo)	|	VoC_bez16_r(res_eng00,REG2)(hi)
0xFFC00350,	//0x1a44		VoC_NOP	|	VoC_multf32_rd(REG67,REG7,0x350)(hi)
0xCDECC8F3,	//0x1a46		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
		//0x1a47		res_eng00
0x02BA2B80,	//0x1a48		VoC_jal(CII_NORM_L_ACC0)
0xE162C935,	//0x1a4a		VoC_movreg16(REG2,ACC1_HI,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,RL6,DEFAULT)
0xC0CBDFA9,	//0x1a4c		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1a4e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1a4f		CII_aToRc_opt2
0x1806F144,	//0x1a50		VoC_lw16i_set_inc(REG2,0x255a,0x1)(lo)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x1FBF255A,	//0x1a52		VoC_lw16i_set_inc(REG3,0x64bb,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG2,0x255a,0x1)(hi)
0x700764BB,	//0x1a54		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x64bb,0xffffffff)(hi)
0x6943DFC2,	//0x1a56		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0xD885D885,	//0x1a58		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
		//0x1a5a		VoC_endloop0
0x2C13DCA5,	//0x1a5a		VoC_loop_i(0x1,0x9)(lo)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xF0251A9F,	//0x1a5c		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_loop_i(0x1,0x9)(hi)
0xC0EA42AB,	//0x1a5e		VoC_add16_rr(REG2,REG3,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG2,REG5,DEFAULT)
0xD8B5C32C,	//0x1a60		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0x4025F8E5,	//0x1a62		VoC_be16_rd(isSwLimit_opt1a,REG5,0x382)(lo)	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
0x441D0382,	//0x1a64		VoC_bne16_rd(isSwLimit_opt1b,REG5,0x380)(lo)	|	VoC_be16_rd(isSwLimit_opt1a,REG5,0x382)(hi)
0xF0270380,	//0x1a66		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bne16_rd(isSwLimit_opt1b,REG5,0x380)(hi)
		//0x1a67		isSwLimit_opt1a
		//0x1a68		isSwLimit_opt1b
0x5FC1DC95,	//0x1a68		VoC_push16(REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDFC4DF41,	//0x1a6a		VoC_push16(REG4,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0x03741484,	//0x1a6c		VoC_lw32_d(ACC0,0x374)
0x03824438,	//0x1a6e		VoC_bne16_rd(aToRc_opt0,REG0,0x382)
0xE0157027,	//0x1a70		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xEFE67022,	//0x1a72		VoC_lw16i_short(REG6,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xCEADE5D2,	//0x1a74		VoC_msu32_rr(REG5,REG5,DEFAULT)	|	VoC_jump(aToRc_opt1)
		//0x1a75		aToRc_opt0
0x02BA2B80,	//0x1a76		VoC_jal(CII_NORM_L_ACC0)
0x0B09F7F1,	//0x1a78		VoC_sub16_dr(REG1,0x518,REG1)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
0x070E0518,	//0x1a7a		VoC_add16_rd(REG6,REG1,0x578)(lo)	|	VoC_sub16_dr(REG1,0x518,REG1)(hi)
0x0A800578,	//0x1a7c		VoC_lw16i(REG0,0x2000)(lo)	|	VoC_add16_rd(REG6,REG1,0x578)(hi)
0xE1212000,	//0x1a7e		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_lw16i(REG0,0x2000)(hi)
0x02CC2B80,	//0x1a80		VoC_jal(CII_DIV_S)
0xFFC0CCAA,	//0x1a82		VoC_NOP	|	VoC_multf32_rr(REG45,REG2,REG5,DEFAULT)
0x03820912,	//0x1a84		VoC_add32_rd(REG45,REG45,0x382)
		//0x1a86		aToRc_opt1
0x03824025,	//0x1a86		VoC_be16_rd(isSwLimit_opt2a,REG5,0x382)
0x0380441D,	//0x1a88		VoC_bne16_rd(isSwLimit_opt2b,REG5,0x380)
		//0x1a8a		isSwLimit_opt2a
0xDF84F027,	//0x1a8a		VoC_pop16(REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1a8b		isSwLimit_opt2b
0xDF016041,	//0x1a8c		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0xDA22D620,	//0x1a8e		VoC_sw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xFF44E70E,	//0x1a90		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD1ABD108,	//0x1a92		VoC_msu32inc_rp(REG5,REG3,DEFAULT)	|	VoC_mac32inc_rp(REG1,REG0,DEFAULT)
0xFEB4DF40,	//0x1a94		VoC_shr32_rr(ACC0,REG6,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x03820920,	//0x1a96		VoC_add32_rd(REG01,ACC0,0x382)
0x03824021,	//0x1a98		VoC_be16_rd(isSwLimit_opt3a,REG1,0x382)
0x03804419,	//0x1a9a		VoC_bne16_rd(isSwLimit_opt3b,REG1,0x380)
		//0x1a9c		isSwLimit_opt3a
0xDF00F027,	//0x1a9c		VoC_pop32(REG01,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1a9d		isSwLimit_opt3b
		//0x1a9e		VoC_endloop0
0xDF81DCA1,	//0x1a9e		VoC_pop16(REG1,DEFAULT)	|	VoC_sw16inc_p(REG1,REG2,DEFAULT)
		//0x1a9f		VoC_endloop1
0xDFA9DF82,	//0x1aa0		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xF8E4D824,	//0x1aa2		VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x03824021,	//0x1aa4		VoC_be16_rd(isSwLimit_opt4a,REG1,0x382)
0x03804419,	//0x1aa6		VoC_bne16_rd(isSwLimit_opt4b,REG1,0x380)
		//0x1aa8		isSwLimit_opt4a
0xDC14F027,	//0x1aa8		VoC_sw16_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1aa9		isSwLimit_opt4b
0xDFE9E580,	//0x1aaa		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1aab		CII_HR_Decode
0x1AB03182,	//0x1aac		VoC_bez16_r(Decoder_101,REG2)
0x16A82B80,	//0x1aae		VoC_jal(CII_resetDec)
		//0x1ab0		Decoder_101
0x00001808,	//0x1ab0		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x05220700,	//0x1ab2		VoC_add16_rd(REG0,REG0,0x522)
0x24AA1805,	//0x1ab4		VoC_lw16i_set_inc(REG1,0x24aa,0x1)
0x1ABE2C09,	//0x1ab6		VoC_loop_i(0x1,0x4)
0xEC04D9C3,	//0x1ab8		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xE434F024,	//0x1aba		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xDC94FA0B,	//0x1abc		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
		//0x1abd		VoC_endloop0
		//0x1abe		VoC_endloop1
0x052E0A86,	//0x1abe		VoC_lw16i(REG6,0x52e)
0x1805F7F0,	//0x1ac0		VoC_lw16i_set_inc(REG1,0x24aa,0x1)(lo)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0x180724AA,	//0x1ac2		VoC_lw16i_set_inc(REG3,0x1cc6,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x24aa,0x1)(hi)
0x18061CC6,	//0x1ac4		VoC_lw16i_set_inc(REG2,0x528,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x1cc6,0x1)(hi)
0xFFC00528,	//0x1ac6		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x528,0x1)(hi)
0x1AD82C25,	//0x1ac8		VoC_loop_i(0x1,0x12)
0xE00558A4,	//0x1aca		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xC061C060,	//0x1acc		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG1,REG4,DEFAULT)
0xE702DE00,	//0x1ace		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x8345F8FD,	//0x1ad0		VoC_add16inc_rp(REG5,REG5,REG0,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
		//0x1ad1		VoC_endloop0
0x1AD83596,	//0x1ad2		VoC_bne16_rr(Bits2prm_100,REG2,REG6)
0x1AD83185,	//0x1ad4		VoC_bez16_r(Bits2prm_100,REG5)
0x0D4A1806,	//0x1ad6		VoC_lw16i_set_inc(REG2,0xd4a,0x1)
		//0x1ad8		Bits2prm_100
		//0x1ad8		VoC_endloop1
0xF005DCB5,	//0x1ad8		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xDCB5E881,	//0x1ada		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x1adb		VoC_endloop0
0x1CBF1400,	//0x1adc		VoC_lw16_d(REG0,0x1cbf)
0x3180F006,	//0x1ade		VoC_bez16_r(Decoder_120,REG0)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xF1201AE4,	//0x1ae0		VoC_lw16i_short(REG0,0x9,DEFAULT)	|	VoC_bez16_r(Decoder_120,REG0)(hi)
0x1C202B80,	//0x1ae2		VoC_jal(CII_decoderHomingFrameTest)
		//0x1ae4		Decoder_120
0x1C6B1506,	//0x1ae4		VoC_sw16_d(REG6,0x1c6b)
0x1CBF6C0C,	//0x1ae6		VoC_bez16_d(Decoder_220,0x1cbf)
0x1C6B6C0A,	//0x1ae8		VoC_bez16_d(Decoder_220,0x1c6b)
0x1CDC1808,	//0x1aea		VoC_lw16i_set_inc(REG0,0x1cdc,0x2)
0xE0837102,	//0x1aec		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0x1AF02CA0,	//0x1aee		VoC_loop_i(0x0,0x50)
		//0x1af0		VoC_endloop0
0xE5C5DDC1,	//0x1af0		VoC_jump(Decoder_330)	|	VoC_sw32inc_p(REG23,REG0,DEFAULT)
		//0x1af2		Decoder_220
0x1CDC1808,	//0x1af2		VoC_lw16i_set_inc(REG0,0x1cdc,0x2)
0x1CE72B80,	//0x1af4		VoC_jal(CII_speechDecoder_opt)
		//0x1af6		Decoder_330
0x43052005,	//0x1af6		VoC_lw16d_set_inc(REG1,0x4305,0x1)
0x1CDC1804,	//0x1af8		VoC_lw16i_set_inc(REG0,0x1cdc,0x1)
0x1B002D40,	//0x1afa		VoC_loop_i(0x0,0xa0)
0x1646D886,	//0x1afc		VoC_and16_ri(REG6,0xfff8)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xFFC07FF8,	//0x1afe		VoC_NOP	|	VoC_and16_ri(REG6,0xfff8)(hi)
		//0x1b00		VoC_endloop0
0x6E07DC96,	//0x1b00		VoC_bnez16_d(Decoder_440,0x1cbf)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xF2401CBF,	//0x1b02		VoC_lw16i_short(REG0,0x12,DEFAULT)	|	VoC_bnez16_d(Decoder_440,0x1cbf)(hi)
0x1C202B80,	//0x1b04		VoC_jal(CII_decoderHomingFrameTest)
0x1C6B1506,	//0x1b06		VoC_sw16_d(REG6,0x1c6b)
		//0x1b08		Decoder_440
0x1C6B1406,	//0x1b08		VoC_lw16_d(REG6,0x1c6b)
0x1B0E3186,	//0x1b0a		VoC_bez16_r(Decoder_550,REG6)
0x16A82B80,	//0x1b0c		VoC_jal(CII_resetDec)
		//0x1b0e		Decoder_550
0x1C6B1407,	//0x1b0e		VoC_lw16_d(REG7,0x1c6b)
0x1507DFA9,	//0x1b10		VoC_sw16_d(REG7,0x1cbf)(lo)	|	VoC_pop16(RA,DEFAULT)
0xF0071CBF,	//0x1b12		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG7,0x1cbf)(hi)
0xDFE9E580,	//0x1b14		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1b15		CII_level_estimator_opt
0x1B3131C7,	//0x1b16		VoC_bnez16_r(level_estimator_opt0,REG7)
0x1CB21809,	//0x1b18		VoC_lw16i_set_inc(REG1,0x1cb2,0x2)
0xD9CCF020,	//0x1b1a		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x930CE861,	//0x1b1c		VoC_add32inc_rp(ACC0,ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x1b1d		VoC_endloop0
0x1BE12B80,	//0x1b1e		VoC_jal(CII_level_calc_opt)
0x7FB80AC6,	//0x1b20		VoC_lw16i(REG6,0xffffffb8)
0x648F1507,	//0x1b22		VoC_sw16_d(REG7,0x648f)
0x1CBA1804,	//0x1b24		VoC_lw16i_set_inc(REG0,0x1cba,0x1)
0x64901506,	//0x1b26		VoC_sw16_d(REG6,0x6490)
0xD8816887,	//0x1b28		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x1B2F348E,	//0x1b2a		VoC_bngt16_rr(level_estimator_opt1,REG1,REG6)
0x64901501,	//0x1b2c		VoC_sw16_d(REG1,0x6490)
0xD881E026,	//0x1b2e		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_movreg16(REG6,REG1,DEFAULT)
		//0x1b2f		level_estimator_opt1
		//0x1b2f		VoC_endloop0
0xF021E5D8,	//0x1b30		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jump(level_estimator_opt_end)
		//0x1b31		level_estimator_opt0
0x0E46F678,	//0x1b32		VoC_multf16inc_rp(REG6,REG1,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xfffffff3,DEFAULT)
0xFF448E47,	//0x1b34		VoC_lw32z(ACC0,DEFAULT)	|	VoC_multf16inc_rp(REG7,REG1,REG0,IN_PARALLEL)
0xEA83FFC0,	//0x1b36		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0x8E470E46,	//0x1b38		VoC_multf16inc_rp(REG7,REG1,REG0,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG1,REG0,DEFAULT)
		//0x1b3a		VoC_endloop0
0xF000CF36,	//0x1b3a		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x1BE12B80,	//0x1b3c		VoC_jal(CII_level_calc_opt)
0x1FB8F7F8,	//0x1b3e		VoC_lw16i_set_inc(REG0,0x1cb8,0xfffffffe)(lo)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0x1FBD1CB8,	//0x1b40		VoC_lw16i_set_inc(REG1,0x1cbd,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x1cb8,0xfffffffe)(hi)
0xE8841CBD,	//0x1b42		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1cbd,0xffffffff)(hi)
0xDDC5D985,	//0x1b44		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32_p(ACC1,REG0,DEFAULT)
0xDC97D817,	//0x1b46		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
		//0x1b47		VoC_endloop0
		//0x1b48		level_estimator_opt_end
0xFFC0DFA9,	//0x1b48		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF007E580,	//0x1b4a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x1b4b		CII_para_conceal_speech_decoder_opt
0x1CC61804,	//0x1b4c		VoC_lw16i_set_inc(REG0,0x1cc6,0x1)
0x04DC1805,	//0x1b4e		VoC_lw16i_set_inc(REG1,0x4dc,0x1)
0x200A1406,	//0x1b50		VoC_lw16_d(REG6,0x200a)
0xC0713836,	//0x1b52		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_sub16_pr(REG6,REG0,REG6,DEFAULT)
0x408A1482,	//0x1b54		VoC_lw32_d(REG45,0x408a)
0x31C4858A,	//0x1b56		VoC_bnez16_r(PARA_CONC_opt_100,REG4)(lo)	|	VoC_sub16_rp(REG2,REG6,REG1,DEFAULT)
0x31451B68,	//0x1b58		VoC_bngtz16_r(PARA_CONC_opt_100,REG5)(lo)	|	VoC_bnez16_r(PARA_CONC_opt_100,REG4)(hi)
0x32021B68,	//0x1b5a		VoC_bltz16_r(PARA_CONC_opt_101,REG2)(lo)	|	VoC_bngtz16_r(PARA_CONC_opt_100,REG5)(hi)
0xF0241B5F,	//0x1b5c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bltz16_r(PARA_CONC_opt_101,REG2)(hi)
0xD803E5CA,	//0x1b5e		VoC_lw16_p(REG3,REG0,DEFAULT)	|	VoC_jump(PARA_CONC_opt_100)
		//0x1b5f		PARA_CONC_opt_101
0x07EE4C83,	//0x1b60		VoC_bnlt16_rd(PARA_CONC_opt_100,REG3,0x7ee)
0x1B6A3145,	//0x1b62		VoC_bngtz16_r(PARA_CONC1_opt_100,REG5)
0x1B6A31C4,	//0x1b64		VoC_bnez16_r(PARA_CONC1_opt_100,REG4)
0x1B6A3202,	//0x1b66		VoC_bltz16_r(PARA_CONC1_opt_100,REG2)
		//0x1b68		PARA_CONC_opt_100
0xFFC07027,	//0x1b68		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1b6a		PARA_CONC1_opt_100
0x1CC01401,	//0x1b6a		VoC_lw16_d(REG1,0x1cc0)
0x648E1507,	//0x1b6c		VoC_sw16_d(REG7,0x648e)
0x1B763104,	//0x1b6e		VoC_bgtz16_r(PARA_CONC2_opt_else,REG4)
0x05204821,	//0x1b70		VoC_blt16_rd(PARA_CONC2_opt_104,REG1,0x520)
0x20096E08,	//0x1b72		VoC_bnez16_d(PARA_CONC2_opt_end,0x2009)
		//0x1b74		PARA_CONC2_opt_104
0xE5C5F001,	//0x1b74		VoC_jump(PARA_CONC2_opt_end)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
		//0x1b76		PARA_CONC2_opt_else
0x3C19DE08,	//0x1b76		VoC_bngt16_rd(PARA_CONC2_opt_end,REG1,0x520)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xF0C10520,	//0x1b78		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_bngt16_rd(PARA_CONC2_opt_end,REG1,0x520)(hi)
		//0x1b7a		PARA_CONC2_opt_end
0x20091504,	//0x1b7a		VoC_sw16_d(REG4,0x2009)
0x1E321806,	//0x1b7c		VoC_lw16i_set_inc(REG2,0x1e32,0x1)
0x408A1582,	//0x1b7e		VoC_sw32_d(REG45,0x408a)
0x1CC01501,	//0x1b80		VoC_sw16_d(REG1,0x1cc0)
0x1B8B31C1,	//0x1b82		VoC_bnez16_r(PARA_CONC3_opt_100,REG1)
0xD883D807,	//0x1b84		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xD883EA42,	//0x1b86		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_loop_i_short(0x12,DEFAULT)
		//0x1b88		VoC_endloop0
0x2B00DCA3,	//0x1b88		VoC_jump_lg(PARA_CONC3_opt_end)(lo)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0xD8241BDE,	//0x1b8a		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_jump_lg(PARA_CONC3_opt_end)(hi)
		//0x1b8b		PARA_CONC3_opt_100
0x051D4891,	//0x1b8c		VoC_blt16_rd(PARA_CONC3_opt_101,REG1,0x51d)
0x034A3881,	//0x1b8e		VoC_bgt16_rd(PARA_CONC3_opt_101,REG1,0x34a)
0x051C0114,	//0x1b90		VoC_sub16_pd(REG4,REG2,0x51c)
0x1B963204,	//0x1b92		VoC_bltz16_r(PARA_CONC3_opt_101,REG4)
0x05204819,	//0x1b94		VoC_blt16_rd(PARA_CONC3_opt_103,REG1,0x520)
		//0x1b96		PARA_CONC3_opt_101
0xD807F004,	//0x1b96		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x1b97		PARA_CONC3_opt_103
0x1E431406,	//0x1b98		VoC_lw16_d(REG6,0x1e43)
0x1CCE180F,	//0x1b9a		VoC_lw16i_set_inc(REG3,0x1cce,0x3)
0x6E14DC24,	//0x1b9c		VoC_bnez16_d(PARA_CONC3_opt_104,0x1e37)(lo)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0x6E0A1E37,	//0x1b9e		VoC_bnez16_d(PARA_CONC3_opt_105,0x1ccb)(lo)	|	VoC_bnez16_d(PARA_CONC3_opt_104,0x1e37)(hi)
0x68A31CCB,	//0x1ba0		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_bnez16_d(PARA_CONC3_opt_105,0x1ccb)(hi)
0xD8A5D8A5,	//0x1ba2		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)
		//0x1ba4		VoC_endloop0
0xE881DC85,	//0x1ba4		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x1ba6		VoC_endloop0
0x2B00DCB6,	//0x1ba6		VoC_jump_lg(PARA_CONC3_opt_end)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xD8A51BDE,	//0x1ba8		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_jump_lg(PARA_CONC3_opt_end)(hi)
		//0x1ba9		PARA_CONC3_opt_105
0xD8A5EA42,	//0x1baa		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_loop_i_short(0x12,DEFAULT)
		//0x1bac		VoC_endloop0
0xE861DC85,	//0x1bac		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x1bae		VoC_endloop0
0x2B00DCB6,	//0x1bae		VoC_jump_lg(PARA_CONC3_opt_end)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xF1041BDE,	//0x1bb0		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_jump_lg(PARA_CONC3_opt_end)(hi)
		//0x1bb1		PARA_CONC3_opt_104
0x1E381405,	//0x1bb2		VoC_lw16_d(REG5,0x1e38)
0x1E3B180D,	//0x1bb4		VoC_lw16i_set_inc(REG1,0x1e3b,0x3)
0xBA64E86D,	//0x1bb6		VoC_sub16inc_pr(REG4,REG1,REG4,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xC12D412C,	//0x1bb8		VoC_add16_rr(REG5,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x03513C34,	//0x1bba		VoC_bngt16_rd(PARA_CONC3_opt_LOOP1,REG4,0x351)
0x00FF0A85,	//0x1bbc		VoC_lw16i(REG5,0xff)
0xFFC065C5,	//0x1bbe		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PARA_CONC3_opt_LOOP2)
		//0x1bc0		PARA_CONC3_opt_LOOP1
0x1BC33244,	//0x1bc0		VoC_bnltz16_r(PARA_CONC3_opt_LOOP2,REG4)
0xF104F005,	//0x1bc2		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x1bc3		PARA_CONC3_opt_LOOP2
		//0x1bc3		VoC_endloop0
0x1E411FB5,	//0x1bc4		VoC_lw16i_set_inc(REG1,0x1e41,0xfffffffd)
0xDC94E861,	//0x1bc6		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x1bc7		VoC_endloop0
0xF00D5C15,	//0x1bc8		VoC_lw16i_short(INC1,0x3,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x1CCB6C0E,	//0x1bca		VoC_bez16_d(PARA_CONC3_opt_106,0x1ccb)
0xD8A468C3,	//0x1bcc		VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xDC84D8A4,	//0x1bce		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x1bcf		VoC_endloop0
0x6883F070,	//0x1bd0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(INC0,0x3,DEFAULT)
0xD894D894,	//0x1bd2		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
		//0x1bd4		VoC_endloop0
0xE881DC84,	//0x1bd4		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x1bd6		VoC_endloop0
0xE5C7DCB6,	//0x1bd6		VoC_jump(PARA_CONC3_opt_end)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x1bd8		PARA_CONC3_opt_106
0xD8A46A43,	//0x1bd8		VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x12,DEFAULT)
0xDC84D8A4,	//0x1bda		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x1bdb		VoC_endloop0
0xDCB6E861,	//0x1bdc		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x1bdd		VoC_endloop0
		//0x1bde		PARA_CONC3_opt_end
0x200A1507,	//0x1bde		VoC_sw16_d(REG7,0x200a)
0xDFE9E580,	//0x1be0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1be1		CII_level_calc_opt
0xFF257F43,	//0x1be2		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x1BEE3304,	//0x1be4		VoC_bez32_r(level_calc_opt0,ACC0)
0x02BA2B80,	//0x1be6		VoC_jal(CII_NORM_L_ACC0)
0x05180B09,	//0x1be8		VoC_sub16_dr(REG1,0x518,REG1)
0x438EF466,	//0x1bea		VoC_sub16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0xffffffe3,DEFAULT)
0xF8F7C277,	//0x1bec		VoC_shr16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_sub16_rr(REG7,REG1,REG6,IN_PARALLEL)
		//0x1bee		level_calc_opt0
0x03701484,	//0x1bee		VoC_lw32_d(ACC0,0x370)
0xE4ECFEB4,	//0x1bf0		VoC_and32_rr(ACC0,ACC1,DEFAULT)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0x1BF83106,	//0x1bf2		VoC_bgtz16_r(level_calc_opt1,REG6)
0x1BF83304,	//0x1bf4		VoC_bez32_r(level_calc_opt1,ACC0)
0x051C073F,	//0x1bf6		VoC_add16_rd(REG7,REG7,0x51c)
		//0x1bf8		level_calc_opt1
0x03701484,	//0x1bf8		VoC_lw32_d(ACC0,0x370)
0xFA0CFEB4,	//0x1bfa		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0xEFF164EC,	//0x1bfc		VoC_lw16i_short(REG1,0xffffffff,IN_PARALLEL)	|	VoC_and32_rr(ACC0,ACC1,DEFAULT)
0x1C043431,	//0x1bfe		VoC_bgt16_rr(level_calc_opt2,REG6,REG1)
0x1C043304,	//0x1c00		VoC_bez32_r(level_calc_opt2,ACC0)
0x0370073F,	//0x1c02		VoC_add16_rd(REG7,REG7,0x370)
		//0x1c04		level_calc_opt2
0x60E6DFA9,	//0x1c04		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xC1F7F8FF,	//0x1c06		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
0x01610A86,	//0x1c08		VoC_lw16i(REG6,0x161)
0x00500A81,	//0x1c0a		VoC_lw16i(REG1,0x50)
0x1C123180,	//0x1c0c		VoC_bez16_r(level_calc_opt4,REG0)
0x01790A86,	//0x1c0e		VoC_lw16i(REG6,0x179)
0x01400A81,	//0x1c10		VoC_lw16i(REG1,0x140)
		//0x1c12		level_calc_opt4
0x0A3BC3F7,	//0x1c12		VoC_multf32_rd(REG67,REG7,0x34d)(lo)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0x0AC0034D,	//0x1c14		VoC_lw16i(REG0,0xffffffb8)(lo)	|	VoC_multf32_rd(REG67,REG7,0x34d)(hi)
0x091B7FB8,	//0x1c16		VoC_add32_rd(REG67,REG67,0x382)(lo)	|	VoC_lw16i(REG0,0xffffffb8)(hi)
0x34380382,	//0x1c18		VoC_bgt16_rr(level_calc_opt5,REG7,REG0)(lo)	|	VoC_add32_rd(REG67,REG67,0x382)(hi)
0xE0071C1E,	//0x1c1a		VoC_movreg16(REG7,REG0,DEFAULT)	|	VoC_bgt16_rr(level_calc_opt5,REG7,REG0)(hi)
0xF62A700B,	//0x1c1c		VoC_movreg16(ACC1_LO,REG1,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
		//0x1c1e		level_calc_opt5
0xFFC06580,	//0x1c1e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1c20		CII_decoderHomingFrameTest
0x1CC61805,	//0x1c20		VoC_lw16i_set_inc(REG1,0x1cc6,0x1)
0x05281806,	//0x1c22		VoC_lw16i_set_inc(REG2,0x528,0x1)
0x053A1807,	//0x1c24		VoC_lw16i_set_inc(REG3,0x53a,0x1)
0xE000660C,	//0x1c26		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x861477E5,	//0x1c28		VoC_sub16inc_rp(REG4,REG0,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0xD8967E25,	//0x1c2a		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_shr16_rr(REG5,REG4,DEFAULT)
0xD8B76385,	//0x1c2c		VoC_lw16inc_p(REG7,REG3,IN_PARALLEL)	|	VoC_not16_r(REG5,DEFAULT)
0xE4BEE42E,	//0x1c2e		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_and16_rr(REG6,REG5,DEFAULT)
0x1C353106,	//0x1c30		VoC_bgtz16_r(CII_decoderHomingFrameTest_100,REG6)
		//0x1c32		VoC_endloop0
0xF026FFC0,	//0x1c32		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_NAD
0xF006E580,	//0x1c34		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_return
		//0x1c35		CII_decoderHomingFrameTest_100
0xFF47E580,	//0x1c36		VoC_lw32z(RL7,DEFAULT)	|	VoC_return
		//0x1c37		CII_lookupVq_opt
0x204A1804,	//0x1c38		VoC_lw16i_set_inc(REG0,0x204a,0x1)
0x55C01812,	//0x1c3a		VoC_lw16i_set_inc(REG2,0x55c0,0x4)
0x1C7A2C06,	//0x1c3c		VoC_loop_i(0x0,0x3)
0x0AEA5C37,	//0x1c3e		VoC_bne32_rd(LOOKUP_opt_100,RL7,0xaea)
0x52080A86,	//0x1c40		VoC_lw16i(REG6,0x5208)
0xE5C8F081,	//0x1c42		VoC_jump(LOOKUP_opt_101)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
		//0x1c44		LOOKUP_opt_100
0x0A86F061,	//0x1c44		VoC_lw16i(REG6,0x4308)(lo)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x33074308,	//0x1c46		VoC_bez32_r(LOOKUP_opt_101,RL7)(lo)	|	VoC_lw16i(REG6,0x4308)(hi)
0x0A861C4B,	//0x1c48		VoC_lw16i(REG6,0x4f08)(lo)	|	VoC_bez32_r(LOOKUP_opt_101,RL7)(hi)
0x88414F08,	//0x1c4a		VoC_mult16_rp(REG1,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG6,0x4f08)(hi)
		//0x1c4b		LOOKUP_opt_101
0xF809FFC0,	//0x1c4c		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_NOP
0x0A81C18F,	//0x1c4e		VoC_lw16i(REG1,0xff)(lo)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0x073F00FF,	//0x1c50		VoC_add16_rd(REG7,REG7,0x370)(lo)	|	VoC_lw16i(REG1,0xff)(hi)
0xD8740370,	//0x1c52		VoC_lw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x370)(hi)
0xFF13D875,	//0x1c54		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_lw16_p(REG5,REG7,DEFAULT)
0xF846640C,	//0x1c56		VoC_shr16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG1,DEFAULT)
0xF847640D,	//0x1c58		VoC_shr16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG1,DEFAULT)
0xE40FE40E,	//0x1c5a		VoC_and16_rr(REG7,REG1,DEFAULT)	|	VoC_and16_rr(REG6,REG1,DEFAULT)
0x54C01805,	//0x1c5c		VoC_lw16i_set_inc(REG1,0x54c0,0x1)
0xC14D410C,	//0x1c5e		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xC1CFC18E,	//0x1c60		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xD844D866,	//0x1c62		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xD855D877,	//0x1c64		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x63811807,	//0x1c66		VoC_lw16i_set_inc(REG3,0x6381,0x1)
0xD88182D3,	//0x1c68		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG2,DEFAULT)
0x00011601,	//0x1c6a		VoC_and16_ri(REG1,0x1)
0x5827DC36,	//0x1c6c		VoC_be32_rd(LOOKUP_opt_103,RL7,0xaea)(lo)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
0x31C10AEA,	//0x1c6e		VoC_bnez16_r(LOOKUP_opt_102,REG1)(lo)	|	VoC_be32_rd(LOOKUP_opt_103,RL7,0xaea)(hi)
0xDE181C72,	//0x1c70		VoC_inc_p(REG3,DEFAULT)	|	VoC_bnez16_r(LOOKUP_opt_102,REG1)(hi)
		//0x1c71		LOOKUP_opt_103
		//0x1c72		LOOKUP_opt_102
0xDCB7DCB4,	//0x1c72		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x0AEA5827,	//0x1c74		VoC_be32_rd(LOOKUP_opt_END1,RL7,0xaea)
0x1C7A3181,	//0x1c76		VoC_bez16_r(LOOKUP_opt_END,REG1)
		//0x1c78		LOOKUP_opt_END1
0xFFC05C35,	//0x1c78		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x1c7a		LOOKUP_opt_END
		//0x1c7a		VoC_endloop0
0x0370093F,	//0x1c7a		VoC_add32_rd(RL7,RL7,0x370)
0xDFE9E580,	//0x1c7c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1c7d		CII_a_sst_opt
0x1FBDDFC4,	//0x1c7e		VoC_lw16i_set_inc(REG1,0x64bb,0xffffffff)(lo)	|	VoC_push16(REG4,DEFAULT)
0xFFC064BB,	//0x1c80		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x64bb,0xffffffff)(hi)
0x1A4F2B80,	//0x1c82		VoC_jal(CII_aToRc_opt2)
0x64921809,	//0x1c84		VoC_lw16i_set_inc(REG1,0x6492,0x2)
0x64B20A84,	//0x1c86		VoC_lw16i(REG4,0x64b2)
0x16682B80,	//0x1c88		VoC_jal(CII_rcToCorrDpL_opt)
0x050D1805,	//0x1c8a		VoC_lw16i_set_inc(REG1,0x50d,0x1)
0x6494180A,	//0x1c8c		VoC_lw16i_set_inc(REG2,0x6494,0x2)
0xD8946946,	//0x1c8e		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0x2B80D994,	//0x1c90		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0xD8940E6F,	//0x1c92		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
		//0x1c94		VoC_endloop0
0x0A8CDDD4,	//0x1c94		VoC_lw16i(RL6_LO,0x6492)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x0A8D6492,	//0x1c96		VoC_lw16i(RL6_HI,0x64a8)(lo)	|	VoC_lw16i(RL6_LO,0x6492)(hi)
0x2B8064A8,	//0x1c98		VoC_jal(CII_aFlatRcDp_opt)(lo)	|	VoC_lw16i(RL6_HI,0x64a8)(hi)
0xDF81191B,	//0x1c9a		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_aFlatRcDp_opt)(hi)
0x0A80F7D1,	//0x1c9c		VoC_lw16i(REG0,0x64a8)(lo)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0x2B8064A8,	//0x1c9e		VoC_jal(CII_rcToADp_opt_new)(lo)	|	VoC_lw16i(REG0,0x64a8)(hi)
0xDFA919B5,	//0x1ca0		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_rcToADp_opt_new)(hi)
0xE580FFC0,	//0x1ca2		VoC_return	|	VoC_NOP
		//0x1ca4		CII_linInterpSidLoop_opt
0x1C861809,	//0x1ca4		VoC_lw16i_set_inc(REG1,0x1c86,0x2)
0x1C70180A,	//0x1ca6		VoC_lw16i_set_inc(REG2,0x1c70,0x2)
0x1C9C180B,	//0x1ca8		VoC_lw16i_set_inc(REG3,0x1c9c,0x2)
0xD9CCE975,	//0x1caa		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0x03D00A84,	//0x1cac		VoC_lw16i(REG4,0x3d0)
0x1CC10720,	//0x1cae		VoC_add16_rd(REG0,REG4,0x1cc1)
0xD804DFE9,	//0x1cb0		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0E6F2B80,	//0x1cb2		VoC_jal(CII_L_mpy_ls_opt)
0xD9D47F25,	//0x1cb4		VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x7FFF0A84,	//0x1cb6		VoC_lw16i(REG4,0x7fff)
0x07248504,	//0x1cb8		VoC_add16_rd(REG4,REG4,0x370)(lo)	|	VoC_sub16_rp(REG4,REG4,REG0,DEFAULT)
0x2B800370,	//0x1cba		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_add16_rd(REG4,REG4,0x370)(hi)
0xC92C0E6F,	//0x1cbc		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xDDDCDFA9,	//0x1cbe		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
		//0x1cbf		VoC_endloop0
0xFFC06580,	//0x1cc0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1cc2		CII_linInterpSidShort_opt
0x03D00A81,	//0x1cc2		VoC_lw16i(REG1,0x3d0)
0x0A81C008,	//0x1cc4		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0x84417FFF,	//0x1cc6		VoC_sub16_rp(REG1,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG1,0x7fff)(hi)
0x03821484,	//0x1cc8		VoC_lw32_d(ACC0,0x382)
0xDE085018,	//0x1cca		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_mac32_rp(REG3,REG0,DEFAULT)
0xE580CE21,	//0x1ccc		VoC_return	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
		//0x1cce		CII_extra_HR_bfi_filter
0x408A1408,	//0x1cce		VoC_lw16_d(ACC0_LO,0x408a)
0x408B6C14,	//0x1cd0		VoC_bez16_d(CII_extra_HR_bfi_filter_exit,0x408b)
0x1CC61402,	//0x1cd2		VoC_lw16_d(REG2,0x1cc6)
0x1D7D0793,	//0x1cd4		VoC_sub16_rd(REG3,REG2,0x1d7d)
0x08034CA3,	//0x1cd6		VoC_bnlt16_rd(CII_extra_HR_bfi_filter_100,REG3,0x803)
0x1D7D1502,	//0x1cd8		VoC_sw16_d(REG2,0x1d7d)
0x093C4491,	//0x1cda		VoC_bne16_rd(CII_extra_HR_bfi_filter_exit,REG1,0x93c)
0x1D7C6C08,	//0x1cdc		VoC_bez16_d(CII_extra_HR_bfi_filter_exit,0x1d7c)
0x1CCB1404,	//0x1cde		VoC_lw16_d(REG4,0x1ccb)
0x051D4824,	//0x1ce0		VoC_blt16_rd(CII_extra_HR_bfi_filter_exit,REG4,0x51d)
		//0x1ce2		CII_extra_HR_bfi_filter_100
0x002C0A81,	//0x1ce2		VoC_lw16i(REG1,0x2c)
		//0x1ce4		CII_extra_HR_bfi_filter_exit
0x1D7C1508,	//0x1ce4		VoC_sw16_d(ACC0_LO,0x1d7c)
0xDFE9E580,	//0x1ce6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1ce7		CII_speechDecoder_opt
0x1482F002,	//0x1ce8		VoC_lw32_d(REG45,0x408c)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x1502408C,	//0x1cea		VoC_sw16_d(REG2,0x6491)(lo)	|	VoC_lw32_d(REG45,0x408c)(hi)
0x15026491,	//0x1cec		VoC_sw16_d(REG2,0x648e)(lo)	|	VoC_sw16_d(REG2,0x6491)(hi)
0xF2C1648E,	//0x1cee		VoC_lw16i_short(REG1,0x16,DEFAULT)	|	VoC_sw16_d(REG2,0x648e)(hi)
0x1CFA31C4,	//0x1cf0		VoC_bnez16_r(DEC_FRAME_CLASS_100,REG4)
0x00210A81,	//0x1cf2		VoC_lw16i(REG1,0x21)
0x408A6C06,	//0x1cf4		VoC_bez16_d(DEC_FRAME_CLASS_100,0x408a)
0x002C0A81,	//0x1cf6		VoC_lw16i(REG1,0x2c)
0xFFC065C8,	//0x1cf8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DEC_FRAME_CLASS_101)
		//0x1cfa		DEC_FRAME_CLASS_100
0x051C4434,	//0x1cfa		VoC_bne16_rd(DEC_FRAME_CLASS_101,REG4,0x51c)
0x408A6E04,	//0x1cfc		VoC_bnez16_d(DEC_FRAME_CLASS_101,0x408a)
0xFFC07161,	//0x1cfe		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0xb,DEFAULT)
		//0x1d00		DEC_FRAME_CLASS_101
0x1CCE2B80,	//0x1d00		VoC_jal(CII_extra_HR_bfi_filter)
0x443AF022,	//0x1d02		VoC_bne16_rd(DEC_UPDATE_STATE_100,REG2,0x1cbe)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF0231CBE,	//0x1d04		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bne16_rd(DEC_UPDATE_STATE_100,REG2,0x1cbe)(hi)
0x080D3899,	//0x1d06		VoC_bgt16_rd(DEC_UPDATE_STATE_END,REG1,0x80d)
0xE5C8F043,	//0x1d08		VoC_jump(DEC_UPDATE_STATE_END)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
		//0x1d0a		DEC_UPDATE_STATE_100
0x4031F023,	//0x1d0a		VoC_be16_rd(DEC_UPDATE_STATE_END,REG1,0x93c)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xF083093C,	//0x1d0c		VoC_lw16i_short(REG3,0x4,DEFAULT)	|	VoC_be16_rd(DEC_UPDATE_STATE_END,REG1,0x93c)(hi)
0x08924019,	//0x1d0e		VoC_be16_rd(DEC_UPDATE_STATE_END,REG1,0x892)
0xDFC0F063,	//0x1d10		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
		//0x1d11		DEC_UPDATE_STATE_END
0xDFC0DFC1,	//0x1d12		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x1CBE1503,	//0x1d14		VoC_sw16_d(REG3,0x1cbe)
0x1D583593,	//0x1d16		VoC_bne16_rr(DEC_NOT_SPEECH_MODE100,REG2,REG3)
0x1B4B2B80,	//0x1d18		VoC_jal(CII_para_conceal_speech_decoder_opt)
0x1CC61808,	//0x1d1a		VoC_lw16i_set_inc(REG0,0x1cc6,0x2)
0x204A1805,	//0x1d1c		VoC_lw16i_set_inc(REG1,0x204a,0x1)
0xD9C2D9C1,	//0x1d1e		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0xDC93D9C3,	//0x1d20		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF8FA5A12,	//0x1d22		VoC_shr16_ri(REG2,0xffffffff,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x0,DEFAULT)
0x0B780A83,	//0x1d24		VoC_lw16i(REG3,0xb78)
0xDC9440D3,	//0x1d26		VoC_sw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xD833DC95,	//0x1d28		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x204E1506,	//0x1d2a		VoC_sw16_d(REG6,0x204e)
0x20491507,	//0x1d2c		VoC_sw16_d(REG7,0x2049)
0x20481503,	//0x1d2e		VoC_sw16_d(REG3,0x2048)
0x1C372B80,	//0x1d30		VoC_jal(CII_lookupVq_opt)
0x1CCE180F,	//0x1d32		VoC_lw16i_set_inc(REG3,0x1cce,0x3)
0x03DC1809,	//0x1d34		VoC_lw16i_set_inc(REG1,0x3dc,0x2)
0x20491404,	//0x1d36		VoC_lw16_d(REG4,0x2049)
0x4064F8D4,	//0x1d38		VoC_add16_rr(REG4,REG1,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)
0x011DE0B6,	//0x1d3a		VoC_add16_rp(REG5,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG6,0xb,IN_PARALLEL)
0x835DE007,	//0x1d3c		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x20101808,	//0x1d3e		VoC_lw16i_set_inc(REG0,0x2010,0x2)
0x200E0701,	//0x1d40		VoC_add16_rd(REG1,REG0,0x200e)
0x2048180A,	//0x1d42		VoC_lw16i_set_inc(REG2,0x2048,0x2)
0xD9AC6888,	//0x1d44		VoC_lw32_p(ACC0,REG5,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x835D811D,	//0x1d46		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_add16_rp(REG5,REG4,REG3,DEFAULT)
0x358ADDCC,	//0x1d48		VoC_bne16_rr(DEC_WRAP_GSHIST,REG1,REG2)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE0011D4C,	//0x1d4a		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_bne16_rr(DEC_WRAP_GSHIST,REG1,REG2)(hi)
		//0x1d4c		DEC_WRAP_GSHIST
		//0x1d4c		VoC_endloop0
0xC241D9AC,	//0x1d4c		VoC_sub16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_lw32_p(ACC0,REG5,DEFAULT)
0x200C1507,	//0x1d4e		VoC_sw16_d(REG7,0x200c)
0x200B1507,	//0x1d50		VoC_sw16_d(REG7,0x200b)
0x1CC11506,	//0x1d52		VoC_sw16_d(REG6,0x1cc1)
0x200E1501,	//0x1d54		VoC_sw16_d(REG1,0x200e)
0x1E3E2B00,	//0x1d56		VoC_jump_lg(DEC_NOT_SPEECH_MODE_END)
		//0x1d58		DEC_NOT_SPEECH_MODE100
0x204A1804,	//0x1d58		VoC_lw16i_set_inc(REG0,0x204a,0x1)
0x1CC61483,	//0x1d5a		VoC_lw32_d(REG67,0x1cc6)
0x1CC81484,	//0x1d5c		VoC_lw32_d(ACC0,0x1cc8)
0xDC88DC87,	//0x1d5e		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x5A16DC89,	//0x1d60		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0x0A80F8FE,	//0x1d62		VoC_lw16i(REG0,0xb78)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)
0x40300B78,	//0x1d64		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i(REG0,0xb78)(hi)
0x1502E004,	//0x1d66		VoC_sw16_d(REG2,0x204e)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x1504204E,	//0x1d68		VoC_sw16_d(REG4,0x2049)(lo)	|	VoC_sw16_d(REG2,0x204e)(hi)
0xD8002049,	//0x1d6a		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_sw16_d(REG4,0x2049)(hi)
0x051C4023,	//0x1d6c		VoC_be16_rd(DEC_NO_CNIFIRSTSID_100_10,REG3,0x51c)
0x1D942B00,	//0x1d6e		VoC_jump_lg(DEC_NO_CNIFIRSTSID_100)
		//0x1d70		DEC_NO_CNIFIRSTSID_100_10
0x1504F162,	//0x1d70		VoC_sw16_d(REG4,0x200c)(lo)	|	VoC_lw16i_short(REG2,0xb,DEFAULT)
0x1504200C,	//0x1d72		VoC_sw16_d(REG4,0x200b)(lo)	|	VoC_sw16_d(REG4,0x200c)(hi)
0x1502200B,	//0x1d74		VoC_sw16_d(REG2,0x1cc1)(lo)	|	VoC_sw16_d(REG4,0x200b)(hi)
0x44891CC1,	//0x1d76		VoC_bne16_rd(DEC_NO_CNIFIRSTSID_101,REG1,0x4e3)(lo)	|	VoC_sw16_d(REG2,0x1cc1)(hi)
0x150004E3,	//0x1d78		VoC_sw16_d(REG0,0x2050)(lo)	|	VoC_bne16_rd(DEC_NO_CNIFIRSTSID_101,REG1,0x4e3)(hi)
0xFFC02050,	//0x1d7a		VoC_NAD	|	VoC_sw16_d(REG0,0x2050)(hi)
0x1C372B80,	//0x1d7c		VoC_jal(CII_lookupVq_opt)
0x1DD42B00,	//0x1d7e		VoC_jump_lg(DEC_NO_CNIFIRSTSID_END)
		//0x1d80		DEC_NO_CNIFIRSTSID_101
0x200D1406,	//0x1d80		VoC_lw16_d(REG6,0x200d)
0x0B780A80,	//0x1d82		VoC_lw16i(REG0,0xb78)
0xF8FE5A16,	//0x1d84		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0x180AC030,	//0x1d86		VoC_lw16i_set_inc(REG2,0x6382,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xD8076382,	//0x1d88		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x6382,0x2)(hi)
0x1E701808,	//0x1d8a		VoC_lw16i_set_inc(REG0,0x1e70,0x2)
0x20501507,	//0x1d8c		VoC_sw16_d(REG7,0x2050)
0xD9C468A3,	//0x1d8e		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDD4D9C4,	//0x1d90		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1d91		VoC_endloop0
0x1DD42B00,	//0x1d92		VoC_jump_lg(DEC_NO_CNIFIRSTSID_END)
		//0x1d94		DEC_NO_CNIFIRSTSID_100
0x051D4503,	//0x1d94		VoC_bne16_rd(DEC_NO_CNICONT_200,REG3,0x51d)
0x200C1504,	//0x1d96		VoC_sw16_d(REG4,0x200c)
0x200B1504,	//0x1d98		VoC_sw16_d(REG4,0x200b)
0x04E34491,	//0x1d9a		VoC_bne16_rd(DEC_NO_CNIFIRSTSID_201,REG1,0x4e3)
0x1CC11504,	//0x1d9c		VoC_sw16_d(REG4,0x1cc1)
0x20501500,	//0x1d9e		VoC_sw16_d(REG0,0x2050)
0x1C372B80,	//0x1da0		VoC_jal(CII_lookupVq_opt)
0x1DD42B00,	//0x1da2		VoC_jump_lg(DEC_NO_CNIFIRSTSID_END)
		//0x1da4		DEC_NO_CNIFIRSTSID_201
		//0x1da4		DEC_NO_CNICONT_200
0x1406F167,	//0x1da4		VoC_lw16_d(REG6,0x200d)(lo)	|	VoC_lw16i_short(REG7,0xb,DEFAULT)
0x1400200D,	//0x1da6		VoC_lw16_d(REG0,0x1cc1)(lo)	|	VoC_lw16_d(REG6,0x200d)(hi)
0x34B81CC1,	//0x1da8		VoC_bngt16_rr(DEC_NO_CNICONT_203,REG7,REG0)(lo)	|	VoC_lw16_d(REG0,0x1cc1)(hi)
0xC0101DAC,	//0x1daa		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_bngt16_rr(DEC_NO_CNICONT_203,REG7,REG0)(hi)
		//0x1dac		DEC_NO_CNICONT_203
0x1500DA16,	//0x1dac		VoC_sw16_d(REG0,0x1cc1)(lo)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0x402B1CC1,	//0x1dae		VoC_be16_rd(DEC_NO_CNICONT_204,REG3,0x51e)(lo)	|	VoC_sw16_d(REG0,0x1cc1)(hi)
0x2B00051E,	//0x1db0		VoC_jump_lg(DEC_NO_CNICONT_END)(lo)	|	VoC_be16_rd(DEC_NO_CNICONT_204,REG3,0x51e)(hi)
0xFFC01DD4,	//0x1db2		VoC_NAD	|	VoC_jump_lg(DEC_NO_CNICONT_END)(hi)
		//0x1db4		DEC_NO_CNICONT_204
0x200B4512,	//0x1db4		VoC_bne16_rd(DEC_NO_CNIFIRSTSID_302,REG2,0x200b)
0x051C07B6,	//0x1db6		VoC_sub16_rd(REG6,REG6,0x51c)
0x1DBB3246,	//0x1db8		VoC_bnltz16_r(DEC_NO_CNIFIRSTSID_303,REG6)
0xC1B7F006,	//0x1dba		VoC_add16_rr(REG7,REG6,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x1dbb		DEC_NO_CNIFIRSTSID_303
0x0B780A80,	//0x1dbc		VoC_lw16i(REG0,0xb78)
0x1506C038,	//0x1dbe		VoC_sw16_d(REG6,0x200d)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD800200D,	//0x1dc0		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_sw16_d(REG6,0x200d)(hi)
0x1500DA16,	//0x1dc2		VoC_sw16_d(REG0,0x2050)(lo)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0xFFC02050,	//0x1dc4		VoC_NAD	|	VoC_sw16_d(REG0,0x2050)(hi)
		//0x1dc6		DEC_NO_CNIFIRSTSID_302
0x200C0710,	//0x1dc6		VoC_add16_rd(REG0,REG2,0x200c)
0x1DCE35AA,	//0x1dc8		VoC_bne16_rr(DEC_NO_CNIFIRSTSID_304,REG5,REG2)
0x08034820,	//0x1dca		VoC_blt16_rd(DEC_NO_CNIFIRSTSID_304,REG0,0x803)
0x200B1502,	//0x1dcc		VoC_sw16_d(REG2,0x200b)
		//0x1dce		DEC_NO_CNIFIRSTSID_304
0x200C1500,	//0x1dce		VoC_sw16_d(REG0,0x200c)
0x63741484,	//0x1dd0		VoC_lw32_d(ACC0,0x6374)
0xFFC065D2,	//0x1dd2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DEC_NO_FIRST_SID)
		//0x1dd4		DEC_NO_CNIFIRSTSID_END
		//0x1dd4		DEC_NO_CNICONT_END
0x1CBE1406,	//0x1dd4		VoC_lw16_d(REG6,0x1cbe)
0x63741484,	//0x1dd6		VoC_lw32_d(ACC0,0x6374)
0x051C44A6,	//0x1dd8		VoC_bne16_rd(DEC_NO_FIRST_SID,REG6,0x51c)
0x20101808,	//0x1dda		VoC_lw16i_set_inc(REG0,0x2010,0x2)
0x06132B80,	//0x1ddc		VoC_jal(CII_avgGsHistQntz_gsQuant_opt)
0x63761502,	//0x1dde		VoC_sw16_d(REG2,0x6376)
0x01090A89,	//0x1de0		VoC_lw16i(ACC0_HI,0x109)
0x19880A88,	//0x1de2		VoC_lw16i(ACC0_LO,0x1988)
		//0x1de4		DEC_NO_FIRST_SID
0x1CBE1406,	//0x1de4		VoC_lw16_d(REG6,0x1cbe)
0x63761407,	//0x1de6		VoC_lw16_d(REG7,0x6376)
0x1CCC1805,	//0x1de8		VoC_lw16i_set_inc(REG1,0x1ccc,0x1)
0x1DF22C09,	//0x1dea		VoC_loop_i(0x1,0x4)
0x06382B80,	//0x1dec		VoC_jal(CII_getPnBits_opt)
0x2B80DC92,	//0x1dee		VoC_jal(CII_getPnBits_opt)(lo)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xDC920638,	//0x1df0		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_jal(CII_getPnBits_opt)(hi)
		//0x1df2		VoC_endloop1
0x1584DC97,	//0x1df2		VoC_sw32_d(ACC0,0x6374)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xD6276374,	//0x1df4		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_sw32_d(ACC0,0x6374)(hi)
0x1E700A82,	//0x1df6		VoC_lw16i(REG2,0x1e70)
0x63820A8D,	//0x1df8		VoC_lw16i(RL6_HI,0x6382)
0x1C9C0A8C,	//0x1dfa		VoC_lw16i(RL6_LO,0x1c9c)
0x20501403,	//0x1dfc		VoC_lw16_d(REG3,0x2050)
0xF0085F46,	//0x1dfe		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x1E8E1404,	//0x1e00		VoC_lw16_d(REG4,0x1e8e)
0x1CC11400,	//0x1e02		VoC_lw16_d(REG0,0x1cc1)
0x051C44B6,	//0x1e04		VoC_bne16_rd(RxInterpR0Lpc_opt_100,REG6,0x51c)
0x1C6E1504,	//0x1e06		VoC_sw16_d(REG4,0x1c6e)
0x1CC22B80,	//0x1e08		VoC_jal(CII_linInterpSidShort_opt)
0x1809E044,	//0x1e0a		VoC_lw16i_set_inc(REG1,0x1c70,0x2)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x15091C70,	//0x1e0c		VoC_sw16_d(ACC0_HI,0x2048)(lo)	|	VoC_lw16i_set_inc(REG1,0x1c70,0x2)(hi)
0x2B802048,	//0x1e0e		VoC_jal(CII_rcToCorrDpL_opt)(lo)	|	VoC_sw16_d(ACC0_HI,0x2048)(hi)
0xE5D31668,	//0x1e10		VoC_jump(RxInterpR0Lpc_opt_same)	|	VoC_jal(CII_rcToCorrDpL_opt)(hi)
		//0x1e12		RxInterpR0Lpc_opt_100
0x051D45B6,	//0x1e12		VoC_bne16_rd(RxInterpR0Lpc_opt_else,REG6,0x51d)
0x04E345A7,	//0x1e14		VoC_bne16_rd(RxInterpR0Lpc_opt_else,REG7,0x4e3)
0x1C6E1504,	//0x1e16		VoC_sw16_d(REG4,0x1c6e)
0x1CC22B80,	//0x1e18		VoC_jal(CII_linInterpSidShort_opt)
0x1C9C1808,	//0x1e1a		VoC_lw16i_set_inc(REG0,0x1c9c,0x2)
0x1C701809,	//0x1e1c		VoC_lw16i_set_inc(REG1,0x1c70,0x2)
0x20481509,	//0x1e1e		VoC_sw16_d(ACC0_HI,0x2048)
0xD9C46963,	//0x1e20		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDDCCD9C4,	//0x1e22		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1e23		VoC_endloop0
		//0x1e24		RxInterpR0Lpc_opt_same
0xE1A4D90E,	//0x1e24		VoC_movreg16(REG4,RL6_HI,DEFAULT)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0x1C861809,	//0x1e26		VoC_lw16i_set_inc(REG1,0x1c86,0x2)
0x16682B80,	//0x1e28		VoC_jal(CII_rcToCorrDpL_opt)
0x1CA42B80,	//0x1e2a		VoC_jal(CII_linInterpSidLoop_opt)
0x2B80D90E,	//0x1e2c		VoC_jal(CII_aFlatRcDp_opt)(lo)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0xE5CD191B,	//0x1e2e		VoC_jump(RxInterpR0Lpc_opt_END)	|	VoC_jal(CII_aFlatRcDp_opt)(hi)
		//0x1e30		RxInterpR0Lpc_opt_else
0x1C6E1404,	//0x1e30		VoC_lw16_d(REG4,0x1c6e)
0x1CC22B80,	//0x1e32		VoC_jal(CII_linInterpSidShort_opt)
0x1509FFC0,	//0x1e34		VoC_sw16_d(ACC0_HI,0x2048)(lo)	|	VoC_NOP
0xFFC02048,	//0x1e36		VoC_NAD	|	VoC_sw16_d(ACC0_HI,0x2048)(hi)
0x1CA42B80,	//0x1e38		VoC_jal(CII_linInterpSidLoop_opt)
0x191B2B80,	//0x1e3a		VoC_jal(CII_aFlatRcDp_opt)
		//0x1e3c		RxInterpR0Lpc_opt_END
0xFFC05F06,	//0x1e3c		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
		//0x1e3e		DEC_NOT_SPEECH_MODE_END
0x63821804,	//0x1e3e		VoC_lw16i_set_inc(REG0,0x6382,0x1)
0x638C1FB9,	//0x1e40		VoC_lw16i_set_inc(REG1,0x638c,0xfffffffe)
0x19B52B80,	//0x1e42		VoC_jal(CII_rcToADp_opt_new)
0x1E5A31C7,	//0x1e44		VoC_bnez16_r(DEC_PROCESS_100,REG7)
0x638C1805,	//0x1e46		VoC_lw16i_set_inc(REG1,0x638c,0x1)
0x054C1806,	//0x1e48		VoC_lw16i_set_inc(REG2,0x54c,0x1)
0x63781807,	//0x1e4a		VoC_lw16i_set_inc(REG3,0x6378,0x1)
0x9E546060,	//0x1e4c		VoC_multf32inc_pp(ACC0,REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x03821485,	//0x1e4e		VoC_lw32_d(ACC1,0x382)
0xC92B6944,	//0x1e50		VoC_add32_rr(REG67,ACC0,ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDCB79E8C,	//0x1e52		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG2,REG1,DEFAULT)
		//0x1e54		VoC_endloop0
0x0A84C92B,	//0x1e54		VoC_lw16i(REG4,0x6396)(lo)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0x2B806396,	//0x1e56		VoC_jal(CII_a_sst_opt)(lo)	|	VoC_lw16i(REG4,0x6396)(hi)
0xE5CD1C7D,	//0x1e58		VoC_jump(DEC_PROCESS_100_END)	|	VoC_jal(CII_a_sst_opt)(hi)
		//0x1e5a		DEC_PROCESS_100
0x1E701808,	//0x1e5a		VoC_lw16i_set_inc(REG0,0x1e70,0x2)
0x63821809,	//0x1e5c		VoC_lw16i_set_inc(REG1,0x6382,0x2)
0xFFC0D9C4,	//0x1e5e		VoC_NAD	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C56944,	//0x1e60		VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDDCC59C4,	//0x1e62		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1e64		VoC_endloop0
0xDDCD59C5,	//0x1e64		VoC_sw32inc_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
		//0x1e66		DEC_PROCESS_100_END
0x1804F005,	//0x1e66		VoC_lw16i_set_inc(REG0,0x638c,0x1)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1805638C,	//0x1e68		VoC_lw16i_set_inc(REG1,0x6480,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x638c,0x1)(hi)
0x18066480,	//0x1e6a		VoC_lw16i_set_inc(REG2,0x62fc,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x6480,0x1)(hi)
0x180762FC,	//0x1e6c		VoC_lw16i_set_inc(REG3,0x1e7a,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x62fc,0x1)(hi)
0x15051E7A,	//0x1e6e		VoC_sw16_d(REG5,0x63ab)(lo)	|	VoC_lw16i_set_inc(REG3,0x1e7a,0x1)(hi)
0x0A8463AB,	//0x1e70		VoC_lw16i(REG4,0x1e70)(lo)	|	VoC_sw16_d(REG5,0x63ab)(hi)
0x14051E70,	//0x1e72		VoC_lw16_d(REG5,0x1e8e)(lo)	|	VoC_lw16i(REG4,0x1e70)(hi)
0x0A861E8E,	//0x1e74		VoC_lw16i(REG6,0x6382)(lo)	|	VoC_lw16_d(REG5,0x1e8e)(hi)
0x14076382,	//0x1e76		VoC_lw16_d(REG7,0x2048)(lo)	|	VoC_lw16i(REG6,0x6382)(hi)
0x0A882048,	//0x1e78		VoC_lw16i(ACC0_LO,0x1e84)(lo)	|	VoC_lw16_d(REG7,0x2048)(hi)
0x0A891E84,	//0x1e7a		VoC_lw16i(ACC0_HI,0x1e66)(lo)	|	VoC_lw16i(ACC0_LO,0x1e84)(hi)
0x0A8B1E66,	//0x1e7c		VoC_lw16i(ACC1_HI,0x634c)(lo)	|	VoC_lw16i(ACC0_HI,0x1e66)(hi)
0x0A8A634C,	//0x1e7e		VoC_lw16i(ACC1_LO,0x6378)(lo)	|	VoC_lw16i(ACC1_HI,0x634c)(hi)
0x0A8C6378,	//0x1e80		VoC_lw16i(RL6_LO,0x6396)(lo)	|	VoC_lw16i(ACC1_LO,0x6378)(hi)
0x0A8D6396,	//0x1e82		VoC_lw16i(RL6_HI,0x6324)(lo)	|	VoC_lw16i(RL6_LO,0x6396)(hi)
0x0A8E6324,	//0x1e84		VoC_lw16i(RL7_LO,0xbee)(lo)	|	VoC_lw16i(RL6_HI,0x6324)(hi)
0x0A8F0BEE,	//0x1e86		VoC_lw16i(RL7_HI,0xbea)(lo)	|	VoC_lw16i(RL7_LO,0xbee)(hi)
0x2B800BEA,	//0x1e88		VoC_jal(CII_getSfrmLpcTx_opt)(lo)	|	VoC_lw16i(RL7_HI,0xbea)(hi)
0xD6142623,	//0x1e8a		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_getSfrmLpcTx_opt)(hi)
0x21692B80,	//0x1e8c		VoC_jal(CII_r0BasedEnergyShft_new)
0xF066F007,	//0x1e8e		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x204F1505,	//0x1e90		VoC_sw16_d(REG5,0x204f)
		//0x1e92		DEC_giSfrmCnt_LOOP_BEGIN
0x20F0343E,	//0x1e92		VoC_bgt16_rr(DEC_giSfrmCnt_LOOP,REG7,REG6)
0x1806C5F5,	//0x1e94		VoC_lw16i_set_inc(REG2,0x1ccc,0x1)(lo)	|	VoC_mult16_rr(REG5,REG7,REG6,DEFAULT)
0xC1521CCC,	//0x1e96		VoC_add16_rr(REG2,REG5,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1ccc,0x1)(hi)
0x1CC51507,	//0x1e98		VoC_sw16_d(REG7,0x1cc5)
0xD8A1D8A0,	//0x1e9a		VoC_lw16inc_p(REG1,REG2,DEFAULT)	|	VoC_lw16inc_p(REG0,REG2,DEFAULT)
0x6E05D8A3,	//0x1e9c		VoC_bnez16_d(DEC_PROCESS_200,0x2049)(lo)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
0x15802049,	//0x1e9e		VoC_sw32_d(REG01,0x63ac)(lo)	|	VoC_bnez16_d(DEC_PROCESS_200,0x2049)(hi)
0xE5C363AC,	//0x1ea0		VoC_jump(DEC_PROCESS_200_END)	|	VoC_sw32_d(REG01,0x63ac)(hi)
		//0x1ea2		DEC_PROCESS_200
0x63AC1501,	//0x1ea2		VoC_sw16_d(REG1,0x63ac)
		//0x1ea4		DEC_PROCESS_200_END
0x1503F005,	//0x1ea4		VoC_sw16_d(REG3,0x63aa)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDFC563AA,	//0x1ea6		VoC_push16(REG5,DEFAULT)	|	VoC_sw16_d(REG3,0x63aa)(hi)
0x20496C35,	//0x1ea8		VoC_bez16_d(DEC_PROCESS_300,0x2049)
0x1CC56C0E,	//0x1eaa		VoC_bez16_d(LagDecode_opt_END,0x1cc5)
0x05220780,	//0x1eac		VoC_sub16_rd(REG0,REG0,0x522)
0x20510700,	//0x1eae		VoC_add16_rd(REG0,REG0,0x2051)
0x03513C20,	//0x1eb0		VoC_bngt16_rd(LagDecode_opt_200,REG0,0x351)
0x00FF0A80,	//0x1eb2		VoC_lw16i(REG0,0xff)
		//0x1eb4		LagDecode_opt_200
0x1EB83241,	//0x1eb4		VoC_bnltz16_r(LagDecode_opt_201,REG1)
0xFFC07000,	//0x1eb6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x1eb8		LagDecode_opt_201
		//0x1eb8		LagDecode_opt_END
0x56680A81,	//0x1eb8		VoC_lw16i(REG1,0x5668)
0x1500C041,	//0x1eba		VoC_sw16_d(REG0,0x2051)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xD8162051,	//0x1ebc		VoC_lw16_p(REG6,REG1,DEFAULT)	|	VoC_sw16_d(REG0,0x2051)(hi)
0x1F230A85,	//0x1ebe		VoC_lw16i(REG5,0x1f23)
0x0EBA2B80,	//0x1ec0		VoC_jal(CII_fp_ex_opt)
0x1F231808,	//0x1ec2		VoC_lw16i_set_inc(REG0,0x1f23,0x2)
0x63AE1809,	//0x1ec4		VoC_lw16i_set_inc(REG1,0x63ae,0x2)
0x6A83E200,	//0x1ec6		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_aligninc_pp(REG0,REG0,DEFAULT)
0xD9C4D9C4,	//0x1ec8		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
		//0x1eca		VoC_endloop0
0xDA16DDCC,	//0x1eca		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x1405F124,	//0x1ecc		VoC_lw16_d(REG5,0x63ac)(lo)	|	VoC_lw16i_short(REG4,0x9,DEFAULT)
0x180463AC,	//0x1ece		VoC_lw16i_set_inc(REG0,0x6476,0x1)(lo)	|	VoC_lw16_d(REG5,0x63ac)(hi)
0xFFC06476,	//0x1ed0		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x6476,0x1)(hi)
0x0F2C2B80,	//0x1ed2		VoC_jal(CII_b_con_opt)
0x0A101920,	//0x1ed4		VoC_lw16i_set_inc(REG0,0xa10,0x28)
0x63D61809,	//0x1ed6		VoC_lw16i_set_inc(REG1,0x63d6,0x2)
0x64761806,	//0x1ed8		VoC_lw16i_set_inc(REG2,0x6476,0x1)
0x0F0D2B80,	//0x1eda		VoC_jal(CII_v_con_opt)
0xF0E4E5DE,	//0x1edc		VoC_lw16i_short(REG4,0x7,DEFAULT)	|	VoC_jump(DEC_PROCESS_400)
		//0x1edd		DEC_PROCESS_300
0x63AC1405,	//0x1ede		VoC_lw16_d(REG5,0x63ac)
0x64761804,	//0x1ee0		VoC_lw16i_set_inc(REG0,0x6476,0x1)
0x0F2C2B80,	//0x1ee2		VoC_jal(CII_b_con_opt)
0x07E01920,	//0x1ee4		VoC_lw16i_set_inc(REG0,0x7e0,0x28)
0x63D61809,	//0x1ee6		VoC_lw16i_set_inc(REG1,0x63d6,0x2)
0x64761806,	//0x1ee8		VoC_lw16i_set_inc(REG2,0x6476,0x1)
0x0F0D2B80,	//0x1eea		VoC_jal(CII_v_con_opt)
0x63AD1405,	//0x1eec		VoC_lw16_d(REG5,0x63ad)
0x64761804,	//0x1eee		VoC_lw16i_set_inc(REG0,0x6476,0x1)
0x0F2C2B80,	//0x1ef0		VoC_jal(CII_b_con_opt)
0x08F81920,	//0x1ef2		VoC_lw16i_set_inc(REG0,0x8f8,0x28)
0x63FE1809,	//0x1ef4		VoC_lw16i_set_inc(REG1,0x63fe,0x2)
0x64761806,	//0x1ef6		VoC_lw16i_set_inc(REG2,0x6476,0x1)
0x0F0D2B80,	//0x1ef8		VoC_jal(CII_v_con_opt)
		//0x1efa		DEC_PROCESS_400
0xF005D617,	//0x1efa		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x64801806,	//0x1efc		VoC_lw16i_set_inc(REG2,0x6480,0x1)
0x1CC50712,	//0x1efe		VoC_add16_rd(REG2,REG2,0x1cc5)
0x1CC50712,	//0x1f00		VoC_add16_rd(REG2,REG2,0x1cc5)
0x63AE1808,	//0x1f02		VoC_lw16i_set_inc(REG0,0x63ae,0x2)
0x64881807,	//0x1f04		VoC_lw16i_set_inc(REG3,0x6488,0x1)
0xDFC2DFC5,	//0x1f06		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x1F1A3187,	//0x1f08		VoC_bez16_r(DEC_PROCESS_500,REG7)
0xD991DF41,	//0x1f0a		VoC_lw32_p(REG23,REG2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0B1DF8FB,	//0x1f0c		VoC_sub16_dr(REG5,0x51d,REG3)(lo)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0x3145051D,	//0x1f0e		VoC_bngtz16_r(RS_RR_opt_100,REG5)(lo)	|	VoC_sub16_dr(REG5,0x51d,REG3)(hi)
0x2B801F16,	//0x1f10		VoC_jal(CII_g_corr1s_new)(lo)	|	VoC_bngtz16_r(RS_RR_opt_100,REG5)(hi)
0xE0E12180,	//0x1f12		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_jal(CII_g_corr1s_new)(hi)
0xFFC065C4,	//0x1f14		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RS_RR_opt_100_END)
		//0x1f16		RS_RR_opt_100
0x0F232B80,	//0x1f16		VoC_jal(CII_g_corr1_opt_paris)
		//0x1f18		RS_RR_opt_100_END
0x0F632B80,	//0x1f18		VoC_jal(CII_sub_rs_rrNs)
		//0x1f1a		DEC_PROCESS_500
0x1404F0A3,	//0x1f1a		VoC_lw16_d(REG4,0x2049)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x18052049,	//0x1f1c		VoC_lw16i_set_inc(REG1,0x560,0x1)(lo)	|	VoC_lw16_d(REG4,0x2049)(hi)
0x081B0560,	//0x1f1e		VoC_mult16_rd(REG3,REG3,0x63aa)(lo)	|	VoC_lw16i_set_inc(REG1,0x560,0x1)(hi)
0x082563AA,	//0x1f20		VoC_mult16_rd(REG5,REG4,0x5684)(lo)	|	VoC_mult16_rd(REG3,REG3,0x63aa)(hi)
0xC0595684,	//0x1f22		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_mult16_rd(REG5,REG4,0x5684)(hi)
0x1808C069,	//0x1f24		VoC_lw16i_set_inc(REG0,0x63d6,0x2)(lo)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD89863D6,	//0x1f26		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63d6,0x2)(hi)
0x1807D899,	//0x1f28		VoC_lw16i_set_inc(REG3,0x648a,0x1)(lo)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xD612648A,	//0x1f2a		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x648a,0x1)(hi)
0xDFC8DFC9,	//0x1f2c		VoC_push16(ACC0_LO,DEFAULT)	|	VoC_push16(ACC0_HI,DEFAULT)
0x0F8E2B80,	//0x1f2e		VoC_jal(CII_rs_rrNs_opt)
0x20491404,	//0x1f30		VoC_lw16_d(REG4,0x2049)
0x1F5131C4,	//0x1f32		VoC_bnez16_r(DEC_PROCESS_600,REG4)
0x1808D632,	//0x1f34		VoC_lw16i_set_inc(REG0,0x63fe,0x2)(lo)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0x180763FE,	//0x1f36		VoC_lw16i_set_inc(REG3,0x648c,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x63fe,0x2)(hi)
0x2B80648C,	//0x1f38		VoC_jal(CII_rs_rrNs_opt)(lo)	|	VoC_lw16i_set_inc(REG3,0x648c,0x1)(hi)
0xDF840F8E,	//0x1f3a		VoC_pop16(REG4,DEFAULT)	|	VoC_jal(CII_rs_rrNs_opt)(hi)
0x1804F031,	//0x1f3c		VoC_lw16i_set_inc(REG0,0x63d6,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE00163D6,	//0x1f3e		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63d6,0x1)(hi)
0x648A0A87,	//0x1f40		VoC_lw16i(REG7,0x648a)
0x0E762B80,	//0x1f42		VoC_jal(CII_scaleExcite_opt)
0x1804DF84,	//0x1f44		VoC_lw16i_set_inc(REG0,0x63fe,0x1)(lo)	|	VoC_pop16(REG4,DEFAULT)
0xE00163FE,	//0x1f46		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63fe,0x1)(hi)
0x648C0A87,	//0x1f48		VoC_lw16i(REG7,0x648c)
0x0E762B80,	//0x1f4a		VoC_jal(CII_scaleExcite_opt)
0x63FE1808,	//0x1f4c		VoC_lw16i_set_inc(REG0,0x63fe,0x2)
0x63D61809,	//0x1f4e		VoC_lw16i_set_inc(REG1,0x63d6,0x2)
0xDF84E5D8,	//0x1f50		VoC_pop16(REG4,DEFAULT)	|	VoC_jump(DEC_PROCESS_700)
		//0x1f51		DEC_PROCESS_600
0x1804F031,	//0x1f52		VoC_lw16i_set_inc(REG0,0x63ae,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE00163AE,	//0x1f54		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63ae,0x1)(hi)
0x64880A87,	//0x1f56		VoC_lw16i(REG7,0x6488)
0x0E762B80,	//0x1f58		VoC_jal(CII_scaleExcite_opt)
0xDA23DF84,	//0x1f5a		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x63D61804,	//0x1f5c		VoC_lw16i_set_inc(REG0,0x63d6,0x1)
0x0A87E001,	//0x1f5e		VoC_lw16i(REG7,0x648a)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xFFC0648A,	//0x1f60		VoC_NAD	|	VoC_lw16i(REG7,0x648a)(hi)
0x0E762B80,	//0x1f62		VoC_jal(CII_scaleExcite_opt)
0x63AE1808,	//0x1f64		VoC_lw16i_set_inc(REG0,0x63ae,0x2)
0x63D61809,	//0x1f66		VoC_lw16i_set_inc(REG1,0x63d6,0x2)
		//0x1f68		DEC_PROCESS_700
0x6426180A,	//0x1f68		VoC_lw16i_set_inc(REG2,0x6426,0x2)
0xD9C26A85,	//0x1f6a		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0x834D030C,	//0x1f6c		VoC_add16inc_rp(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)
0xDDD2D9C2,	//0x1f6e		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x1f6f		VoC_endloop0
0x1EB81808,	//0x1f70		VoC_lw16i_set_inc(REG0,0x1eb8,0x2)
0x1E901809,	//0x1f72		VoC_lw16i_set_inc(REG1,0x1e90,0x2)
0xEEA2D9C4,	//0x1f74		VoC_loop_i_short(0x35,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDCCD9C4,	//0x1f76		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1f77		VoC_endloop0
0x1808F031,	//0x1f78		VoC_lw16i_set_inc(REG0,0x6426,0x2)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDC986426,	//0x1f7a		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6426,0x2)(hi)
0xEA83D9C4,	//0x1f7c		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDC9859C4,	//0x1f7e		VoC_sw16inc_p(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1f80		VoC_endloop0
0xDF87DC99,	//0x1f80		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0xDF8BDF8A,	//0x1f82		VoC_pop16(ACC1_HI,DEFAULT)	|	VoC_pop16(ACC1_LO,DEFAULT)
0x0370073F,	//0x1f84		VoC_add16_rd(REG7,REG7,0x370)
0x1F4C1806,	//0x1f86		VoC_lw16i_set_inc(REG2,0x1f4c,0x1)
0x1F741807,	//0x1f88		VoC_lw16i_set_inc(REG3,0x1f74,0x1)
0x1805D877,	//0x1f8a		VoC_lw16i_set_inc(REG1,0x644e,0x1)(lo)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x1804644E,	//0x1f8c		VoC_lw16i_set_inc(REG0,0x6426,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x644e,0x1)(hi)
0x6E0F6426,	//0x1f8e		VoC_bnez16_d(pitchPreFilt_opt_00,0x2049)(lo)	|	VoC_lw16i_set_inc(REG0,0x6426,0x1)(hi)
0xD8B62049,	//0x1f90		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_bnez16_d(pitchPreFilt_opt_00,0x2049)(hi)
0x1F952CD6,	//0x1f92		VoC_loop_i(0x0,0x6b)
0xDCA6D8B6,	//0x1f94		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x1f95		VoC_endloop0
0xED04D886,	//0x1f96		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF6C55886,	//0x1f98		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xDC95DCA6,	//0x1f9a		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x1f9b		VoC_endloop0
0x20092B00,	//0x1f9c		VoC_jump_lg(pitchPreFilt_opt_end)
		//0x1f9e		pitchPreFilt_opt_00
0x0B3DF8FF,	//0x1f9e		VoC_sub16_dr(REG5,0x51d,REG7)(lo)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x7050051D,	//0x1fa0		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_sub16_dr(REG5,0x51d,REG7)(hi)
0x3145DF40,	//0x1fa2		VoC_bngtz16_r(pitchPreFilt_opt_01,REG5)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0x2B801FA8,	//0x1fa4		VoC_jal(CII_g_corr1s_new)(lo)	|	VoC_bngtz16_r(pitchPreFilt_opt_01,REG5)(hi)
0xE5CB2180,	//0x1fa6		VoC_jump(pitchPreFilt_opt_02)	|	VoC_jal(CII_g_corr1s_new)(hi)
		//0x1fa8		pitchPreFilt_opt_01
0xE200F005,	//0x1fa8		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFF446A82,	//0x1faa		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1fac		VoC_endloop0
0x2B80D500,	//0x1fac		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0xE02702BA,	//0x1fae		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x05180B09,	//0x1fb0		VoC_sub16_dr(REG1,0x518,REG1)
		//0x1fb2		pitchPreFilt_opt_02
0x03821486,	//0x1fb2		VoC_lw32_d(RL6,0x382)
0x55AC1804,	//0x1fb4		VoC_lw16i_set_inc(REG0,0x55ac,0x1)
0x63AA0700,	//0x1fb6		VoC_add16_rd(REG0,REG0,0x63aa)
0x20491406,	//0x1fb8		VoC_lw16_d(REG6,0x2049)
0xC036F8DE,	//0x1fba		VoC_add16_rr(REG6,REG0,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xfffffffb,DEFAULT)
0x5860C930,	//0x1fbc		VoC_lw16_p(REG0,REG6,DEFAULT)	|	VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)
0xE141F626,	//0x1fbe		VoC_movreg16(REG1,ACC1_LO,DEFAULT)	|	VoC_movreg16(REG6,REG1,IN_PARALLEL)
0x1FC33481,	//0x1fc0		VoC_bngt16_rr(pitchPreFilt_opt_03,REG0,REG1)
0xFF1FE020,	//0x1fc2		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x1fc3		pitchPreFilt_opt_03
0x0BEE0A03,	//0x1fc4		VoC_multf32_rd(REG67,REG0,0xbee)
0xC8F3E164,	//0x1fc6		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x0EAA2B80,	//0x1fc8		VoC_jal(CII_get_ipjj_opt_paris)
0x562C181B,	//0x1fca		VoC_lw16i_set_inc(REG3,0x562c,0x6)
0x1804C0C3,	//0x1fcc		VoC_lw16i_set_inc(REG0,0x6492,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
0x9BDD6492,	//0x1fce		VoC_multf32inc_rp(ACC1,REG7,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x6492,0x1)(hi)
0xC975F024,	//0x1fd0		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x9BDDE943,	//0x1fd2		VoC_multf32inc_rp(ACC1,REG7,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC975DC8B,	//0x1fd4		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)
		//0x1fd5		VoC_endloop0
0x1FDA180B,	//0x1fd6		VoC_lw16i_set_inc(REG3,0x1fda,0x2)
0xD90842CB,	//0x1fd8		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
0x6492180A,	//0x1fda		VoC_lw16i_set_inc(REG2,0x6492,0x2)
0x1FDF1805,	//0x1fdc		VoC_lw16i_set_inc(REG1,0x1fdf,0x1)
0x2C51D889,	//0x1fde		VoC_loop_i(0x1,0x28)(lo)	|	VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)
0xFF0B1FEA,	//0x1fe0		VoC_movreg32(REG67,REG23,DEFAULT)	|	VoC_loop_i(0x1,0x28)(hi)
0xE0086213,	//0x1fe2		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0xD51AE8A1,	//0x1fe4		VoC_bimac32inc_pp(REG3,REG2)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1fe5		VoC_endloop0
0xC934FF19,	//0x1fe6		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0xC0E35889,	//0x1fe8		VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x1fea		VoC_endloop1
0x61CFDC99,	//0x1fea		VoC_movreg16(RL7_HI,RL7_LO,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x1808F7EE,	//0x1fec		VoC_lw16i_set_inc(REG0,0x1fdf,0x2)(lo)	|	VoC_movreg16(RL7_LO,RL7_HI,IN_PARALLEL)
0x2B801FDF,	//0x1fee		VoC_jal(CII_agcGain_opt)(lo)	|	VoC_lw16i_set_inc(REG0,0x1fdf,0x2)(hi)
0xDF00210B,	//0x1ff0		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_agcGain_opt)(hi)
0x1FDF1804,	//0x1ff2		VoC_lw16i_set_inc(REG0,0x1fdf,0x1)
0xF031F7D9,	//0x1ff4		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)
0x14869BC4,	//0x1ff6		VoC_lw32_d(RL6,0x382)(lo)	|	VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)
0xC9340382,	//0x1ff8		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_lw32_d(RL6,0x382)(hi)
0x9BC4ED03,	//0x1ffa		VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xC934DC99,	//0x1ffc		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x1ffd		VoC_endloop0
0x1809F7F9,	//0x1ffe		VoC_lw16i_set_inc(REG1,0x1f74,0x2)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x18081F74,	//0x2000		VoC_lw16i_set_inc(REG0,0x1f4c,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x1f74,0x2)(hi)
0xD9CC1F4C,	//0x2002		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x1f4c,0x2)(hi)
0x20072C92,	//0x2004		VoC_loop_i(0x0,0x49)
0xDDC4D9CC,	//0x2006		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
		//0x2007		VoC_endloop0
0xD630DC08,	//0x2008		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
		//0x2009		pitchPreFilt_opt_end
0xF0087007,	//0x200a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x1B152B80,	//0x200c		VoC_jal(CII_level_estimator_opt)
0x0800F140,	//0x200e		VoC_mult16_rd(REG0,REG0,0x1cc5)(lo)	|	VoC_lw16i_short(REG0,0xa,DEFAULT)
0x18071CC5,	//0x2010		VoC_lw16i_set_inc(REG3,0x62fc,0x1)(lo)	|	VoC_mult16_rd(REG0,REG0,0x1cc5)(hi)
0xC0C362FC,	//0x2012		VoC_add16_rr(REG3,REG3,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x62fc,0x1)(hi)
0xDFC3DFC0,	//0x2014		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x1E5C1808,	//0x2016		VoC_lw16i_set_inc(REG0,0x1e5c,0x2)
0x24D4180A,	//0x2018		VoC_lw16i_set_inc(REG2,0x24d4,0x2)
0xD9C468A3,	//0x201a		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDD4D9C4,	//0x201c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x201d		VoC_endloop0
0x644E1804,	//0x201e		VoC_lw16i_set_inc(REG0,0x644e,0x1)
0x24DE1FBD,	//0x2020		VoC_lw16i_set_inc(REG1,0x24de,0xffffffff)
0x24D41806,	//0x2022		VoC_lw16i_set_inc(REG2,0x24d4,0x1)
0x15822B80,	//0x2024		VoC_jal(CII_lpcIir_opt_paris)
0x180AF023,	//0x2026		VoC_lw16i_set_inc(REG2,0x24de,0x2)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xF65824DE,	//0x2028		VoC_lw16i_short(FORMAT16,0xfffffff2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x24de,0x2)(hi)
0x8ED10ED0,	//0x202a		VoC_multf16inc_rp(REG1,REG3,REG2,IN_PARALLEL)	|	VoC_multf16inc_rp(REG0,REG3,REG2,DEFAULT)
0xFF446A84,	//0x202c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0x8ED10ED0,	//0x202e		VoC_multf16inc_rp(REG1,REG3,REG2,IN_PARALLEL)	|	VoC_multf16inc_rp(REG0,REG3,REG2,DEFAULT)
		//0x2030		VoC_endloop0
0xF7F8CF00,	//0x2030		VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)	|	VoC_bimac32_rr(REG01,REG01)
0xFFC07000,	//0x2032		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1BE12B80,	//0x2034		VoC_jal(CII_level_calc_opt)
0x799A0AC1,	//0x2036		VoC_lw16i(REG1,0xfffff99a)
0x648F0888,	//0x2038		VoC_multf16_rd(REG0,REG1,0x648f)
0x648E1401,	//0x203a		VoC_lw16_d(REG1,0x648e)
0x04DC3C20,	//0x203c		VoC_bngt16_rd(signal_conceal_opt00,REG0,0x4dc)
0xFFC071E0,	//0x203e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xf,DEFAULT)
		//0x2040		signal_conceal_opt00
0x20086A04,	//0x2040		VoC_bngtz16_d(signal_conceal_opt01,0x2008)
0xFFC07021,	//0x2042		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x2044		signal_conceal_opt01
0x20483101,	//0x2044		VoC_bgtz16_r(signal_conceal_opt_go,REG1)
		//0x2046		signal_conceal_opt_exit2
0x20832B00,	//0x2046		VoC_jump_lg(signal_conceal_opt_exit)
		//0x2048		signal_conceal_opt_go
0x05180A82,	//0x2048		VoC_lw16i(REG2,0x518)
0x0AC0C082,	//0x204a		VoC_lw16i(REG0,0xffffffd3)(lo)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x34107FD3,	//0x204c		VoC_bgt16_rr(signal_conceal_opt_exit2,REG2,REG0)(lo)	|	VoC_lw16i(REG0,0xffffffd3)(hi)
0x00122046,	//0x204e		VoC_add16_pd(REG2,REG2,0x6490)(lo)	|	VoC_bgt16_rr(signal_conceal_opt_exit2,REG2,REG0)(hi)
0xC3D26490,	//0x2050		VoC_sub16_rr(REG2,REG7,REG2,DEFAULT)	|	VoC_add16_pd(REG2,REG2,0x6490)(hi)
0x20833142,	//0x2052		VoC_bngtz16_r(signal_conceal_opt_exit,REG2)
0x04DC3C1A,	//0x2054		VoC_bngt16_rd(signal_conceal_opt04,REG2,0x4dc)
0xF027F1E2,	//0x2056		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0xf,DEFAULT)
		//0x2057		signal_conceal_opt04
0x04FB1808,	//0x2058		VoC_lw16i_set_inc(REG0,0x4fb,0x2)
0x408B6A04,	//0x205a		VoC_bngtz16_d(signal_conceal_opt05,0x408b)
0x64911507,	//0x205c		VoC_sw16_d(REG7,0x6491)
		//0x205e		signal_conceal_opt05
0x1486C010,	//0x205e		VoC_lw32_d(RL6,0x382)(lo)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x18090382,	//0x2060		VoC_lw16i_set_inc(REG1,0x1e5c,0x2)(lo)	|	VoC_lw32_d(RL6,0x382)(hi)
0x58031E5C,	//0x2062		VoC_lw16_p(REG3,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1e5c,0x2)(hi)
0x1ACCF620,	//0x2064		VoC_multf32inc_rp(ACC0,REG3,REG1,DEFAULT)	|	VoC_movreg16(REG0,REG1,IN_PARALLEL)
0xFFC09ACD,	//0x2066		VoC_NOP	|	VoC_multf32inc_rp(ACC1,REG3,REG1,IN_PARALLEL)
0xC9774934,	//0x2068		VoC_add32_rr(RL7,ACC1,RL6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xE8A6FFC0,	//0x206a		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0x9ACD1ACC,	//0x206c		VoC_multf32inc_rp(ACC1,REG3,REG1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG3,REG1,DEFAULT)
0x4934E12E,	//0x206e		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_movreg16(RL7_LO,ACC0_HI,DEFAULT)
0xDDC7C977,	//0x2070		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_add32_rr(RL7,ACC1,RL6,IN_PARALLEL)
		//0x2071		VoC_endloop0
0x1FB71804,	//0x2072		VoC_lw16i_set_inc(REG0,0x1fb7,0x1)
0x644E1805,	//0x2074		VoC_lw16i_set_inc(REG1,0x644e,0x1)
0x1EFB1806,	//0x2076		VoC_lw16i_set_inc(REG2,0x1efb,0x1)
0xED08FFC0,	//0x2078		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_NAD
0x98CD18C4,	//0x207a		VoC_multf32_rp(ACC1,REG3,REG1,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG3,REG0,DEFAULT)
0x49349AD7,	//0x207c		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_multf32inc_rp(RL7,REG3,REG2,DEFAULT)
0xC9F7C975,	//0x207e		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)
0x5C9BDC89,	//0x2080		VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x2081		VoC_endloop0
0xDF83DCAF,	//0x2082		VoC_pop16(REG3,DEFAULT)	|	VoC_sw16inc_p(RL7_HI,REG2,IN_PARALLEL)
		//0x2083		signal_conceal_opt_exit
0x644E1804,	//0x2084		VoC_lw16i_set_inc(REG0,0x644e,0x1)
0x1E5C1806,	//0x2086		VoC_lw16i_set_inc(REG2,0x1e5c,0x1)
0x24AC1FBD,	//0x2088		VoC_lw16i_set_inc(REG1,0x24ac,0xffffffff)
0x15822B80,	//0x208a		VoC_jal(CII_lpcIir_opt_paris)
0x1808DF84,	//0x208c		VoC_lw16i_set_inc(REG0,0x24ac,0x2)(lo)	|	VoC_pop16(REG4,DEFAULT)
0x180624AC,	//0x208e		VoC_lw16i_set_inc(REG2,0x634c,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x24ac,0x2)(hi)
0x1807634C,	//0x2090		VoC_lw16i_set_inc(REG3,0x6324,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x634c,0x1)(hi)
0x41126324,	//0x2092		VoC_add16_rr(REG2,REG4,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x6324,0x1)(hi)
0xD631C11B,	//0x2094		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG3,IN_PARALLEL)
0xDFC1F031,	//0x2096		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDF405FC2,	//0x2098		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x204F1405,	//0x209a		VoC_lw16_d(REG5,0x204f)
0x21802B80,	//0x209c		VoC_jal(CII_g_corr1s_new)
0x03820927,	//0x209e		VoC_add32_rd(RL7,ACC0,0x382)
0xF00560EE,	//0x20a0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG7,DEFAULT)
0xDF0077F0,	//0x20a2		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0x1E461806,	//0x20a4		VoC_lw16i_set_inc(REG2,0x1e46,0x1)
0x19E52B80,	//0x20a6		VoC_jal(CII_lpcFir_opt)
0x7030DF83,	//0x20a8		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x5610F3FD,	//0x20aa		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0x1806D611,	//0x20ac		VoC_lw16i_set_inc(REG2,0x1e50,0x1)(lo)	|	VoC_lw16_sd(REG1,0x0,IN_PARALLEL)
0x2B801E50,	//0x20ae		VoC_jal(CII_lpcIir_opt_paris)(lo)	|	VoC_lw16i_set_inc(REG2,0x1e50,0x1)(hi)
0xD6101582,	//0x20b0		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jal(CII_lpcIir_opt_paris)(hi)
0x0AC1D612,	//0x20b2		VoC_lw16i(REG1,0x8000)(lo)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x0A830000,	//0x20b4		VoC_lw16i(REG3,0x199a)(lo)	|	VoC_lw16i(REG1,0x8000)(hi)
0x5889199A,	//0x20b6		VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_lw16i(REG3,0x199a)(hi)
0x0F18F628,	//0x20b8		VoC_msu32_rd(REG3,0x1e5a)(lo)	|	VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)
0xECE51E5A,	//0x20ba		VoC_loop_i_short(0x27,DEFAULT)	|	VoC_msu32_rd(REG3,0x1e5a)(hi)
0xF7245889,	//0x20bc		VoC_movreg16(REG4,ACC0_HI,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)
0xF628509A,	//0x20be		VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_msu32_rp(REG3,REG2,DEFAULT)
		//0x20c0		VoC_endloop0
0xD821DCA4,	//0x20c0		VoC_lw16_p(REG1,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0x1501DC29,	//0x20c2		VoC_sw16_d(REG1,0x1e5a)(lo)	|	VoC_sw16_p(ACC0_HI,REG2,DEFAULT)
0x56101E5A,	//0x20c4		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_d(REG1,0x1e5a)(hi)
0x1405F008,	//0x20c6		VoC_lw16_d(REG5,0x204f)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x2B80204F,	//0x20c8		VoC_jal(CII_agcGain_opt)(lo)	|	VoC_lw16_d(REG5,0x204f)(hi)
0xF008210B,	//0x20ca		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_jal(CII_agcGain_opt)(hi)
0x1E441406,	//0x20cc		VoC_lw16_d(REG6,0x1e44)
0x0AC4E0C9,	//0x20ce		VoC_lw16i(REG4,0xfffffe66)(lo)	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0x0A857E66,	//0x20d0		VoC_lw16i(REG5,0x19a)(lo)	|	VoC_lw16i(REG4,0xfffffe66)(hi)
0xF7B8019A,	//0x20d2		VoC_lw16i_short(FORMAT16,0xfffffffd,DEFAULT)	|	VoC_lw16i(REG5,0x19a)(hi)
0xDF82CF34,	//0x20d4		VoC_pop16(REG2,DEFAULT)	|	VoC_bimac32_rr(REG67,REG45)
0x8D93E126,	//0x20d6		VoC_multf16_rp(REG3,REG6,REG2,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xCF34ECE5,	//0x20d8		VoC_bimac32_rr(REG67,REG45)	|	VoC_loop_i_short(0x27,DEFAULT)
0xE126DCA3,	//0x20da		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0xFFC08D93,	//0x20dc		VoC_NOP	|	VoC_multf16_rp(REG3,REG6,REG2,DEFAULT)
		//0x20dd		VoC_endloop0
0xDCA3F7F8,	//0x20de		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0x1E441506,	//0x20e0		VoC_sw16_d(REG6,0x1e44)
0x0701D630,	//0x20e2		VoC_add16_rd(REG1,REG0,0x800)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x70270800,	//0x20e4		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0x800)(hi)
0xDA31F008,	//0x20e6		VoC_sw16_sd(REG1,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x1B152B80,	//0x20e8		VoC_jal(CII_level_estimator_opt)
0xF027F066,	//0x20ea		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0x1CC5073F,	//0x20ec		VoC_add16_rd(REG7,REG7,0x1cc5)
0x1E922B00,	//0x20ee		VoC_jump_lg(DEC_giSfrmCnt_LOOP_BEGIN)
		//0x20f0		DEC_giSfrmCnt_LOOP
0x1401DF80,	//0x20f0		VoC_lw16_d(REG1,0x6491)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x14026491,	//0x20f2		VoC_lw16_d(REG2,0x2048)(lo)	|	VoC_lw16_d(REG1,0x6491)(hi)
0x15002048,	//0x20f4		VoC_sw16_d(REG0,0x200d)(lo)	|	VoC_lw16_d(REG2,0x2048)(hi)
0x1501200D,	//0x20f6		VoC_sw16_d(REG1,0x2008)(lo)	|	VoC_sw16_d(REG0,0x200d)(hi)
0x15022008,	//0x20f8		VoC_sw16_d(REG2,0x1e8e)(lo)	|	VoC_sw16_d(REG1,0x2008)(hi)
0xDF801E8E,	//0x20fa		VoC_pop16(REG0,DEFAULT)	|	VoC_sw16_d(REG2,0x1e8e)(hi)
0xDFA9DF80,	//0x20fc		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x63781808,	//0x20fe		VoC_lw16i_set_inc(REG0,0x6378,0x2)
0x1E661809,	//0x2100		VoC_lw16i_set_inc(REG1,0x1e66,0x2)
0xFFC0D9C4,	//0x2102		VoC_NAD	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C56944,	//0x2104		VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDDCC59C4,	//0x2106		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x2108		VoC_endloop0
0xDDCD59C5,	//0x2108		VoC_sw32inc_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xDFE9E580,	//0x210a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x210b		CII_agcGain_opt
0x21802B80,	//0x210c		VoC_jal(CII_g_corr1s_new)
0x3304F006,	//0x210e		VoC_bez32_r(agcGain_opt_END,ACC0)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x073F2134,	//0x2110		VoC_add16_rd(REG7,REG7,0x370)(lo)	|	VoC_bez32_r(agcGain_opt_END,ACC0)(hi)
0x09200370,	//0x2112		VoC_add32_rd(REG01,ACC0,0x382)(lo)	|	VoC_add16_rd(REG7,REG7,0x370)(hi)
0xE1E00382,	//0x2114		VoC_movreg16(REG0,RL7_HI,DEFAULT)	|	VoC_add32_rd(REG01,ACC0,0x382)(hi)
0xF808E1C5,	//0x2116		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x02CC2B80,	//0x2118		VoC_jal(CII_DIV_S)
0x0F382B80,	//0x211a		VoC_jal(CII_norm_s_opt)
0xC240C379,	//0x211c		VoC_sub16_rr(REG0,REG1,REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG7,DEFAULT)
0xE00E604F,	//0x211e		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0x0F432B80,	//0x2120		VoC_jal(CII_sqroot_opt)
0x0A87E0E6,	//0x2122		VoC_lw16i(REG7,0x7fff)(lo)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x48B87FFF,	//0x2124		VoC_blt16_rd(agcGain_opt_END,REG0,0x578)(lo)	|	VoC_lw16i(REG7,0x7fff)(hi)
0x70250578,	//0x2126		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_blt16_rd(agcGain_opt_END,REG0,0x578)(hi)
0xE429F601,	//0x2128		VoC_and16_rr(REG1,REG5,DEFAULT)	|	VoC_movreg16(REG1,REG0,IN_PARALLEL)
0x212E3181,	//0x212a		VoC_bez16_r(agcGain_opt_new_man1,REG1)
0x035008B6,	//0x212c		VoC_multf16_rd(REG6,REG6,0x350)
		//0x212e		agcGain_opt_new_man1
0xC028F808,	//0x212e		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x21333140,	//0x2130		VoC_bngtz16_r(agcGain_opt_new_man2,REG0)
0xE0C7FE06,	//0x2132		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG0,DEFAULT)
		//0x2133		agcGain_opt_new_man2
		//0x2134		agcGain_opt_END
0xFFC0DFA9,	//0x2134		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF0C1E580,	//0x2136		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_return
		//0x2137		CII_compute_s2_s3_new
0xC28D408C,	//0x2138		VoC_sub16_rr(REG5,REG2,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG1,DEFAULT)
0xC17D413C,	//0x213a		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x56CD3C24,	//0x213c		VoC_bngt16_rd(COMPUTES2S3_S2LIMIT,REG4,0x56cd)
0x01000A84,	//0x213e		VoC_lw16i(REG4,0x100)
		//0x2140		COMPUTES2S3_S2LIMIT
0x21433105,	//0x2140		VoC_bgtz16_r(OPENLOOP415,REG5)
0xC32FF005,	//0x2142		VoC_sub16_rr(REG7,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x2143		OPENLOOP415
0x56681807,	//0x2144		VoC_lw16i_set_inc(REG3,0x5668,0x1)
0x1806C0EB,	//0x2146		VoC_lw16i_set_inc(REG2,0x277c,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x67C3277C,	//0x2148		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x277c,0x1)(hi)
0xD8B4D8B4,	//0x214a		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)
		//0x214c		VoC_endloop0
0xE580DCA4,	//0x214c		VoC_return	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x214e		CII_fnBest_CG_new
0xDF4577E3,	//0x214e		VoC_push32(ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0xffffffff,DEFAULT)
0x00001806,	//0x2150		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xD88667D4,	//0x2152		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x3146D897,	//0x2154		VoC_bngtz16_r(FNBEST100,REG6)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x31472165,	//0x2156		VoC_bngtz16_r(FNBEST100,REG7)(lo)	|	VoC_bngtz16_r(FNBEST100,REG6)(hi)
0xCDB42165,	//0x2158		VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)	|	VoC_bngtz16_r(FNBEST100,REG7)(hi)
0x0924FFC0,	//0x215a		VoC_add32_rd(ACC0,ACC0,0x382)(lo)	|	VoC_NOP
0xE1260382,	//0x215c		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x382)(hi)
0xCDE54DAC,	//0x215e		VoC_multf32_rr(ACC1,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x36A5FFC0,	//0x2160		VoC_bngt32_rr(FNBEST100,ACC0,ACC1)(lo)	|	VoC_NOP
0x7F1A2165,	//0x2162		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_bngt32_rr(FNBEST100,ACC0,ACC1)(hi)
0xDE10F643,	//0x2164		VoC_inc_p(REG2,DEFAULT)	|	VoC_movreg16(REG3,REG2,IN_PARALLEL)
		//0x2165		FNBEST100
		//0x2166		VoC_endloop0
0xDF05D886,	//0x2166		VoC_pop32(ACC1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF005E580,	//0x2168		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_return
		//0x2169		CII_r0BasedEnergyShft_new
0x094E3D2C,	//0x216a		VoC_bngt16_rd(R0Based_END_CASE,REG4,0x94e)
0x3D14F045,	//0x216c		VoC_bngt16_rd(R0Based_END_CASE,REG4,0x804)(lo)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xF0650804,	//0x216e		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_bngt16_rd(R0Based_END_CASE,REG4,0x804)(hi)
0x07FE3CBC,	//0x2170		VoC_bngt16_rd(R0Based_END_CASE,REG4,0x7fe)
0x3CA4F085,	//0x2172		VoC_bngt16_rd(R0Based_END_CASE,REG4,0x807)(lo)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0xF0A50807,	//0x2174		VoC_lw16i_short(REG5,0x5,DEFAULT)	|	VoC_bngt16_rd(R0Based_END_CASE,REG4,0x807)(hi)
0x08443C8C,	//0x2176		VoC_bngt16_rd(R0Based_END_CASE,REG4,0x844)
0x3C34F0C5,	//0x2178		VoC_bngt16_rd(R0Based_END_CASE,REG4,0x859)(lo)	|	VoC_lw16i_short(REG5,0x6,DEFAULT)
0xF0E50859,	//0x217a		VoC_lw16i_short(REG5,0x7,DEFAULT)	|	VoC_bngt16_rd(R0Based_END_CASE,REG4,0x859)(hi)
0x088B3C1C,	//0x217c		VoC_bngt16_rd(R0Based_END_CASE,REG4,0x88b)
0xE580F105,	//0x217e		VoC_return	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
		//0x217f		R0Based_END_CASE
		//0x2180		CII_g_corr1s_new
0x6200DF41,	//0x2180		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x388DFF44,	//0x2182		VoC_bgt16_rd(CII_g_corr1s1,REG5,0x370)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xEA850370,	//0x2184		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_bgt16_rd(CII_g_corr1s1,REG5,0x370)(hi)
0xD9C15983,	//0x2186		VoC_lw32inc_p(REG23,REG0,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xFE2F7E2E,	//0x2188		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
		//0x218a		VoC_endloop0
0xE5CBCF32,	//0x218a		VoC_jump(CII_g_corr1s2)	|	VoC_bimac32_rr(REG67,REG23)
		//0x218c		CII_g_corr1s1
0x642CF024,	//0x218c		VoC_and16_rr(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x6A85F80D,	//0x218e		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0xD9C3C165,	//0x2190		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0xFE2F7E2E,	//0x2192		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
		//0x2194		VoC_endloop0
0xF8FDCF36,	//0x2194		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
		//0x2196		CII_g_corr1s2
0x3304F007,	//0x2196		VoC_bez32_r(CII_g_corr1s3,ACC0)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDFE9219F,	//0x2198		VoC_push16(RA,DEFAULT)	|	VoC_bez32_r(CII_g_corr1s3,ACC0)(hi)
0x02BA2B80,	//0x219a		VoC_jal(CII_NORM_L_ACC0)
0x426FC1C9,	//0x219c		VoC_sub16_rr(REG7,REG1,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG7,REG1,DEFAULT)
0xDF01DFA9,	//0x219e		VoC_pop32(REG23,DEFAULT)	|	VoC_pop16(RA,IN_PARALLEL)
		//0x219f		CII_g_corr1s3
0xF082E580,	//0x21a0		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_return
		//0x21a1		CII_findPeak_new
0xC3D541D4,	//0x21a2		VoC_sub16_rr(REG5,REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG7,REG2,DEFAULT)
0x03453C24,	//0x21a4		VoC_bngt16_rd(FINDPEAK100,REG4,0x345)
0x008F0A84,	//0x21a6		VoC_lw16i(REG4,0x8f)
		//0x21a8		FINDPEAK100
0x08474C1D,	//0x21a8		VoC_bnlt16_rd(FINDPEAK101,REG5,0x847)
0xC32FF285,	//0x21aa		VoC_sub16_rr(REG7,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x14,DEFAULT)
		//0x21ab		FINDPEAK101
0x0370073F,	//0x21ac		VoC_add16_rd(REG7,REG7,0x370)
0xDFE95F42,	//0x21ae		VoC_push16(RA,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x094E07AE,	//0x21b0		VoC_sub16_rd(REG6,REG5,0x94e)
0xC0714030,	//0x21b2		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x0A85F004,	//0x21b4		VoC_lw16i(REG5,0x3f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x2B80003F,	//0x21b6		VoC_jal(CII_fnBest_CG_new)(lo)	|	VoC_lw16i(REG5,0x3f)(hi)
0xDF02214E,	//0x21b8		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CII_fnBest_CG_new)(hi)
0x7006DFA9,	//0x21ba		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x351FEFF7,	//0x21bc		VoC_be16_rr(FINDPEAKRETURN,REG3,REG7)(lo)	|	VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)
0xC0EB21C8,	//0x21be		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_be16_rr(FINDPEAKRETURN,REG3,REG7)(hi)
0x21C8351C,	//0x21c0		VoC_be16_rr(FINDPEAKRETURN,REG3,REG4)
0x21C8351D,	//0x21c2		VoC_be16_rr(FINDPEAKRETURN,REG3,REG5)
0x05200A1B,	//0x21c4		VoC_multf32_rd(REG67,REG3,0x520)
0xF80EFFC0,	//0x21c6		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_NOP
		//0x21c8		FINDPEAKRETURN
0xDF43E580,	//0x21c8		VoC_push32(REG67,DEFAULT)	|	VoC_return
		//0x21c9		CII_CGInterp_new
0x072DDF41,	//0x21ca		VoC_add16_rd(REG5,REG5,0x51c)(lo)	|	VoC_push32(REG23,DEFAULT)
0xFFC0051C,	//0x21cc		VoC_NAD	|	VoC_add16_rd(REG5,REG5,0x51c)(hi)
0x21EC2E09,	//0x21ce		VoC_loop_r(1,REG1)
0x15550A86,	//0x21d0		VoC_lw16i(REG6,0x1555)
0x14849B83,	//0x21d2		VoC_lw32_d(ACC0,0x382)(lo)	|	VoC_multf32inc_rp(REG67,REG6,REG0,DEFAULT)
0x43EC0382,	//0x21d4		VoC_sub16_rr(REG4,REG7,REG5,DEFAULT)	|	VoC_lw32_d(ACC0,0x382)(hi)
0x7F25F90E,	//0x21d6		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0xF0C0DFC0,	//0x21d8		VoC_lw16i_short(REG0,0x6,DEFAULT)	|	VoC_push16(REG0,IN_PARALLEL)
0x181BCD83,	//0x21da		VoC_lw16i_set_inc(REG3,0x5768,0x6)(lo)	|	VoC_multf32_rr(REG67,REG6,REG0,DEFAULT)
0xC8E35768,	//0x21dc		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5768,0x6)(hi)
0x40FBC23F,	//0x21de		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sub16_rr(REG7,REG0,REG7,DEFAULT)
0x4020D908,	//0x21e0		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0xE8C2C061,	//0x21e2		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x5110D8B2,	//0x21e4		VoC_mac32inc_rp(REG2,REG0,DEFAULT)	|	VoC_lw16inc_p(REG2,REG3,DEFAULT)
		//0x21e5		VoC_endloop0
0xD910D111,	//0x21e6		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_mac32inc_rp(REG2,REG1,IN_PARALLEL)
0xDC89FFC0,	//0x21e8		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_NOP
0xDF80DC9B,	//0x21ea		VoC_pop16(REG0,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)
		//0x21ec		VoC_endloop1
0xDF01DD10,	//0x21ec		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_sd(REG01,0x1,DEFAULT)
0xE580DF03,	//0x21ee		VoC_return	|	VoC_pop32(REG67,DEFAULT)
		//0x21f0		CII_CGInterpValid_new
0xDF42DFC0,	//0x21f0		VoC_push32(REG45,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDF415FE9,	//0x21f2		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x052007BE,	//0x21f4		VoC_sub16_rd(REG6,REG7,0x520)
0x0E982B80,	//0x21f6		VoC_jal(CII_quantLag_opt_paris)
0x21FC351F,	//0x21f8		VoC_be16_rr(CGINTERPVALID100,REG3,REG7)
0x03700712,	//0x21fa		VoC_add16_rd(REG2,REG2,0x370)
		//0x21fc		CGINTERPVALID100
0x0520073E,	//0x21fc		VoC_add16_rd(REG6,REG7,0x520)
0x2B80DFC2,	//0x21fe		VoC_jal(CII_quantLag_opt_paris)(lo)	|	VoC_push16(REG2,DEFAULT)
0xDF860E98,	//0x2200		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(CII_quantLag_opt_paris)(hi)
0x2206351F,	//0x2202		VoC_be16_rr(CGINTERPVALID101,REG3,REG7)
0x03700792,	//0x2204		VoC_sub16_rd(REG2,REG2,0x370)
		//0x2206		CGINTERPVALID101
0x0709C2B1,	//0x2206		VoC_add16_rd(REG1,REG1,0x370)(lo)	|	VoC_sub16_rr(REG1,REG2,REG6,DEFAULT)
0x18070370,	//0x2208		VoC_lw16i_set_inc(REG3,0x5668,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0x370)(hi)
0xC0F35668,	//0x220a		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5668,0x1)(hi)
0x6643D620,	//0x220c		VoC_loop_r_short(REG1,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xD8B6D8B6,	//0x220e		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)
		//0x2210		VoC_endloop0
0xD620DC86,	//0x2210		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x5F01F031,	//0x2212		VoC_pop32(REG23,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x5F03DA21,	//0x2214		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_sd(REG1,0x1,IN_PARALLEL)
0x2B80E125,	//0x2216		VoC_jal(CII_CGInterp_new)(lo)	|	VoC_lw16i_short(REG5,0x12,IN_PARALLEL)
0xDFA921C9,	//0x2218		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_CGInterp_new)(hi)
0xE580DF87,	//0x221a		VoC_return	|	VoC_pop16(REG7,DEFAULT)
		//0x221c		CII_bestDelta_new
0xC1755FE9,	//0x221c		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xC0F340B2,	//0x221e		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xE0165FC5,	//0x2220		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xDF415FC4,	//0x2222		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xDF405FC7,	//0x2224		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x2B80D844,	//0x2226		VoC_jal(CII_get_ipjj_opt_paris)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xD6240EAA,	//0x2228		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_jal(CII_get_ipjj_opt_paris)(hi)
0xC13CC3F7,	//0x222a		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0xD844FF01,	//0x222c		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0EAA2B80,	//0x222e		VoC_jal(CII_get_ipjj_opt_paris)
0x42FDF047,	//0x2230		VoC_sub16_rr(REG5,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x3180C07C,	//0x2232		VoC_bez16_r(BESTDELTA100,REG0)(lo)	|	VoC_add16_rr(REG4,REG1,REG7,IN_PARALLEL)
0xC1342236,	//0x2234		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_bez16_r(BESTDELTA100,REG0)(hi)
		//0x2236		BESTDELTA100
0x278C1804,	//0x2236		VoC_lw16i_set_inc(REG0,0x278c,0x1)
0x674A1805,	//0x2238		VoC_lw16i_set_inc(REG1,0x674a,0x1)
0xE1277006,	//0x223a		VoC_lw16i_short(REG7,0x12,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x224031C2,	//0x223c		VoC_bnez16_r(BESTDELTA101,REG2)
0xDC965C86,	//0x223e		VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x2240		BESTDELTA101
0xC37F432E,	//0x2240		VoC_sub16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG5,DEFAULT)
0x224631C2,	//0x2242		VoC_bnez16_r(BESTDELTA102,REG2)
0x037007AD,	//0x2244		VoC_sub16_rd(REG5,REG5,0x370)
		//0x2246		BESTDELTA102
0xC0FBDF01,	//0x2246		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x0736C0BA,	//0x2248		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xD8B70370,	//0x224a		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
0xD8A66784,	//0x224c		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD8B758A6,	//0x224e		VoC_lw16inc_p(REG7,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
		//0x2250		VoC_endloop0
0xDC975C86,	//0x2250		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x278C181A,	//0x2252		VoC_lw16i_set_inc(REG2,0x278c,0x6)
0x674A1807,	//0x2254		VoC_lw16i_set_inc(REG3,0x674a,0x1)
0x27A40A86,	//0x2256		VoC_lw16i(REG6,0x27a4)
0x67620A87,	//0x2258		VoC_lw16i(REG7,0x6762)
0x5611D620,	//0x225a		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0x2B80DF43,	//0x225c		VoC_jal(CII_CGInterp_new)(lo)	|	VoC_push32(REG67,IN_PARALLEL)
0xDF0121C9,	//0x225e		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(CII_CGInterp_new)(hi)
0x7032F033,	//0x2260		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x2B80DF87,	//0x2262		VoC_jal(CII_maxCCOverGWithSign_opt_paris)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0xDF800EEE,	//0x2264		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_maxCCOverGWithSign_opt_paris)(hi)
0x5F84DF01,	//0x2266		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDFA9C008,	//0x2268		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG1,IN_PARALLEL)
0xDC36D801,	//0x226a		VoC_sw16_p(REG6,REG3,DEFAULT)	|	VoC_lw16_p(REG1,REG0,DEFAULT)
0xDC41DC27,	//0x226c		VoC_sw16_p(REG1,REG4,DEFAULT)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0xC11CE580,	//0x226e		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_return
		//0x226f		CII_siCPeakIndex_save_new
0xC19EC15D,	//0x2270		VoC_add16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xD8555844,	//0x2272		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xDC84D866,	//0x2274		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xDCA6DC95,	//0x2276		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDFE9E580,	//0x2278		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2279		CII_pitchLags_new
0x6764152B,	//0x227a		VoC_sw16_d(SP32,0x6764)
0x6765152A,	//0x227c		VoC_sw16_d(SP16,0x6765)
0xDF405FC6,	//0x227e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xDF415FC5,	//0x2280		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0x05200A22,	//0x2282		VoC_multf32_rd(REG45,REG4,0x520)
0x278C1804,	//0x2284		VoC_lw16i_set_inc(REG0,0x278c,0x1)
0xE087F80C,	//0x2286		VoC_movreg16(REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x27980A84,	//0x2288		VoC_lw16i(REG4,0x2798)
0x674A0A85,	//0x228a		VoC_lw16i(REG5,0x674a)
0xDF42DFC0,	//0x228c		VoC_push32(REG45,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x21F02B80,	//0x228e		VoC_jal(CII_CGInterpValid_new)
0xF004D908,	//0x2290		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x003F0A85,	//0x2292		VoC_lw16i(REG5,0x3f)
0x214E2B80,	//0x2294		VoC_jal(CII_fnBest_CG_new)
0x3203F006,	//0x2296		VoC_bltz16_r(PITCHLAGEXIT,REG3)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x180423A2,	//0x2298		VoC_lw16i_set_inc(REG0,0x27b2,0x1)(lo)	|	VoC_bltz16_r(PITCHLAGEXIT,REG3)(hi)
0x180527B2,	//0x229a		VoC_lw16i_set_inc(REG1,0x6756,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x27b2,0x1)(hi)
0x18066756,	//0x229c		VoC_lw16i_set_inc(REG2,0x27a4,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x6756,0x1)(hi)
0x561627A4,	//0x229e		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x27a4,0x1)(hi)
0x5FC2D90A,	//0x22a0		VoC_push16(REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x0,IN_PARALLEL)
0x2B80DF40,	//0x22a2		VoC_jal(CII_siCPeakIndex_save_new)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0xDFC2226F,	//0x22a4		VoC_push16(REG2,DEFAULT)	|	VoC_jal(CII_siCPeakIndex_save_new)(hi)
0x055A0A33,	//0x22a6		VoC_multf32_rd(REG67,REG6,0x55a)
0x091BDF40,	//0x22a8		VoC_add32_rd(REG67,REG67,0x382)(lo)	|	VoC_push32(REG01,DEFAULT)
0xF0260382,	//0x22aa		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x382)(hi)
		//0x22ac		PITCHLAGS300
0x08044827,	//0x22ac		VoC_blt16_rd(PITCHLAGS200_go,REG7,0x804)
0x034A3C26,	//0x22ae		VoC_bngt16_rd(PITCHLAGS200_no,REG6,0x34a)
		//0x22b0		PITCHLAGS200_go
0x22E02B00,	//0x22b0		VoC_jump_lg(PITCHLAGS200)
		//0x22b2		PITCHLAGS200_no
0xDF43D920,	//0x22b2		VoC_push32(REG67,DEFAULT)	|	VoC_lw32_sd(REG01,0x3,DEFAULT)
0x21A12B80,	//0x22b4		VoC_jal(CII_findPeak_new)
0x22D03186,	//0x22b6		VoC_bez16_r(PITCHLAGS400,REG6)
0xD92960C7,	//0x22b8		VoC_lw32_sd(REG23,0x4,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xD9225630,	//0x22ba		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x2B80F0D2,	//0x22bc		VoC_jal(CII_CGInterpValid_new)(lo)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0xD92021F0,	//0x22be		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_jal(CII_CGInterpValid_new)(hi)
0xD6447032,	//0x22c0		VoC_lw16_sd(REG4,0x3,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x40000A85,	//0x22c2		VoC_lw16i(REG5,0x4000)
0x214E2B80,	//0x22c4		VoC_jal(CII_fnBest_CG_new)
0x22D03203,	//0x22c6		VoC_bltz16_r(PITCHLAGS400,REG3)
0xD9225636,	//0x22c8		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0xD9105612,	//0x22ca		VoC_lw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x226F2B80,	//0x22cc		VoC_jal(CII_siCPeakIndex_save_new)
0xDD105A12,	//0x22ce		VoC_sw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x0,DEFAULT)
		//0x22d0		PITCHLAGS400
0x0A85DF01,	//0x22d0		VoC_lw16i(REG5,0x55a)(lo)	|	VoC_pop32(REG23,DEFAULT)
0xC155055A,	//0x22d2		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_lw16i(REG5,0x55a)(hi)
0x27A41406,	//0x22d4		VoC_lw16_d(REG6,0x27a4)
0x4C2A99AB,	//0x22d6		VoC_bnlt16_rd(PITCHLAGS500,REG2,0x34a)(lo)	|	VoC_multf32_rp(REG67,REG6,REG5,DEFAULT)
0x091B034A,	//0x22d8		VoC_add32_rd(REG67,REG67,0x382)(lo)	|	VoC_bnlt16_rd(PITCHLAGS500,REG2,0x34a)(hi)
0xFFC00382,	//0x22da		VoC_NAD	|	VoC_add32_rd(REG67,REG67,0x382)(hi)
		//0x22dc		PITCHLAGS500
0x03700716,	//0x22dc		VoC_add16_rd(REG6,REG2,0x370)
0x22AC2B00,	//0x22de		VoC_jump_lg(PITCHLAGS300)
		//0x22e0		PITCHLAGS200
0xF0A5D612,	//0x22e0		VoC_lw16i_short(REG5,0x5,DEFAULT)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x03700792,	//0x22e2		VoC_sub16_rd(REG2,REG2,0x370)
0x007E0A84,	//0x22e4		VoC_lw16i(REG4,0x7e)
0x03540A83,	//0x22e6		VoC_lw16i(REG3,0x354)
0xDFC48156,	//0x22e8		VoC_push16(REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG5,REG2,DEFAULT)
0x22ED34B3,	//0x22ea		VoC_bngt16_rr(PITCHLAGS700,REG6,REG3)
0xB8AFE066,	//0x22ec		VoC_sub16_pr(REG7,REG2,REG5,DEFAULT)	|	VoC_movreg16(REG6,REG3,DEFAULT)
		//0x22ed		PITCHLAGS700
0x22F134A7,	//0x22ee		VoC_bngt16_rr(PITCHLAGS800,REG4,REG7)
0xC3B9E087,	//0x22f0		VoC_sub16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_movreg16(REG7,REG4,DEFAULT)
		//0x22f1		PITCHLAGS800
0xD64060E2,	//0x22f2		VoC_lw16_sd(REG0,0x3,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0xE641DE08,	//0x22f4		VoC_loop_r_short(REG1,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
		//0x22f6		VoC_endloop0
0xDE105C82,	//0x22f6		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0x5640F0D2,	//0x22f8		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x7245D921,	//0x22fa		VoC_lw16i_short(REG5,0x12,DEFAULT)	|	VoC_lw32_sd(REG23,0x3,IN_PARALLEL)
0xDFC1D91B,	//0x22fc		VoC_push16(REG1,DEFAULT)	|	VoC_lw32_sd(REG67,0x2,IN_PARALLEL)
0x21C92B80,	//0x22fe		VoC_jal(CII_CGInterp_new)
0xD9185F87,	//0x2300		VoC_lw32_sd(REG01,0x2,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x0A85F004,	//0x2302		VoC_lw16i(REG5,0x3f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x2B80003F,	//0x2304		VoC_jal(CII_fnBest_CG_new)(lo)	|	VoC_lw16i(REG5,0x3f)(hi)
0xF004214E,	//0x2306		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jal(CII_fnBest_CG_new)(hi)
0x003F0A85,	//0x2308		VoC_lw16i(REG5,0x3f)
0x23153203,	//0x230a		VoC_bltz16_r(PITCHLAGSYOU,REG3)
0xD91A5646,	//0x230c		VoC_lw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0xC15D411C,	//0x230e		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xD844C19E,	//0x2310		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0xD855D866,	//0x2312		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xD610DA16,	//0x2314		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
		//0x2315		PITCHLAGSYOU
0x0A03F8F8,	//0x2316		VoC_multf32_rd(REG67,REG0,0x34c)(lo)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xDF42034C,	//0x2318		VoC_push32(REG45,DEFAULT)	|	VoC_multf32_rd(REG67,REG0,0x34c)(hi)
0x0382091B,	//0x231a		VoC_add32_rd(REG67,REG67,0x382)
		//0x231c		PITCHLAGSSTART
0x008E0A86,	//0x231c		VoC_lw16i(REG6,0x8e)
0x232234BE,	//0x231e		VoC_bngt16_rr(PITCHLAGSYIYI_go,REG7,REG6)
0x234A2B00,	//0x2320		VoC_jump_lg(PITCHLAGSYIYI)
		//0x2322		PITCHLAGSYIYI_go
0xDFC05928,	//0x2322		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x4,DEFAULT)
0x21A12B80,	//0x2324		VoC_jal(CII_findPeak_new)
0x23403186,	//0x2326		VoC_bez16_r(PITCHLAGSDA400,REG6)
0xD92960C7,	//0x2328		VoC_lw32_sd(REG23,0x4,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xD9225650,	//0x232a		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x2B80F0D2,	//0x232c		VoC_jal(CII_CGInterpValid_new)(lo)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0xD92021F0,	//0x232e		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_jal(CII_CGInterpValid_new)(hi)
0xD6647032,	//0x2330		VoC_lw16_sd(REG4,0x5,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x40000A85,	//0x2332		VoC_lw16i(REG5,0x4000)
0x214E2B80,	//0x2334		VoC_jal(CII_fnBest_CG_new)
0x23403203,	//0x2336		VoC_bltz16_r(PITCHLAGSDA400,REG3)
0xD9225656,	//0x2338		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x4,DEFAULT)
0xD9105632,	//0x233a		VoC_lw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0x226F2B80,	//0x233c		VoC_jal(CII_siCPeakIndex_save_new)
0xDD105A32,	//0x233e		VoC_sw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x2,DEFAULT)
		//0x2340		PITCHLAGSDA400
0xD611DF80,	//0x2340		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x0A03C008,	//0x2342		VoC_multf32_rd(REG67,REG0,0x34c)(lo)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0xFFC0034C,	//0x2344		VoC_NOP	|	VoC_multf32_rd(REG67,REG0,0x34c)(hi)
0x0382091B,	//0x2346		VoC_add32_rd(REG67,REG67,0x382)
0x231C2B00,	//0x2348		VoC_jump_lg(PITCHLAGSSTART)
		//0x234a		PITCHLAGSYIYI
0xE002DF00,	//0x234a		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x0F382B80,	//0x234c		VoC_jal(CII_norm_s_opt)
0x0A80E003,	//0x234e		VoC_lw16i(REG0,0x3333)(lo)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xCC843333,	//0x2350		VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)	|	VoC_lw16i(REG0,0x3333)(hi)
0x2B80E022,	//0x2352		VoC_jal(CII_norm_s_opt)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xFA0C0F38,	//0x2354		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_jal(CII_norm_s_opt)(hi)
0x03820922,	//0x2356		VoC_add32_rd(REG45,ACC0,0x382)
0x60A0C21B,	//0x2358		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_sub16_rr(REG3,REG0,REG3,DEFAULT)
0x2B80F641,	//0x235a		VoC_jal(CII_DIV_S)(lo)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0xF00602CC,	//0x235c		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jal(CII_DIV_S)(hi)
0x23613243,	//0x235e		VoC_bnltz16_r(PITCHLAGSSUN,REG3)
0xF030FE1A,	//0x2360		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_shr16_rr(REG2,REG3,DEFAULT)
		//0x2361		PITCHLAGSSUN
0x236B3143,	//0x2362		VoC_bngtz16_r(PITCHLAGSDAO,REG3)
0xF6417025,	//0x2364		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x7E21C2EC,	//0x2366		VoC_shr16_rr(REG1,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG3,REG5,DEFAULT)
0xE429FE1A,	//0x2368		VoC_and16_rr(REG1,REG5,DEFAULT)	|	VoC_shr16_rr(REG2,REG3,IN_PARALLEL)
0xD621C08A,	//0x236a		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG1,DEFAULT)
		//0x236b		PITCHLAGSDAO
0xC247D630,	//0x236c		VoC_sub16_rr(REG7,REG1,REG0,DEFAULT)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xDF43DFC2,	//0x236e		VoC_push32(REG67,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x239D2E39,	//0x2370		VoC_loop_r(1,REG7)
0xF004D918,	//0x2372		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0x003F0A85,	//0x2374		VoC_lw16i(REG5,0x3f)
0x214E2B80,	//0x2376		VoC_jal(CII_fnBest_CG_new)
0xC018D640,	//0x2378		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0x5805F004,	//0x237a		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xD918D90B,	//0x237c		VoC_lw32_sd(REG01,0x2,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,IN_PARALLEL)
0xC0594018,	//0x237e		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xDF40D670,	//0x2380		VoC_push32(REG01,DEFAULT)	|	VoC_lw16_sd(REG0,0x6,DEFAULT)
0x3146F003,	//0x2382		VoC_bngtz16_r(PITCHLAGSKIPLOOP,REG6)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xFFC0238C,	//0x2384		VoC_NAD	|	VoC_bngtz16_r(PITCHLAGSKIPLOOP,REG6)(hi)
0xD8816785,	//0x2386		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x238B358D,	//0x2388		VoC_bne16_rr(PITCHLAG_FLAG_TO_1,REG1,REG5)
0xD881F023,	//0x238a		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x238b		PITCHLAG_FLAG_TO_1
		//0x238b		VoC_endloop0
		//0x238c		PITCHLAGSKIPLOOP
0x31C3DF00,	//0x238c		VoC_bnez16_r(PITCHLAGNIU,REG3)(lo)	|	VoC_pop32(REG01,DEFAULT)
0xD674239B,	//0x238e		VoC_lw16_sd(REG4,0x6,DEFAULT)	|	VoC_bnez16_r(PITCHLAGNIU,REG3)(hi)
0xD931C134,	//0x2390		VoC_lw32_sd(REG23,0x5,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC0F340B2,	//0x2392		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xD804DC45,	//0x2394		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_sw16_p(REG5,REG4,DEFAULT)
0xDC24D815,	//0x2396		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x0736DC35,	//0x2398		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
0xF0040370,	//0x239a		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
		//0x239b		PITCHLAGNIU
0xDC04DD0B,	//0x239c		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_sw32_sd(REG67,0x0,DEFAULT)
		//0x239d		VoC_endloop1
0xDF025F87,	//0x239e		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xFFC05F86,	//0x23a0		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
		//0x23a2		PITCHLAGEXIT
0x6765142A,	//0x23a2		VoC_lw16_d(SP16,0x6765)
0x6764142B,	//0x23a4		VoC_lw16_d(SP32,0x6764)
0xE085DFA9,	//0x23a6		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x23a8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x23a9		CII_openLoopLagSearch_new
0x65B6152B,	//0x23aa		VoC_sw16_d(SP32,0x65b6)
0x65B7152A,	//0x23ac		VoC_sw16_d(SP16,0x65b7)
0xDF415FC6,	//0x23ae		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xDF425FC7,	//0x23b0		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x2B80E024,	//0x23b2		VoC_jal(CII_r0BasedEnergyShft_new)(lo)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0xE0042169,	//0x23b4		VoC_movreg16(REG4,REG0,DEFAULT)	|	VoC_jal(CII_r0BasedEnergyShft_new)(hi)
0xFFC05FC5,	//0x23b6		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0x21692B80,	//0x23b8		VoC_jal(CII_r0BasedEnergyShft_new)
0x211F1808,	//0x23ba		VoC_lw16i_set_inc(REG0,0x211f,0x2)
0x205C1806,	//0x23bc		VoC_lw16i_set_inc(REG2,0x205c,0x1)
0x2054180B,	//0x23be		VoC_lw16i_set_inc(REG3,0x2054,0x2)
0x23CD2C09,	//0x23c0		VoC_loop_i(0x1,0x4)
0x21802B80,	//0x23c2		VoC_jal(CII_g_corr1s_new)
0x051C0780,	//0x23c4		VoC_sub16_rd(REG0,REG0,0x51c)
0x03820922,	//0x23c6		VoC_add32_rd(REG45,ACC0,0x382)
0xDCA5D824,	//0x23c8		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xDCA7D825,	//0x23ca		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw16_p(REG5,REG2,DEFAULT)
0xD615DDDA,	//0x23cc		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x23cd		VoC_endloop1
0x20541808,	//0x23ce		VoC_lw16i_set_inc(REG0,0x2054,0x2)
0xD9C2FF43,	//0x23d0		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32z(REG67,DEFAULT)
0xFF44690D,	//0x23d2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x23DF3144,	//0x23d4		VoC_bngtz16_r(OPENLOOP_LOOP,REG4)
0x23DE3186,	//0x23d6		VoC_bez16_r(OPENLOOP_MOVE,REG6)
0x23DE343D,	//0x23d8		VoC_bgt16_rr(OPENLOOP_MOVE,REG7,REG5)
0x23DF35BD,	//0x23da		VoC_bne16_rr(OPENLOOP_LOOP,REG7,REG5)
0x23DF34A6,	//0x23dc		VoC_bngt16_rr(OPENLOOP_LOOP,REG4,REG6)
		//0x23de		OPENLOOP_MOVE
0xD9C2FF13,	//0x23de		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
		//0x23df		OPENLOOP_LOOP
		//0x23df		VoC_endloop0
0x0B3FF80F,	//0x23e0		VoC_sub16_dr(REG7,0x370,REG7)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0x18090370,	//0x23e2		VoC_lw16i_set_inc(REG1,0x2620,0x2)(lo)	|	VoC_sub16_dr(REG7,0x370,REG7)(hi)
0x18082620,	//0x23e4		VoC_lw16i_set_inc(REG0,0x208e,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x2620,0x2)(hi)
0xDA11208E,	//0x23e6		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x208e,0x2)(hi)
0xFF4559C2,	//0x23e8		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x23EF2D32,	//0x23ea		VoC_loop_i(0x0,0x99)
0xFE3D7E3C,	//0x23ec		VoC_shr16_rr(REG5,REG7,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG7,DEFAULT)
0xDDCAD9C2,	//0x23ee		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x23ef		VoC_endloop0
0xEA81D610,	//0x23f0		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
		//0x23f2		VoC_endloop0
0x1FBED500,	//0x23f2		VoC_lw16i_set_inc(REG2,0x261f,0xffffffff)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0x1809261F,	//0x23f4		VoC_lw16i_set_inc(REG1,0x2648,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x261f,0xffffffff)(hi)
0xD6102648,	//0x23f6		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x2648,0x2)(hi)
0x24012CF8,	//0x23f8		VoC_loop_i(0x0,0x7c)
0xD5005480,	//0x23fa		VoC_msu32inc_pp(REG0,REG0,IN_PARALLEL)	|	VoC_msu32inc_pp(REG0,REG0,DEFAULT)
0xD4095409,	//0x23fc		VoC_mac32inc_pp(REG1,REG1,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG1,DEFAULT)
0x7F45DCA9,	//0x23fe		VoC_lw32z(ACC1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0xDCA9C92C,	//0x2400		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
		//0x2401		VoC_endloop0
0x258E1EA0,	//0x2402		VoC_lw16i_set_inc(REG0,0x258e,0xffffffd8)
0x65AA1805,	//0x2404		VoC_lw16i_set_inc(REG1,0x65aa,0x1)
0x2729180A,	//0x2406		VoC_lw16i_set_inc(REG2,0x2729,0x2)
0xDFC1DA11,	//0x2408		VoC_push16(REG1,DEFAULT)	|	VoC_sw16_sd(REG1,0x0,DEFAULT)
0xD8866863,	//0x240a		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC96D886,	//0x240c		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x240d		VoC_endloop0
0xFF446212,	//0x240e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG2,DEFAULT)
0xD512EA81,	//0x2410		VoC_bimac32inc_pp(REG2,REG2)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x2411		VoC_endloop0
0x2620180A,	//0x2412		VoC_lw16i_set_inc(REG2,0x2620,0x2)
0x6618180B,	//0x2414		VoC_lw16i_set_inc(REG3,0x6618,0x2)
0x2D32D9D5,	//0x2416		VoC_loop_i(0x0,0x99)(lo)	|	VoC_lw32inc_p(ACC1,REG2,DEFAULT)
0xD9D5241A,	//0x2418		VoC_lw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x99)(hi)
		//0x241a		VoC_endloop0
0x1806DDDD,	//0x241a		VoC_lw16i_set_inc(REG2,0x63aa,0x1)(lo)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0xF02663AA,	//0x241c		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x63aa,0x1)(hi)
0x00280A83,	//0x241e		VoC_lw16i(REG3,0x28)
0x1808DC19,	//0x2420		VoC_lw16i_set_inc(REG0,0x26b1,0x2)(lo)	|	VoC_sw16_p(ACC0_HI,REG1,DEFAULT)
0x180926B1,	//0x2422		VoC_lw16i_set_inc(REG1,0x6697,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x26b1,0x2)(hi)
0xF0076697,	//0x2424		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6697,0x2)(hi)
		//0x2426		OPENLOOP302
0xFFC05F40,	//0x2426		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x24322D01,	//0x2428		VoC_loop_i(0x1,0x80)
0xF6044275,	//0x242a		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG1,REG6,DEFAULT)
0x6A82E201,	//0x242c		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD501FF44,	//0x242e		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x242f		VoC_endloop0
0xFF10FFC0,	//0x2430		VoC_movreg32(REG01,REG45,DEFAULT)	|	VoC_NOP
		//0x2432		VoC_endloop1
0x5F00DCA9,	//0x2432		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0x4018C1F7,	//0x2434		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG6,IN_PARALLEL)
0x3EBFC059,	//0x2436		VoC_bngt16_rd(OPENLOOP302,REG7,0x51d)(lo)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0x1806051D,	//0x2438		VoC_lw16i_set_inc(REG2,0x65ae,0x1)(lo)	|	VoC_bngt16_rd(OPENLOOP302,REG7,0x51d)(hi)
0x180765AE,	//0x243a		VoC_lw16i_set_inc(REG3,0x65b2,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x65ae,0x1)(hi)
0x180465B2,	//0x243c		VoC_lw16i_set_inc(REG0,0x63ad,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x65b2,0x1)(hi)
0x180563AD,	//0x243e		VoC_lw16i_set_inc(REG1,0x25a3,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x63ad,0x1)(hi)
0x5FC325A3,	//0x2440		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x25a3,0x1)(hi)
0x7007DF41,	//0x2442		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0xDF40D653,	//0x2444		VoC_push32(REG01,DEFAULT)	|	VoC_lw16_sd(REG3,0x4,IN_PARALLEL)
0xDFC75F41,	//0x2446		VoC_push16(REG7,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x24BF2C09,	//0x2448		VoC_loop_i(0x1,0x4)
0x0A85F004,	//0x244a		VoC_lw16i(REG5,0x3f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x0A87003F,	//0x244c		VoC_lw16i(REG7,0x7a)(lo)	|	VoC_lw16i(REG5,0x3f)(hi)
0x2B80007A,	//0x244e		VoC_jal(CII_fnBest_CG_new)(lo)	|	VoC_lw16i(REG7,0x7a)(hi)
0xDF00214E,	//0x2450		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_fnBest_CG_new)(hi)
0xE1577006,	//0x2452		VoC_lw16i_short(REG7,0x15,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x24583203,	//0x2454		VoC_bltz16_r(OPENLOOP303,REG3)
0xC0FFC0FE,	//0x2456		VoC_add16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG7,DEFAULT)
		//0x2458		OPENLOOP303
0xDC97DC86,	//0x2458		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xE0035F40,	//0x245a		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x24B33186,	//0x245c		VoC_bez16_r(OPENLOOP305_bis,REG6)
0x7FFF0A82,	//0x245e		VoC_lw16i(REG2,0x7fff)
0x246634AC,	//0x2460		VoC_bngt16_rr(OPENLOOP304,REG5,REG4)
0xD6137F10,	//0x2462		VoC_lw16_sd(REG3,0x0,IN_PARALLEL)	|	VoC_movreg32(REG01,REG45,DEFAULT)
0x02CC2B80,	//0x2464		VoC_jal(CII_DIV_S)
		//0x2466		OPENLOOP304
0xD633C0D3,	//0x2466		VoC_lw16_sd(REG3,0x2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xE0065A13,	//0x2468		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG3,0x0,DEFAULT)
0x99586087,	//0x246a		VoC_multf32_rp(REG01,REG5,REG3,IN_PARALLEL)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0x00210A89,	//0x246c		VoC_lw16i(ACC0_HI,0x21)
0x32C3CA1B,	//0x246e		VoC_bngtz32_r(GETCCTHRESHOLD101,REG67)(lo)	|	VoC_sub32_rr(REG67,REG01,REG67,DEFAULT)
0xE0E02477,	//0x2470		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_bngtz32_r(GETCCTHRESHOLD101,REG67)(hi)
0x02CC2B80,	//0x2472		VoC_jal(CII_DIV_S)
0x093C3C1A,	//0x2474		VoC_bngt16_rd(GETCCTHRESHOLD101,REG2,0x93c)
0xF008E049,	//0x2476		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
		//0x2477		GETCCTHRESHOLD101
0x02BA2B80,	//0x2478		VoC_jal(CII_NORM_L_ACC0)
0xCC93E122,	//0x247a		VoC_multf32_rr(REG67,REG2,REG2,DEFAULT)	|	VoC_movreg16(REG2,ACC0_HI,DEFAULT)
0x03840B09,	//0x247c		VoC_sub16_dr(REG1,0x384,REG1)
0x0382091B,	//0x247e		VoC_add32_rd(REG67,REG67,0x382)
0xE00E78B1,	//0x2480		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff6,DEFAULT)
0x2B300ACF,	//0x2482		VoC_lw16i(RL7_HI,0xffffab30)
0x54D60AC0,	//0x2484		VoC_lw16i(REG0,0xffffd4d6)
0x0A80CDC4,	//0x2486		VoC_lw16i(REG0,0x7fc5)(lo)	|	VoC_multf32_rr(ACC0,REG7,REG0,DEFAULT)
0xCE107FC5,	//0x2488		VoC_mac32_rr(REG2,REG0,DEFAULT)	|	VoC_lw16i(REG0,0x7fc5)(hi)
0xC93CF000,	//0x248a		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xEFFE7A1C,	//0x248c		VoC_lw16i_short(RL7_LO,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x3,DEFAULT)
0x03FF0A8F,	//0x248e		VoC_lw16i(RL7_HI,0x3ff)
0xC904E4FC,	//0x2490		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_and32_rr(ACC0,RL7,DEFAULT)
0x03820920,	//0x2492		VoC_add32_rd(REG01,ACC0,0x382)
0x60000A80,	//0x2494		VoC_lw16i(REG0,0x6000)
0xFFC0CC40,	//0x2496		VoC_NOP	|	VoC_multf32_rr(REG01,REG1,REG0,DEFAULT)
0x09680A08,	//0x2498		VoC_multf32_rd(REG01,REG1,0x968)
0x42CBF7E3,	//0x249a		VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0xffffffff,DEFAULT)
0xFA08EFF1,	//0x249c		VoC_shr32_ri(REG01,0x1,DEFAULT)	|	VoC_lw16i_short(REG1,0xffffffff,IN_PARALLEL)
0x1806CC02,	//0x249e		VoC_lw16i_set_inc(REG2,0x556,0x1)(lo)	|	VoC_multf32_rr(REG45,REG0,REG0,DEFAULT)
0x09120556,	//0x24a0		VoC_add32_rd(REG45,REG45,0x382)(lo)	|	VoC_lw16i_set_inc(REG2,0x556,0x1)(hi)
0x9B540382,	//0x24a2		VoC_multf32inc_rp(ACC0,REG5,REG2,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x382)(hi)
0x58A5D102,	//0x24a4		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG0,REG2,DEFAULT)
0xC910E004,	//0x24a6		VoC_add32_rr(REG01,ACC0,REG45,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x3143D632,	//0x24a8		VoC_bngtz16_r(FNEXP100,REG3)(lo)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xFE9824AC,	//0x24aa		VoC_shr32_rr(REG01,REG3,DEFAULT)	|	VoC_bngtz16_r(FNEXP100,REG3)(hi)
		//0x24ac		FNEXP100
0xCD48D8A5,	//0x24ac		VoC_multf32_rr(REG01,REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xCA80DA32,	//0x24ae		VoC_sub32_rr(REG01,REG45,REG01,DEFAULT)	|	VoC_sw16_sd(REG2,0x2,DEFAULT)
0xE023FA08,	//0x24b0		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
0xD631E5C5,	//0x24b2		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_jump(OPENLOOP305)
		//0x24b3		OPENLOOP305_bis
0xDE08FFC0,	//0x24b4		VoC_inc_p(REG1,DEFAULT)	|	VoC_NOP
0xD622DA31,	//0x24b6		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_sw16_sd(REG1,0x2,DEFAULT)
		//0x24b7		OPENLOOP305
0x0700D910,	//0x24b8		VoC_add16_rd(REG0,REG0,0x5669)(lo)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0x07895669,	//0x24ba		VoC_sub16_rd(REG1,REG1,0x800)(lo)	|	VoC_add16_rd(REG0,REG0,0x5669)(hi)
0x5CA30800,	//0x24bc		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x800)(hi)
0x5A22F005,	//0x24be		VoC_sw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
		//0x24bf		VoC_endloop1
0x5641DD10,	//0x24c0		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_sw32_sd(REG01,0x1,IN_PARALLEL)
0x0AC6FF44,	//0x24c2		VoC_lw16i(REG6,0xffffd68a)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xE881568A,	//0x24c4		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i(REG6,0xffffd68a)(hi)
		//0x24c6		VoC_endloop0
0x7006D131,	//0x24c6		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xC8E4DF87,	//0x24c8		VoC_add32_rr(ACC0,REG67,ACC0,DEFAULT)	|	VoC_pop16(REG7,IN_PARALLEL)
0xDA56DA26,	//0x24ca		VoC_sw16_sd(REG6,0x4,DEFAULT)	|	VoC_sw16_sd(REG6,0x1,DEFAULT)
0xDFC6DFC6,	//0x24cc		VoC_push16(REG6,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x27520A86,	//0x24ce		VoC_lw16i(REG6,0x2752)
0x27601804,	//0x24d0		VoC_lw16i_set_inc(REG0,0x2760,0x1)
0x276E1805,	//0x24d2		VoC_lw16i_set_inc(REG1,0x276e,0x1)
0x63AA181A,	//0x24d4		VoC_lw16i_set_inc(REG2,0x63aa,0x6)
0x25A01807,	//0x24d6		VoC_lw16i_set_inc(REG3,0x25a0,0x1)
0x00000AC7,	//0x24d8		VoC_lw16i(REG7,0x8000)
0xDD085A36,	//0x24da		VoC_sw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x2,DEFAULT)
0xD6645D11,	//0x24dc		VoC_lw16_sd(REG4,0x5,IN_PARALLEL)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
0x32C4DA67,	//0x24de		VoC_bngtz32_r(OPENLOOPUNVOICED,ACC0)(lo)	|	VoC_sw16_sd(REG7,0x5,DEFAULT)
0x31842612,	//0x24e0		VoC_bez16_r(OPENLOOPUNVOICED,REG4)(lo)	|	VoC_bngtz32_r(OPENLOOPUNVOICED,ACC0)(hi)
0xD91A2612,	//0x24e2		VoC_lw32_sd(REG45,0x2,DEFAULT)	|	VoC_bez16_r(OPENLOOPUNVOICED,REG4)(hi)
		//0x24e3		OPENLOOPPITCHLAGLOOPSTART
0xD844F0D2,	//0x24e4		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x3184D855,	//0x24e6		VoC_bez16_r(OPENLOOP403,REG4)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x2B8024ED,	//0x24e8		VoC_jal(CII_pitchLags_new)(lo)	|	VoC_bez16_r(OPENLOOP403,REG4)(hi)
0xF0042279,	//0x24ea		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jal(CII_pitchLags_new)(hi)
0xF005E5C2,	//0x24ec		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jump(OPENLOOP403BIS)
		//0x24ed		OPENLOOP403
		//0x24ee		OPENLOOP403BIS
0x5920DA14,	//0x24ee		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_sw16_sd(REG4,0x0,DEFAULT)
0x4020D644,	//0x24f0		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,IN_PARALLEL)
0x31C5C061,	//0x24f2		VoC_bnez16_r(OPENLOOP404,REG5)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xF00724F8,	//0x24f4		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bnez16_r(OPENLOOP404,REG5)(hi)
0x007E0A86,	//0x24f6		VoC_lw16i(REG6,0x7e)
		//0x24f8		OPENLOOP404
0xDC06DC17,	//0x24f8		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0x25B53185,	//0x24fa		VoC_bez16_r(OPENLOOPCONTINUE,REG5)
0x051C3C25,	//0x24fc		VoC_bngt16_rd(OPENLOOPWHILESTART,REG5,0x51c)
0xFFC07045,	//0x24fe		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
		//0x2500		OPENLOOPWHILESTART
0x25B53185,	//0x2500		VoC_bez16_r(OPENLOOPWHILEEND,REG5)
0xD637F021,	//0x2502		VoC_lw16_sd(REG7,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x65B81812,	//0x2504		VoC_lw16i_set_inc(REG2,0x65b8,0x4)
0xD61640A2,	//0x2506		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xD62341BF,	//0x2508		VoC_lw16_sd(REG3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG6,REG7,DEFAULT)
0x251C3143,	//0x250a		VoC_bngtz16_r(OPENLOOPNOTSI1,REG3)
0xD871E6C6,	//0x250c		VoC_lw16_p(REG1,REG7,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xE0110650,	//0x250e		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_sub16inc_rp(REG0,REG1,REG2,DEFAULT)
0x25153180,	//0x2510		VoC_bez16_r(OPENLOOPSI1,REG0)
		//0x2512		VoC_endloop0
0xF032FFC0,	//0x2512		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_NAD
0xC34DE5C8,	//0x2514		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_jump(OPENLOOPNOTSI1)
		//0x2515		OPENLOOPSI1
0x3185C18E,	//0x2516		VoC_bez16_r(OPENLOOPWHILEEND,REG5)(lo)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xDA1625B5,	//0x2518		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_bez16_r(OPENLOOPWHILEEND,REG5)(hi)
0xFFC065E6,	//0x251a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(OPENLOOPWHILESTART)
		//0x251c		OPENLOOPNOTSI1
0xC2A15877,	//0x251c		VoC_sub16_rr(REG1,REG2,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xDFC1D908,	//0x251e		VoC_push16(REG1,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xC03078F3,	//0x2520		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffe,DEFAULT)
0xDC274071,	//0x2522		VoC_sw16_p(REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x65D80A86,	//0x2524		VoC_lw16i(REG6,0x65d8)
0x65F80A87,	//0x2526		VoC_lw16i(REG7,0x65f8)
0xC19E5811,	//0x2528		VoC_add16_rr(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xC1DF1C05,	//0x252a		VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_multf32_pp(ACC1,REG0,REG0,DEFAULT)
0xC1E741A6,	//0x252c		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xDFC5DF43,	//0x252e		VoC_push16(REG5,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x0382092D,	//0x2530		VoC_add32_rd(ACC1,ACC1,0x382)
0xDC71D918,	//0x2532		VoC_sw16_p(REG1,REG7,DEFAULT)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0x5FC2DC6B,	//0x2534		VoC_push16(REG2,DEFAULT)	|	VoC_sw16_p(ACC1_HI,REG6,DEFAULT)
0x7002DF40,	//0x2536		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x2B80E007,	//0x2538		VoC_jal(CII_compute_s2_s3_new)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xD6122137,	//0x253a		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_jal(CII_compute_s2_s3_new)(hi)
0x4DB4D674,	//0x253c		VoC_bnlt16_rd(OPENLOOP412,REG4,0x51d)(lo)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0xD8A6051D,	//0x253e		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_bnlt16_rd(OPENLOOP412,REG4,0x51d)(hi)
		//0x253f		OPENLOOP413
0xDFC4DFC2,	//0x2540		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0E982B80,	//0x2542		VoC_jal(CII_quantLag_opt_paris)
0x2B80F007,	//0x2544		VoC_jal(CII_compute_s2_s3_new)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xD6162137,	//0x2546		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_jal(CII_compute_s2_s3_new)(hi)
0x5655D911,	//0x2548		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0x0700D908,	//0x254a		VoC_add16_rd(REG0,REG0,0x5669)(lo)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0x07895669,	//0x254c		VoC_sub16_rd(REG1,REG1,0x800)(lo)	|	VoC_add16_rd(REG0,REG0,0x5669)(hi)
0x07360800,	//0x254e		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_sub16_rd(REG1,REG1,0x800)(hi)
0x0A840370,	//0x2550		VoC_lw16i(REG4,0x277c)(lo)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
0x5A16277C,	//0x2552		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16i(REG4,0x277c)(hi)
0x2B80DD08,	//0x2554		VoC_jal(CII_bestDelta_new)(lo)	|	VoC_sw32_sd(REG01,0x0,IN_PARALLEL)
0xDF84221C,	//0x2556		VoC_pop16(REG4,DEFAULT)	|	VoC_jal(CII_bestDelta_new)(hi)
0x4A34DF82,	//0x2558		VoC_blt16_rd(OPENLOOP413,REG4,0x51d)(lo)	|	VoC_pop16(REG2,DEFAULT)
0xD920051D,	//0x255a		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_blt16_rd(OPENLOOP413,REG4,0x51d)(hi)
		//0x255b		OPENLOOP412
0x5664DF82,	//0x255c		VoC_lw16_sd(REG4,0x5,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x3144DD08,	//0x255e		VoC_bngtz16_r(OPENLOOP417,REG4)(lo)	|	VoC_sw32_sd(REG01,0x0,IN_PARALLEL)
0xF7F2257E,	//0x2560		VoC_lw16i_short(INC2,0xffffffff,DEFAULT)	|	VoC_bngtz16_r(OPENLOOP417,REG4)(hi)
		//0x2561		OPENLOOP418
0xD8A6F027,	//0x2562		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xDFC4DFC2,	//0x2564		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0E982B80,	//0x2566		VoC_jal(CII_quantLag_opt_paris)
0x21372B80,	//0x2568		VoC_jal(CII_compute_s2_s3_new)
0xD9115616,	//0x256a		VoC_lw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xD9085645,	//0x256c		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x56690780,	//0x256e		VoC_sub16_rd(REG0,REG0,0x5669)
0x08000709,	//0x2570		VoC_add16_rd(REG1,REG1,0x800)
0x037007B6,	//0x2572		VoC_sub16_rd(REG6,REG6,0x370)
0x277C0A84,	//0x2574		VoC_lw16i(REG4,0x277c)
0xDD085A16,	//0x2576		VoC_sw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0x221C2B80,	//0x2578		VoC_jal(CII_bestDelta_new)
0xDF82DF84,	//0x257a		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x25613104,	//0x257c		VoC_bgtz16_r(OPENLOOP418,REG4)
		//0x257e		OPENLOOP417
0xD9117007,	//0x257e		VoC_lw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x25A02C09,	//0x2580		VoC_loop_i(0x1,0x4)
0xD8B5D8A4,	//0x2582		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xF6835F41,	//0x2584		VoC_movreg16(REG3,REG4,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x258A3105,	//0x2586		VoC_bgtz16_r(OPENLOOP2001,REG5)
0xE5D5F002,	//0x2588		VoC_jump(OPENLOOP2002ADD)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x258a		OPENLOOP2001
0x258E3104,	//0x258a		VoC_bgtz16_r(OPENLOOP2003,REG4)
0x05180B24,	//0x258c		VoC_sub16_dr(REG4,0x518,REG4)
		//0x258e		OPENLOOP2003
0x259734A5,	//0x258e		VoC_bngt16_rr(OPENLOOP2005,REG4,REG5)
0x7FFF0A82,	//0x2590		VoC_lw16i(REG2,0x7fff)
0x25963104,	//0x2592		VoC_bgtz16_r(OPENLOOP2004,REG4)
0x00000AC2,	//0x2594		VoC_lw16i(REG2,0x8000)
		//0x2596		OPENLOOP2004
0xFF10E5C8,	//0x2596		VoC_movreg32(REG01,REG45,DEFAULT)	|	VoC_jump(OPENLOOP2002ADD)
		//0x2597		OPENLOOP2005
0x02CC2B80,	//0x2598		VoC_jal(CII_DIV_S)
0x259E3103,	//0x259a		VoC_bgtz16_r(OPENLOOP2002ADD,REG3)
0x05180B12,	//0x259c		VoC_sub16_dr(REG2,0x518,REG2)
		//0x259e		OPENLOOP2002ADD
0xDF01C1D7,	//0x259e		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,DEFAULT)
		//0x25a0		VoC_endloop1
0x5686FFC0,	//0x25a0		VoC_lw16_sd(REG6,0x7,DEFAULT)	|	VoC_NOP
0xD633E011,	//0x25a2		VoC_lw16_sd(REG3,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0xC0CB5645,	//0x25a4		VoC_add16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x25AA34BE,	//0x25a6		VoC_bngt16_rr(OPENLOOP421,REG7,REG6)
0xDA95DA87,	//0x25a8		VoC_sw16_sd(REG5,0x8,DEFAULT)	|	VoC_sw16_sd(REG7,0x7,DEFAULT)
		//0x25aa		OPENLOOP421
0xDA33C14D,	//0x25aa		VoC_sw16_sd(REG3,0x2,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0xDF85DA45,	//0x25ac		VoC_pop16(REG5,DEFAULT)	|	VoC_sw16_sd(REG5,0x3,DEFAULT)
0xDF07434D,	//0x25ae		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
0xDF075F84,	//0x25b0		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x2B00D644,	//0x25b2		VoC_jump_lg(OPENLOOPWHILESTART)(lo)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0xF0212500,	//0x25b4		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jump_lg(OPENLOOPWHILESTART)(hi)
		//0x25b5		OPENLOOPWHILEEND
		//0x25b5		OPENLOOPCONTINUE
0xD91A410F,	//0x25b6		VoC_lw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG4,REG1,DEFAULT)
0xC10C5911,	//0x25b8		VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xD908414D,	//0x25ba		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x56690712,	//0x25bc		VoC_add16_rd(REG2,REG2,0x5669)
0x0800079B,	//0x25be		VoC_sub16_rd(REG3,REG3,0x800)
0xDD1A5636,	//0x25c0		VoC_sw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0xDD115A47,	//0x25c2		VoC_sw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x3,DEFAULT)
0x051E4027,	//0x25c4		VoC_be16_rd(OPENLOOPPITCHLAGLOOPEND,REG7,0x51e)
0x24E32B00,	//0x25c6		VoC_jump_lg(OPENLOOPPITCHLAGLOOPSTART)
		//0x25c8		OPENLOOPPITCHLAGLOOPEND
0x3187D627,	//0x25c8		VoC_bez16_r(OPENLOOPUNVOICED,REG7)(lo)	|	VoC_lw16_sd(REG7,0x1,DEFAULT)
0x56772612,	//0x25ca		VoC_lw16_sd(REG7,0x6,DEFAULT)	|	VoC_bez16_r(OPENLOOPUNVOICED,REG7)(hi)
0x78F7E03C,	//0x25cc		VoC_shr16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x3,IN_PARALLEL)
0x1804E02D,	//0x25ce		VoC_lw16i_set_inc(REG0,0x65d8,0x1)(lo)	|	VoC_lw16i_short(RL6_HI,0x2,IN_PARALLEL)
0x180565D8,	//0x25d0		VoC_lw16i_set_inc(REG1,0x65f8,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x65d8,0x1)(hi)
0x403865F8,	//0x25d2		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x65f8,0x1)(hi)
0x5652C079,	//0x25d4		VoC_lw16_sd(REG2,0x4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x6895FF45,	//0x25d6		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD893F006,	//0x25d8		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0xD88B9AD2,	//0x25da		VoC_lw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_multf32inc_rp(REG45,REG3,REG2,DEFAULT)
0x03820912,	//0x25dc		VoC_add32_rd(REG45,REG45,0x382)
0x51730A2C,	//0x25de		VoC_multf32_rd(ACC0,REG5,0x5173)
0x392D0AC3,	//0x25e0		VoC_lw16i(REG3,0xffffb92d)
0x33C4C92C,	//0x25e2		VoC_bnltz32_r(OPENLOOP431,ACC0)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xCD5C25EC,	//0x25e4		VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)	|	VoC_bnltz32_r(OPENLOOP431,ACC0)(hi)
0xC92CFFC0,	//0x25e6		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_NOP
0x25EB33C4,	//0x25e8		VoC_bnltz32_r(OPENLOOP432,ACC0)
0xE1ACF02D,	//0x25ea		VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
		//0x25eb		OPENLOOP432
		//0x25ec		OPENLOOP431
		//0x25ec		VoC_endloop0
0x1804FFC0,	//0x25ec		VoC_lw16i_set_inc(REG0,0x65b8,0x1)(lo)	|	VoC_NOP
0x403865B8,	//0x25ee		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x65b8,0x1)(hi)
0xF033D929,	//0x25f0		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw32_sd(REG23,0x4,IN_PARALLEL)
0x26102C09,	//0x25f2		VoC_loop_i(0x1,0x4)
0x5F41D886,	//0x25f4		VoC_push32(REG23,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x2B80DFC0,	//0x25f6		VoC_jal(CII_quantLag_opt_paris)(lo)	|	VoC_push16(REG0,IN_PARALLEL)
0xF0230E98,	//0x25f8		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_jal(CII_quantLag_opt_paris)(hi)
0xC29D409C,	//0x25fa		VoC_sub16_rr(REG5,REG2,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG3,DEFAULT)
0x03513C24,	//0x25fc		VoC_bngt16_rd(OPENLOOP441,REG4,0x351)
0x00FF0A84,	//0x25fe		VoC_lw16i(REG4,0xff)
		//0x2600		OPENLOOP441
0x26033245,	//0x2600		VoC_bnltz16_r(OPENLOOP442,REG5)
0xC32EF005,	//0x2602		VoC_sub16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x2603		OPENLOOP442
0x1805DF80,	//0x2604		VoC_lw16i_set_inc(REG1,0x5668,0x1)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x40695668,	//0x2606		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x5668,0x1)(hi)
0xDF01C19E,	//0x2608		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG3,IN_PARALLEL)
0x26103146,	//0x260a		VoC_bngtz16_r(OPENLOOP443,REG6)
0xD8956783,	//0x260c		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xDCA5D895,	//0x260e		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x260f		VoC_endloop0
		//0x2610		OPENLOOP443
		//0x2610		VoC_endloop1
0xE5CBDCB6,	//0x2610		VoC_jump(OPENLOOPFINISH)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x2612		OPENLOOPUNVOICED
0xFF465928,	//0x2612		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x4,DEFAULT)
0xD9217032,	//0x2614		VoC_lw32_sd(REG23,0x3,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xF0076885,	//0x2616		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC9CDC8C,	//0x2618		VoC_sw16inc_p(RL6_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG0,DEFAULT)
0xDCBCDCAC,	//0x261a		VoC_sw16inc_p(RL6_LO,REG3,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x261b		VoC_endloop0
		//0x261c		OPENLOOPFINISH
0x65B7142A,	//0x261c		VoC_lw16_d(SP16,0x65b7)
0x65B6142B,	//0x261e		VoC_lw16_d(SP32,0x65b6)
0xE180DFA9,	//0x2620		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x2622		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2623		CII_getSfrmLpcTx_opt
0x6416152A,	//0x2624		VoC_sw16_d(SP16,0x6416)
0xDFC0DFC4,	//0x2626		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0xDFCADFCB,	//0x2628		VoC_push16(ACC1_LO,DEFAULT)	|	VoC_push16(ACC1_HI,DEFAULT)
0xDFC8DFC9,	//0x262a		VoC_push16(ACC0_LO,DEFAULT)	|	VoC_push16(ACC0_HI,DEFAULT)
0xDFCCDFCD,	//0x262c		VoC_push16(RL6_LO,DEFAULT)	|	VoC_push16(RL6_HI,DEFAULT)
0xDFC2DFC5,	//0x262e		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xDFC1DFC6,	//0x2630		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xDF475FC3,	//0x2632		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x6E06DFC7,	//0x2634		VoC_bnez16_d(GETSFRMLPC_IEF2,0x63ab)(lo)	|	VoC_push16(REG7,DEFAULT)
0x6E0463AB,	//0x2636		VoC_bnez16_d(GETSFRMLPC_IEF2,0x204e)(lo)	|	VoC_bnez16_d(GETSFRMLPC_IEF2,0x63ab)(hi)
0x2B00204E,	//0x2638		VoC_jump_lg(GETSFRMLPC_IEF0)(lo)	|	VoC_bnez16_d(GETSFRMLPC_IEF2,0x204e)(hi)
0xDF462734,	//0x263a		VoC_push32(RL6,DEFAULT)	|	VoC_jump_lg(GETSFRMLPC_IEF0)(hi)
		//0x263b		GETSFRMLPC_IEF2
0xF006DFC8,	//0x263c		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_push16(ACC0_LO,DEFAULT)
		//0x263e		GETSFRMLPCTX_LOOP_START
0x5FC0DFC2,	//0x263e		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xDFC6D910,	//0x2640		VoC_push16(REG6,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,IN_PARALLEL)
0xD897D886,	//0x2642		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xD6615D10,	//0x2644		VoC_lw16_sd(REG1,0x5,IN_PARALLEL)	|	VoC_sw32_sd(REG01,0x1,DEFAULT)
0xDF435620,	//0x2646		VoC_push32(REG67,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xFFC0DF41,	//0x2648		VoC_NAD	|	VoC_push32(REG23,DEFAULT)
0xDF426948,	//0x264a		VoC_push32(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0x03821484,	//0x264c		VoC_lw32_d(ACC0,0x382)
0xD139D130,	//0x264e		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0xF143FFC0,	//0x2650		VoC_lw16i_short(REG3,0xa,DEFAULT)	|	VoC_NOP
		//0x2652		VoC_endloop0
0x1FBDDCA9,	//0x2652		VoC_lw16i_set_inc(REG1,0x2531,0xffffffff)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0xC29A2531,	//0x2654		VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x2531,0xffffffff)(hi)
0x2B80E040,	//0x2656		VoC_jal(CII_aToRc_opt2)(lo)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0xDF021A4F,	//0x2658		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CII_aToRc_opt2)(hi)
0x266331C7,	//0x265a		VoC_bnez16_r(interpolateCheck0,REG7)
0x25281804,	//0x265c		VoC_lw16i_set_inc(REG0,0x2528,0x1)
0x1A202B80,	//0x265e		VoC_jal(CII_res_eng_opt)
0xDF02F027,	//0x2660		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE080E5CB,	//0x2662		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_jump(interpolateCheck1)
		//0x2663		interpolateCheck0
0x2B80F030,	//0x2664		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDF001A20,	//0x2666		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0xE943F031,	//0x2668		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xF007D894,	//0x266a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x266c		VoC_endloop0
0xF033DC84,	//0x266c		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x266d		interpolateCheck1
0xD664DF86,	//0x266e		VoC_lw16_sd(REG4,0x5,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xC134C134,	//0x2670		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF0055910,	//0x2672		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0x5F02DDA1,	//0x2674		VoC_pop32(REG45,DEFAULT)	|	VoC_sw32_p(REG23,REG4,DEFAULT)
0x2C05D633,	//0x2676		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16_sd(REG3,0x2,IN_PARALLEL)
0xE062268B,	//0x2678		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x267D3186,	//0x267a		VoC_bez16_r(getSfrmLpcTx0_JUMP,REG6)
0x9B04E002,	//0x267c		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_movreg16(REG2,REG0,DEFAULT)
		//0x267d		getSfrmLpcTx0_JUMP
0xD12BE948,	//0x267e		VoC_mac32inc_rp(REG5,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x3187D8AB,	//0x2680		VoC_bez16_r(getSfrmLpcTx0,REG7)(lo)	|	VoC_lw16inc_p(ACC1_HI,REG2,DEFAULT)
0x09252685,	//0x2682		VoC_add32_rd(ACC1,ACC0,0x382)(lo)	|	VoC_bez16_r(getSfrmLpcTx0,REG7)(hi)
0x9B040382,	//0x2684		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_add32_rd(ACC1,ACC0,0x382)(hi)
		//0x2685		getSfrmLpcTx0
		//0x2686		VoC_endloop0
0x6E06DC9B,	//0x2686		VoC_bnez16_d(GETSFRMLPC_IEF3,0x63ab)(lo)	|	VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)
0xD6D363AB,	//0x2688		VoC_lw16_sd(REG3,0xc,DEFAULT)	|	VoC_bnez16_d(GETSFRMLPC_IEF3,0x63ab)(hi)
0xD6F1D6E0,	//0x268a		VoC_lw16_sd(REG1,0xe,DEFAULT)	|	VoC_lw16_sd(REG0,0xd,DEFAULT)
		//0x268b		VoC_endloop1
0xD908DAF1,	//0x268c		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw16_sd(REG1,0xe,DEFAULT)
		//0x268d		GETSFRMLPC_IEF3
0xC079F147,	//0x268e		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0xa,DEFAULT)
0x03700736,	//0x2690		VoC_add16_rd(REG6,REG6,0x370)
0xD6745D08,	//0x2692		VoC_lw16_sd(REG4,0x6,IN_PARALLEL)	|	VoC_sw32_sd(REG01,0x0,DEFAULT)
0x6003DF80,	//0x2694		VoC_movreg16(REG3,REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x5625DF82,	//0x2696		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x4026C0BA,	//0x2698		VoC_be16_rd(GETSFRMLPCTX_LOOP_END,REG6,0x51d)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)
0x2B00051D,	//0x269a		VoC_jump_lg(GETSFRMLPCTX_LOOP_START)(lo)	|	VoC_be16_rd(GETSFRMLPCTX_LOOP_END,REG6,0x51d)(hi)
0xDF06263E,	//0x269c		VoC_pop32(RL6,DEFAULT)	|	VoC_jump_lg(GETSFRMLPCTX_LOOP_START)(hi)
		//0x269d		GETSFRMLPCTX_LOOP_END
0xDFC0DF87,	//0x269e		VoC_push16(REG0,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0xE944E180,	//0x26a0		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0xD8BAD888,	//0x26a2		VoC_lw16inc_p(ACC1_LO,REG3,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDCAADC98,	//0x26a4		VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x26a5		VoC_endloop0
0x63AB6E08,	//0x26a6		VoC_bnez16_d(GETSFRMLPC_IEF3_bis,0x63ab)
0xD6D1D6C0,	//0x26a8		VoC_lw16_sd(REG1,0xc,DEFAULT)	|	VoC_lw16_sd(REG0,0xb,DEFAULT)
0xD8886943,	//0x26aa		VoC_lw16inc_p(ACC0_LO,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC98D888,	//0x26ac		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG0,DEFAULT)
		//0x26ad		VoC_endloop0
		//0x26ae		GETSFRMLPC_IEF3_bis
0xD615DF80,	//0x26ae		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x2B80D640,	//0x26b0		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0xD6301A20,	//0x26b2		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0x05200700,	//0x26b4		VoC_add16_rd(REG0,REG0,0x520)
0xDD81FFC0,	//0x26b6		VoC_sw32_p(REG23,REG0,DEFAULT)	|	VoC_NOP
0x63AB6E04,	//0x26b8		VoC_bnez16_d(GETSFRMLPC_IEF11111,0x63ab)
0x27602B00,	//0x26ba		VoC_jump_lg(GETSFRMLPC_IEF1)
		//0x26bc		GETSFRMLPC_IEF11111
0x21C00A87,	//0x26bc		VoC_lw16i(REG7,0x21c0)
0xD622D651,	//0x26be		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_sd(REG1,0x4,DEFAULT)
0x63780A83,	//0x26c0		VoC_lw16i(REG3,0x6378)
0xF0085630,	//0x26c2		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xDFC3DFC2,	//0x26c4		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xDFC1DFC7,	//0x26c6		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x7FFF0A86,	//0x26c8		VoC_lw16i(REG6,0x7fff)
0xD9C2E887,	//0x26ca		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x05183C2C,	//0x26cc		VoC_bngt16_rd(compResidEnergy0,REG4,0x518)
0x26D134B5,	//0x26ce		VoC_bngt16_rr(compResidEnergy0,REG6,REG5)
0xF007E0A6,	//0x26d0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x26d1		compResidEnergy0
		//0x26d1		VoC_endloop0
0xDFC7F025,	//0x26d2		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x03704C8E,	//0x26d4		VoC_bnlt16_rd(compResidEnergy3,REG6,0x370)
0x4836F027,	//0x26d6		VoC_blt16_rd(compResidEnergy3,REG6,0x384)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xF8FD0384,	//0x26d8		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_blt16_rd(compResidEnergy3,REG6,0x384)(hi)
0x0384401E,	//0x26da		VoC_be16_rd(compResidEnergy3,REG6,0x384)
0xF8A5F8FD,	//0x26dc		VoC_shr16_ri(REG5,0xfffffff4,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
		//0x26dd		compResidEnergy3
0x22981809,	//0x26de		VoC_lw16i_set_inc(REG1,0x2298,0x2)
0x25281808,	//0x26e0		VoC_lw16i_set_inc(REG0,0x2528,0x2)
0xD9CEE8A3,	//0x26e2		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDC6FF46,	//0x26e4		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
		//0x26e5		VoC_endloop0
		//0x26e6		LAP12
0xF033F006,	//0x26e6		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x26e7		LAP13
0xD610D653,	//0x26e8		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16_sd(REG3,0x4,DEFAULT)
0x26ED3186,	//0x26ea		VoC_bez16_r(LAP10_new,REG6)
0xF7F0D643,	//0x26ec		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG3,0x3,DEFAULT)
		//0x26ed		LAP10_new
0x22981806,	//0x26ee		VoC_lw16i_set_inc(REG2,0x2298,0x1)
0x26F831C0,	//0x26f0		VoC_bnez16_r(LAP11,REG0)
0x0834D623,	//0x26f2		VoC_mult16_rd(REG4,REG6,0x524)(lo)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0x18060524,	//0x26f4		VoC_lw16i_set_inc(REG2,0x2528,0x1)(lo)	|	VoC_mult16_rd(REG4,REG6,0x524)(hi)
0xC0E32528,	//0x26f6		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x2528,0x1)(hi)
		//0x26f8		LAP11
0x0834D630,	//0x26f8		VoC_mult16_rd(REG4,REG6,0x800)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x18050800,	//0x26fa		VoC_lw16i_set_inc(REG1,0x2532,0x1)(lo)	|	VoC_mult16_rd(REG4,REG6,0x800)(hi)
0xC1002532,	//0x26fc		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x2532,0x1)(hi)
0xDFC5DFC7,	//0x26fe		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xF6615F40,	//0x2700		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x64921804,	//0x2702		VoC_lw16i_set_inc(REG0,0x6492,0x1)
0xD897E944,	//0x2704		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x64920A83,	//0x2706		VoC_lw16i(REG3,0x6492)
		//0x2708		VoC_endloop0
0x5F00DC87,	//0x2708		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x2B80F3FC,	//0x270a		VoC_jal(CII_lpcFir_opt)(lo)	|	VoC_lw16i_short(INC0,0xffffffff,IN_PARALLEL)
0xDF8519E5,	//0x270c		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CII_lpcFir_opt)(hi)
0x1804DF87,	//0x270e		VoC_lw16i_set_inc(REG0,0x2532,0x1)(lo)	|	VoC_pop16(REG7,DEFAULT)
0xFF342532,	//0x2710		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2532,0x1)(hi)
0xED0AFFC0,	//0x2712		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_NAD
0x271C3187,	//0x2714		VoC_bez16_r(compResidEnergy40,REG7)
0xFFC09B41,	//0x2716		VoC_NOP	|	VoC_multf32inc_rp(REG23,REG5,REG0,DEFAULT)
0x03820909,	//0x2718		VoC_add32_rd(REG23,REG23,0x382)
0xE5C2CE1B,	//0x271a		VoC_jump(compResidEnergy790)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
		//0x271c		compResidEnergy40
0xF021D400,	//0x271c		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG0,DEFAULT)
		//0x271d		compResidEnergy790
		//0x271d		VoC_endloop0
0xFF26C18E,	//0x271e		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x051E4026,	//0x2720		VoC_be16_rd(LAP13_end,REG6,0x51e)
0x26E72B00,	//0x2722		VoC_jump_lg(LAP13)
		//0x2724		LAP13_end
0xC008DF80,	//0x2724		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x05180BB6,	//0x2726		VoC_sub32_dr(RL6,0x518,RL6)
0x3501DFC0,	//0x2728		VoC_be16_rr(LAP12,REG0,REG1)(lo)	|	VoC_push16(REG0,DEFAULT)
0x338626E6,	//0x272a		VoC_bltz32_r(LAP20,RL6)(lo)	|	VoC_be16_rr(LAP12,REG0,REG1)(hi)
0xF001272E,	//0x272c		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_bltz32_r(LAP20,RL6)(hi)
		//0x272e		LAP20
0xDF87E8A1,	//0x272e		VoC_pop16(REG7,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x272f		VoC_endloop0
0x251C1501,	//0x2730		VoC_sw16_d(REG1,0x251c)
0x276031C1,	//0x2732		VoC_bnez16_r(GETSFRMLPC_IEF1,REG1)
		//0x2734		GETSFRMLPC_IEF0
0x56E0D665,	//0x2734		VoC_lw16_sd(REG0,0xd,DEFAULT)	|	VoC_lw16_sd(REG5,0x5,DEFAULT)
0x2B80F004,	//0x2736		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xDF411A20,	//0x2738		VoC_push32(REG23,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0x5640D615,	//0x273a		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_lw16_sd(REG5,0x0,DEFAULT)
0x2B80F004,	//0x273c		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xD6301A20,	//0x273e		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0xDF04F050,	//0x2740		VoC_pop32(ACC0,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xFF0C6882,	//0x2742		VoC_movreg32(ACC0,REG23,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x2744		VoC_endloop0
0xD680DDC4,	//0x2744		VoC_lw16_sd(REG0,0x7,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xF0095691,	//0x2746		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x8,DEFAULT)
0xD6527052,	//0x2748		VoC_lw16_sd(REG2,0x4,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xF00B5623,	//0x274a		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0x27542C09,	//0x274c		VoC_loop_i(0x1,0x4)
0xD9CCE8A4,	//0x274e		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDC4D9DD,	//0x2750		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG3,DEFAULT)
		//0x2752		VoC_endloop0
0xD671DDD5,	//0x2752		VoC_lw16_sd(REG1,0x6,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x2754		VoC_endloop1
0xD6C0D6D3,	//0x2754		VoC_lw16_sd(REG0,0xb,DEFAULT)	|	VoC_lw16_sd(REG3,0xc,DEFAULT)
0x2C09D6A1,	//0x2756		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16_sd(REG1,0x9,DEFAULT)
0xD9CC275E,	//0x2758		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0xD9CCE8A2,	//0x275a		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x275c		VoC_endloop0
0xD6B1DDC4,	//0x275c		VoC_lw16_sd(REG1,0xa,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x275e		VoC_endloop1
0xFFC07FC0,	//0x275e		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x2760		GETSFRMLPC_IEF1
0x6416142A,	//0x2760		VoC_lw16_d(SP16,0x6416)
0xDFA9FFC0,	//0x2762		VoC_pop16(RA,DEFAULT)	|	VoC_NOP
0xE580DF07,	//0x2764		VoC_return	|	VoC_pop32(RL7,DEFAULT)
