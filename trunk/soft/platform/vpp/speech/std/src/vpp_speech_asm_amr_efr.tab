		//0x05d0		VoC_code_section_1
		//0x05d0		CII_AMR_Encode
0x2882DFE9,	//0x05d0		VoC_or16_rd(REG2,0x4047)(lo)	|	VoC_push16(RA,DEFAULT)
0x31824047,	//0x05d2		VoC_bez16_r(NO_RESET_ENC,REG2)(lo)	|	VoC_or16_rd(REG2,0x4047)(hi)
0x2B8005D7,	//0x05d4		VoC_jal(CII_encoder_reset)(lo)	|	VoC_bez16_r(NO_RESET_ENC,REG2)(hi)
0xF7060639,	//0x05d6		VoC_lw16i_short(REG6,0xfff8,DEFAULT)	|	VoC_jal(CII_encoder_reset)(hi)
		//0x05d7		NO_RESET_ENC
0x1D401809,	//0x05d8		VoC_lw16i_set_inc(REG1,0x1d40,0x2)
0x200AE0C7,	//0x05da		VoC_lw16d_set_inc(REG2,0x4304,0x2)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x2CA04304,	//0x05dc		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16d_set_inc(REG2,0x4304,0x2)(hi)
0xD9D605E3,	//0x05de		VoC_lw32inc_p(RL6,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0x1808E4DE,	//0x05e0		VoC_lw16i_set_inc(REG0,0x1d40,0x2)(lo)	|	VoC_and32_rr(RL6,REG67,DEFAULT)
0xDDCE1D40,	//0x05e2		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x1d40,0x2)(hi)
		//0x05e3		VoC_endloop0
0x02FC2B80,	//0x05e4		VoC_jal(CII_encoder_homing_frame_test)
0x40471504,	//0x05e6		VoC_sw16_d(REG4,0x4047)
0x0C2E2B80,	//0x05e8		VoC_jal(CII_Pre_Process)
0x40916E06,	//0x05ea		VoC_bnez16_d(no_vad_detection_needed,0x4091)
0x40456C04,	//0x05ec		VoC_bez16_d(no_vad_detection_needed,0x4045)
0x17432B80,	//0x05ee		VoC_jal(CII_vad1)
		//0x05f0		no_vad_detection_needed
0x40916E0A,	//0x05f0		VoC_bnez16_d(cod_amr301,0x4091)
0x40456C08,	//0x05f2		VoC_bez16_d(cod_amr301,0x4045)
0x21291407,	//0x05f4		VoC_lw16_d(REG7,0x2129)
0x19702B80,	//0x05f6		VoC_jal(CII_tx_dtx_handler)
0x259D1505,	//0x05f8		VoC_sw16_d(REG5,0x259d)
		//0x05fa		cod_amr301
0x63E20A87,	//0x05fa		VoC_lw16i(REG7,0x63e2)
0x1D982B80,	//0x05fc		VoC_jal(CII_COD_AMR_122)
		//0x05fe		cod_amr_end
0xFFC0DFA9,	//0x05fe		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xD9C4E580,	//0x0600		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_return
		//0x0601		CII_Copy_M
0xD9C4E8A2,	//0x0602		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x0604		VoC_endloop0
0xE580DDCC,	//0x0604		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0606		CII_scale
0xF8FBD9C2,	//0x0606		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xFE14E6C4,	//0x0608		VoC_shr16_rr(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xD9C2FE15,	//0x060a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_rr(REG5,REG2,DEFAULT)
		//0x060c		VoC_endloop0
0xE580DDCA,	//0x060c		VoC_return	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x060e		CII_copy_xy
0xF8FE59C4,	//0x060e		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C4E782,	//0x0610		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x0612		VoC_endloop0
0xF80EDDCC,	//0x0612		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xC490E580,	//0x0614		VoC_mult16_rr(REG0,REG2,REG2,DEFAULT)	|	VoC_return
		//0x0615		CII_SEARCH_COPY
0x7030F032,	//0x0616		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xC210F641,	//0x0618		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0x0900F808,	//0x061a		VoC_add32_rd(REG01,REG01,0x67ae)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x318267AE,	//0x061c		VoC_bez16_r(SEARCH_COPY_label_100,REG2)(lo)	|	VoC_add32_rd(REG01,REG01,0x67ae)(hi)
0xD8840626,	//0x061e		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_bez16_r(SEARCH_COPY_label_100,REG2)(hi)
0xD8846682,	//0x0620		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0622		VoC_endloop0
0xDCB45884,	//0x0622		VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x03300780,	//0x0624		VoC_sub16_rd(REG0,REG0,0x330)
		//0x0626		SEARCH_COPY_label_100
0x00270A84,	//0x0626		VoC_lw16i(REG4,0x27)
0xC0105811,	//0x0628		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x5CB1C311,	//0x062a		VoC_sw16inc_p(REG1,REG3,DEFAULT)	|	VoC_sub16_rr(REG1,REG4,REG2,DEFAULT)
0x3181DE10,	//0x062c		VoC_bez16_r(SEARCH_COPY_label2_200,REG1)(lo)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x58040638,	//0x062e		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_bez16_r(SEARCH_COPY_label2_200,REG1)(hi)
0xFFC0C010,	//0x0630		VoC_NAD	|	VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)
0xDE106644,	//0x0632		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG1,DEFAULT)
0xC0105804,	//0x0634		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
		//0x0636		VoC_endloop0
0xDE105CB4,	//0x0636		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0638		SEARCH_COPY_label2_200
0xDFE9E580,	//0x0638		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0639		CII_encoder_reset
0x1808FF45,	//0x063a		VoC_lw16i_set_inc(REG0,0x1c54,0x2)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x18091C54,	//0x063c		VoC_lw16i_set_inc(REG1,0x62fc,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1c54,0x2)(hi)
0x2D6662FC,	//0x063e		VoC_loop_i(0x0,0xb3)(lo)	|	VoC_lw16i_set_inc(REG1,0x62fc,0x2)(hi)
0xDDC50644,	//0x0640		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x0,0xb3)(hi)
0xDDC5DDC5,	//0x0642		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
		//0x0644		VoC_endloop0
0x2CE0DDC5,	//0x0644		VoC_loop_i(0x0,0x70)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDDCD0647,	//0x0646		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x70)(hi)
		//0x0647		VoC_endloop0
0x40916C06,	//0x0648		VoC_bez16_d(RESET_EFR,0x4091)
0x1CB52B80,	//0x064a		VoC_jal(CII_EFR_DTX_ENC_RESET)
0xFFC065C4,	//0x064c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RESET_AMR)
		//0x064e		RESET_EFR
0x1D592B80,	//0x064e		VoC_jal(CII_RESET_AMR_CONSTANT)
		//0x0650		RESET_AMR
0x00280A86,	//0x0650		VoC_lw16i(REG6,0x28)
0x1506E0C7,	//0x0652		VoC_sw16_d(REG6,0x20dc)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x180820DC,	//0x0654		VoC_lw16i_set_inc(REG0,0x1f10,0x2)(lo)	|	VoC_sw16_d(REG6,0x20dc)(hi)
0x0A851F10,	//0x0656		VoC_lw16i(REG5,0x1000)(lo)	|	VoC_lw16i_set_inc(REG0,0x1f10,0x2)(hi)
0xE8611000,	//0x0658		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw16i(REG5,0x1000)(hi)
		//0x065a		VoC_endloop0
0x1505DDC3,	//0x065a		VoC_sw16_d(REG5,0x2087)(lo)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x180A2087,	//0x065c		VoC_lw16i_set_inc(REG2,0x4492,0x2)(lo)	|	VoC_sw16_d(REG5,0x2087)(hi)
0x18084492,	//0x065e		VoC_lw16i_set_inc(REG0,0x2092,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x4492,0x2)(hi)
0x18092092,	//0x0660		VoC_lw16i_set_inc(REG1,0x209c,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x2092,0x2)(hi)
0x180B209C,	//0x0662		VoC_lw16i_set_inc(REG3,0x212e,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x209c,0x2)(hi)
0xFF04212E,	//0x0664		VoC_movreg32(ACC0,REG01,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x212e,0x2)(hi)
0x2C11E044,	//0x0666		VoC_loop_i(0x1,0x8)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0xD9D30670,	//0x0668		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0xDDC3E8A4,	//0x066a		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD9D3DDCB,	//0x066c		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
		//0x066e		VoC_endloop0
0xE082DDDB,	//0x066e		VoC_movreg16(REG2,REG4,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x0670		VoC_endloop1
0x1484FF20,	//0x0670		VoC_lw32_d(ACC0,0x390)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x14850390,	//0x0672		VoC_lw32_d(ACC1,0x392)(lo)	|	VoC_lw32_d(ACC0,0x390)(hi)
0x18080392,	//0x0674		VoC_lw16i_set_inc(REG0,0x20c2,0x2)(lo)	|	VoC_lw32_d(ACC1,0x392)(hi)
0x180920C2,	//0x0676		VoC_lw16i_set_inc(REG1,0x20ca,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x20c2,0x2)(hi)
0x180A20CA,	//0x0678		VoC_lw16i_set_inc(REG2,0x20c6,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x20ca,0x2)(hi)
0x180B20C6,	//0x067a		VoC_lw16i_set_inc(REG3,0x20ce,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x20c6,0x2)(hi)
0xE84420CE,	//0x067c		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x20ce,0x2)(hi)
0xDDCCDDC4,	//0x067e		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDDDDDD5,	//0x0680		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0681		VoC_endloop0
0x03941484,	//0x0682		VoC_lw32_d(ACC0,0x394)
0x20E81808,	//0x0684		VoC_lw16i_set_inc(REG0,0x20e8,0x2)
0x33320A85,	//0x0686		VoC_lw16i(REG5,0x3332)
0xDDC4E9E1,	//0x0688		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0xf,DEFAULT)
		//0x0689		VoC_endloop0
0x21281505,	//0x068a		VoC_sw16_d(REG5,0x2128)
0x212C1505,	//0x068c		VoC_sw16_d(REG5,0x212c)
0x0A85F0E4,	//0x068e		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0x15047FFF,	//0x0690		VoC_sw16_d(REG4,0x218e)(lo)	|	VoC_lw16i(REG5,0x7fff)(hi)
0x1505218E,	//0x0692		VoC_sw16_d(REG5,0x218f)(lo)	|	VoC_sw16_d(REG4,0x218e)(hi)
0xF104218F,	//0x0694		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_sw16_d(REG5,0x218f)(hi)
0x1504F066,	//0x0696		VoC_sw16_d(REG4,0x21e2)(lo)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0xDFA921E2,	//0x0698		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG4,0x21e2)(hi)
0x21E31506,	//0x069a		VoC_sw16_d(REG6,0x21e3)
0xDFE9E580,	//0x069c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x069d		CII_dtx_com_s2
0x2B80C079,	//0x069e		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xFF440601,	//0x06a0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
0x06A42CA0,	//0x06a2		VoC_loop_i(0x0,0x50)
		//0x06a4		VoC_endloop0
0x2B80D512,	//0x06a4		VoC_jal(CII_Log2)(lo)	|	VoC_bimac32inc_pp(REG2,REG2)
0xF8B4089D,	//0x06a6		VoC_shr16_ri(REG4,0xfffffff6,DEFAULT)	|	VoC_jal(CII_Log2)(hi)
0xC12CF82D,	//0x06a8		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0x5,DEFAULT)
0x07A4DFA9,	//0x06aa		VoC_sub16_rd(REG4,REG4,0x35e)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE580035E,	//0x06ac		VoC_return	|	VoC_sub16_rd(REG4,REG4,0x35e)(hi)
		//0x06ae		CII_DIV_32
0xFF15DFE9,	//0x06ae		VoC_movreg32(ACC1,REG45,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x06B433C2,	//0x06b0		VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)
0x036E0B92,	//0x06b2		VoC_sub32_dr(REG45,0x36e,REG45)
		//0x06b4		DIV_32_L_ABS_IN
0x0A80F023,	//0x06b4		VoC_lw16i(REG0,0x3fff)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xE0E13FFF,	//0x06b6		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x3fff)(hi)
0x02CC2B80,	//0x06b8		VoC_jal(CII_DIV_S)
0xCDD4C790,	//0x06ba		VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)
0xF90CCE03,	//0x06bc		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0x03740BA3,	//0x06be		VoC_sub32_dr(REG67,0x374,ACC0)
0xC790F90E,	//0x06c0		VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCE03CDD4,	//0x06c2		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0xFF23FFC0,	//0x06c4		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_NOP
0x4D7CF90E,	//0x06c6		VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xC73EC770,	//0x06c8		VoC_multf16_rr(REG6,REG4,REG7,DEFAULT)	|	VoC_multf16_rr(REG0,REG5,REG6,IN_PARALLEL)
0xCE33CE03,	//0x06ca		VoC_mac32_rr(REG6,REG3,DEFAULT)	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0xFBF4DFA9,	//0x06cc		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x32C5FF23,	//0x06ce		VoC_bngtz32_r(DIV_32_L_ABS_OUT,ACC1)(lo)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x0B9B06D3,	//0x06d0		VoC_sub32_dr(REG67,0x36e,REG67)(lo)	|	VoC_bngtz32_r(DIV_32_L_ABS_OUT,ACC1)(hi)
0xE580036E,	//0x06d2		VoC_return	|	VoC_sub32_dr(REG67,0x36e,REG67)(hi)
		//0x06d3		DIV_32_L_ABS_OUT
		//0x06d4		CII_Inv_sqrt
0x5030F026,	//0x06d4		VoC_bgt32_rd(INV_SQRT101,REG01,0x36e)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF7E0036E,	//0x06d6		VoC_lw16i_short(REG0,0xffff,DEFAULT)	|	VoC_bgt32_rd(INV_SQRT101,REG01,0x36e)(hi)
0x3FFF0A81,	//0x06d8		VoC_lw16i(REG1,0x3fff)
0xF008E580,	//0x06da		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_return
		//0x06db		INV_SQRT101
0x00001806,	//0x06dc		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xEBE3FFC0,	//0x06de		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x03726420,	//0x06e0		VoC_bnlt32_rd(NORM_L105,REG01,0x372)
		//0x06e2		VoC_endloop0
0xFBF85E10,	//0x06e2		VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
		//0x06e4		NORM_L105
0x033E0B12,	//0x06e4		VoC_sub16_dr(REG2,0x33e,REG2)
0xF80A6416,	//0x06e6		VoC_shr16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG2,DEFAULT)
0x06EB31C6,	//0x06e8		VoC_bnez16_r(INV_SQRT102,REG6)
0xFA48FA08,	//0x06ea		VoC_shr32_ri(REG01,0x9,DEFAULT)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
		//0x06eb		INV_SQRT102
0x033C078E,	//0x06ec		VoC_sub16_rd(REG6,REG1,0x33c)
0x043E1805,	//0x06ee		VoC_lw16i_set_inc(REG1,0x43e,0x1)
0xF908C189,	//0x06f0		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x60C9D896,	//0x06f2		VoC_movreg16(ACC0_HI,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xCE888589,	//0x06f4		VoC_msu32_rr(REG1,REG0,DEFAULT)	|	VoC_sub16_rp(REG1,REG6,REG1,IN_PARALLEL)
0xFF20DE10,	//0x06f6		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0xE580FE90,	//0x06f8		VoC_return	|	VoC_shr32_rr(REG01,REG2,DEFAULT)
		//0x06fa		CII_Lag_window
0x271B1804,	//0x06fa		VoC_lw16i_set_inc(REG0,0x271b,0x1)
0x27271805,	//0x06fc		VoC_lw16i_set_inc(REG1,0x2727,0x1)
0x44161806,	//0x06fe		VoC_lw16i_set_inc(REG2,0x4416,0x1)
0x44201807,	//0x0700		VoC_lw16i_set_inc(REG3,0x4420,0x1)
0x037C1482,	//0x0702		VoC_lw32_d(REG45,0x37c)
0xAC56E949,	//0x0704		VoC_multf16_pp(REG6,REG1,REG2,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x9C5CAC1F,	//0x0706		VoC_multf32_pp(ACC0,REG1,REG3,DEFAULT)	|	VoC_multf16_pp(REG7,REG0,REG3,DEFAULT)
0xC851CF26,	//0x0708		VoC_add32_rr(REG23,REG23,REG45,DEFAULT)	|	VoC_bimac32_rr(REG45,REG67)
0xF90EFF23,	//0x070a		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xDC86DC97,	//0x070c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x070d		VoC_endloop0
0xDFE9E580,	//0x070e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x070f		CII_Levinson
0x27261805,	//0x0710		VoC_lw16i_set_inc(REG1,0x2726,0x1)
0x271A1804,	//0x0712		VoC_lw16i_set_inc(REG0,0x271a,0x1)
0xDF40F023,	//0x0714		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xD886D897,	//0x0716		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDF4398C2,	//0x0718		VoC_push32(REG67,DEFAULT)	|	VoC_multf32_rp(REG45,REG3,REG0,DEFAULT)
0x2B80D815,	//0x071a		VoC_jal(CII_DIV_32)(lo)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0xFF1A06AE,	//0x071c		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_jal(CII_DIV_32)(hi)
0x0382091C,	//0x071e		VoC_add32_rd(ACC0,REG67,0x382)
0xFA22790E,	//0x0720		VoC_shr32_ri(REG45,0x4,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x4DFCF90C,	//0x0722		VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x1509C7F0,	//0x0724		VoC_sw16_d(ACC0_HI,0x2738)(lo)	|	VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)
0xCE032738,	//0x0726		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_sw16_d(ACC0_HI,0x2738)(hi)
0x1582CE03,	//0x0728		VoC_sw32_d(REG45,0x644e)(lo)	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0x33C4644E,	//0x072a		VoC_bnltz32_r(LEVINSON_L_ABS_2,ACC0)(lo)	|	VoC_sw32_d(REG45,0x644e)(hi)
0x0BA4072F,	//0x072c		VoC_sub32_dr(ACC0,0x36e,ACC0)(lo)	|	VoC_bnltz32_r(LEVINSON_L_ABS_2,ACC0)(hi)
0xF7E2036E,	//0x072e		VoC_lw16i_short(REG2,0xffffffff,DEFAULT)	|	VoC_sub32_dr(ACC0,0x36e,ACC0)(hi)
		//0x072f		LEVINSON_L_ABS_2
0x03740BA2,	//0x0730		VoC_sub32_dr(REG45,0x374,ACC0)
0xDF03790C,	//0x0732		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC7E04DEC,	//0x0734		VoC_multf16_rr(REG0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xCE82C7A8,	//0x0736		VoC_msu32_rr(REG0,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG5,DEFAULT)
0x2B80CE82,	//0x0738		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_msu32_rr(REG0,REG2,DEFAULT)
0xFF2202BA,	//0x073a		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xDFC1790C,	//0x073c		VoC_push16(REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xDF42F046,	//0x073e		VoC_push32(REG45,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x2C13DFC6,	//0x0740		VoC_loop_i(0x1,0x9)(lo)	|	VoC_push16(REG6,DEFAULT)
0xD91007C9,	//0x0742		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_loop_i(0x1,0x9)(hi)
0x1FBEF025,	//0x0744		VoC_lw16i_set_inc(REG2,0x644b,0xffffffff)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x5616644B,	//0x0746		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x644b,0xffffffff)(hi)
0x43A7E014,	//0x0748		VoC_sub16_rr(REG7,REG6,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x40B2F8FE,	//0x074a		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)
0x67C6C810,	//0x074c		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add32_rr(REG01,REG01,REG45,IN_PARALLEL)
0xD30AFF44,	//0x074e		VoC_mac32_pp(REG1,REG2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xAE57AE16,	//0x0750		VoC_multf16inc_pp(REG7,REG1,REG2,DEFAULT)	|	VoC_multf16inc_pp(REG6,REG0,REG2,DEFAULT)
0xCF34FFC0,	//0x0752		VoC_bimac32_rr(REG67,REG45)	|	VoC_NOP
		//0x0753		VoC_endloop0
0xD6165910,	//0x0754		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0xC0714030,	//0x0756		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x9902FBE4,	//0x0758		VoC_multf32_rp(REG45,REG4,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)
0xD815D90B,	//0x075a		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x2B80C8A2,	//0x075c		VoC_jal(CII_DIV_32)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xD62206AE,	//0x075e		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_jal(CII_DIV_32)(hi)
0x036E0B12,	//0x0760		VoC_sub16_dr(REG2,0x36e,REG2)
0x091CFE93,	//0x0762		VoC_add32_rd(ACC0,REG67,0x382)(lo)	|	VoC_shr32_rr(REG67,REG2,DEFAULT)
0x7F1D0382,	//0x0764		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_add32_rd(ACC0,REG67,0x382)(hi)
0x0A80F90E,	//0x0766		VoC_lw16i(REG0,0x2737)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0xD6142737,	//0x0768		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_lw16i(REG0,0x2737)(hi)
0x4C1CC020,	//0x076a		VoC_bnlt16_rd(LEVINSON_03,REG4,0x34a)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xDC09034A,	//0x076c		VoC_sw16_p(ACC0_HI,REG0,DEFAULT)	|	VoC_bnlt16_rd(LEVINSON_03,REG4,0x34a)(hi)
		//0x076e		LEVINSON_03
0x3245E0E5,	//0x076e		VoC_bnltz16_r(LEVINSON_ABS_S_1,REG5)(lo)	|	VoC_movreg16(REG5,REG7,DEFAULT)
0x0B2D0773,	//0x0770		VoC_sub16_dr(REG5,0x36e,REG5)(lo)	|	VoC_bnltz16_r(LEVINSON_ABS_S_1,REG5)(hi)
0xD614036E,	//0x0772		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_sub16_dr(REG5,0x36e,REG5)(hi)
		//0x0773		LEVINSON_ABS_S_1
0x035C3D15,	//0x0774		VoC_bngt16_rd(LEVINSON_04,REG5,0x35c)
0x20870A80,	//0x0776		VoC_lw16i(REG0,0x2087)
0x644B1401,	//0x0778		VoC_lw16_d(REG1,0x644b)
0x6963FF46,	//0x077a		VoC_loop_i_short(0xb,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0xD886D886,	//0x077c		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
		//0x077e		VoC_endloop0
0x1586DC96,	//0x077e		VoC_sw32_d(RL6,0x2738)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x15862738,	//0x0780		VoC_sw32_d(RL6,0x273a)(lo)	|	VoC_sw32_d(RL6,0x2738)(hi)
0x2B00273A,	//0x0782		VoC_jump_lg(LEVINSON_EXIT)(lo)	|	VoC_sw32_d(RL6,0x273a)(hi)
0xFFC007DE,	//0x0784		VoC_NAD	|	VoC_jump_lg(LEVINSON_EXIT)(hi)
		//0x0786		LEVINSON_04
0x644B1FBE,	//0x0786		VoC_lw16i_set_inc(REG2,0x644b,0xffffffff)
0x40916C05,	//0x0788		VoC_bez16_d(LEVINSON_100,0x4091)
0x1C972B80,	//0x078a		VoC_jal(CII_EFR_LEVINSON_PART)
0xC0A2E5D6,	//0x078c		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_jump(LEVINSON_101)
		//0x078d		LEVINSON_100
0x262A180B,	//0x078e		VoC_lw16i_set_inc(REG3,0x262a,0x2)
0x037C1801,	//0x0790		VoC_lw16i_set_inc(REG1,0x37c,0x0)
0x644E1804,	//0x0792		VoC_lw16i_set_inc(REG0,0x644e,0x1)
0x850C40A2,	//0x0794		VoC_sub16_rp(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xE70A9E0E,	//0x0796		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)
0x8F9519D4,	//0x0798		VoC_multf16inc_rp(REG5,REG6,REG2,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
0xFFC08FD4,	//0x079a		VoC_NOP	|	VoC_multf16inc_rp(REG4,REG7,REG2,DEFAULT)
0xD88DD221,	//0x079c		VoC_lw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG1)
0xF90CC9A2,	//0x079e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0xDDDA9E0E,	//0x07a0		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)
		//0x07a1		VoC_endloop0
		//0x07a2		LEVINSON_101
0xC7F04DFC,	//0x07a2		VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0xFA22FF2A,	//0x07a4		VoC_shr32_ri(REG45,0x4,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0xD001F90C,	//0x07a6		VoC_mac32_rp(REG0,REG1,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xDDDAD001,	//0x07a8		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_mac32_rp(REG0,REG1,DEFAULT)
0x07AE33C4,	//0x07aa		VoC_bnltz32_r(LEVINSON_L_ABS_4,ACC0)
0x036E0BA4,	//0x07ac		VoC_sub32_dr(ACC0,0x36e,ACC0)
		//0x07ae		LEVINSON_L_ABS_4
0x03740BA1,	//0x07ae		VoC_sub32_dr(REG23,0x374,ACC0)
0xD90A790A,	//0x07b0		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xC71BC752,	//0x07b2		VoC_multf16_rr(REG3,REG4,REG3,DEFAULT)	|	VoC_multf16_rr(REG2,REG5,REG2,DEFAULT)
0xD211CD5C,	//0x07b4		VoC_bimac32inc_rp(REG23,REG1)	|	VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)
0x02BA2B80,	//0x07b6		VoC_jal(CII_NORM_L_ACC0)
0x790CFF22,	//0x07b8		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xC0CBD623,	//0x07ba		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,IN_PARALLEL)
0xDA23DD0A,	//0x07bc		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
0x262A180A,	//0x07be		VoC_lw16i_set_inc(REG2,0x262a,0x2)
0x644E180B,	//0x07c0		VoC_lw16i_set_inc(REG3,0x644e,0x2)
0x0735D616,	//0x07c2		VoC_add16_rd(REG5,REG6,0x370)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x67830370,	//0x07c4		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add16_rd(REG5,REG6,0x370)(hi)
0xD9D4D9D4,	//0x07c6		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x07c8		VoC_endloop0
0xDA15DDDC,	//0x07c8		VoC_sw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x07c9		VoC_endloop1
0x10000A84,	//0x07ca		VoC_lw16i(REG4,0x1000)
0x644B2004,	//0x07cc		VoC_lw16d_set_inc(REG0,0x644b,0x1)
0x20881805,	//0x07ce		VoC_lw16i_set_inc(REG1,0x2088,0x1)
0x644E1806,	//0x07d0		VoC_lw16i_set_inc(REG2,0x644e,0x1)
0x0692DC84,	//0x07d2		VoC_multf32inc_pd(REG45,REG2,0x370)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE9480370,	//0x07d4		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_multf32inc_pd(REG45,REG2,0x370)(hi)
0xFBFAD8A5,	//0x07d6		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x03820913,	//0x07d8		VoC_add32_rd(REG67,REG45,0x382)
0x03700692,	//0x07da		VoC_multf32inc_pd(REG45,REG2,0x370)
0xDC97DC87,	//0x07dc		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x07dd		VoC_endloop0
		//0x07de		LEVINSON_EXIT
0xDF86E842,	//0x07de		VoC_pop16(REG6,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x07e0		VoC_endloop0
0xDFA9DF04,	//0x07e0		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0xE580FFC0,	//0x07e2		VoC_return	|	VoC_NOP
		//0x07e4		CII_Get_lsp_pol
0xFF44F045,	//0x07e4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x01000A89,	//0x07e6		VoC_lw16i(ACC0_HI,0x100)
0x02000A83,	//0x07e8		VoC_lw16i(REG3,0x200)
0xE0477040,	//0x07ea		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xFF445DD4,	//0x07ec		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x080C2C0B,	//0x07ee		VoC_loop_i(0x1,0x5)
0x03304180,	//0x07f0		VoC_be16_rd(Get_lsp_pol_L1,REG0,0x330)
0xC22E59A4,	//0x07f2		VoC_sub16_rr(REG6,REG0,REG5,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x6791F80E,	//0x07f4		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xC2AEDD94,	//0x07f6		VoC_sub16_rr(REG6,REG2,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,IN_PARALLEL)
0xD99442BC,	//0x07f8		VoC_lw32_p(ACC0,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
0x790ED9B3,	//0x07fa		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32_p(REG67,REG6,DEFAULT)
0x8D8E99CD,	//0x07fc		VoC_multf16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,IN_PARALLEL)
0x1124F027,	//0x07fe		VoC_add32_rp(ACC0,ACC0,REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE046CE37,	//0x0800		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_mac32_rr(REG6,REG7,IN_PARALLEL)
0x4B2CFBFD,	//0x0802		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0xC2AAE047,	//0x0804		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
		//0x0806		VoC_endloop0
0xD994DDB4,	//0x0806		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x0808		Get_lsp_pol_L1
0xE012D199,	//0x0808		VoC_movreg16(INC2,REG0,DEFAULT)	|	VoC_msu32inc_rp(REG3,REG1,DEFAULT)
0xDDD4C028,	//0x080a		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
		//0x080c		VoC_endloop1
0xE580C2BC,	//0x080c		VoC_return	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
		//0x080e		CII_Lsp_Az
0xDF40DFE9,	//0x080e		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x6452180A,	//0x0810		VoC_lw16i_set_inc(REG2,0x6452,0x2)
0x07E42B80,	//0x0812		VoC_jal(CII_Get_lsp_pol)
0x180AD908,	//0x0814		VoC_lw16i_set_inc(REG2,0x645e,0x2)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x0709645E,	//0x0816		VoC_add16_rd(REG1,REG1,0x370)(lo)	|	VoC_lw16i_set_inc(REG2,0x645e,0x2)(hi)
0x2B800370,	//0x0818		VoC_jal(CII_Get_lsp_pol)(lo)	|	VoC_add16_rd(REG1,REG1,0x370)(hi)
0xF14707E4,	//0x081a		VoC_lw16i_short(REG7,0xa,DEFAULT)	|	VoC_jal(CII_Get_lsp_pol)(hi)
0x645C1FB8,	//0x081c		VoC_lw16i_set_inc(REG0,0x645c,0xfffffffe)
0x645A1FBA,	//0x081e		VoC_lw16i_set_inc(REG2,0x645a,0xfffffffe)
0x64681FB9,	//0x0820		VoC_lw16i_set_inc(REG1,0x6468,0xfffffffe)
0x64661FBB,	//0x0822		VoC_lw16i_set_inc(REG3,0x6466,0xfffffffe)
0xD984E8A6,	//0x0824		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD98D9314,	//0x0826		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)
0xDDC4975D,	//0x0828		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sub32inc_rp(ACC1,ACC1,REG3,DEFAULT)
		//0x082a		VoC_endloop0
0xDF01DDCD,	//0x082a		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x0A84F7F3,	//0x082c		VoC_lw16i(REG4,0x1000)(lo)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x40BB1000,	//0x082e		VoC_add16_rr(REG3,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG4,0x1000)(hi)
0x1808F006,	//0x0830		VoC_lw16i_set_inc(REG0,0x6454,0x2)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x18096454,	//0x0832		VoC_lw16i_set_inc(REG1,0x6460,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x6454,0x2)(hi)
0x68AE6460,	//0x0834		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6460,0x2)(hi)
0xD9C7DCA4,	//0x0836		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)
0x97CD11CC,	//0x0838		VoC_sub32inc_rp(ACC1,RL7,REG1,IN_PARALLEL)	|	VoC_add32_rp(ACC0,RL7,REG1,DEFAULT)
0xFA657A64,	//0x083a		VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0x03700924,	//0x083c		VoC_add32_rd(ACC0,ACC0,0x370)
0x092DFA0C,	//0x083e		VoC_add32_rd(ACC1,ACC1,0x370)(lo)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFA0D0370,	//0x0840		VoC_shr32_ri(ACC1,0x1,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x370)(hi)
0xDCBADCA8,	//0x0842		VoC_sw16inc_p(ACC1_LO,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
		//0x0843		VoC_endloop0
0xF033DFA9,	//0x0844		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF033E580,	//0x0846		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_return
		//0x0847		CII_Lsf_lsp
0x1806F030,	//0x0848		VoC_lw16i_set_inc(REG2,0x470,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x58830470,	//0x084a		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x470,0x1)(hi)
0xE067F005,	//0x084c		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xF843E94C,	//0x084e		VoC_shr16_ri(REG3,0x8,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x1607C0D3,	//0x0850		VoC_and16_ri(REG7,0xff)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xD8B500FF,	//0x0852		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_and16_ri(REG7,0xff)(hi)
0xCDBBB8EE,	//0x0854		VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)	|	VoC_sub16_pr(REG6,REG3,REG5,DEFAULT)
0xFA4BD883,	//0x0856		VoC_shr32_ri(REG67,0x9,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE067C176,	//0x0858		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
		//0x085a		VoC_endloop0
0xE580DC96,	//0x085a		VoC_return	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x085c		CII_Lsp_lsf
0x4030F126,	//0x085c		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0x1FBEC071,	//0x085e		VoC_lw16i_set_inc(REG2,0x3f,0xffffffff)(lo)	|	VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)
0x1FBF003F,	//0x0860		VoC_lw16i_set_inc(REG3,0x4af,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG2,0x3f,0xffffffff)(hi)
0x0A8404AF,	//0x0862		VoC_lw16i(REG4,0x4f1)(lo)	|	VoC_lw16i_set_inc(REG3,0x4af,0xffffffff)(hi)
0xE95304F1,	//0x0864		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i(REG4,0x4f1)(hi)
0x2C81D886,	//0x0866		VoC_loop_i(0x1,0x40)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x879F086D,	//0x0868		VoC_sub16inc_rp(REG7,REG6,REG3,DEFAULT)	|	VoC_loop_i(0x1,0x40)(hi)
0x086F3147,	//0x086a		VoC_bngtz16_r(LSP_LSF_02,REG7)
0x07A4DE10,	//0x086c		VoC_sub16_rd(REG4,REG4,0x370)(lo)	|	VoC_inc_p(REG2,DEFAULT)
		//0x086d		VoC_endloop1
0x99E30370,	//0x086e		VoC_multf32_rp(REG67,REG7,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x370)(hi)
		//0x086f		LSP_LSF_02
0x7BEBE045,	//0x0870		VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0x091BF8C5,	//0x0872		VoC_add32_rd(REG67,REG67,0x382)(lo)	|	VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)
0xC1EF0382,	//0x0874		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x382)(hi)
0x0370071B,	//0x0876		VoC_add16_rd(REG3,REG3,0x370)
		//0x0878		VoC_endloop0
0xE580DC97,	//0x0878		VoC_return	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x087a		CII_Convolve
0x1806FF03,	//0x087a		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_movreg32(REG67,REG01,DEFAULT)
0x079B0000,	//0x087c		VoC_sub16_rd(REG3,REG3,0x370)(lo)	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
0x702D0370,	//0x087e		VoC_lw16i_short(RL6_HI,0x1,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0x370)(hi)
0x77EFE00C,	//0x0880		VoC_lw16i_short(RL7_HI,0xffffffff,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)
0x9C0CE01E,	//0x0882		VoC_multf32_pp(ACC0,REG0,REG1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
0x089A2C29,	//0x0884		VoC_loop_i(0x1,0x14)
0x088A3142,	//0x0886		VoC_bngtz16_r(Convolve100,REG2)
0xD501E681,	//0x0888		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0889		VoC_endloop0
		//0x088a		Convolve100
0xDCB548F0,	//0x088a		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG67,RL6,DEFAULT)
0xC8F37F22,	//0x088c		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDE106201,	//0x088e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xFF447BEA,	//0x0890		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0xD501E681,	//0x0892		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0893		VoC_endloop0
0xDCB548F3,	//0x0894		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xC8F87F22,	//0x0896		VoC_add32_rr(REG01,REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xE201FBEA,	//0x0898		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
		//0x089a		VoC_endloop1
0xDCB59DBC,	//0x089a		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_multf32_pp(ACC0,REG6,REG7,DEFAULT)
0xFF42E580,	//0x089c		VoC_lw32z(REG45,DEFAULT)	|	VoC_return
		//0x089d		CII_Log2
0x2B80DFE9,	//0x089e		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_push16(RA,DEFAULT)
0xDF4002BA,	//0x08a0		VoC_push32(REG01,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xFF42FF21,	//0x08a2		VoC_lw32z(REG45,DEFAULT)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x08B732C4,	//0x08a4		VoC_bngtz32_r(LOG1002,ACC0)
0x0B09FF25,	//0x08a6		VoC_sub16_dr(REG1,0x33e,REG1)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFA49033E,	//0x08a8		VoC_shr32_ri(REG23,0x9,DEFAULT)	|	VoC_sub16_dr(REG1,0x33e,REG1)(hi)
0x033F0798,	//0x08aa		VoC_sub16_rd(REG0,REG3,0x33f)
0x0A84F030,	//0x08ac		VoC_lw16i(REG4,0x516)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xC1000516,	//0x08ae		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x516)(hi)
0xD885F90A,	//0x08b0		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCCD18543,	//0x08b2		VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)	|	VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)
0xCA8AF004,	//0x08b4		VoC_sub32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDFA9E024,	//0x08b6		VoC_pop16(RA,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
		//0x08b7		LOG1002
0xE580DF00,	//0x08b8		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x08ba		CII_Lsf_wt
0x7030FF01,	//0x08ba		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x7032F007,	//0x08bc		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x5E00F005,	//0x08be		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE923E006,	//0x08c0		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0xD8A6BA37,	//0x08c2		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sub16inc_pr(REG7,REG0,REG6,DEFAULT)
		//0x08c4		VoC_endloop0
0x0B36DC97,	//0x08c4		VoC_sub16_dr(REG6,0x37e,REG6)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x1482037E,	//0x08c6		VoC_lw32_d(REG45,0x362)(lo)	|	VoC_sub16_dr(REG6,0x37e,REG6)(hi)
0xE94C0362,	//0x08c8		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw32_d(REG45,0x362)(hi)
0xB8EF8D18,	//0x08ca		VoC_sub16_pr(REG7,REG3,REG5,DEFAULT)	|	VoC_multf16_rp(REG0,REG4,REG3,DEFAULT)
0x03640B00,	//0x08cc		VoC_sub16_dr(REG0,0x364,REG0)
0x036508BA,	//0x08ce		VoC_multf16_rd(REG2,REG7,0x365)
0x08D33207,	//0x08d0		VoC_bltz16_r(Lsf_wt101,REG7)
0xF8E8C350,	//0x08d2		VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG0,REG5,REG2,DEFAULT)
		//0x08d3		Lsf_wt101
0xDCB0DC16,	//0x08d4		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_sw16_p(REG6,REG1,DEFAULT)
		//0x08d5		VoC_endloop0
0xD886E580,	//0x08d6		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_return
		//0x08d7		CII_Residu_new
0xF3FD600E,	//0x08d8		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0x08E72C51,	//0x08da		VoC_loop_i(0x1,0x28)
0x07999B9C,	//0x08dc		VoC_sub16_rd(REG1,REG3,0x330)(lo)	|	VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)
0xE9420330,	//0x08de		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_sub16_rd(REG1,REG3,0x330)(hi)
0xD139D887,	//0x08e0		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x08e1		VoC_endloop0
0xFBECE1C0,	//0x08e2		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x03820922,	//0x08e4		VoC_add32_rd(REG45,ACC0,0x382)
0xDCA5FFC0,	//0x08e6		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_NOP
		//0x08e7		VoC_endloop1
0xDFE9E580,	//0x08e8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x08e9		CII_subframePostProc
0x25961483,	//0x08ea		VoC_lw32_d(REG67,0x2596)
0x21E00A81,	//0x08ec		VoC_lw16i(REG1,0x21e0)
0x08F43180,	//0x08ee		VoC_bez16_r(subframePostProc103,REG0)
0x26000A81,	//0x08f0		VoC_lw16i(REG1,0x2600)
0x63CA1483,	//0x08f2		VoC_lw32_d(REG67,0x63ca)
		//0x08f4		subframePostProc103
0xDF43E0C3,	//0x08f4		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x32D9180A,	//0x08f6		VoC_lw16i_set_inc(REG2,0x32d9,0x2)
0x08FB349A,	//0x08f8		VoC_bngt16_rr(subframePostProc102,REG3,REG2)
0xF7D9E043,	//0x08fa		VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
		//0x08fb		subframePostProc102
0x5C13F7C5,	//0x08fc		VoC_sw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
0x4429E071,	//0x08fe		VoC_bne16_rd(subframePostProc101,REG1,0x4090)(lo)	|	VoC_lw16i_short(REG1,0x7,IN_PARALLEL)
0xF7B94090,	//0x0900		VoC_lw16i_short(FORMAT32,0xfffffffd,DEFAULT)	|	VoC_bne16_rd(subframePostProc101,REG1,0x4090)(hi)
0xEFC5780E,	//0x0902		VoC_lw16i_short(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x0904		subframePostProc101
0x1804DFC0,	//0x0904		VoC_lw16i_set_inc(REG0,0x1fb2,0x1)(lo)	|	VoC_push16(REG0,DEFAULT)
0xDFC51FB2,	//0x0906		VoC_push16(REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x1fb2,0x1)(hi)
0x03821486,	//0x0908		VoC_lw32_d(RL6,0x382)
0xFF345642,	//0x090a		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x3,DEFAULT)
0x26021805,	//0x090c		VoC_lw16i_set_inc(REG1,0x2602,0x1)
0xFF355625,	//0x090e		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0x09163185,	//0x0910		VoC_bez16_r(subframePostProc105,REG5)
0x63C81402,	//0x0912		VoC_lw16_d(REG2,0x63c8)
0x634C1805,	//0x0914		VoC_lw16i_set_inc(REG1,0x634c,0x1)
		//0x0916		subframePostProc105
0xDFC24010,	//0x0916		VoC_push16(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x40916C04,	//0x0918		VoC_bez16_d(subframePostProc01,0x4091)
0xF80EF799,	//0x091a		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,DEFAULT)
		//0x091c		subframePostProc01
0xD030ED06,	//0x091c		VoC_mac32_rp(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD6529BCA,	//0x091e		VoC_lw16_sd(REG2,0x4,DEFAULT)	|	VoC_multf32inc_rp(REG45,REG7,REG1,DEFAULT)
0xFF34C8A2,	//0x0920		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x0922		VoC_endloop0
0xF7F9DC85,	//0x0922		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x1FB21807,	//0x0924		VoC_lw16i_set_inc(REG3,0x1fb2,0x1)
0xD630D675,	//0x0926		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_lw16_sd(REG5,0x6,DEFAULT)
0x092E3180,	//0x0928		VoC_bez16_r(subframePostProc106,REG0)
0x033807AD,	//0x092a		VoC_sub16_rd(REG5,REG5,0x338)
0x63C81402,	//0x092c		VoC_lw16_d(REG2,0x63c8)
		//0x092e		subframePostProc106
0x0A87C0D3,	//0x092e		VoC_lw16i(REG7,0x6448)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xC1D76448,	//0x0930		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16i(REG7,0x6448)(hi)
0xE2867020,	//0x0932		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF00561E1,	//0x0934		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL7_HI,DEFAULT)
0x0D4B2B80,	//0x0936		VoC_jal(CII_Syn_filt)
0x1806DF81,	//0x0938		VoC_lw16i_set_inc(REG2,0x6448,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x18076448,	//0x093a		VoC_lw16i_set_inc(REG3,0x1d18,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x6448,0x1)(hi)
0x07081D18,	//0x093c		VoC_add16_rd(REG0,REG1,0x33e)(lo)	|	VoC_lw16i_set_inc(REG3,0x1d18,0x1)(hi)
0xC082033E,	//0x093e		VoC_add16_rr(REG2,REG2,REG0,DEFAULT)	|	VoC_add16_rd(REG0,REG1,0x33e)(hi)
0x40916C0A,	//0x0940		VoC_bez16_d(subframePostProc301,0x4091)
0x1D401807,	//0x0942		VoC_lw16i_set_inc(REG3,0x1d40,0x1)
0x43026E06,	//0x0944		VoC_bnez16_d(subframePostProc301,0x4302)
0x1CF02B80,	//0x0946		VoC_jal(CII_SUBFRAME_EFR_PART)
0x09712B00,	//0x0948		VoC_jump_lg(subframePostProc302)
		//0x094a		subframePostProc301
0x1804C0C3,	//0x094a		VoC_lw16i_set_inc(REG0,0x21ae,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
0x694421AE,	//0x094c		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x21ae,0x1)(hi)
0x8714D8B4,	//0x094e		VoC_sub16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)
0xDC84D8B4,	//0x0950		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
		//0x0951		VoC_endloop0
0xDF81DF8C,	//0x0952		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(RL6_LO,DEFAULT)
0x24C41804,	//0x0954		VoC_lw16i_set_inc(REG0,0x24c4,0x1)
0x253C1806,	//0x0956		VoC_lw16i_set_inc(REG2,0x253c,0x1)
0x095E3181,	//0x0958		VoC_bez16_r(subframePostProc107,REG1)
0x63941804,	//0x095a		VoC_lw16i_set_inc(REG0,0x6394,0x1)
0x63BC1806,	//0x095c		VoC_lw16i_set_inc(REG2,0x63bc,0x1)
		//0x095e		subframePostProc107
0x1805E1C3,	//0x095e		VoC_lw16i_set_inc(REG1,0x2514,0x1)(lo)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0xF0332514,	//0x0960		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x2514,0x1)(hi)
0xD90B694E,	//0x0962		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0x9BD39B8A,	//0x0964		VoC_multf32inc_rp(REG67,REG7,REG2,DEFAULT)	|	VoC_multf32inc_rp(REG45,REG6,REG1,DEFAULT)
0xE184FBFA,	//0x0966		VoC_movreg16(REG4,RL6_LO,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x40916C04,	//0x0968		VoC_bez16_d(subframePostProc02,0x4091)
0x037007A4,	//0x096a		VoC_sub16_rd(REG4,REG4,0x370)
		//0x096c		subframePostProc02
0xC17FFEA3,	//0x096c		VoC_add16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0xD90BBA3C,	//0x096e		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_sub16inc_pr(REG4,REG0,REG7,DEFAULT)
		//0x0970		VoC_endloop0
0xDFA9DCB4,	//0x0970		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0971		subframePostProc302
0xE580DF03,	//0x0972		VoC_return	|	VoC_pop32(REG67,DEFAULT)
		//0x0974		CII_Weight_Ai
0xE963D885,	//0x0974		VoC_loop_i_short(0xb,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xDCA59E0A,	//0x0976		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_multf32inc_pp(REG45,REG0,REG1,DEFAULT)
		//0x0978		VoC_endloop0
0x03820912,	//0x0978		VoC_add32_rd(REG45,REG45,0x382)
0xF053E580,	//0x097a		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_return
		//0x097b		CII_Int_lpc_only
0xD9DBF052,	//0x097c		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xE8A9D9D2,	//0x097e		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xF80DF80C,	//0x0980		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xF80F780E,	//0x0982		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xC17D4134,	//0x0984		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xDDCAD9DB,	//0x0986		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
		//0x0988		VoC_endloop0
0xE580D9D2,	//0x0988		VoC_return	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x098a		CII_Pow2
0x0A01F004,	//0x098a		VoC_multf32_rd(REG23,REG0,0x33f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x1804033F,	//0x098c		VoC_lw16i_set_inc(REG0,0x41c,0x1)(lo)	|	VoC_multf32_rd(REG23,REG0,0x33f)(hi)
0xC018041C,	//0x098e		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x41c,0x1)(hi)
0xD885F90A,	//0x0990		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCCD18543,	//0x0992		VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)	|	VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)
0x033E0B08,	//0x0994		VoC_sub16_dr(REG0,0x33e,REG1)
0xF3E4CA89,	//0x0996		VoC_lw16i_short(REG4,0x1f,DEFAULT)	|	VoC_sub32_rr(REG23,REG45,REG23,DEFAULT)
0x099C3484,	//0x0998		VoC_bngt16_rr(POW2101,REG0,REG4)
0xE580FF41,	//0x099a		VoC_return	|	VoC_lw32z(REG23,DEFAULT)
		//0x099c		POW2101
0x03700780,	//0x099c		VoC_sub16_rd(REG0,REG0,0x370)
0x3C20FE81,	//0x099e		VoC_bngt16_rd(POW2102,REG0,0x370)(lo)	|	VoC_shr32_rr(REG23,REG0,DEFAULT)
0x09090370,	//0x09a0		VoC_add32_rd(REG23,REG23,0x370)(lo)	|	VoC_bngt16_rd(POW2102,REG0,0x370)(hi)
0xFA090370,	//0x09a2		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x370)(hi)
		//0x09a3		POW2102
0xF001E580,	//0x09a4		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_return
		//0x09a5		CII_sqrt_l_exp
0xFF23DFE9,	//0x09a6		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x02BA2B80,	//0x09a8		VoC_jal(CII_NORM_L_ACC0)
0xFF44DFA9,	//0x09aa		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x09BC32C3,	//0x09ac		VoC_bngtz32_r(sqrt_l_exp_go,REG67)
0x7FFE1641,	//0x09ae		VoC_and16_ri(REG1,0xfffe)
0x036E0B08,	//0x09b0		VoC_sub16_dr(REG0,0x36e,REG1)
0xFA4BFE83,	//0x09b2		VoC_shr32_ri(REG67,0x9,DEFAULT)	|	VoC_shr32_rr(REG67,REG0,DEFAULT)
0x03C01804,	//0x09b4		VoC_lw16i_set_inc(REG0,0x3c0,0x1)
0xF90EC038,	//0x09b6		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x60E9D887,	//0x09b8		VoC_movreg16(ACC0_HI,REG7,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xCEB785C7,	//0x09ba		VoC_msu32_rr(REG6,REG7,DEFAULT)	|	VoC_sub16_rp(REG7,REG7,REG0,IN_PARALLEL)
		//0x09bc		sqrt_l_exp_go
0xF023E580,	//0x09bc		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_return
		//0x09bd		CII_gc_pred_update
0x03300728,	//0x09be		VoC_add16_rd(REG0,REG5,0x330)
0x0333072A,	//0x09c0		VoC_add16_rd(REG2,REG5,0x333)
0xC09BC019,	//0x09c2		VoC_add16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG3,DEFAULT)
0xF3FD77F0,	//0x09c4		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF3FF77F2,	//0x09c6		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xD884E864,	//0x09c8		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC94D8A5,	//0x09ca		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x09cc		VoC_endloop0
0xDC37DCB5,	//0x09cc		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xE580DC16,	//0x09ce		VoC_return	|	VoC_sw16_p(REG6,REG1,DEFAULT)
		//0x09d0		CII_gmed_n
0x648E1805,	//0x09d0		VoC_lw16i_set_inc(REG1,0x648e,0x1)
0xE744E029,	//0x09d2		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG1,DEFAULT)
0x1807D882,	//0x09d4		VoC_lw16i_set_inc(REG3,0x6498,0x1)(lo)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xDC926498,	//0x09d6		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x6498,0x1)(hi)
		//0x09d7		VoC_endloop0
0x0AC8E121,	//0x09d8		VoC_lw16i(ACC0_LO,0xffffc000)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0xFFC04000,	//0x09da		VoC_NAD	|	VoC_lw16i(ACC0_LO,0xffffc000)(hi)
0x09EA2E29,	//0x09dc		VoC_loop_r(1,REG5)
0x00000AC2,	//0x09de		VoC_lw16i(REG2,0xffff8000)
0xD817E746,	//0x09e0		VoC_lw16_p(REG7,REG1,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0x09E63417,	//0x09e2		VoC_bgt16_rr(GMED001,REG2,REG7)
0xF62660E2,	//0x09e4		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
		//0x09e6		GMED001
		//0x09e6		VoC_endloop0
0xE121DE08,	//0x09e6		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
0xDC68C38A,	//0x09e8		VoC_sw16_p(ACC0_LO,REG6,DEFAULT)	|	VoC_sub16_rr(REG2,REG6,REG1,DEFAULT)
		//0x09ea		VoC_endloop1
0x0AC3DCB2,	//0x09ea		VoC_lw16i(REG3,0xc930)(lo)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
0xC0EB4930,	//0x09ec		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_lw16i(REG3,0xc930)(hi)
0xC228F90B,	//0x09ee		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0xFFC08018,	//0x09f0		VoC_NOP	|	VoC_add16_rp(REG0,REG0,REG3,DEFAULT)
0xE580D801,	//0x09f2		VoC_return	|	VoC_lw16_p(REG1,REG0,DEFAULT)
		//0x09f4		CII_Autocorr
0xF08EDFE9,	//0x09f4		VoC_lw16i_short(RL7_LO,0x4,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x26281806,	//0x09f6		VoC_lw16i_set_inc(REG2,0x2628,0x1)
0x03821486,	//0x09f8		VoC_lw32_d(RL6,0x382)
0x0A012CF2,	//0x09fa		VoC_loop_i(0x0,0x79)
0x9E0C4932,	//0x09fc		VoC_multf32inc_pp(ACC0,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0x9E0D4973,	//0x09fe		VoC_multf32inc_pp(ACC1,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC1,RL6,DEFAULT)
0xDCA7DCA5,	//0x0a00		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x0a01		VoC_endloop0
0xFF44F00C,	//0x0a02		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
		//0x0a03		AUTOCORR_01
0x262A1809,	//0x0a04		VoC_lw16i_set_inc(REG1,0x262a,0x2)
0x0A082CF0,	//0x0a06		VoC_loop_i(0x0,0x78)
		//0x0a08		VoC_endloop0
0x1808D509,	//0x0a08		VoC_lw16i_set_inc(REG0,0x262a,0x2)(lo)	|	VoC_bimac32inc_pp(REG1,REG1)
0x5C8C262A,	//0x0a0a		VoC_bne32_rd(AUTOCORR_01_END,ACC0,0x374)(lo)	|	VoC_lw16i_set_inc(REG0,0x262a,0x2)(hi)
0xC9BE0374,	//0x0a0c		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_bne32_rd(AUTOCORR_01_END,ACC0,0x374)(hi)
0x7042E001,	//0x0a0e		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x2B80E3C3,	//0x0a10		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0x3c,IN_PARALLEL)
0xE5F00606,	//0x0a12		VoC_jump(AUTOCORR_01)	|	VoC_jal(CII_scale)(hi)
		//0x0a14		AUTOCORR_01_END
0x03700924,	//0x0a14		VoC_add32_rd(ACC0,ACC0,0x370)
0x02BA2B80,	//0x0a16		VoC_jal(CII_NORM_L_ACC0)
0xFF236185,	//0x0a18		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0xF90E426D,	//0x0a1a		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG1,REG5,DEFAULT)
0x27261507,	//0x0a1c		VoC_sw16_d(REG7,0x2726)
0x271A1506,	//0x0a1e		VoC_sw16_d(REG6,0x271a)
0x1C8C1505,	//0x0a20		VoC_sw16_d(REG5,0x1c8c)
0x036E0B0C,	//0x0a22		VoC_sub16_dr(REG4,0x36e,REG1)
0x262A1808,	//0x0a24		VoC_lw16i_set_inc(REG0,0x262a,0x2)
0x644C1809,	//0x0a26		VoC_lw16i_set_inc(REG1,0x644c,0x2)
0xE3C67F47,	//0x0a28		VoC_lw16i_short(REG6,0x3c,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0x060E2B80,	//0x0a2a		VoC_jal(CII_copy_xy)
0x7052DD8F,	//0x0a2c		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_sw32_p(RL7,REG1,DEFAULT)
0x1804F00B,	//0x0a2e		VoC_lw16i_set_inc(REG0,0x271b,0x1)(lo)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0x1805271B,	//0x0a30		VoC_lw16i_set_inc(REG1,0x2727,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x271b,0x1)(hi)
0x0A8D2727,	//0x0a32		VoC_lw16i(RL6_HI,0x644d)(lo)	|	VoC_lw16i_set_inc(REG1,0x2727,0x1)(hi)
0x0A8C644D,	//0x0a34		VoC_lw16i(RL6_LO,0xf0)(lo)	|	VoC_lw16i(RL6_HI,0x644d)(hi)
0x5FA900F0,	//0x0a36		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(RL6_LO,0xf0)(hi)
0x7F44EFFE,	//0x0a38		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0xffffffff,IN_PARALLEL)
0x0A82F7A3,	//0x0a3a		VoC_lw16i(REG2,0x262a)(lo)	|	VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)
0xE185262A,	//0x0a3c		VoC_movreg16(REG5,RL6_LO,DEFAULT)	|	VoC_lw16i(REG2,0x262a)(hi)
0xF80D6213,	//0x0a3e		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0x0A4F2C15,	//0x0a40		VoC_loop_i(0x1,0xa)
0xD513E741,	//0x0a42		VoC_bimac32inc_pp(REG2,REG3)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x0a43		VoC_endloop0
0x0A82C9BE,	//0x0a44		VoC_lw16i(REG2,0x262a)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0x7EA4262A,	//0x0a46		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_lw16i(REG2,0x262a)(hi)
0x7F23F7A3,	//0x0a48		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)
0x6213FF44,	//0x0a4a		VoC_aligninc_pp(REG2,REG3,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x5C97F90E,	//0x0a4c		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x5C86F785,	//0x0a4e		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG5,RL6_LO,IN_PARALLEL)
		//0x0a4f		VoC_endloop1
0xE580F80D,	//0x0a50		VoC_return	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
		//0x0a52		CII_Chebps
0x0A81FF45,	//0x0a52		VoC_lw16i(REG1,0x2000)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x0A862000,	//0x0a54		VoC_lw16i(REG6,0x6448)(lo)	|	VoC_lw16i(REG1,0x2000)(hi)
0x0A876448,	//0x0a56		VoC_lw16i(REG7,0x378)(lo)	|	VoC_lw16i(REG6,0x6448)(hi)
0x0A8B0378,	//0x0a58		VoC_lw16i(ACC1_HI,0x100)(lo)	|	VoC_lw16i(REG7,0x378)(hi)
0x0A1A0100,	//0x0a5a		VoC_multf32_rd(REG45,REG3,0x436d)(lo)	|	VoC_lw16i(ACC1_HI,0x100)(hi)
0x9A54436D,	//0x0a5c		VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)	|	VoC_multf32_rd(REG45,REG3,0x436d)(hi)
0xC8A2DDB5,	//0x0a5e		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0xE86AF90C,	//0x0a60		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x9A54CD1D,	//0x0a62		VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)	|	VoC_multf32_rr(ACC1,REG4,REG3,DEFAULT)
0x7BFDFA85,	//0x0a64		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_shr32_ri(ACC1,0x10,DEFAULT)
0xD537CE2B,	//0x0a66		VoC_bimac32inc_pp(REG6,REG7)	|	VoC_mac32_rr(REG5,REG3,IN_PARALLEL)
0xFBFD5DB2,	//0x0a68		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_sw32_p(REG45,REG6,DEFAULT)
0xF90CC962,	//0x0a6a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,ACC1,ACC0,DEFAULT)
		//0x0a6b		VoC_endloop0
0x0A84CD1C,	//0x0a6c		VoC_lw16i(REG4,0x1000)(lo)	|	VoC_multf32_rr(ACC0,REG4,REG3,DEFAULT)
0xFA7C1000,	//0x0a6e		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_lw16i(REG4,0x1000)(hi)
0x5022D537,	//0x0a70		VoC_mac32_rp(REG4,REG2,DEFAULT)	|	VoC_bimac32inc_pp(REG6,REG7)
0xFFC0CD5B,	//0x0a72		VoC_NOP	|	VoC_multf32_rr(REG67,REG5,REG3,IN_PARALLEL)
0xFBD3C8E3,	//0x0a74		VoC_shr32_ri(REG67,0xfffffffa,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0xDF40E580,	//0x0a76		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x0a77		CII_Az_lsp
0x25AA1804,	//0x0a78		VoC_lw16i_set_inc(REG0,0x25aa,0x1)
0xE0954030,	//0x0a7a		VoC_lw16i_short(REG5,0x9,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xDFE94029,	//0x0a7c		VoC_push16(RA,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG5,DEFAULT)
0x04000A86,	//0x0a7e		VoC_lw16i(REG6,0x400)
0x26521806,	//0x0a80		VoC_lw16i_set_inc(REG2,0x2652,0x1)
0x265C1807,	//0x0a82		VoC_lw16i_set_inc(REG3,0x265c,0x1)
0xF3FD5C26,	//0x0a84		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
0x0A84DC36,	//0x0a86		VoC_lw16i(REG4,0x2000)(lo)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
0xE8AA2000,	//0x0a88		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw16i(REG4,0x2000)(hi)
0x9B0B9B04,	//0x0a8a		VoC_multf32inc_rp(REG67,REG4,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0x4B1BFFC0,	//0x0a8c		VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)	|	VoC_NOP
0x6125C91C,	//0x0a8e		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0x875583DF,	//0x0a90		VoC_sub16inc_rp(REG5,REG5,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG3,IN_PARALLEL)
0xDC25DC37,	//0x0a92		VoC_sw16_p(REG5,REG2,DEFAULT)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
		//0x0a93		VoC_endloop0
0x0A82F004,	//0x0a94		VoC_lw16i(REG2,0x2653)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x15042653,	//0x0a96		VoC_sw16_d(REG4,0x2648)(lo)	|	VoC_lw16i(REG2,0x2653)(hi)
0x0A862648,	//0x0a98		VoC_lw16i(REG6,0x5a8)(lo)	|	VoC_sw16_d(REG4,0x2648)(hi)
0x0A8705A8,	//0x0a9a		VoC_lw16i(REG7,0x5e5)(lo)	|	VoC_lw16i(REG6,0x5a8)(hi)
0xD86305E5,	//0x0a9c		VoC_lw16_p(REG3,REG6,DEFAULT)	|	VoC_lw16i(REG7,0x5e5)(hi)
0xDF435FC4,	//0x0a9e		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xDF415FC4,	//0x0aa0		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0x0A522B80,	//0x0aa2		VoC_jal(CII_Chebps)
0xD909DA27,	//0x0aa4		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_sw16_sd(REG7,0x1,DEFAULT)
		//0x0aa5		AZ_LSP_LOOP
0x5913F140,	//0x0aa6		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0xa,DEFAULT)
0x0736D614,	//0x0aa8		VoC_add16_rd(REG6,REG6,0x370)(lo)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x34BE0370,	//0x0aaa		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG7,REG6)(lo)	|	VoC_add16_rd(REG6,REG6,0x370)(hi)
0x34840B0B,	//0x0aac		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG0,REG4)(lo)	|	VoC_bngt16_rr(AZ_LSP_LOOP_END,REG7,REG6)(hi)
0x56250B0B,	//0x0aae		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_bngt16_rr(AZ_LSP_LOOP_END,REG0,REG4)(hi)
0xD863F664,	//0x0ab0		VoC_lw16_p(REG3,REG6,DEFAULT)	|	VoC_movreg16(REG4,REG3,IN_PARALLEL)
0xDD09DD13,	//0x0ab2		VoC_sw32_sd(REG23,0x0,DEFAULT)	|	VoC_sw32_sd(REG67,0x1,DEFAULT)
0x2B80DF42,	//0x0ab4		VoC_jal(CII_Chebps)(lo)	|	VoC_push32(REG45,DEFAULT)
0xD90A0A52,	//0x0ab6		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_jal(CII_Chebps)(hi)
0xDA27CDEC,	//0x0ab8		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0x0B083284,	//0x0aba		VoC_bgtz32_r(AZ_LSP_NOLOOP1,ACC0)
0x0ACF2C09,	//0x0abc		VoC_loop_i(0x1,0x4)
0x780BD911,	//0x0abe		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC0E3F80C,	//0x0ac0		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0x0A522B80,	//0x0ac2		VoC_jal(CII_Chebps)
0xCDE4D624,	//0x0ac4		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0x3284E066,	//0x0ac6		VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(lo)	|	VoC_movreg16(REG6,REG3,DEFAULT)
0xDD0B0ACB,	//0x0ac8		VoC_sw32_sd(REG67,0x0,DEFAULT)	|	VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(hi)
0xD911E5C5,	//0x0aca		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_jump(AZ_LSP_03_01_END)
		//0x0acb		AZ_LSP_03_01_ELSE
0xDA27E0C3,	//0x0acc		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xD90ADD11,	//0x0ace		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
		//0x0acf		AZ_LSP_03_01_END
		//0x0acf		VoC_endloop1
0xD6275911,	//0x0ad0		VoC_lw16_sd(REG7,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC37F431E,	//0x0ad2		VoC_sub16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG3,DEFAULT)
0x0AF43187,	//0x0ad4		VoC_bez16_r(AZ_LSP_03_02_END,REG7)
0xE0065F43,	//0x0ad6		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x0ADB3247,	//0x0ad8		VoC_bnltz16_r(AZ_LSP_ABS_S_1,REG7)
0xFF1CC3BF,	//0x0ada		VoC_movreg32(ACC0,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
		//0x0adb		AZ_LSP_ABS_S_1
0x02BA2B80,	//0x0adc		VoC_jal(CII_NORM_L_ACC0)
0x033D0B09,	//0x0ade		VoC_sub16_dr(REG1,0x33d,REG1)
0x3FFF0A80,	//0x0ae0		VoC_lw16i(REG0,0x3fff)
0xF7215FC1,	//0x0ae2		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x02CC2B80,	//0x0ae4		VoC_jal(CII_DIV_S)
0xCD94DF03,	//0x0ae6		VoC_multf32_rr(ACC0,REG6,REG2,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xFEACDF85,	//0x0ae8		VoC_shr32_rr(ACC0,REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x3247E106,	//0x0aea		VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(lo)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x0B360AEF,	//0x0aec		VoC_sub16_dr(REG6,0x36e,REG6)(lo)	|	VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(hi)
0xD627036E,	//0x0aee		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_sub16_dr(REG6,0x36e,REG6)(hi)
		//0x0aef		AZ_LSP_04_01_ELSE
0xD911CDBB,	//0x0af0		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC2F3FA5B,	//0x0af2		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
		//0x0af4		AZ_LSP_03_02_END
0xD610D923,	//0x0af4		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x3,DEFAULT)
0xDE00C03F,	//0x0af6		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG0,REG7,DEFAULT)
0xDA10DC73,	//0x0af8		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_p(REG3,REG7,DEFAULT)
0x0A82F026,	//0x0afa		VoC_lw16i(REG2,0x265d)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x6C05265D,	//0x0afc		VoC_bez16_d(AZ_LSP_03_03_ELSE,0x2648)(lo)	|	VoC_lw16i(REG2,0x265d)(hi)
0xF0062648,	//0x0afe		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bez16_d(AZ_LSP_03_03_ELSE,0x2648)(hi)
0x26530A82,	//0x0b00		VoC_lw16i(REG2,0x2653)
		//0x0b02		AZ_LSP_03_03_ELSE
0x26481506,	//0x0b02		VoC_sw16_d(REG6,0x2648)
0x2B80DD11,	//0x0b04		VoC_jal(CII_Chebps)(lo)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
0xDA270A52,	//0x0b06		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_jal(CII_Chebps)(hi)
		//0x0b08		AZ_LSP_NOLOOP1
0x2B00DF02,	//0x0b08		VoC_jump_lg(AZ_LSP_LOOP)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xDF840AA5,	//0x0b0a		VoC_pop16(REG4,DEFAULT)	|	VoC_jump_lg(AZ_LSP_LOOP)(hi)
		//0x0b0b		AZ_LSP_LOOP_END
0x5F85DF01,	//0x0b0c		VoC_pop16(REG5,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xD908DF03,	//0x0b0e		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0x03374C34,	//0x0b10		VoC_bnlt16_rd(AZ_LSP_01_02,REG4,0x337)
0xF0097050,	//0x0b12		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x06012B80,	//0x0b14		VoC_jal(CII_Copy_M)
		//0x0b16		AZ_LSP_01_02
0xDF00DFA9,	//0x0b16		VoC_pop32(REG01,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF8FBE580,	//0x0b18		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_return
		//0x0b19		CII_cbseach_subr1
0x25941404,	//0x0b1a		VoC_lw16_d(REG4,0x2594)
0x03400B25,	//0x0b1c		VoC_sub16_dr(REG5,0x340,REG4)
0xF0054021,	//0x0b1e		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
0x0B273145,	//0x0b20		VoC_bngtz16_r(cbsearch_10000,REG5)
0xE7438EC4,	//0x0b22		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)
0x8EC4810C,	//0x0b24		VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
		//0x0b26		VoC_endloop0
0xE580DC94,	//0x0b26		VoC_return	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0b27		cbsearch_10000
		//0x0b28		CII_cor_h_x
0xE2805FE9,	//0x0b28		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4456AB,	//0x0b2a		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16_sd(ACC1_HI,0x9,DEFAULT)
0xF00756B6,	//0x0b2c		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0xa,DEFAULT)
0xFF417F47,	//0x0b2e		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xF69270AE,	//0x0b30		VoC_movreg16(INC2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x5,DEFAULT)
		//0x0b32		cor_h_x_loop_begin
0xC2177F46,	//0x0b32		VoC_sub16_rr(REG7,REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x0B4A2E29,	//0x0b34		VoC_loop_r(1,REG5)
0xF76140B0,	//0x0b36		VoC_movreg16(REG1,ACC1_HI,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG2,REG6,DEFAULT)
0xC09767C2,	//0x0b38		VoC_add16_rr(REG7,REG2,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x0b3a		VoC_endloop0
0x0A80D401,	//0x0b3a		VoC_lw16i(REG0,0x262a)(lo)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0x5E10262A,	//0x0b3c		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i(REG0,0x262a)(hi)
0x0A80C1C7,	//0x0b3e		VoC_lw16i(REG0,0x28)(lo)	|	VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)
0xDDBC0028,	//0x0b40		VoC_sw32_p(ACC0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x28)(hi)
0x0B4633C4,	//0x0b42		VoC_bnltz32_r(cor_h_x_250,ACC0)
0x036E0BA4,	//0x0b44		VoC_sub32_dr(ACC0,0x36e,ACC0)
		//0x0b46		cor_h_x_250
0x36A6C217,	//0x0b46		VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(lo)	|	VoC_sub16_rr(REG7,REG0,REG2,DEFAULT)
0xFF260B4A,	//0x0b48		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(hi)
		//0x0b4a		cor_h_x_200
		//0x0b4a		VoC_endloop1
0x7A0EFF44,	//0x0b4a		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x49BFDE18,	//0x0b4c		VoC_add32_rr(RL7,RL6,RL7,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x3423F662,	//0x0b4e		VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(lo)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x61470B32,	//0x0b50		VoC_movreg16(REG7,ACC1_LO,DEFAULT)	|	VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(hi)
0x2B80FF3C,	//0x0b52		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xDFA902BA,	//0x0b54		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x1808C3CA,	//0x0b56		VoC_lw16i_set_inc(REG0,0x262a,0x2)(lo)	|	VoC_sub16_rr(REG2,REG7,REG1,DEFAULT)
0x1805262A,	//0x0b58		VoC_lw16i_set_inc(REG1,0x6448,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x262a,0x2)(hi)
0x14856448,	//0x0b5a		VoC_lw32_d(ACC1,0x382)(lo)	|	VoC_lw16i_set_inc(REG1,0x6448,0x1)(hi)
0xD9C20382,	//0x0b5c		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32_d(ACC1,0x382)(hi)
0xFE926D05,	//0x0b5e		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD9C248AC,	//0x0b60		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG45,ACC1,DEFAULT)
0xDC99FE92,	//0x0b62		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
		//0x0b63		VoC_endloop0
0xDFE9E580,	//0x0b64		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b65		CII_cor_h
0x56A2F048,	//0x0b66		VoC_lw16_sd(REG2,0x9,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
0x6A82F00A,	//0x0b68		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xD512E009,	//0x0b6a		VoC_bimac32inc_pp(REG2,REG2)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
		//0x0b6b		VoC_endloop0
0x03821486,	//0x0b6c		VoC_lw32_d(RL6,0x382)
0xF0087F20,	//0x0b6e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x03804491,	//0x0b70		VoC_bne16_rd(COR_H101,REG1,0x380)
0x1809D6A0,	//0x0b72		VoC_lw16i_set_inc(REG1,0x262a,0x2)(lo)	|	VoC_lw16_sd(REG0,0x9,DEFAULT)
0x7022262A,	//0x0b74		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x262a,0x2)(hi)
0x2B80E0A3,	//0x0b76		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0xa,IN_PARALLEL)
0xE5D90606,	//0x0b78		VoC_jump(COR_H102)	|	VoC_jal(CII_scale)(hi)
		//0x0b7a		COR_H101
0x2B80FA08,	//0x0b7a		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
0xFBC806D4,	//0x0b7c		VoC_shr32_ri(REG01,0xfffffff9,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
0x7EB81804,	//0x0b7e		VoC_lw16i_set_inc(REG0,0x7eb8,0x1)
0xD6A04645,	//0x0b80		VoC_lw16_sd(REG0,0x9,IN_PARALLEL)	|	VoC_multf16_rr(REG5,REG1,REG0,DEFAULT)
0x262A1809,	//0x0b82		VoC_lw16i_set_inc(REG1,0x262a,0x2)
0x9B44F6D9,	//0x0b84		VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff6,DEFAULT)
0xC9349B45,	//0x0b86		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG0,DEFAULT)
0xC9756A88,	//0x0b88		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF72A1B44,	//0x0b8a		VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)
0x4934FFC0,	//0x0b8c		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_NOP
0xDDCD9B45,	//0x0b8e		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)
		//0x0b90		VoC_endloop0
0xF7F9C975,	//0x0b90		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)
		//0x0b92		COR_H102
0x1808F146,	//0x0b92		VoC_lw16i_set_inc(REG0,0x262a,0x2)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0x1809262A,	//0x0b94		VoC_lw16i_set_inc(REG1,0x67a4,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x262a,0x2)(hi)
0x2B8067A4,	//0x0b96		VoC_jal(CII_copy_xy)(lo)	|	VoC_lw16i_set_inc(REG1,0x67a4,0x2)(hi)
0xF02F060E,	//0x0b98		VoC_lw16i_short(RL7_HI,0x1,DEFAULT)	|	VoC_jal(CII_copy_xy)(hi)
0x262A1804,	//0x0b9a		VoC_lw16i_set_inc(REG0,0x262a,0x1)
0x67A41805,	//0x0b9c		VoC_lw16i_set_inc(REG1,0x67a4,0x1)
0x64971FBE,	//0x0b9e		VoC_lw16i_set_inc(REG2,0x6497,0xffffffff)
0xDFA99E0C,	//0x0ba0		VoC_pop16(RA,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG0,REG1,DEFAULT)
0xD401C933,	//0x0ba2		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xEA86FFC0,	//0x0ba4		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0xDCA74932,	//0x0ba6		VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0xD401D401,	//0x0ba8		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xDCA5C933,	//0x0baa		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
		//0x0bab		VoC_endloop0
0x262A0A8A,	//0x0bac		VoC_lw16i(ACC1_LO,0x262a)
0x67A40A8B,	//0x0bae		VoC_lw16i(ACC1_HI,0x67a4)
0x677D1FBF,	//0x0bb0		VoC_lw16i_set_inc(REG3,0x677d,0xffffffff)
0x5FC3DF45,	//0x0bb2		VoC_push16(REG3,DEFAULT)	|	VoC_push32(ACC1,DEFAULT)
0x0A8AE26E,	//0x0bb4		VoC_lw16i(ACC1_LO,0x27d9)(lo)	|	VoC_lw16i_short(RL7_LO,0x26,IN_PARALLEL)
0x0A8B27D9,	//0x0bb6		VoC_lw16i(ACC1_HI,0x27b2)(lo)	|	VoC_lw16i(ACC1_LO,0x27d9)(hi)
0x2C4F27B2,	//0x0bb8		VoC_loop_i(0x1,0x27)(lo)	|	VoC_lw16i(ACC1_HI,0x27b2)(hi)
0xFF3A0BD3,	//0x0bba		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_loop_i(0x1,0x27)(hi)
0x4069D908,	//0x0bbc		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x40E3FF29,	//0x0bbe		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_movreg32(REG23,ACC1,IN_PARALLEL)
0x0B2FD616,	//0x0bc0		VoC_sub16_dr(REG7,0x340,REG5)(lo)	|	VoC_lw16_sd(REG6,0x0,IN_PARALLEL)
0x41340340,	//0x0bc2		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_sub16_dr(REG7,0x340,REG5)(hi)
0x5401E275,	//0x0bc4		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0x27,IN_PARALLEL)
0x702DFF34,	//0x0bc6		VoC_lw16i_short(RL6_HI,0x1,DEFAULT)	|	VoC_movreg32(ACC0,RL6,IN_PARALLEL)
0xE7C8DF46,	//0x0bc8		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_push32(RL6,IN_PARALLEL)
0x0FDED8A7,	//0x0bca		VoC_multf16inc_rp(REG6,REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
0xE127F6AC,	//0x0bcc		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_movreg16(RL6_LO,REG5,IN_PARALLEL)
0xD401C7F7,	//0x0bce		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_multf16_rr(REG7,REG7,REG6,DEFAULT)
0xDC47CAB2,	//0x0bd0		VoC_sw16_p(REG7,REG4,DEFAULT)	|	VoC_sub32_rr(REG45,REG45,RL6,DEFAULT)
		//0x0bd1		VoC_endloop0
0x093FDF06,	//0x0bd2		VoC_add32_rd(RL7,RL7,0x384)(lo)	|	VoC_pop32(RL6,DEFAULT)
		//0x0bd3		VoC_endloop1
0x5F050384,	//0x0bd4		VoC_pop32(ACC1,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x384)(hi)
0xE580DF83,	//0x0bd6		VoC_return	|	VoC_pop16(REG3,IN_PARALLEL)
		//0x0bd8		CII_G_pitch
0x1808DFE9,	//0x0bd8		VoC_lw16i_set_inc(REG0,0x6470,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x18096470,	//0x0bda		VoC_lw16i_set_inc(REG1,0x6448,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x6470,0x2)(hi)
0x180A6448,	//0x0bdc		VoC_lw16i_set_inc(REG2,0x24f6,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x6448,0x2)(hi)
0x148524F6,	//0x0bde		VoC_lw32_d(ACC1,0x370)(lo)	|	VoC_lw16i_set_inc(REG2,0x24f6,0x2)(hi)
0x600D0370,	//0x0be0		VoC_movreg16(RL6_HI,REG0,DEFAULT)	|	VoC_lw32_d(ACC1,0x370)(hi)
0x600CF62F,	//0x0be2		VoC_movreg16(RL6_LO,REG0,DEFAULT)	|	VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)
0xF087F62E,	//0x0be4		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)
0xD9D26A85,	//0x0be6		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF8157814,	//0x0be8		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x5DCADDC2,	//0x0bea		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x0beb		VoC_endloop0
0xFF30D9D2,	//0x0bec		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)
0x0C0A2C05,	//0x0bee		VoC_loop_i(0x1,0x2)
0x00010A96,	//0x0bf0		VoC_lw16i(STATUS,0x1)
0xFF2C6A82,	//0x0bf2		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x0bf4		VoC_endloop0
0xFFC0D501,	//0x0bf4		VoC_NOP	|	VoC_bimac32inc_pp(REG0,REG1)
0x0BFB2F00,	//0x0bf6		VoC_bnoe0z16_r(G_PITCH_01_ELSE)
0x02BA2B80,	//0x0bf8		VoC_jal(CII_NORM_L_ACC0)
0xFF38E5C8,	//0x0bfa		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_jump(G_PITCH_01_END)
		//0x0bfb		G_PITCH_01_ELSE
0xEA81FF2C,	//0x0bfc		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x0bfe		VoC_endloop0
0x2B80D501,	//0x0bfe		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG1)
0xC27902BA,	//0x0c00		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
		//0x0c02		G_PITCH_01_END
0x03820924,	//0x0c02		VoC_add32_rd(ACC0,ACC0,0x382)
0xF6287047,	//0x0c04		VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0xFF217F0A,	//0x0c06		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_movreg32(REG45,REG23,DEFAULT)
0x24A61809,	//0x0c08		VoC_lw16i_set_inc(REG1,0x24a6,0x2)
		//0x0c0a		VoC_endloop1
0xF62F61A0,	//0x0c0a		VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x1804F1E1,	//0x0c0c		VoC_lw16i_set_inc(REG0,0x258c,0x1)(lo)	|	VoC_lw16i_short(REG1,0xf,DEFAULT)
0xC266258C,	//0x0c0e		VoC_sub16_rr(REG6,REG1,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x258c,0x1)(hi)
0xC2575C85,	//0x0c10		VoC_sub16_rr(REG7,REG1,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xC2A65C86,	//0x0c12		VoC_sub16_rr(REG6,REG2,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xE0025C83,	//0x0c14		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0x03320799,	//0x0c16		VoC_sub16_rd(REG1,REG3,0x332)
0xF80B5C87,	//0x0c18		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x0C2A3201,	//0x0c1a		VoC_bltz16_r(G_PITCH_03_END1,REG1)
0xF6A16060,	//0x0c1c		VoC_movreg16(REG1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x02CC2B80,	//0x0c1e		VoC_jal(CII_DIV_S)
0xE0737E32,	//0x0c20		VoC_lw16i_short(REG3,0x7,IN_PARALLEL)	|	VoC_shr16_rr(REG2,REG6,DEFAULT)
0x43123C22,	//0x0c22		VoC_bngt16_rd(G_PITCH_03_END,REG2,0x4312)
0x4CCD0A82,	//0x0c24		VoC_lw16i(REG2,0x4ccd)
		//0x0c26		G_PITCH_03_END
0x40904423,	//0x0c26		VoC_bne16_rd(G_PITCH_03_END1,REG3,0x4090)
0x7FFC1642,	//0x0c28		VoC_and16_ri(REG2,0xfffc)
		//0x0c2a		G_PITCH_03_END1
0x1502DFA9,	//0x0c2a		VoC_sw16_d(REG2,0x2596)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5802596,	//0x0c2c		VoC_return	|	VoC_sw16_d(REG2,0x2596)(hi)
		//0x0c2e		CII_Pre_Process
0x1D401807,	//0x0c2e		VoC_lw16i_set_inc(REG3,0x1d40,0x1)
0x1C9E1480,	//0x0c30		VoC_lw32_d(REG01,0x1c9e)
0x1C9C1806,	//0x0c32		VoC_lw16i_set_inc(REG2,0x1c9c,0x1)
0x1C9A1483,	//0x0c34		VoC_lw32_d(REG67,0x1c9a)
0xFFC05992,	//0x0c36		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0x0C572D40,	//0x0c38		VoC_loop_i(0x0,0xa0)
0x716B0AC2,	//0x0c3a		VoC_lw16i(REG2,0xf16b)
0xC796CDD4,	//0x0c3c		VoC_multf16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0x0E30E022,	//0x0c3e		VoC_mac32_rd(REG6,0x370)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x0A810370,	//0x0c40		VoC_lw16i(REG1,0x1e7f)(lo)	|	VoC_mac32_rd(REG6,0x370)(hi)
0xCE291E7F,	//0x0c42		VoC_mac32_rr(REG5,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x1e7f)(hi)
0x6001C70E,	//0x0c44		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_multf16_rr(REG6,REG4,REG1,DEFAULT)
0x0E30D830,	//0x0c46		VoC_mac32_rd(REG6,0x370)(lo)	|	VoC_lw16_p(REG0,REG3,IN_PARALLEL)
0x0A860370,	//0x0c48		VoC_lw16i(REG6,0x76b)(lo)	|	VoC_mac32_rd(REG6,0x370)(hi)
0x0AC7076B,	//0x0c4a		VoC_lw16i(REG7,0xf12a)(lo)	|	VoC_lw16i(REG6,0x76b)(hi)
0xCE06712A,	//0x0c4c		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_lw16i(REG7,0xf12a)(hi)
0xCE16CE0F,	//0x0c4e		VoC_mac32_rr(REG2,REG6,DEFAULT)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0xFBECFF13,	//0x0c50		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x03820922,	//0x0c52		VoC_add32_rd(REG45,ACC0,0x382)
0x5CB5E104,	//0x0c54		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xE125F90C,	//0x0c56		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
		//0x0c57		VoC_endloop0
0x1C9E1580,	//0x0c58		VoC_sw32_d(REG01,0x1c9e)
0x1C9A1583,	//0x0c5a		VoC_sw32_d(REG67,0x1c9a)
0x1C9C1582,	//0x0c5c		VoC_sw32_d(REG45,0x1c9c)
0xDFE9E580,	//0x0c5e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c5f		CII_subframePreProc
0x408F1406,	//0x0c60		VoC_lw16_d(REG6,0x408f)
0x1805F030,	//0x0c62		VoC_lw16i_set_inc(REG1,0x4308,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x38264308,	//0x0c64		VoC_bgt16_rd(cod_amr114,REG6,0x34a)(lo)	|	VoC_lw16i_set_inc(REG1,0x4308,0x1)(hi)
0x1805034A,	//0x0c66		VoC_lw16i_set_inc(REG1,0x433a,0x1)(lo)	|	VoC_bgt16_rd(cod_amr114,REG6,0x34a)(hi)
0xDFCF433A,	//0x0c68		VoC_push16(RL7_HI,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x433a,0x1)(hi)
		//0x0c69		cod_amr114
0x262A1806,	//0x0c6a		VoC_lw16i_set_inc(REG2,0x262a,0x1)
0x0C742C05,	//0x0c6c		VoC_loop_i(0x1,0x2)
0x2B80D660,	//0x0c6e		VoC_jal(CII_Weight_Ai)(lo)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0xD6550974,	//0x0c70		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_jal(CII_Weight_Ai)(hi)
0x43121805,	//0x0c72		VoC_lw16i_set_inc(REG1,0x4312,0x1)
		//0x0c74		VoC_endloop1
0x263E1806,	//0x0c74		VoC_lw16i_set_inc(REG2,0x263e,0x1)
0x262A1804,	//0x0c76		VoC_lw16i_set_inc(REG0,0x262a,0x1)
0x20531805,	//0x0c78		VoC_lw16i_set_inc(REG1,0x2053,0x1)
0xD8866963,	//0x0c7a		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDC96D886,	//0x0c7c		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x0c7d		VoC_endloop0
0xE2867000,	//0x0c7e		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x20531807,	//0x0c80		VoC_lw16i_set_inc(REG3,0x2053,0x1)
0x63240A87,	//0x0c82		VoC_lw16i(REG7,0x6324)
0x205E1805,	//0x0c84		VoC_lw16i_set_inc(REG1,0x205e,0x1)
0x0D4B2B80,	//0x0c86		VoC_jal(CII_Syn_filt)
0x263E0A85,	//0x0c88		VoC_lw16i(REG5,0x263e)
0x63241807,	//0x0c8a		VoC_lw16i_set_inc(REG3,0x6324,0x1)
0xE2866067,	//0x0c8c		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0x205E1805,	//0x0c8e		VoC_lw16i_set_inc(REG1,0x205e,0x1)
0x0D4B2B80,	//0x0c90		VoC_jal(CII_Syn_filt)
0xF030D650,	//0x0c92		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x25461806,	//0x0c94		VoC_lw16i_set_inc(REG2,0x2546,0x1)
0x1807D636,	//0x0c96		VoC_lw16i_set_inc(REG3,0x1d18,0x1)(lo)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x6C041D18,	//0x0c98		VoC_bez16_d(subframePreProc500,0x4091)(lo)	|	VoC_lw16i_set_inc(REG3,0x1d18,0x1)(hi)
0x18074091,	//0x0c9a		VoC_lw16i_set_inc(REG3,0x1d40,0x1)(lo)	|	VoC_bez16_d(subframePreProc500,0x4091)(hi)
0xC19B1D40,	//0x0c9c		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1d40,0x1)(hi)
		//0x0c9d		subframePreProc500
0x08D72B80,	//0x0c9e		VoC_jal(CII_Residu_new)
0x1808D636,	//0x0ca0		VoC_lw16i_set_inc(REG0,0x2546,0x2)(lo)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x18092546,	//0x0ca2		VoC_lw16i_set_inc(REG1,0x1fb2,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x2546,0x2)(hi)
0xC1891FB2,	//0x0ca4		VoC_add16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1fb2,0x2)(hi)
0x2B80F146,	//0x0ca6		VoC_jal(CII_copy_xy)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0xD655060E,	//0x0ca8		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_jal(CII_copy_xy)(hi)
0x1FB21807,	//0x0caa		VoC_lw16i_set_inc(REG3,0x1fb2,0x1)
0xC19BD636,	//0x0cac		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x21B80A87,	//0x0cae		VoC_lw16i(REG7,0x21b8)
0xE2867000,	//0x0cb0		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x21AE1805,	//0x0cb2		VoC_lw16i_set_inc(REG1,0x21ae,0x1)
0x0D4B2B80,	//0x0cb4		VoC_jal(CII_Syn_filt)
0x262A1804,	//0x0cb6		VoC_lw16i_set_inc(REG0,0x262a,0x1)
0x24A61806,	//0x0cb8		VoC_lw16i_set_inc(REG2,0x24a6,0x1)
0x21B81807,	//0x0cba		VoC_lw16i_set_inc(REG3,0x21b8,0x1)
0x08D72B80,	//0x0cbc		VoC_jal(CII_Residu_new)
0x263E0A85,	//0x0cbe		VoC_lw16i(REG5,0x263e)
0x24A61807,	//0x0cc0		VoC_lw16i_set_inc(REG3,0x24a6,0x1)
0xE2866067,	//0x0cc2		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0xDF817000,	//0x0cc4		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x2B80F031,	//0x0cc6		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDFA90D4B,	//0x0cc8		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0xE580FFC0,	//0x0cca		VoC_return	|	VoC_NOP
		//0x0ccc		CII_Int_lpc_only_2
0xF053F052,	//0x0ccc		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xD99BD9D2,	//0x0cce		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xE8ABFFC0,	//0x0cd0		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0xF8157814,	//0x0cd2		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xF8177816,	//0x0cd4		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xBAFF3AF6,	//0x0cd6		VoC_sub16inc_pr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_sub16inc_pr(REG6,REG3,REG6,DEFAULT)
0xC17D4134,	//0x0cd8		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xDDCAD99B,	//0x0cda		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
		//0x0cdc		VoC_endloop0
0xE580D9D2,	//0x0cdc		VoC_return	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x0cde		CII_Int_lpc_1to3
0xE064DFE9,	//0x0cde		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x64481809,	//0x0ce0		VoC_lw16i_set_inc(REG1,0x6448,0x2)
0xDF415FC6,	//0x0ce2		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xF6455F40,	//0x0ce4		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x2B80FF11,	//0x0ce6		VoC_jal(CII_Int_lpc_only_2)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0xD9080CCC,	//0x0ce8		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Int_lpc_only_2)(hi)
0x080E2B80,	//0x0cea		VoC_jal(CII_Lsp_Az)
0xD911D908,	//0x0cec		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x097B2B80,	//0x0cee		VoC_jal(CII_Int_lpc_only)
0x0700D908,	//0x0cf0		VoC_add16_rd(REG0,REG0,0x338)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x2B800338,	//0x0cf2		VoC_jal(CII_Lsp_Az)(lo)	|	VoC_add16_rd(REG0,REG0,0x338)(hi)
0xD908080E,	//0x0cf4		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Lsp_Az)(hi)
0x2B80D911,	//0x0cf6		VoC_jal(CII_Int_lpc_only_2)(lo)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xD9080CCC,	//0x0cf8		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Int_lpc_only_2)(hi)
0xC010F2C2,	//0x0cfa		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x16,DEFAULT)
0x080E2B80,	//0x0cfc		VoC_jal(CII_Lsp_Az)
0xDF00DF86,	//0x0cfe		VoC_pop32(REG01,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x0D083186,	//0x0d00		VoC_bez16_r(Int_lpc_1to3_L,REG6)
0xE2175909,	//0x0d02		VoC_lw16i_short(REG7,0x21,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xC0386061,	//0x0d04		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x080E2B80,	//0x0d06		VoC_jal(CII_Lsp_Az)
		//0x0d08		Int_lpc_1to3_L
0xDF01DFA9,	//0x0d08		VoC_pop32(REG23,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xC376E580,	//0x0d0a		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_return
		//0x0d0b		CII_Pred_lt_3or6
0xF00577F0,	//0x0d0c		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF01B70D2,	//0x0d0e		VoC_lw16i_short(INC3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x036E0B39,	//0x0d10		VoC_sub16_dr(REG1,0x36e,REG7)
0x0D153182,	//0x0d12		VoC_bez16_r(PRED_IT_3OR6_001,REG2)
0xF024F8F9,	//0x0d14		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
		//0x0d15		PRED_IT_3OR6_001
0x0A87F0C3,	//0x0d16		VoC_lw16i(REG7,0x43be)(lo)	|	VoC_lw16i_short(REG3,0x6,DEFAULT)
0x324143BE,	//0x0d18		VoC_bnltz16_r(PRED_IT6_003,REG1)(lo)	|	VoC_lw16i(REG7,0x43be)(hi)
0xC0590D1D,	//0x0d1a		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_bnltz16_r(PRED_IT6_003,REG1)(hi)
0xC1CAC3A6,	//0x0d1c		VoC_add16_rr(REG2,REG7,REG1,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
		//0x0d1d		PRED_IT6_003
0xC0FBC2CB,	//0x0d1e		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
0x03821484,	//0x0d20		VoC_lw32_d(ACC0,0x382)
0xFF267F0F,	//0x0d22		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x0D2E2C51,	//0x0d24		VoC_loop_i(0x1,0x28)
0xC1A660C0,	//0x0d26		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0xF6C16943,	//0x0d28		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD40BD402,	//0x0d2a		VoC_mac32inc_pp(REG1,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
		//0x0d2b		VoC_endloop0
0xC165FF39,	//0x0d2c		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_movreg32(REG23,RL7,DEFAULT)
		//0x0d2e		VoC_endloop1
0xFF345C59,	//0x0d2e		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG5,DEFAULT)
0xFFC06580,	//0x0d30		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0d32		CII_build_code_com2
0x27A81805,	//0x0d32		VoC_lw16i_set_inc(REG1,0x27a8,0x1)
0x67A41807,	//0x0d34		VoC_lw16i_set_inc(REG3,0x67a4,0x1)
0x262A1806,	//0x0d36		VoC_lw16i_set_inc(REG2,0x262a,0x1)
0xFF0E6785,	//0x0d38		VoC_movreg32(RL6,REG23,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x148487CD,	//0x0d3a		VoC_lw32_d(ACC0,0x382)(lo)	|	VoC_sub16inc_rp(REG5,REG7,REG1,DEFAULT)
0xDCB50382,	//0x0d3c		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw32_d(ACC0,0x382)(hi)
		//0x0d3d		VoC_endloop0
0xFF317F27,	//0x0d3e		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0D492C51,	//0x0d40		VoC_loop_i(0x1,0x28)
0xD831E784,	//0x0d42		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD129D8A5,	//0x0d44		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x0d46		VoC_endloop0
0x7F3CDCB1,	//0x0d46		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
0xDC89FF31,	//0x0d48		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_movreg32(REG23,RL6,IN_PARALLEL)
		//0x0d49		VoC_endloop1
0xDF40E580,	//0x0d4a		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x0d4b		CII_Syn_filt
0x64E81806,	//0x0d4c		VoC_lw16i_set_inc(REG2,0x64e8,0x1)
0xD8946944,	//0x0d4e		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xE0105894,	//0x0d50		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x0d52		VoC_endloop0
0xF0085CA4,	//0x0d52		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC1455854,	//0x0d54		VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG5,DEFAULT)
0xDFE960A0,	//0x0d56		VoC_push16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x64F11FB9,	//0x0d58		VoC_lw16i_set_inc(REG1,0x64f1,0xfffffffe)
0x0D652E31,	//0x0d5a		VoC_loop_r(1,REG6)
0x68A2E201,	//0x0d5c		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD5819B1C,	//0x0d5e		VoC_bimsu32inc_pp(REG0,REG1)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,IN_PARALLEL)
		//0x0d5f		VoC_endloop0
0xFBECE0A0,	//0x0d60		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x03820924,	//0x0d62		VoC_add32_rd(ACC0,ACC0,0x382)
0xDCA9E041,	//0x0d64		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x0d65		VoC_endloop1
0x64F21808,	//0x0d66		VoC_lw16i_set_inc(REG0,0x64f2,0x2)
0xF00960C5,	//0x0d68		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF6E17816,	//0x0d6a		VoC_movreg16(REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x060E2B80,	//0x0d6c		VoC_jal(CII_copy_xy)
0x034A441E,	//0x0d6e		VoC_bne16_rd(SYN_FILT_01,REG6,0x34a)
0xD908DD8C,	//0x0d70		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x0d71		SYN_FILT_01
0x0D793180,	//0x0d72		VoC_bez16_r(Syn_filt103,REG0)
0x64E80A80,	//0x0d74		VoC_lw16i(REG0,0x64e8)
0x2B80C028,	//0x0d76		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xDFA90601,	//0x0d78		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
		//0x0d79		Syn_filt103
0xE580DF00,	//0x0d7a		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0d7c		CII_amr_dec_com_sub1
0x5F80F8FD,	//0x0d7c		VoC_pop16(REG0,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x2006E286,	//0x0d7e		VoC_lw16d_set_inc(REG2,0x254a,0x1)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x6C03254A,	//0x0d80		VoC_bez16_d(amr_dec_com_sub1_L1,0x4091)(lo)	|	VoC_lw16d_set_inc(REG2,0x254a,0x1)(hi)
0xF8F54091,	//0x0d82		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_bez16_d(amr_dec_com_sub1_L1,0x4091)(hi)
		//0x0d84		amr_dec_com_sub1_L1
0x4C8AF030,	//0x0d84		VoC_bnlt16_rd(Dec_amr_L32A,REG2,0x340)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x43940340,	//0x0d86		VoC_sub16_rr(REG4,REG6,REG2,DEFAULT)	|	VoC_bnlt16_rd(Dec_amr_L32A,REG2,0x340)(hi)
0x8F46C082,	//0x0d88		VoC_multf16inc_rp(REG6,REG5,REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)
0x8196E703,	//0x0d8a		VoC_add16_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xDCA68F46,	//0x0d8c		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_multf16inc_rp(REG6,REG5,REG0,DEFAULT)
		//0x0d8d		VoC_endloop0
		//0x0d8e		Dec_amr_L32A
0x1505D632,	//0x0d8e		VoC_sw16_d(REG5,0x2551)(lo)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xD8A62551,	//0x0d90		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16_d(REG5,0x2551)(hi)
0xE580DA32,	//0x0d92		VoC_return	|	VoC_sw16_sd(REG2,0x2,DEFAULT)
		//0x0d94		CII_amr_dec_com_sub3
0xDF43F004,	//0x0d94		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x251E1804,	//0x0d96		VoC_lw16i_set_inc(REG0,0x251e,0x1)
0x22801805,	//0x0d98		VoC_lw16i_set_inc(REG1,0x2280,0x1)
0x26021806,	//0x0d9a		VoC_lw16i_set_inc(REG2,0x2602,0x1)
0xC33F6D0A,	//0x0d9c		VoC_sub16_rr(REG7,REG4,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xCCF4D813,	//0x0d9e		VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)	|	VoC_lw16_p(REG3,REG1,DEFAULT)
0xDC83D12A,	//0x0da0		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG2,DEFAULT)
0x0924FEBC,	//0x0da2		VoC_add32_rd(ACC0,ACC0,0x382)(lo)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0xF0440382,	//0x0da4		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x382)(hi)
		//0x0da6		VoC_endloop0
0xF005DC99,	//0x0da6		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x408E4894,	//0x0da8		VoC_blt16_rd(Dec_amr_L64,REG4,0x408e)
0x25626C08,	//0x0daa		VoC_bez16_d(Dec_amr_L64,0x2562)
0x3186D913,	//0x0dac		VoC_bez16_r(Dec_amr_L64,REG6)(lo)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x3C1F0DB2,	//0x0dae		VoC_bngt16_rd(Dec_amr_L64,REG7,0x331)(lo)	|	VoC_bez16_r(Dec_amr_L64,REG6)(hi)
0xF0250331,	//0x0db0		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bngt16_rd(Dec_amr_L64,REG7,0x331)(hi)
		//0x0db2		Dec_amr_L64
0x1807D91E,	//0x0db2		VoC_lw16i_set_inc(REG3,0x2356,0x1)(lo)	|	VoC_lw32_sd(RL6,0x2,DEFAULT)
0x15052356,	//0x0db4		VoC_sw16_d(REG5,0x235e)(lo)	|	VoC_lw16i_set_inc(REG3,0x2356,0x1)(hi)
0x1806235E,	//0x0db6		VoC_lw16i_set_inc(REG2,0x251e,0x1)(lo)	|	VoC_sw16_d(REG5,0x235e)(hi)
0x1407251E,	//0x0db8		VoC_lw16_d(REG7,0x254e)(lo)	|	VoC_lw16i_set_inc(REG2,0x251e,0x1)(hi)
0x1804254E,	//0x0dba		VoC_lw16i_set_inc(REG0,0x2602,0x1)(lo)	|	VoC_lw16_d(REG7,0x254e)(hi)
0xDFC32602,	//0x0dbc		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2602,0x1)(hi)
0xDFC0DFC2,	//0x0dbe		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x235C180A,	//0x0dc0		VoC_lw16i_set_inc(REG2,0x235c,0x2)
0x23591FBF,	//0x0dc2		VoC_lw16i_set_inc(REG3,0x2359,0xffffffff)
0xD9D2DFC2,	//0x0dc4		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xE0245990,	//0x0dc6		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x235A1FBE,	//0x0dc8		VoC_lw16i_set_inc(REG2,0x235a,0xffffffff)
0xD8B66883,	//0x0dca		VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCA6D8B6,	//0x0dcc		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x0dcd		VoC_endloop0
0xE0135C27,	//0x0dce		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0x05A14C37,	//0x0dd0		VoC_bnlt16_rd(Phdisp_L1,REG7,0x5a1)
0x3C1FF004,	//0x0dd2		VoC_bngt16_rd(Phdisp_L1,REG7,0x59c)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF024059C,	//0x0dd4		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt16_rd(Phdisp_L1,REG7,0x59c)(hi)
		//0x0dd6		Phdisp_L1
0x0A2BF032,	//0x0dd6		VoC_multf32_rd(REG67,REG5,0x37e)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x3141037E,	//0x0dd8		VoC_bngtz16_r(Phdisp_L5,REG1)(lo)	|	VoC_multf32_rd(REG67,REG5,0x37e)(hi)
0xC2590DDC,	//0x0dda		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_bngtz16_r(Phdisp_L5,REG1)(hi)
		//0x0ddc		Phdisp_L5
0xC8F3FBF3,	//0x0ddc		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)
0x25504C27,	//0x0dde		VoC_bnlt16_rd(Phdisp_L4,REG7,0x2550)
0xFFC07041,	//0x0de0		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
		//0x0de2		Phdisp_L4
0x0DF231C1,	//0x0de2		VoC_bnez16_r(Phdisp_L8,REG1)
0xE00668A6,	//0x0de4		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x4C1FD8A7,	//0x0de6		VoC_bnlt16_rd(Phdisp_L7,REG7,0x59c)(lo)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
0xC19E059C,	//0x0de8		VoC_add16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_bnlt16_rd(Phdisp_L7,REG7,0x59c)(hi)
		//0x0dea		Phdisp_L7
		//0x0dea		VoC_endloop0
0x3C1EFFC0,	//0x0dea		VoC_bngt16_rd(Phdisp_L6,REG6,0x330)(lo)	|	VoC_NOP
0xF0040330,	//0x0dec		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rd(Phdisp_L6,REG6,0x330)(hi)
		//0x0dee		Phdisp_L6
0x3C1AC31A,	//0x0dee		VoC_bngt16_rd(Phdisp_L8,REG2,0x235c)(lo)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0xE044235C,	//0x0df0		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_bngt16_rd(Phdisp_L8,REG2,0x235c)(hi)
		//0x0df2		Phdisp_L8
0x0DF73141,	//0x0df2		VoC_bngtz16_r(Phdisp_L9,REG1)
0x03304C1C,	//0x0df4		VoC_bnlt16_rd(Phdisp_L9,REG4,0x330)
0xF053C11C,	//0x0df6		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
		//0x0df7		Phdisp_L9
0x25501405,	//0x0df8		VoC_lw16_d(REG5,0x2550)
0x03374C1D,	//0x0dfa		VoC_bnlt16_rd(Phdisp_L10,REG5,0x337)
0xDF83F044,	//0x0dfc		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x0dfd		Phdisp_L10
0x03704418,	//0x0dfe		VoC_bne16_rd(Phdisp_L11,REG0,0x370)
0xD612F004,	//0x0e00		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0e01		Phdisp_L11
0xDD98DDDA,	//0x0e02		VoC_sw32_p(REG01,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xDFE9E580,	//0x0e04		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0e05		CII_amr_dec_com_sub4
0xD90B5631,	//0x0e06		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x036E0B3F,	//0x0e08		VoC_sub16_dr(REG7,0x36e,REG7)
0xD6226D08,	//0x0e0a		VoC_lw16_sd(REG2,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD12A998C,	//0x0e0c		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_multf32_rp(ACC0,REG6,REG1,DEFAULT)
0xFEBCF030,	//0x0e0e		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF033C934,	//0x0e10		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x0e12		VoC_endloop0
0x5F05DC99,	//0x0e12		VoC_pop32(ACC1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x5632FF44,	//0x0e14		VoC_lw16_sd(REG2,0x2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xEA81F00A,	//0x0e16		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
		//0x0e18		VoC_endloop0
0xF225D512,	//0x0e18		VoC_lw16i_short(REG5,0x11,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG2)
0x2B80FA0C,	//0x0e1a		VoC_jal(CII_sqrt_l_exp)(lo)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xF80909A5,	//0x0e1c		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_jal(CII_sqrt_l_exp)(hi)
0xC0695FA9,	//0x0e1e		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xFE8C590B,	//0x0e20		VoC_shr32_rr(ACC0,REG1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF7055F80,	//0x0e22		VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xDFE9E580,	//0x0e24		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0e25		CII_amr_dec_com_sub5
0x1FBCF083,	//0x0e26		VoC_lw16i_set_inc(REG0,0x22ca,0xffffffff)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0x6C0822CA,	//0x0e28		VoC_bez16_d(Dec_amr_L67A,0x22cc)(lo)	|	VoC_lw16i_set_inc(REG0,0x22ca,0xffffffff)(hi)
0x3C3322CC,	//0x0e2a		VoC_bngt16_rd(Dec_amr_L67A,REG3,0x22c0)(lo)	|	VoC_bez16_d(Dec_amr_L67A,0x22cc)(hi)
0x6E0822C0,	//0x0e2c		VoC_bnez16_d(Dec_amr_L68,0x2562)(lo)	|	VoC_bngt16_rd(Dec_amr_L67A,REG3,0x22c0)(hi)
0x6E062562,	//0x0e2e		VoC_bnez16_d(Dec_amr_L68,0x22be)(lo)	|	VoC_bnez16_d(Dec_amr_L68,0x2562)(hi)
0xD80522BE,	//0x0e30		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_bnez16_d(Dec_amr_L68,0x22be)(hi)
		//0x0e31		Dec_amr_L67A
0xDC85E922,	//0x0e32		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
		//0x0e34		VoC_endloop0
0xD621D805,	//0x0e34		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
		//0x0e35		Dec_amr_L68
0x24F61804,	//0x0e36		VoC_lw16i_set_inc(REG0,0x24f6,0x1)
0x25511404,	//0x0e38		VoC_lw16_d(REG4,0x2551)
0xF0057F01,	//0x0e3a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x037E3D0C,	//0x0e3c		VoC_bngt16_rd(Dec_amr_L69,REG4,0x37e)
0xE003DF40,	//0x0e3e		VoC_movreg16(REG3,REG0,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xD8866D04,	//0x0e40		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD886838E,	//0x0e42		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
		//0x0e44		VoC_endloop0
0x5908DCB6,	//0x0e44		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x5622E014,	//0x0e46		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x2B80D917,	//0x0e48		VoC_jal(CII_agc)(lo)	|	VoC_lw32_sd(RL7,0x1,IN_PARALLEL)
0xDF011171,	//0x0e4a		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(CII_agc)(hi)
0xD655E043,	//0x0e4c		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
		//0x0e4d		Dec_amr_L69
0x00010A96,	//0x0e4e		VoC_lw16i(STATUS,0x1)
0xD697D644,	//0x0e50		VoC_lw16_sd(REG7,0x8,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0xE28641E7,	//0x0e52		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x40916E03,	//0x0e54		VoC_bnez16_d(Dec_amr_L69new,0x4091)
0xDF43F000,	//0x0e56		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0e57		Dec_amr_L69new
0x22B21805,	//0x0e58		VoC_lw16i_set_inc(REG1,0x22b2,0x1)
0x0D4B2B80,	//0x0e5a		VoC_jal(CII_Syn_filt)
0x40916E24,	//0x0e5c		VoC_bnez16_d(Dec_amr_L76,0x4091)
0x0E7A2E80,	//0x0e5e		VoC_boe0z16_r(Dec_amr_L75)
0x21E61808,	//0x0e60		VoC_lw16i_set_inc(REG0,0x21e6,0x2)
0x00610A85,	//0x0e62		VoC_lw16i(REG5,0x61)
0xE001E84C,	//0x0e64		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xFFC059C3,	//0x0e66		VoC_NAD(IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x0E6D2E29,	//0x0e68		VoC_loop_r(1,REG5)
0xF8177816,	//0x0e6a		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xDDCBD9C3,	//0x0e6c		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0e6d		VoC_endloop1
0x251E1808,	//0x0e6e		VoC_lw16i_set_inc(REG0,0x251e,0x2)
		//0x0e70		VoC_endloop0
0xE1456003,	//0x0e70		VoC_lw16i_short(REG5,0x14,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xD90BD655,	//0x0e72		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x22B21805,	//0x0e74		VoC_lw16i_set_inc(REG1,0x22b2,0x1)
0x2B80F020,	//0x0e76		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE5C70D4B,	//0x0e78		VoC_jump(Dec_amr_L76)	|	VoC_jal(CII_Syn_filt)(hi)
		//0x0e7a		Dec_amr_L75
0x22B21809,	//0x0e7a		VoC_lw16i_set_inc(REG1,0x22b2,0x2)
0x033E0738,	//0x0e7c		VoC_add16_rd(REG0,REG7,0x33e)
0x06012B80,	//0x0e7e		VoC_jal(CII_Copy_M)
		//0x0e80		Dec_amr_L76
0xDFA9DF06,	//0x0e80		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x220E1808,	//0x0e82		VoC_lw16i_set_inc(REG0,0x220e,0x2)
0x21E6180B,	//0x0e84		VoC_lw16i_set_inc(REG3,0x21e6,0x2)
0x2C9AD9C4,	//0x0e86		VoC_loop_i(0x0,0x4d)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C40E8A,	//0x0e88		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x4d)(hi)
		//0x0e8a		VoC_endloop0
0x1404DDDC,	//0x0e8a		VoC_lw16_d(REG4,0x254a)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xF030254A,	//0x0e8c		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_d(REG4,0x254a)(hi)
0xF0075645,	//0x0e8e		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x0338072E,	//0x0e90		VoC_add16_rd(REG6,REG5,0x338)
0x22BD1504,	//0x0e92		VoC_sw16_d(REG4,0x22bd)
0xE2806862,	//0x0e94		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0e96		VoC_endloop0
0x5A16DF85,	//0x0e96		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xE580C145,	//0x0e98		VoC_return	|	VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)
		//0x0e9a		CII_AMR_Decode
0xFF46DFE9,	//0x0e9a		VoC_lw32z(RL6,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0EA03437,	//0x0e9c		VoC_bgt16_rr(DEC_MODE_IS_AMR,REG6,REG7)
0x4303150D,	//0x0e9e		VoC_sw16_d(RL6_HI,0x4303)
		//0x0ea0		DEC_MODE_IS_AMR
0x0EAE3182,	//0x0ea0		VoC_bez16_r(amr_dec_main_L117,REG2)
0x40931502,	//0x0ea2		VoC_sw16_d(REG2,0x4093)
0x10B82B80,	//0x0ea4		VoC_jal(CII_dec_reset)
0x11542B80,	//0x0ea6		VoC_jal(CII_Post_Filter_reset)
0x40916C06,	//0x0ea8		VoC_bez16_d(amr_dec_main_L117,0x4091)
0x14782B80,	//0x0eaa		VoC_jal(CII_dtx_efr_dec_reset)
0x15592B80,	//0x0eac		VoC_jal(CII_reset_rx_dtx)
		//0x0eae		amr_dec_main_L117
0x1C4C1406,	//0x0eae		VoC_lw16_d(REG6,0x1c4c)
0x408E1407,	//0x0eb0		VoC_lw16_d(REG7,0x408e)
0x4425F0E5,	//0x0eb2		VoC_bne16_rd(amr_dec_main_L1,REG5,0x4303)(lo)	|	VoC_lw16i_short(REG5,0x7,DEFAULT)
0xE0C74303,	//0x0eb4		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_bne16_rd(amr_dec_main_L1,REG5,0x4303)(hi)
0xE0E6E5C2,	//0x0eb6		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_jump(amr_dec_main_L2)
		//0x0eb7		amr_dec_main_L1
		//0x0eb8		amr_dec_main_L2
0x1506DFC7,	//0x0eb8		VoC_sw16_d(REG6,0x1c4c)(lo)	|	VoC_push16(REG7,DEFAULT)
0x15071C4C,	//0x0eba		VoC_sw16_d(REG7,0x408e)(lo)	|	VoC_sw16_d(REG6,0x1c4c)(hi)
0x2B80408E,	//0x0ebc		VoC_jal(CII_bits2prm_amr_efr)(lo)	|	VoC_sw16_d(REG7,0x408e)(hi)
0xD61711AD,	//0x0ebe		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_jal(CII_bits2prm_amr_efr)(hi)
0x40931403,	//0x0ec0		VoC_lw16_d(REG3,0x4093)
0x04020A86,	//0x0ec2		VoC_lw16i(REG6,0x402)
0x03704423,	//0x0ec4		VoC_bne16_rd(amr_dec_main_L3,REG3,0x370)
0x05E60A86,	//0x0ec6		VoC_lw16i(REG6,0x5e6)
		//0x0ec8		amr_dec_main_L3
0x1805C1BE,	//0x0ec8		VoC_lw16i_set_inc(REG1,0x2590,0x1)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xD8662590,	//0x0eca		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x2590,0x1)(hi)
0x461A0A82,	//0x0ecc		VoC_lw16i(REG2,0x461a)
0x40916E20,	//0x0ece		VoC_bnez16_d(efr_label6,0x4091)
0x468E1806,	//0x0ed0		VoC_lw16i_set_inc(REG2,0x468e,0x1)
0x0EEE3187,	//0x0ed2		VoC_bez16_r(amr_dec_main_mode,REG7)
0x46A01806,	//0x0ed4		VoC_lw16i_set_inc(REG2,0x46a0,0x1)
0x03704187,	//0x0ed6		VoC_be16_rd(amr_dec_main_mode,REG7,0x370)
0x46B41806,	//0x0ed8		VoC_lw16i_set_inc(REG2,0x46b4,0x1)
0x03304127,	//0x0eda		VoC_be16_rd(amr_dec_main_mode,REG7,0x330)
0x46C81806,	//0x0edc		VoC_lw16i_set_inc(REG2,0x46c8,0x1)
0x03314107,	//0x0ede		VoC_be16_rd(amr_dec_main_mode,REG7,0x331)
0x46DC1806,	//0x0ee0		VoC_lw16i_set_inc(REG2,0x46dc,0x1)
0x033240A7,	//0x0ee2		VoC_be16_rd(amr_dec_main_mode,REG7,0x332)
0x46F01806,	//0x0ee4		VoC_lw16i_set_inc(REG2,0x46f0,0x1)
0x034A4087,	//0x0ee6		VoC_be16_rd(amr_dec_main_mode,REG7,0x34a)
0x47081806,	//0x0ee8		VoC_lw16i_set_inc(REG2,0x4708,0x1)
0x03334027,	//0x0eea		VoC_be16_rd(amr_dec_main_mode,REG7,0x333)
0x46541806,	//0x0eec		VoC_lw16i_set_inc(REG2,0x4654,0x1)
		//0x0eee		amr_dec_main_mode
		//0x0eee		efr_label6
0xD896E786,	//0x0eee		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xE49ED8A3,	//0x0ef0		VoC_xor16_rr(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
0x0EF531C6,	//0x0ef2		VoC_bnez16_r(Dhf_test_L2,REG6)
		//0x0ef4		VoC_endloop0
0xF108FFC0,	//0x0ef4		VoC_lw16i_short(ACC0_LO,0x8,DEFAULT)	|	VoC_NAD
		//0x0ef5		Dhf_test_L2
0x31C6F005,	//0x0ef6		VoC_bnez16_r(Dhf_test_L3,REG6)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF0250EFA,	//0x0ef8		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bnez16_r(Dhf_test_L3,REG6)(hi)
		//0x0efa		Dhf_test_L3
0x40921483,	//0x0efa		VoC_lw32_d(REG67,0x4092)
0x0F003187,	//0x0efc		VoC_bez16_r(amr_dec_main_L3B,REG7)
0xE5C3E0A6,	//0x0efe		VoC_jump(amr_dec_main_L3A)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0f00		amr_dec_main_L3B
0x40931505,	//0x0f00		VoC_sw16_d(REG5,0x4093)
		//0x0f02		amr_dec_main_L3A
0x3186DF43,	//0x0f02		VoC_bez16_r(amr_dec_main_L4,REG6)(lo)	|	VoC_push32(REG67,DEFAULT)
0x31870F0E,	//0x0f04		VoC_bez16_r(amr_dec_main_L4,REG7)(lo)	|	VoC_bez16_r(amr_dec_main_L4,REG6)(hi)
0x18080F0E,	//0x0f06		VoC_lw16i_set_inc(REG0,0x63e2,0x2)(lo)	|	VoC_bez16_r(amr_dec_main_L4,REG7)(hi)
0xE10963E2,	//0x0f08		VoC_movreg16(ACC0_HI,ACC0_LO,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63e2,0x2)(hi)
0x0F0C2CA0,	//0x0f0a		VoC_loop_i(0x0,0x50)
		//0x0f0c		VoC_endloop0
0xE5C3DDC4,	//0x0f0c		VoC_jump(amr_dec_main_L5)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0f0e		amr_dec_main_L4
0x0F312B80,	//0x0f0e		VoC_jal(CII_Speech_Decode_Frame)
		//0x0f10		amr_dec_main_L5
0x31C3DF01,	//0x0f10		VoC_bnez16_r(amr_dec_main_L6,REG3)(lo)	|	VoC_pop32(REG23,DEFAULT)
0x14020F15,	//0x0f12		VoC_lw16_d(REG2,0x4093)(lo)	|	VoC_bnez16_r(amr_dec_main_L6,REG3)(hi)
0xFF464093,	//0x0f14		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16_d(REG2,0x4093)(hi)
		//0x0f15		amr_dec_main_L6
0xF6435F87,	//0x0f16		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x25626E0E,	//0x0f18		VoC_bnez16_d(amr_dec_main_L7,0x2562)
0x40921581,	//0x0f1a		VoC_sw32_d(REG23,0x4092)
0x0F263182,	//0x0f1c		VoC_bez16_r(amr_dec_main_L7,REG2)
0x10B82B80,	//0x0f1e		VoC_jal(CII_dec_reset)
0x11542B80,	//0x0f20		VoC_jal(CII_Post_Filter_reset)
0x40916C04,	//0x0f22		VoC_bez16_d(amr_dec_main_L7,0x4091)
0x15592B80,	//0x0f24		VoC_jal(CII_reset_rx_dtx)
		//0x0f26		amr_dec_main_L7
0x63E21808,	//0x0f26		VoC_lw16i_set_inc(REG0,0x63e2,0x2)
0x43052009,	//0x0f28		VoC_lw16d_set_inc(REG1,0x4305,0x2)
0x00280A86,	//0x0f2a		VoC_lw16i(REG6,0x28)
0x060E2B80,	//0x0f2c		VoC_jal(CII_copy_xy)
0xFFC0DFA9,	//0x0f2e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0f30		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f31		CII_Speech_Decode_Frame
0x03821486,	//0x0f32		VoC_lw32_d(RL6,0x382)
0x1406D627,	//0x0f34		VoC_lw16_d(REG6,0x4303)(lo)	|	VoC_lw16_sd(REG7,0x1,DEFAULT)
0x18044303,	//0x0f36		VoC_lw16i_set_inc(REG0,0x63e2,0x1)(lo)	|	VoC_lw16_d(REG6,0x4303)(hi)
0xDF4663E2,	//0x0f38		VoC_push32(RL6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x63e2,0x1)(hi)
0x4026DFC0,	//0x0f3a		VoC_be16_rd(SpDec_Fr_L1,REG6,0x34a)(lo)	|	VoC_push16(REG0,DEFAULT)
0x442E034A,	//0x0f3c		VoC_bne16_rd(SpDec_Fr_L2,REG6,0x333)(lo)	|	VoC_be16_rd(SpDec_Fr_L1,REG6,0x34a)(hi)
0xF1070333,	//0x0f3e		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_bne16_rd(SpDec_Fr_L2,REG6,0x333)(hi)
		//0x0f3f		SpDec_Fr_L1
0x11AD2B80,	//0x0f40		VoC_jal(CII_bits2prm_amr_efr)
		//0x0f42		SpDec_Fr_L2
0x43031407,	//0x0f42		VoC_lw16_d(REG7,0x4303)
0x0FE52B80,	//0x0f44		VoC_jal(CII_Decoder_amr)
0x25641806,	//0x0f46		VoC_lw16i_set_inc(REG2,0x2564,0x1)
0xE2865610,	//0x0f48		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xF0085FC2,	//0x0f4a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x1BA61809,	//0x0f4c		VoC_lw16i_set_inc(REG1,0x1ba6,0x2)
0x060E2B80,	//0x0f4e		VoC_jal(CII_copy_xy)
0xD646F006,	//0x0f50		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0f51		Post_Filter_L1
0xF0045FC6,	//0x0f52		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x431C1805,	//0x0f54		VoC_lw16i_set_inc(REG1,0x431c,0x1)
0x43260A87,	//0x0f56		VoC_lw16i(REG7,0x4326)
0x034A3836,	//0x0f58		VoC_bgt16_rd(Post_Filter_L4,REG6,0x34a)
0x43301805,	//0x0f5a		VoC_lw16i_set_inc(REG1,0x4330,0x1)
0x431C0A87,	//0x0f5c		VoC_lw16i(REG7,0x431c)
		//0x0f5e		Post_Filter_L4
0x26341806,	//0x0f5e		VoC_lw16i_set_inc(REG2,0x2634,0x1)
0x0F652C05,	//0x0f60		VoC_loop_i(0x1,0x2)
0x2B80D620,	//0x0f62		VoC_jal(CII_Weight_Ai)(lo)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xE0E10974,	//0x0f64		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_jal(CII_Weight_Ai)(hi)
		//0x0f65		VoC_endloop1
0x03700780,	//0x0f66		VoC_sub16_rd(REG0,REG0,0x370)
0xDA20D616,	//0x0f68		VoC_sw16_sd(REG0,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x1BA61807,	//0x0f6a		VoC_lw16i_set_inc(REG3,0x1ba6,0x1)
0x1B681806,	//0x0f6c		VoC_lw16i_set_inc(REG2,0x1b68,0x1)
0x1804C0F3,	//0x0f6e		VoC_lw16i_set_inc(REG0,0x2634,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xDFC32634,	//0x0f70		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2634,0x1)(hi)
0x08D72B80,	//0x0f72		VoC_jal(CII_Residu_new)
0x1807F2C6,	//0x0f74		VoC_lw16i_set_inc(REG3,0x2634,0x1)(lo)	|	VoC_lw16i_short(REG6,0x16,DEFAULT)
0x18052634,	//0x0f76		VoC_lw16i_set_inc(REG1,0x264a,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x2634,0x1)(hi)
0xE027264A,	//0x0f78		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x264a,0x1)(hi)
0x0338070A,	//0x0f7a		VoC_add16_rd(REG2,REG1,0x338)
0xE0006964,	//0x0f7c		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDCA0D8B5,	//0x0f7e		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
		//0x0f80		VoC_endloop0
0x60E3DC95,	//0x0f80		VoC_movreg16(REG3,REG7,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x2B80F665,	//0x0f82		VoC_jal(CII_Syn_filt)(lo)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xE0E30D4B,	//0x0f84		VoC_movreg16(REG3,REG7,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0x6AC3FF45,	//0x0f86		VoC_loop_i_short(0x16,DEFAULT)	|	VoC_lw32z(ACC1,DEFAULT)
0xD8B6FF44,	//0x0f88		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x0f8a		VoC_endloop0
0xD0334E36,	//0x0f8a		VoC_mac32_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG6,REG6,DEFAULT)
0x7002E160,	//0x0f8c		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_movreg16(REG0,ACC1_HI,DEFAULT)
0x3140F721,	//0x0f8e		VoC_bngtz16_r(Post_Filter_L6,REG0)(lo)	|	VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)
0x08800F96,	//0x0f90		VoC_multf16_rd(REG0,REG0,0x417)(lo)	|	VoC_bngtz16_r(Post_Filter_L6,REG0)(hi)
0xFFC00417,	//0x0f92		VoC_NAD	|	VoC_multf16_rd(REG0,REG0,0x417)(hi)
0x02CC2B80,	//0x0f94		VoC_jal(CII_DIV_S)
		//0x0f96		Post_Filter_L6
0x1B9A1804,	//0x0f96		VoC_lw16i_set_inc(REG0,0x1b9a,0x1)
0x1B8F1FBD,	//0x0f98		VoC_lw16i_set_inc(REG1,0x1b8f,0xffffffff)
0x1B8E1FBF,	//0x0f9a		VoC_lw16i_set_inc(REG3,0x1b8e,0xffffffff)
0x8E9DD816,	//0x0f9c		VoC_multf16inc_rp(REG5,REG2,REG3,DEFAULT)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xB86DECE3,	//0x0f9e		VoC_sub16_pr(REG5,REG1,REG5,DEFAULT)	|	VoC_loop_i_short(0x27,DEFAULT)
0xDC958E9D,	//0x0fa0		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_multf16inc_rp(REG5,REG2,REG3,DEFAULT)
		//0x0fa1		VoC_endloop0
0xD6478C85,	//0x0fa2		VoC_lw16_sd(REG7,0x3,DEFAULT)	|	VoC_multf16_rp(REG5,REG2,REG0,DEFAULT)
0xDC06B86D,	//0x0fa4		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_sub16_pr(REG5,REG1,REG5,DEFAULT)
0x5620DC15,	//0x0fa6		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x0A85E286,	//0x0fa8		VoC_lw16i(REG5,0x263f)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x1807263F,	//0x0faa		VoC_lw16i_set_inc(REG3,0x1b68,0x1)(lo)	|	VoC_lw16i(REG5,0x263f)(hi)
0xC1C71B68,	//0x0fac		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1b68,0x1)(hi)
0x1B901805,	//0x0fae		VoC_lw16i_set_inc(REG1,0x1b90,0x1)
0x2B80F020,	//0x0fb0		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE0E00D4B,	//0x0fb2		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0x1805DF82,	//0x0fb4		VoC_lw16i_set_inc(REG1,0x1b9b,0x1)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x70041B9B,	//0x0fb6		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1b9b,0x1)(hi)
0xDFC1F004,	//0x0fb8		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x2B80D90F,	//0x0fba		VoC_jal(CII_agc)(lo)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xDF811171,	//0x0fbc		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_agc)(hi)
0x0736DF86,	//0x0fbe		VoC_add16_rd(REG6,REG6,0x340)(lo)	|	VoC_pop16(REG6,DEFAULT)
0x40260340,	//0x0fc0		VoC_be16_rd(not_Post_Filter_L1,REG6,0x346)(lo)	|	VoC_add16_rd(REG6,REG6,0x340)(hi)
0x2B000346,	//0x0fc2		VoC_jump_lg(Post_Filter_L1)(lo)	|	VoC_be16_rd(not_Post_Filter_L1,REG6,0x346)(hi)
0xDF820F51,	//0x0fc4		VoC_pop16(REG2,DEFAULT)	|	VoC_jump_lg(Post_Filter_L1)(hi)
		//0x0fc5		not_Post_Filter_L1
0x1B9C1809,	//0x0fc6		VoC_lw16i_set_inc(REG1,0x1b9c,0x2)
0x1C3C1808,	//0x0fc8		VoC_lw16i_set_inc(REG0,0x1c3c,0x2)
0x06012B80,	//0x0fca		VoC_jal(CII_Copy_M)
0x1C461808,	//0x0fcc		VoC_lw16i_set_inc(REG0,0x1c46,0x2)
0xF0055611,	//0x0fce		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x40916E04,	//0x0fd0		VoC_bnez16_d(efr_label1,0x4091)
0x1D6A2B80,	//0x0fd2		VoC_jal(CII_Post_Process)
		//0x0fd4		efr_label1
0xDF80DF06,	//0x0fd4		VoC_pop16(REG0,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xF030E001,	//0x0fd6		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD886DFA9,	//0x0fd8		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x0FE32D40,	//0x0fda		VoC_loop_i(0x0,0xa0)
0x40916C04,	//0x0fdc		VoC_bez16_d(efr_label2,0x4091)
0xFFC078FE,	//0x0fde		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
		//0x0fe0		efr_label2
0x7FF81646,	//0x0fe0		VoC_and16_ri(REG6,0xfff8)
0xDC96D886,	//0x0fe2		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x0fe3		VoC_endloop0
0xDFE9E580,	//0x0fe4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0fe5		CII_Decoder_amr
0x40916C06,	//0x0fe6		VoC_bez16_d(Label_rx_dtx_neglate,0x4091)
0x14BB2B80,	//0x0fe8		VoC_jal(CII_rx_dtx)
0x105E2B00,	//0x0fea		VoC_jump_lg(Dec_amr_L4)
		//0x0fec		Label_rx_dtx_neglate
0x14782B80,	//0x0fec		VoC_jal(CII_rx_dtx_handler)
0x1504FF41,	//0x0fee		VoC_sw16_d(REG4,0x2561)(lo)	|	VoC_lw32z(REG23,DEFAULT)
0x15022561,	//0x0ff0		VoC_sw16_d(REG2,0x254d)(lo)	|	VoC_sw16_d(REG4,0x2561)(hi)
0x1581254D,	//0x0ff2		VoC_sw32_d(REG23,0x2562)(lo)	|	VoC_sw16_d(REG2,0x254d)(hi)
0x31842562,	//0x0ff4		VoC_bez16_r(Dec_amr_L1,REG4)(lo)	|	VoC_sw32_d(REG23,0x2562)(hi)
0xF02C1004,	//0x0ff6		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_bez16_r(Dec_amr_L1,REG4)(hi)
0x10B82B80,	//0x0ff8		VoC_jal(CII_dec_reset)
0x14CB2B80,	//0x0ffa		VoC_jal(CII_dtx_dec)
0x232A1804,	//0x0ffc		VoC_lw16i_set_inc(REG0,0x232a,0x1)
0x22A81805,	//0x0ffe		VoC_lw16i_set_inc(REG1,0x22a8,0x1)
0x08472B80,	//0x1000		VoC_jal(CII_Lsf_lsp)
0x10A52B00,	//0x1002		VoC_jump_lg(Dec_amr_LEnd)
		//0x1004		Dec_amr_L1
0x03704427,	//0x1004		VoC_bne16_rd(Dec_amr_L3,REG7,0x370)
0x25631507,	//0x1006		VoC_sw16_d(REG7,0x2563)
		//0x1008		Dec_amr_L3
0x03314087,	//0x1008		VoC_be16_rd(Dec_amr_L2,REG7,0x331)
0x03344037,	//0x100a		VoC_be16_rd(Dec_amr_L2,REG7,0x334)
0x03304027,	//0x100c		VoC_be16_rd(Dec_amr_L2,REG7,0x330)
0x105E2B00,	//0x100e		VoC_jump_lg(Dec_amr_L4)
		//0x1010		Dec_amr_L2
0xD645F026,	//0x1010		VoC_lw16_sd(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x25621506,	//0x1012		VoC_sw16_d(REG6,0x2562)
0x03314427,	//0x1014		VoC_bne16_rd(Dec_amr_L4_go,REG7,0x331)
0x105E2B00,	//0x1016		VoC_jump_lg(Dec_amr_L4)
		//0x1018		Dec_amr_L4_go
0x22D71404,	//0x1018		VoC_lw16_d(REG4,0x22d7)
0x04021804,	//0x101a		VoC_lw16i_set_inc(REG0,0x402,0x1)
0x1804C02F,	//0x101c		VoC_lw16i_set_inc(REG0,0x2590,0x1)(lo)	|	VoC_add16_rr(REG7,REG0,REG5,DEFAULT)
0xD8772590,	//0x101e		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x2590,0x1)(hi)
0x060C1805,	//0x1020		VoC_lw16i_set_inc(REG1,0x60c,0x1)
0x10423187,	//0x1022		VoC_bez16_r(Dec_amr_mode,REG7)
0x06151805,	//0x1024		VoC_lw16i_set_inc(REG1,0x615,0x1)
0x037041A7,	//0x1026		VoC_be16_rd(Dec_amr_mode,REG7,0x370)
0x061F1805,	//0x1028		VoC_lw16i_set_inc(REG1,0x61f,0x1)
0x03304187,	//0x102a		VoC_be16_rd(Dec_amr_mode,REG7,0x330)
0x06291805,	//0x102c		VoC_lw16i_set_inc(REG1,0x629,0x1)
0x03314127,	//0x102e		VoC_be16_rd(Dec_amr_mode,REG7,0x331)
0x06331805,	//0x1030		VoC_lw16i_set_inc(REG1,0x633,0x1)
0x03324107,	//0x1032		VoC_be16_rd(Dec_amr_mode,REG7,0x332)
0x063D1805,	//0x1034		VoC_lw16i_set_inc(REG1,0x63d,0x1)
0x034A40A7,	//0x1036		VoC_be16_rd(Dec_amr_mode,REG7,0x34a)
0x06491805,	//0x1038		VoC_lw16i_set_inc(REG1,0x649,0x1)
0x03334087,	//0x103a		VoC_be16_rd(Dec_amr_mode,REG7,0x333)
0x05EE1805,	//0x103c		VoC_lw16i_set_inc(REG1,0x5ee,0x1)
0x03344027,	//0x103e		VoC_be16_rd(Dec_amr_mode,REG7,0x334)
0x065D1805,	//0x1040		VoC_lw16i_set_inc(REG1,0x65d,0x1)
		//0x1042		Dec_amr_mode
0x03660A24,	//0x1042		VoC_multf32_rd(ACC0,REG4,0x366)
0xFA0CDFC1,	//0x1044		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x03960922,	//0x1046		VoC_add32_rd(REG45,ACC0,0x396)
0x43441805,	//0x1048		VoC_lw16i_set_inc(REG1,0x4344,0x1)
0x22D71504,	//0x104a		VoC_sw16_d(REG4,0x22d7)
0x2B80DFC4,	//0x104c		VoC_jal(Coolsand_decompressed_windows)(lo)	|	VoC_push16(REG4,DEFAULT)
0xDF86145C,	//0x104e		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(Coolsand_decompressed_windows)(hi)
0x007F1606,	//0x1050		VoC_and16_ri(REG6,0x7f)
0xC18BF002,	//0x1052		VoC_add16_rr(REG3,REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x67C8DF81,	//0x1054		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xD8B7EFF5,	//0x1056		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)
0xFE35868E,	//0x1058		VoC_shr16_rr(REG5,REG6,DEFAULT)	|	VoC_sub16inc_rp(REG6,REG2,REG1,DEFAULT)
0xE42FE385,	//0x105a		VoC_and16_rr(REG7,REG5,DEFAULT)	|	VoC_not16_r(REG5,DEFAULT)
0xDC87F7E5,	//0x105c		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
		//0x105d		VoC_endloop0
		//0x105e		Dec_amr_L4
0x22C01404,	//0x105e		VoC_lw16_d(REG4,0x22c0)
0x03700723,	//0x1060		VoC_add16_rd(REG3,REG4,0x370)
0x25626E06,	//0x1062		VoC_bnez16_d(Dec_amr_L7,0x2562)
0x401CF0A3,	//0x1064		VoC_be16_rd(Dec_amr_L7,REG4,0x333)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0xF0030333,	//0x1066		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_be16_rd(Dec_amr_L7,REG4,0x333)(hi)
		//0x1068		Dec_amr_L7
0x03333C23,	//0x1068		VoC_bngt16_rd(Dec_amr_L9,REG3,0x333)
0xFFC070C3,	//0x106a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x6,DEFAULT)
		//0x106c		Dec_amr_L9
0x40916C06,	//0x106c		VoC_bez16_d(Dec_amr_L9_EFR,0x4091)
0x17002B80,	//0x106e		VoC_jal(CII_efr_dtx_func9)
0xFFC065D0,	//0x1070		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Dec_amr_L11_EFR)
		//0x1072		Dec_amr_L9_EFR
0x242B1404,	//0x1072		VoC_lw16_d(REG4,0x242b)
0x22BE1405,	//0x1074		VoC_lw16_d(REG5,0x22be)
0x03704424,	//0x1076		VoC_bne16_rd(Dec_amr_L11_1,REG4,0x370)
0xF0A3F005,	//0x1078		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x107a		Dec_amr_L11_1
0x03304424,	//0x107a		VoC_bne16_rd(Dec_amr_L11,REG4,0x330)
0xF0A3F025,	//0x107c		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x107e		Dec_amr_L11
0x22BE1505,	//0x107e		VoC_sw16_d(REG5,0x22be)
		//0x1080		Dec_amr_L11_EFR
0x22C01503,	//0x1080		VoC_sw16_d(REG3,0x22c0)
0x232A1808,	//0x1082		VoC_lw16i_set_inc(REG0,0x232a,0x2)
0x24BA1809,	//0x1084		VoC_lw16i_set_inc(REG1,0x24ba,0x2)
0x06012B80,	//0x1086		VoC_jal(CII_Copy_M)
0x232A1804,	//0x1088		VoC_lw16i_set_inc(REG0,0x232a,0x1)
0x25901805,	//0x108a		VoC_lw16i_set_inc(REG1,0x2590,0x1)
0x1406D647,	//0x108c		VoC_lw16_d(REG6,0x2562)(lo)	|	VoC_lw16_sd(REG7,0x3,DEFAULT)
0x0A822562,	//0x108e		VoC_lw16i(REG2,0x22a8)(lo)	|	VoC_lw16_d(REG6,0x2562)(hi)
0x0A8322A8,	//0x1090		VoC_lw16i(REG3,0x24a6)(lo)	|	VoC_lw16i(REG2,0x22a8)(hi)
0x0A8424A6,	//0x1092		VoC_lw16i(REG4,0x24b0)(lo)	|	VoC_lw16i(REG3,0x24a6)(hi)
0x0A8524B0,	//0x1094		VoC_lw16i(REG5,0x2564)(lo)	|	VoC_lw16i(REG4,0x24b0)(hi)
0xDF412564,	//0x1096		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i(REG5,0x2564)(hi)
0xFFC05F42,	//0x1098		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x25802B80,	//0x109a		VoC_jal(CII_amr_dec_122)
		//0x109c		Dec_amr_end
0x40916E04,	//0x109c		VoC_bnez16_d(Dec_amr_LEnd_fake,0x4091)
0x1C2D2B80,	//0x109e		VoC_jal(CII_AMR_subfunc0)
		//0x10a0		Dec_amr_LEnd_fake
0x25621483,	//0x10a0		VoC_lw32_d(REG67,0x2562)
0x1583FFC0,	//0x10a2		VoC_sw32_d(REG67,0x22be)(lo)	|	VoC_NOP
0xDFA922BE,	//0x10a4		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_d(REG67,0x22be)(hi)
		//0x10a5		Dec_amr_LEnd
0x23201804,	//0x10a6		VoC_lw16i_set_inc(REG0,0x2320,0x1)
0x232A1805,	//0x10a8		VoC_lw16i_set_inc(REG1,0x232a,0x1)
0x147B0A85,	//0x10aa		VoC_lw16i(REG5,0x147b)
0xD90C6948,	//0x10ac		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD0A8D809,	//0x10ae		VoC_msu32_rp(REG5,REG0,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG0,DEFAULT)
0x1404D129,	//0x10b0		VoC_lw16_d(REG4,0x2561)(lo)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xD90C2561,	//0x10b2		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_lw16_d(REG4,0x2561)(hi)
		//0x10b4		VoC_endloop0
0x1504DC89,	//0x10b4		VoC_sw16_d(REG4,0x242b)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0xE580242B,	//0x10b6		VoC_return	|	VoC_sw16_d(REG4,0x242b)(hi)
		//0x10b8		CII_dec_reset
0x1808FF44,	//0x10b8		VoC_lw16i_set_inc(REG0,0x21e6,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x2C9A21E6,	//0x10ba		VoC_loop_i(0x0,0x4d)(lo)	|	VoC_lw16i_set_inc(REG0,0x21e6,0x2)(hi)
0xDDC410BD,	//0x10bc		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x4d)(hi)
		//0x10bd		VoC_endloop0
0x22BC1508,	//0x10be		VoC_sw16_d(ACC0_LO,0x22bc)
0x22BE1584,	//0x10c0		VoC_sw32_d(ACC0,0x22be)
0x22C01508,	//0x10c2		VoC_sw16_d(ACC0_LO,0x22c0)
0x23441508,	//0x10c4		VoC_sw16_d(ACC0_LO,0x2344)
0x234C1508,	//0x10c6		VoC_sw16_d(ACC0_LO,0x234c)
0x23161808,	//0x10c8		VoC_lw16i_set_inc(REG0,0x2316,0x2)
0x23341809,	//0x10ca		VoC_lw16i_set_inc(REG1,0x2334,0x2)
0x23561806,	//0x10cc		VoC_lw16i_set_inc(REG2,0x2356,0x1)
0x10D22C0A,	//0x10ce		VoC_loop_i(0x0,0x5)
0xDDCCDDC4,	//0x10d0		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x10d2		VoC_endloop0
0x1806DCA8,	//0x10d2		VoC_lw16i_set_inc(REG2,0x22c2,0x1)(lo)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0x180722C2,	//0x10d4		VoC_lw16i_set_inc(REG3,0x22ce,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x22c2,0x1)(hi)
0x180522CE,	//0x10d6		VoC_lw16i_set_inc(REG1,0x22d8,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x22ce,0x1)(hi)
0x2C1222D8,	//0x10d8		VoC_loop_i(0x0,0x9)(lo)	|	VoC_lw16i_set_inc(REG1,0x22d8,0x1)(hi)
0xDCA810DC,	//0x10da		VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x9)(hi)
		//0x10dc		VoC_endloop0
0x2C7ADCB8,	//0x10dc		VoC_loop_i(0x0,0x3d)(lo)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
0xDC9810DF,	//0x10de		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x3d)(hi)
		//0x10df		VoC_endloop0
0x039A1482,	//0x10e0		VoC_lw32_d(REG45,0x39a)
0x039C1483,	//0x10e2		VoC_lw32_d(REG67,0x39c)
0x039E1485,	//0x10e4		VoC_lw32_d(ACC1,0x39e)
0x22BD1504,	//0x10e6		VoC_sw16_d(REG4,0x22bd)
0x22C11504,	//0x10e8		VoC_sw16_d(REG4,0x22c1)
0x23451505,	//0x10ea		VoC_sw16_d(REG5,0x2345)
0x234D1506,	//0x10ec		VoC_sw16_d(REG6,0x234d)
0x06680A84,	//0x10ee		VoC_lw16i(REG4,0x668)
0x449C1808,	//0x10f0		VoC_lw16i_set_inc(REG0,0x449c,0x2)
0x232A1809,	//0x10f2		VoC_lw16i_set_inc(REG1,0x232a,0x2)
0x233E1806,	//0x10f4		VoC_lw16i_set_inc(REG2,0x233e,0x1)
0x23461807,	//0x10f6		VoC_lw16i_set_inc(REG3,0x2346,0x1)
0xD9C7E8A4,	//0x10f8		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDCB6DCA4,	//0x10fa		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x10fc		VoC_endloop0
0x1487DDCF,	//0x10fc		VoC_lw32_d(RL7,0x386)(lo)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0x15840386,	//0x10fe		VoC_sw32_d(ACC0,0x235c)(lo)	|	VoC_lw32_d(RL7,0x386)(hi)
0x1584235C,	//0x1100		VoC_sw32_d(ACC0,0x235e)(lo)	|	VoC_sw32_d(ACC0,0x235c)(hi)
0x1507235E,	//0x1102		VoC_sw16_d(REG7,0x22d7)(lo)	|	VoC_sw32_d(ACC0,0x235e)(hi)
0x334622D7,	//0x1104		VoC_bnez32_r(dec_reset_Lable22,RL6)(lo)	|	VoC_sw16_d(REG7,0x22d7)(hi)
0x18081153,	//0x1106		VoC_lw16i_set_inc(REG0,0x21e6,0x2)(lo)	|	VoC_bnez32_r(dec_reset_Lable22,RL6)(hi)
0xFFC021E6,	//0x1108		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x21e6,0x2)(hi)
0x110F2C05,	//0x110a		VoC_loop_i(0x1,0x2)
0x110E2D24,	//0x110c		VoC_loop_i(0x0,0x92)
		//0x110e		VoC_endloop0
0x1584DDC4,	//0x110e		VoC_sw32_d(ACC0,0x2424)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x110f		VoC_endloop1
0x15072424,	//0x1110		VoC_sw16_d(REG7,0x22d7)(lo)	|	VoC_sw32_d(ACC0,0x2424)(hi)
0x158722D7,	//0x1112		VoC_sw32_d(RL7,0x2364)(lo)	|	VoC_sw16_d(REG7,0x22d7)(hi)
0x15852364,	//0x1114		VoC_sw32_d(ACC1,0x2426)(lo)	|	VoC_sw32_d(RL7,0x2364)(hi)
0x15062426,	//0x1116		VoC_sw16_d(REG6,0x242b)(lo)	|	VoC_sw32_d(ACC1,0x2426)(hi)
0x1808242B,	//0x1118		VoC_lw16i_set_inc(REG0,0x4492,0x2)(lo)	|	VoC_sw16_d(REG6,0x242b)(hi)
0x18094492,	//0x111a		VoC_lw16i_set_inc(REG1,0x22a8,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x4492,0x2)(hi)
0x180A22A8,	//0x111c		VoC_lw16i_set_inc(REG2,0x2366,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x22a8,0x2)(hi)
0x180B2366,	//0x111e		VoC_lw16i_set_inc(REG3,0x2370,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x2366,0x2)(hi)
0xD9C52370,	//0x1120		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x2370,0x2)(hi)
0xDDCDE8A4,	//0x1122		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD9C5DDD5,	//0x1124		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x1126		VoC_endloop0
0x1483DDDD,	//0x1126		VoC_lw32_d(REG67,0x390)(lo)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0x14840390,	//0x1128		VoC_lw32_d(ACC0,0x392)(lo)	|	VoC_lw32_d(REG67,0x390)(hi)
0x15830392,	//0x112a		VoC_sw32_d(REG67,0x234e)(lo)	|	VoC_lw32_d(ACC0,0x392)(hi)
0x1583234E,	//0x112c		VoC_sw32_d(REG67,0x2350)(lo)	|	VoC_sw32_d(REG67,0x234e)(hi)
0x0A852350,	//0x112e		VoC_lw16i(REG5,0x2000)(lo)	|	VoC_sw32_d(REG67,0x2350)(hi)
0x14832000,	//0x1130		VoC_lw32_d(REG67,0x3a0)(lo)	|	VoC_lw16i(REG5,0x2000)(hi)
0x150503A0,	//0x1132		VoC_sw16_d(REG5,0x2361)(lo)	|	VoC_lw32_d(REG67,0x3a0)(hi)
0x15832361,	//0x1134		VoC_sw32_d(REG67,0x2362)(lo)	|	VoC_sw16_d(REG5,0x2361)(hi)
0x18082362,	//0x1136		VoC_lw16i_set_inc(REG0,0x241c,0x2)(lo)	|	VoC_sw32_d(REG67,0x2362)(hi)
0xE881241C,	//0x1138		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x241c,0x2)(hi)
		//0x113a		VoC_endloop0
0x1808DDC3,	//0x113a		VoC_lw16i_set_inc(REG0,0x449c,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x1809449C,	//0x113c		VoC_lw16i_set_inc(REG1,0x2320,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x449c,0x2)(hi)
0x180A2320,	//0x113e		VoC_lw16i_set_inc(REG2,0x237a,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x2320,0x2)(hi)
0x6007237A,	//0x1140		VoC_movreg16(REG7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x237a,0x2)(hi)
0xE8A3D9C5,	//0x1142		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)
0xD9C5DDCD,	//0x1144		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x1146		VoC_endloop0
0xE0E0DDD5,	//0x1146		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x114F2C0F,	//0x1148		VoC_loop_i(0x1,0x7)
0xE8A2D9C5,	//0x114a		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xDDD5D9C5,	//0x114c		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
		//0x114d		VoC_endloop0
0x1584E0E0,	//0x114e		VoC_sw32_d(ACC0,0x2352)(lo)	|	VoC_movreg16(REG0,REG7,DEFAULT)
		//0x114f		VoC_endloop1
0x15842352,	//0x1150		VoC_sw32_d(ACC0,0x2354)(lo)	|	VoC_sw32_d(ACC0,0x2352)(hi)
0xE5802354,	//0x1152		VoC_return	|	VoC_sw32_d(ACC0,0x2354)(hi)
		//0x1153		dec_reset_Lable22
		//0x1154		CII_Post_Filter_reset
0x1808FF45,	//0x1154		VoC_lw16i_set_inc(REG0,0x1b68,0x2)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x2CE41B68,	//0x1156		VoC_loop_i(0x0,0x72)(lo)	|	VoC_lw16i_set_inc(REG0,0x1b68,0x2)(hi)
0xDDC51159,	//0x1158		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x72)(hi)
		//0x1159		VoC_endloop0
0x10000A8B,	//0x115a		VoC_lw16i(ACC1_HI,0x1000)
0x1C4C150A,	//0x115c		VoC_sw16_d(ACC1_LO,0x1c4c)
0x1B9A1585,	//0x115e		VoC_sw32_d(ACC1,0x1b9a)
0xFF44E580,	//0x1160		VoC_lw32z(ACC0,DEFAULT)	|	VoC_return
		//0x1161		CII_energy_new
0xD8077F45,	//0x1162		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xED03FFC0,	//0x1164		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_NAD
0xD4007817,	//0x1166		VoC_mac32inc_pp(REG0,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
		//0x1168		VoC_endloop0
0xD8074E3F,	//0x1168		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG7,DEFAULT)
0x03745835,	//0x116a		VoC_be32_rd(Energy_L0,ACC1,0x374)
0x40916E04,	//0x116c		VoC_bnez16_d(Energy_L0,0x4091)
0xFF2CFA25,	//0x116e		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,DEFAULT)
		//0x1170		Energy_L0
0xDFE9E580,	//0x1170		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1171		CII_agc
0x2B80DFC0,	//0x1172		VoC_jal(CII_energy_new)(lo)	|	VoC_push16(REG0,DEFAULT)
0xF0051161,	//0x1174		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jal(CII_energy_new)(hi)
0x11A63304,	//0x1176		VoC_bez32_r(AGC_LEnd,ACC0)
0x02BA2B80,	//0x1178		VoC_jal(CII_NORM_L_ACC0)
0xFA0C6025,	//0x117a		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG1,DEFAULT)
0xF640493E,	//0x117c		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL7,DEFAULT)
0x11612B80,	//0x117e		VoC_jal(CII_energy_new)
0x3304F003,	//0x1180		VoC_bez32_r(AGC_LA5,ACC0)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x2B801193,	//0x1182		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bez32_r(AGC_LA5,ACC0)(hi)
0xC34D02BA,	//0x1184		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xE1A0C938,	//0x1186		VoC_movreg16(REG0,RL6_HI,DEFAULT)	|	VoC_add32_rr(REG01,ACC0,RL7,DEFAULT)
0x02CC2B80,	//0x1188		VoC_jal(CII_DIV_S)
0xE040F001,	//0x118a		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFEA8FBC0,	//0x118c		VoC_shr32_rr(REG01,REG5,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffff8,DEFAULT)
0x06D42B80,	//0x118e		VoC_jal(CII_Inv_sqrt)
0x0901FBB8,	//0x1190		VoC_add32_rd(REG23,REG01,0x382)(lo)	|	VoC_shr32_ri(REG01,0xfffffff7,DEFAULT)
0xE0650382,	//0x1192		VoC_movreg16(REG5,REG3,DEFAULT)	|	VoC_add32_rd(REG23,REG01,0x382)(hi)
		//0x1193		AGC_LA5
0x119A31C4,	//0x1194		VoC_bnez16_r(AGC_LA4,REG4)
0x089BD637,	//0x1196		VoC_multf16_rd(REG3,REG3,0x367)(lo)	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xD8750367,	//0x1198		VoC_lw16_p(REG5,REG7,DEFAULT)	|	VoC_multf16_rd(REG3,REG3,0x367)(hi)
		//0x119a		AGC_LA4
0xED0AD610,	//0x119a		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x430808AE,	//0x119c		VoC_multf16_rd(REG6,REG5,0x4308)
0x11A131C4,	//0x119e		VoC_bnez16_r(AGC_LA6,REG4)
0x9944C19D,	//0x11a0		VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG6,REG3,DEFAULT)
		//0x11a1		AGC_LA6
0xFBECFFC0,	//0x11a2		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_NOP
0xDC89FFC0,	//0x11a4		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_NOP
		//0x11a5		VoC_endloop0
		//0x11a6		AGC_LEnd
0xDFA9DF80,	//0x11a6		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x31C4D616,	//0x11a8		VoC_bnez16_r(AGC_LA7,REG4)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xDC6511AC,	//0x11aa		VoC_sw16_p(REG5,REG6,DEFAULT)	|	VoC_bnez16_r(AGC_LA7,REG4)(hi)
		//0x11ac		AGC_LA7
0xDFE9E580,	//0x11ac		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x11ad		CII_bits2prm_amr_efr
0x00081808,	//0x11ae		VoC_lw16i_set_inc(REG0,0x8,0x2)
0x25CA1805,	//0x11b0		VoC_lw16i_set_inc(REG1,0x25ca,0x1)
0x14232B80,	//0x11b2		VoC_jal(Coolsand_If1_table_selet)
0x40446C23,	//0x11b4		VoC_bez16_d(CII_bits2prm_amr_efr_no_IF1,0x4044)
0xF021F030,	//0x11b6		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x26D21807,	//0x11b8		VoC_lw16i_set_inc(REG3,0x26d2,0x1)
0x11CA2C21,	//0x11ba		VoC_loop_i(0x1,0x10)
0xD884FF42,	//0x11bc		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw32z(REG45,DEFAULT)
0xE40DFDFA,	//0x11be		VoC_and16_rr(REG5,REG1,DEFAULT)	|	VoC_shru32_ri(REG45,0xffffffff,DEFAULT)
0xFDFAE903,	//0x11c0		VoC_shru32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xE40DDCB5,	//0x11c2		VoC_and16_rr(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x11c3		VoC_endloop0
0x033C079B,	//0x11c4		VoC_sub16_rd(REG3,REG3,0x33c)
0xFDFAE903,	//0x11c6		VoC_shru32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xE40DDCB5,	//0x11c8		VoC_and16_rr(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x11c9		VoC_endloop0
		//0x11ca		VoC_endloop1
0x033C071B,	//0x11ca		VoC_add16_rd(REG3,REG3,0x33c)
0x26D21807,	//0x11cc		VoC_lw16i_set_inc(REG3,0x26d2,0x1)
0x25CA1805,	//0x11ce		VoC_lw16i_set_inc(REG1,0x25ca,0x1)
0x2E308255,	//0x11d0		VoC_loop_r(0,REG6)(lo)	|	VoC_add16inc_rp(REG5,REG1,REG2,DEFAULT)
0xD8B411D5,	//0x11d2		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_r(0,REG6)(hi)
0xDC548255,	//0x11d4		VoC_sw16_p(REG4,REG5,DEFAULT)	|	VoC_add16inc_rp(REG5,REG1,REG2,DEFAULT)
		//0x11d5		VoC_endloop0
0xD9C2E5CA,	//0x11d6		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_jump(CII_bits2prm_amr_efr_no_IF1_end)
		//0x11d7		CII_bits2prm_amr_efr_no_IF1
0x11DF2C11,	//0x11d8		VoC_loop_i(0x1,0x8)
0xF022EC04,	//0x11da		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0xFA0AE422,	//0x11dc		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_and16_rr(REG2,REG4,DEFAULT)
		//0x11de		VoC_endloop0
0xD9C2DC92,	//0x11de		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
		//0x11df		VoC_endloop1
		//0x11e0		CII_bits2prm_amr_efr_no_IF1_end
0x25901807,	//0x11e0		VoC_lw16i_set_inc(REG3,0x2590,0x1)
0x25CA1805,	//0x11e2		VoC_lw16i_set_inc(REG1,0x25ca,0x1)
0x04020A85,	//0x11e4		VoC_lw16i(REG5,0x402)
0xE1A2C1ED,	//0x11e6		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG5,DEFAULT)
0xD855F032,	//0x11e8		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xF007DFA9,	//0x11ea		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x11FC2E29,	//0x11ec		VoC_loop_r(1,REG5)
0x1604D824,	//0x11ee		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x160700FF,	//0x11f0		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_and16_ri(REG4,0xff)(hi)
0x31870001,	//0x11f2		VoC_bez16_r(BITNO_AMR_even,REG7)(lo)	|	VoC_and16_ri(REG7,0x1)(hi)
0xD8A411F7,	//0x11f4		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_bez16_r(BITNO_AMR_even,REG7)(hi)
0xF005F944,	//0x11f6		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
		//0x11f7		BITNO_AMR_even
0x834DE702,	//0x11f8		VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x11fa		VoC_endloop0
0xDCB5F8FD,	//0x11fa		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
		//0x11fc		VoC_endloop1
0x0370073F,	//0x11fc		VoC_add16_rd(REG7,REG7,0x370)
0xD885E580,	//0x11fe		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_return
		//0x11ff		CII_R02R3_p_R6
0xD885E782,	//0x1200		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x1202		VoC_endloop0
0xE580DCB5,	//0x1202		VoC_return	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x1204		CII_ec_gain_code
0xF0A5DFE9,	//0x1204		VoC_lw16i_short(REG5,0x5,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x09D02B80,	//0x1206		VoC_jal(CII_gmed_n)
0x0724D644,	//0x1208		VoC_add16_rd(REG4,REG4,0x333)(lo)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0x0A850333,	//0x120a		VoC_lw16i(REG5,0x40c)(lo)	|	VoC_add16_rd(REG4,REG4,0x333)(hi)
0xD844040C,	//0x120c		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x40c)(hi)
0x1211348C,	//0x120e		VoC_bngt16_rr(Ecgains_L12,REG1,REG4)
0xD624E081,	//0x1210		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG4,DEFAULT)
		//0x1211		Ecgains_L12
0xC164D630,	//0x1212		VoC_add16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xFF438C61,	//0x1214		VoC_lw32z(REG67,DEFAULT)	|	VoC_multf16_rp(REG1,REG1,REG4,DEFAULT)
0x03320701,	//0x1216		VoC_add16_rd(REG1,REG0,0x332)
0x254F1501,	//0x1218		VoC_sw16_d(REG1,0x254f)
0x83CFE882,	//0x121a		VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x121c		VoC_endloop0
0xF8178386,	//0x121c		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG0,DEFAULT)
0x382FF816,	//0x121e		VoC_bgt16_rd(Gcpred_L1,REG7,0x392)(lo)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x0AC70392,	//0x1220		VoC_lw16i(REG7,0xfffff6b3)(lo)	|	VoC_bgt16_rd(Gcpred_L1,REG7,0x392)(hi)
0xFFC076B3,	//0x1222		VoC_NAD	|	VoC_lw16i(REG7,0xfffff6b3)(hi)
		//0x1224		Gcpred_L1
0x40916E06,	//0x1224		VoC_bnez16_d(Gcpred_L2,0x4091)
0x03903826,	//0x1226		VoC_bgt16_rd(Gcpred_L2,REG6,0x390)
0x48000AC6,	//0x1228		VoC_lw16i(REG6,0xffffc800)
		//0x122a		Gcpred_L2
0x234E0A85,	//0x122a		VoC_lw16i(REG5,0x234e)
0x09BD2B80,	//0x122c		VoC_jal(CII_gc_pred_update)
0xF031DFA9,	//0x122e		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD610E580,	//0x1230		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_return
		//0x1231		CII_ec_gain_code_update
0x03340702,	//0x1232		VoC_add16_rd(REG2,REG0,0x334)
0x25626E0D,	//0x1234		VoC_bnez16_d(Ecgains_L10,0x2562)
0x40916E0A,	//0x1236		VoC_bnez16_d(Ecgains_L11,0x4091)
0x22BE6C08,	//0x1238		VoC_bez16_d(Ecgains_L11,0x22be)
0x34B7D827,	//0x123a		VoC_bngt16_rr(Ecgains_L11,REG6,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xE0E61240,	//0x123c		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bngt16_rr(Ecgains_L11,REG6,REG7)(hi)
0x254F1507,	//0x123e		VoC_sw16_d(REG7,0x254f)
		//0x1240		Ecgains_L11
0xF027DC26,	//0x1240		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
		//0x1241		Ecgains_L10
0xC039C2BA,	//0x1242		VoC_add16_rr(REG1,REG0,REG7,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0xF0045C26,	//0x1244		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
0xD8976883,	//0x1246		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC87D897,	//0x1248		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
		//0x1249		VoC_endloop0
0xE580DC06,	//0x124a		VoC_return	|	VoC_sw16_p(REG6,REG0,DEFAULT)
		//0x124c		CII_ec_gain_pitch
0x40916C09,	//0x124c		VoC_bez16_d(ec_gain_pitch_EFR,0x4091)
0x2805F025,	//0x124e		VoC_and16_rd(REG5,0x1c46)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x31C51C46,	//0x1250		VoC_bnez16_r(ec_gain_pitch_EFR,REG5)(lo)	|	VoC_and16_rd(REG5,0x1c46)(hi)
0xF0061255,	//0x1252		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bnez16_r(ec_gain_pitch_EFR,REG5)(hi)
0xDFE9E5D0,	//0x1254		VoC_push16(RA,DEFAULT)	|	VoC_jump(ec_gain_pitch_EFR1)
		//0x1255		ec_gain_pitch_EFR
0x2B80F0A5,	//0x1256		VoC_jal(CII_gmed_n)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0xD62609D0,	//0x1258		VoC_lw16_sd(REG6,0x1,DEFAULT)	|	VoC_jal(CII_gmed_n)(hi)
0x04140A85,	//0x125a		VoC_lw16i(REG5,0x414)
0x3C21C176,	//0x125c		VoC_bngt16_rd(Ecgains_L1,REG1,0x2344)(lo)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x14012344,	//0x125e		VoC_lw16_d(REG1,0x2344)(lo)	|	VoC_bngt16_rd(Ecgains_L1,REG1,0x2344)(hi)
0x8C762344,	//0x1260		VoC_multf16_rp(REG6,REG1,REG6,DEFAULT)	|	VoC_lw16_d(REG1,0x2344)(hi)
		//0x1261		Ecgains_L1
0xFFC0DFA9,	//0x1262		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
		//0x1264		ec_gain_pitch_EFR1
0x254E1506,	//0x1264		VoC_sw16_d(REG6,0x254e)
0xD610E580,	//0x1266		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_return
		//0x1267		CII_ec_gain_pitch_update
0x03340702,	//0x1268		VoC_add16_rd(REG2,REG0,0x334)
0x25626E13,	//0x126a		VoC_bnez16_d(Ecgains_L2,0x2562)
0x40916C08,	//0x126c		VoC_bez16_d(Ecgains_L3,0x4091)
0x2B80DFE9,	//0x126e		VoC_jal(CII_efr_dtx_func11)(lo)	|	VoC_push16(RA,DEFAULT)
0xDFA91CE2,	//0x1270		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_efr_dtx_func11)(hi)
0xFFC065CA,	//0x1272		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Ecgains_L33)
		//0x1274		Ecgains_L3
0x22BE6C08,	//0x1274		VoC_bez16_d(Ecgains_L33,0x22be)
0x34B7D827,	//0x1276		VoC_bngt16_rr(Ecgains_L33,REG6,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xE0E6127C,	//0x1278		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bngt16_rr(Ecgains_L33,REG6,REG7)(hi)
0x254E1507,	//0x127a		VoC_sw16_d(REG7,0x254e)
		//0x127c		Ecgains_L33
0xE0C7DC26,	//0x127c		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
		//0x127d		Ecgains_L2
0xC2B2F026,	//0x127e		VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x10000A81,	//0x1280		VoC_lw16i(REG1,0x1000)
0x40916E04,	//0x1282		VoC_bnez16_d(Ecgains_Lnew2,0x4091)
0x40000A81,	//0x1284		VoC_lw16i(REG1,0x4000)
		//0x1286		Ecgains_Lnew2
0x128934B9,	//0x1286		VoC_bngt16_rr(Ecgains_L4,REG7,REG1)
0xD610E027,	//0x1288		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_movreg16(REG7,REG1,DEFAULT)
		//0x1289		Ecgains_L4
0xDC27C031,	//0x128a		VoC_sw16_p(REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG6,DEFAULT)
0xD8966883,	//0x128c		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC86D896,	//0x128e		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
		//0x128f		VoC_endloop0
0xE580DC07,	//0x1290		VoC_return	|	VoC_sw16_p(REG7,REG0,DEFAULT)
		//0x1292		CII_Int_lsf
0xD647DFE9,	//0x1292		VoC_lw16_sd(REG7,0x3,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x24C41804,	//0x1294		VoC_lw16i_set_inc(REG0,0x24c4,0x1)
0x24BA1805,	//0x1296		VoC_lw16i_set_inc(REG1,0x24ba,0x1)
0x232A1806,	//0x1298		VoC_lw16i_set_inc(REG2,0x232a,0x1)
0x03434037,	//0x129a		VoC_be16_rd(Lspavg_lab1,REG7,0x343)
0x12AB31C7,	//0x129c		VoC_bnez16_r(Lspavg_lab3,REG7)
0xF6416022,	//0x129e		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x12a0		Lspavg_lab1
0x20000A86,	//0x12a0		VoC_lw16i(REG6,0x2000)
0x8F8C6947,	//0x12a2		VoC_multf16inc_rp(REG4,REG6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xFFC08D95,	//0x12a4		VoC_NOP	|	VoC_multf16_rp(REG5,REG6,REG2,DEFAULT)
0xC165BAAD,	//0x12a6		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_sub16inc_pr(REG5,REG2,REG5,DEFAULT)
0xDC858F8C,	//0x12a8		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG6,REG1,DEFAULT)
		//0x12a9		VoC_endloop0
0xD8A5E5CC,	//0x12aa		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_jump(Lspavg_lab4)
		//0x12ab		Lspavg_lab3
0xE948FFC0,	//0x12ac		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_NAD
0x03444037,	//0x12ae		VoC_be16_rd(Lspavg_lab2,REG7,0x344)
0xD894780D,	//0x12b0		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0xC12DF80C,	//0x12b2		VoC_add16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x12b4		Lspavg_lab2
0xDC85D8A5,	//0x12b4		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x12b5		VoC_endloop0
		//0x12b6		Lspavg_lab4
0x23161805,	//0x12b6		VoC_lw16i_set_inc(REG1,0x2316,0x1)
0x254F1407,	//0x12b8		VoC_lw16_d(REG7,0x254f)
0x23201806,	//0x12ba		VoC_lw16i_set_inc(REG2,0x2320,0x1)
0x22CC1485,	//0x12bc		VoC_lw32_d(ACC1,0x22cc)
0x5A27DA31,	//0x12be		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_sw16_sd(REG1,0x2,DEFAULT)
0x1804DF45,	//0x12c0		VoC_lw16i_set_inc(REG0,0x2317,0x1)(lo)	|	VoC_push32(ACC1,IN_PARALLEL)
0x18072317,	//0x12c2		VoC_lw16i_set_inc(REG3,0x263e,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x2317,0x1)(hi)
0x68C3263E,	//0x12c4		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x263e,0x1)(hi)
0xD885D885,	//0x12c6		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
		//0x12c8		VoC_endloop0
0xDC17DC95,	//0x12c8		VoC_sw16_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x24C41804,	//0x12ca		VoC_lw16i_set_inc(REG0,0x24c4,0x1)
0xE0076041,	//0x12cc		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x12E82C15,	//0x12ce		VoC_loop_i(0x1,0xa)
0x8706D894,	//0x12d0		VoC_sub16inc_rp(REG6,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xE0085F40,	//0x12d2		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x12D83246,	//0x12d4		VoC_bnltz16_r(CII_Cb_gain_La2,REG6)
0x036E0B36,	//0x12d6		VoC_sub16_dr(REG6,0x36e,REG6)
		//0x12d8		CII_Cb_gain_La2
0x2B80E0C9,	//0x12d8		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0xFA0C02BA,	//0x12da		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x6120E025,	//0x12dc		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_movreg16(REG5,REG1,DEFAULT)
0x2B80F689,	//0x12de		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)
0xC34D02BA,	//0x12e0		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x2B80E121,	//0x12e2		VoC_jal(CII_DIV_S)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0xF80A02CC,	//0x12e4		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_jal(CII_DIV_S)(hi)
0xDF00FE2A,	//0x12e6		VoC_pop32(REG01,DEFAULT)	|	VoC_shr16_rr(REG2,REG5,DEFAULT)
		//0x12e8		VoC_endloop1
0xC1D75CB2,	//0x12e8		VoC_add16_rr(REG7,REG7,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
0xE0E5DFA9,	//0x12ea		VoC_movreg16(REG5,REG7,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF007E580,	//0x12ec		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x12ed		CII_pseudonoise
0xE61BFF25,	//0x12ee		VoC_loop_r_short(REG0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x2985F020,	//0x12f0		VoC_and32_rd(ACC1,0x370)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x33450370,	//0x12f2		VoC_bnez32_r(PSEUDONOISE102,ACC1)(lo)	|	VoC_and32_rd(ACC1,0x370)(hi)
0xF00012F6,	//0x12f4		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez32_r(PSEUDONOISE102,ACC1)(hi)
		//0x12f6		PSEUDONOISE102
0xF004FF25,	//0x12f6		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x03982985,	//0x12f8		VoC_and32_rd(ACC1,0x398)
0x12FD3305,	//0x12fa		VoC_bez32_r(PSEUDONOISE103,ACC1)
0xE4A0F024,	//0x12fc		VoC_xor16_rr(REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x12fd		PSEUDONOISE103
0xFF22F8FF,	//0x12fe		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x03702982,	//0x1300		VoC_and32_rd(REG45,0x370)
0x7A0CE467,	//0x1302		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_or16_rr(REG7,REG4,DEFAULT)
0xE404E014,	//0x1304		VoC_and16_rr(REG4,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x130A3184,	//0x1306		VoC_bez16_r(PSEUDONOISE105,REG4)
0x03722A04,	//0x1308		VoC_or32_rd(ACC0,0x372)
		//0x130a		PSEUDONOISE105
		//0x130a		VoC_endloop0
0xE580FF25,	//0x130a		VoC_return	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
		//0x130c		CII_Reorder_lsf
0x00CD0A85,	//0x130c		VoC_lw16i(REG5,0xcd)
0xE945E0A3,	//0x130e		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_movreg16(REG3,REG5,DEFAULT)
0x34ACD804,	//0x1310		VoC_bngt16_rr(Reord_L,REG5,REG4)(lo)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xDC051314,	//0x1312		VoC_sw16_p(REG5,REG0,DEFAULT)	|	VoC_bngt16_rr(Reord_L,REG5,REG4)(hi)
		//0x1314		Reord_L
		//0x1314		VoC_endloop0
0xE58082C5,	//0x1314		VoC_return	|	VoC_add16inc_rp(REG5,REG3,REG0,DEFAULT)
		//0x1316		CII_build_CN_code
0x5FE9E003,	//0x1316		VoC_push16(RA,DEFAULT)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x6A82FF45,	//0x1318		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xDDC5E001,	//0x131a		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
		//0x131b		VoC_endloop0
0x13322C15,	//0x131c		VoC_loop_i(0x1,0xa)
0xFFC07040,	//0x131e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x12ED2B80,	//0x1320		VoC_jal(CII_pseudonoise)
0x03370A3A,	//0x1322		VoC_multf32_rd(REG45,REG7,0x337)
0xF80CF020,	//0x1324		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x2B80C066,	//0x1326		VoC_jal(CII_pseudonoise)(lo)	|	VoC_add16_rr(REG6,REG1,REG4,DEFAULT)
0xC0F212ED,	//0x1328		VoC_add16_rr(REG2,REG3,REG6,DEFAULT)	|	VoC_jal(CII_pseudonoise)(hi)
0x10001804,	//0x132a		VoC_lw16i_set_inc(REG0,0x1000,0x1)
0x13303107,	//0x132c		VoC_bgtz16_r(build_CN_code_101,REG7)
0x70001844,	//0x132e		VoC_lw16i_set_inc(REG0,0xfffff000,0x1)
		//0x1330		build_CN_code_101
0x03700709,	//0x1330		VoC_add16_rd(REG1,REG1,0x370)
		//0x1332		VoC_endloop1
0xDFA9DC20,	//0x1332		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(REG0,REG2,DEFAULT)
0xE580FFC0,	//0x1334		VoC_return	|	VoC_NOP
		//0x1336		CII_Vq_subvec_lsf_compressed
0x1485FF42,	//0x1336		VoC_lw32_d(ACC1,0x374)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0x5FC30374,	//0x1338		VoC_push16(REG3,DEFAULT)	|	VoC_lw32_d(ACC1,0x374)(hi)
0x7002D910,	//0x133a		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,IN_PARALLEL)
0x7050FF44,	//0x133c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xF01BF009,	//0x133e		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xF033FF46,	//0x1340		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0x13852E31,	//0x1342		VoC_loop_r(1,REG6)
0x13832C40,	//0x1344		VoC_loop_i(0x0,0x20)
0xE2B6E243,	//0x1346		VoC_rbinc_i(REG6,0xd,DEFAULT)	|	VoC_lbinc_p(REG3)
0xE2B7E243,	//0x1348		VoC_rbinc_i(REG7,0xd,DEFAULT)	|	VoC_lbinc_p(REG3)
0xF9EF79EE,	//0x134a		VoC_shru16_ri(REG7,0xfffffffd,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffffd,DEFAULT)
0xF81F781E,	//0x134c		VoC_shr16_ri(REG7,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
0xBA3F3A36,	//0x134e		VoC_sub16inc_pr(REG7,REG0,REG7,IN_PARALLEL)	|	VoC_sub16inc_pr(REG6,REG0,REG6,DEFAULT)
0x0F8EDF43,	//0x1350		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xD9108FCF,	//0x1352		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0xE243CF36,	//0x1354		VoC_lbinc_p(REG3)	|	VoC_bimac32_rr(REG67,REG67)
0xE243E2B6,	//0x1356		VoC_lbinc_p(REG3)	|	VoC_rbinc_i(REG6,0xd,DEFAULT)
0x79EEE2B7,	//0x1358		VoC_shru16_ri(REG6,0xfffffffd,DEFAULT)	|	VoC_rbinc_i(REG7,0xd,DEFAULT)
0x781EF9EF,	//0x135a		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffffd,IN_PARALLEL)
0x3A36F81F,	//0x135c		VoC_sub16inc_pr(REG6,REG0,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x3,IN_PARALLEL)
0xDF43BA3F,	//0x135e		VoC_push32(REG67,DEFAULT)	|	VoC_sub16inc_pr(REG7,REG0,REG7,IN_PARALLEL)
0x8FCF0F8E,	//0x1360		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36FFC0,	//0x1362		VoC_bimac32_rr(REG67,REG67)	|	VoC_NOP
0x36ACD920,	//0x1364		VoC_bngt32_rr(Vq_subvec_s_new_01,ACC1,ACC0)(lo)	|	VoC_lw32_sd(REG01,0x3,DEFAULT)
0xF005136A,	//0x1366		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bngt32_rr(Vq_subvec_s_new_01,ACC1,ACC0)(hi)
0xF6447F25,	//0x1368		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
		//0x136a		Vq_subvec_s_new_01
0x13813307,	//0x136a		VoC_bez32_r(Vq_subvec_s_new_02,RL7)
0xD913FF44,	//0x136c		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x83C70386,	//0x136e		VoC_add16inc_rp(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG6,REG6,REG0,DEFAULT)
0x8FCF0F8E,	//0x1370		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36D918,	//0x1372		VoC_bimac32_rr(REG67,REG67)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0x0386D90B,	//0x1374		VoC_add16inc_rp(REG6,REG6,REG0,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x0F8E83C7,	//0x1376		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG0,IN_PARALLEL)
0xFFC08FCF,	//0x1378		VoC_NOP	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0xD920CF36,	//0x137a		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x138136AC,	//0x137c		VoC_bngt32_rr(Vq_subvec_s_new_02,ACC1,ACC0)
0x7F25F025,	//0x137e		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xDF03F644,	//0x1380		VoC_pop32(REG67,DEFAULT)	|	VoC_movreg16(REG4,REG2,IN_PARALLEL)
		//0x1381		Vq_subvec_s_new_02
0x7F44DF03,	//0x1382		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
		//0x1383		VoC_endloop0
0xFFC0DE10,	//0x1384		VoC_NOP	|	VoC_inc_p(REG2,IN_PARALLEL)
		//0x1385		VoC_endloop1
0xF6865F83,	//0x1386		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xF8F45612,	//0x1388		VoC_shr16_ri(REG4,0xfffffffe,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x033A0824,	//0x138a		VoC_mult16_rd(REG4,REG4,0x33a)
0x13903307,	//0x138c		VoC_bez32_r(Vq_subvec_LEnd,RL7)
0xC1AEF8FE,	//0x138e		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
		//0x1390		Vq_subvec_LEnd
0xF4035914,	//0x1390		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw32_sd(ACC0,0x1,DEFAULT)
0xDCA67F46,	//0x1392		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xE0F6590D,	//0x1394		VoC_lw16i_short(REG6,0xf,IN_PARALLEL)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0xF9246426,	//0x1396		VoC_shru16_ri(REG4,0x4,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG4,DEFAULT)
0x6100C0E3,	//0x1398		VoC_movreg16(REG0,ACC0_LO,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xE243F741,	//0x139a		VoC_lbinc_p(REG3)	|	VoC_movreg16(REG1,ACC1_LO,IN_PARALLEL)
0x7046E332,	//0x139c		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_rbinc_r(REG6,REG6,DEFAULT)
0x491CE027,	//0x139e		VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x5A12C95D,	//0x13a0		VoC_sw16_sd(REG2,0x0,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,REG67,IN_PARALLEL)
0xDD14F6A2,	//0x13a2		VoC_sw32_sd(ACC0,0x1,DEFAULT)	|	VoC_movreg16(REG2,REG5,IN_PARALLEL)
0xE849DD0D,	//0x13a4		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_sw32_sd(ACC1,0x0,DEFAULT)
0xE2B6E243,	//0x13a6		VoC_rbinc_i(REG6,0xd,DEFAULT)	|	VoC_lbinc_p(REG3)
0xE2B7E243,	//0x13a8		VoC_rbinc_i(REG7,0xd,DEFAULT)	|	VoC_lbinc_p(REG3)
0xF9EF79EE,	//0x13aa		VoC_shru16_ri(REG7,0xfffffffd,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffffd,DEFAULT)
0xF81F781E,	//0x13ac		VoC_shr16_ri(REG7,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
		//0x13ae		VoC_endloop0
0xFF137F1A,	//0x13ae		VoC_movreg32(REG67,REG45,IN_PARALLEL)	|	VoC_movreg32(REG45,REG67,DEFAULT)
0x13B531C2,	//0x13b0		VoC_bnez16_r(Vq_subvec_s_new_05,REG2)
0xDD8ADD83,	//0x13b2		VoC_sw32_p(REG45,REG1,DEFAULT)	|	VoC_sw32_p(REG67,REG0,DEFAULT)
0xF002E580,	//0x13b4		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_return
		//0x13b5		Vq_subvec_s_new_05
0xC2BF42B6,	//0x13b6		VoC_sub16_rr(REG7,REG2,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)
0xC2AD42A4,	//0x13b8		VoC_sub16_rr(REG5,REG2,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)
0xDD8ADD83,	//0x13ba		VoC_sw32_p(REG45,REG1,DEFAULT)	|	VoC_sw32_p(REG67,REG0,DEFAULT)
0xDFE9E580,	//0x13bc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x13bd		CII_prm2bits_amr_efr
0x262A0A81,	//0x13be		VoC_lw16i(REG1,0x262a)
0x63E21806,	//0x13c0		VoC_lw16i_set_inc(REG2,0x63e2,0x1)
0xE00477F3,	//0x13c2		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x13D82E29,	//0x13c4		VoC_loop_r(1,REG5)
0x1606D806,	//0x13c6		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x160400FF,	//0x13c8		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_and16_ri(REG6,0xff)(hi)
0x31840001,	//0x13ca		VoC_bez16_r(prm2bits_amr_efr_even,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0xD88613CF,	//0x13cc		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_bez16_r(prm2bits_amr_efr_even,REG4)(hi)
0xD8A7F946,	//0x13ce		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
		//0x13cf		prm2bits_amr_efr_even
0x078BC071,	//0x13d0		VoC_sub16_rd(REG3,REG1,0x370)(lo)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE7840370,	//0x13d2		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG3,REG1,0x370)(hi)
0xE43DF025,	//0x13d4		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xDCB5F80F,	//0x13d6		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x13d7		VoC_endloop0
		//0x13d8		VoC_endloop1
0x03700724,	//0x13d8		VoC_add16_rd(REG4,REG4,0x370)
0x40916C06,	//0x13da		VoC_bez16_d(COD12D2_NO_SID_ENCODING,0x4091)
0x43026E04,	//0x13dc		VoC_bnez16_d(COD12D2_NO_SID_ENCODING,0x4302)
0x1B6A2B80,	//0x13de		VoC_jal(CII_sid_codeword_encoding)
		//0x13e0		COD12D2_NO_SID_ENCODING
0x262A1804,	//0x13e0		VoC_lw16i_set_inc(REG0,0x262a,0x1)
0x001A1805,	//0x13e2		VoC_lw16i_set_inc(REG1,0x1a,0x1)
0x03320709,	//0x13e4		VoC_add16_rd(REG1,REG1,0x332)
0x408F1407,	//0x13e6		VoC_lw16_d(REG7,0x408f)
0x14232B80,	//0x13e8		VoC_jal(Coolsand_If1_table_selet)
0x6E13DFA9,	//0x13ea		VoC_bnez16_d(prm2bits_amr_not_IF1_format,0x4044)(lo)	|	VoC_pop16(RA,DEFAULT)
0x07034044,	//0x13ec		VoC_add16_rd(REG3,REG0,0x33b)(lo)	|	VoC_bnez16_d(prm2bits_amr_not_IF1_format,0x4044)(hi)
0x2C21033B,	//0x13ee		VoC_loop_i(0x1,0x10)(lo)	|	VoC_add16_rd(REG3,REG0,0x33b)(hi)
0xFF4213FB,	//0x13f0		VoC_lw32z(REG45,DEFAULT)	|	VoC_loop_i(0x1,0x10)(hi)
0xEA05FFC0,	//0x13f2		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_NAD
0xD8B67BFA,	//0x13f4		VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x00011606,	//0x13f6		VoC_and16_ri(REG6,0x1)
		//0x13f8		VoC_endloop0
0x071BE474,	//0x13f8		VoC_add16_rd(REG3,REG3,0x33f)(lo)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xDC94033F,	//0x13fa		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x33f)(hi)
		//0x13fb		VoC_endloop1
0x14222B00,	//0x13fc		VoC_jump_lg(prm2bits_amr_efr_end)
		//0x13fe		prm2bits_amr_not_IF1_format
0x64481807,	//0x13fe		VoC_lw16i_set_inc(REG3,0x6448,0x1)
0x2E308215,	//0x1400		VoC_loop_r(0,REG6)(lo)	|	VoC_add16inc_rp(REG5,REG0,REG2,DEFAULT)
0xD8541405,	//0x1402		VoC_lw16_p(REG4,REG5,DEFAULT)	|	VoC_loop_r(0,REG6)(hi)
0xDCB48215,	//0x1404		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_add16inc_rp(REG5,REG0,REG2,DEFAULT)
		//0x1405		VoC_endloop0
0xE981FF42,	//0x1406		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_lw32z(REG45,DEFAULT)
		//0x1408		VoC_endloop0
0x0A86DCB4,	//0x1408		VoC_lw16i(REG6,0x61f0)(lo)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xC1BE61F0,	//0x140a		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16i(REG6,0x61f0)(hi)
0x64481804,	//0x140c		VoC_lw16i_set_inc(REG0,0x6448,0x1)
0x2C21D866,	//0x140e		VoC_loop_i(0x1,0x10)(lo)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xE9051421,	//0x1410		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_loop_i(0x1,0x10)(hi)
0xD88778FC,	//0x1412		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x00011607,	//0x1414		VoC_and16_ri(REG7,0x1)
		//0x1416		VoC_endloop0
0xF9C4E47C,	//0x1416		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_or16_rr(REG4,REG7,DEFAULT)
0xFF43E474,	//0x1418		VoC_lw32z(REG67,DEFAULT)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xE905DC94,	//0x141a		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xD88378FE,	//0x141c		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x00011603,	//0x141e		VoC_and16_ri(REG3,0x1)
		//0x1420		VoC_endloop0
0xFF42E45E,	//0x1420		VoC_lw32z(REG45,DEFAULT)	|	VoC_or16_rr(REG6,REG3,DEFAULT)
		//0x1421		VoC_endloop1
		//0x1422		prm2bits_amr_efr_end
0xF023E580,	//0x1422		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_return
		//0x1423		Coolsand_If1_table_selet
0x61F80A86,	//0x1424		VoC_lw16i(REG6,0x61f8)
0x1806C1BE,	//0x1426		VoC_lw16i_set_inc(REG2,0x5d38,0x1)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x0A8D5D38,	//0x1428		VoC_lw16i(RL6_HI,0x60c)(lo)	|	VoC_lw16i_set_inc(REG2,0x5d38,0x1)(hi)
0x3187060C,	//0x142a		VoC_bez16_r(mode_selet_end,REG7)(lo)	|	VoC_lw16i(RL6_HI,0x60c)(hi)
0x0A82145A,	//0x142c		VoC_lw16i(REG2,0x5d98)(lo)	|	VoC_bez16_r(mode_selet_end,REG7)(hi)
0x0A8D5D98,	//0x142e		VoC_lw16i(RL6_HI,0x615)(lo)	|	VoC_lw16i(REG2,0x5d98)(hi)
0x353B0615,	//0x1430		VoC_be16_rr(mode_selet_end,REG7,REG3)(lo)	|	VoC_lw16i(RL6_HI,0x615)(hi)
0x0A82145A,	//0x1432		VoC_lw16i(REG2,0x5e00)(lo)	|	VoC_be16_rr(mode_selet_end,REG7,REG3)(hi)
0x0A8D5E00,	//0x1434		VoC_lw16i(RL6_HI,0x61f)(lo)	|	VoC_lw16i(REG2,0x5e00)(hi)
0xF043061F,	//0x1436		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_lw16i(RL6_HI,0x61f)(hi)
0x145A353B,	//0x1438		VoC_be16_rr(mode_selet_end,REG7,REG3)
0x5E760A82,	//0x143a		VoC_lw16i(REG2,0x5e76)
0x06290A8D,	//0x143c		VoC_lw16i(RL6_HI,0x629)
0x033141A7,	//0x143e		VoC_be16_rd(mode_selet_end,REG7,0x331)
0x5EFC0A82,	//0x1440		VoC_lw16i(REG2,0x5efc)
0x06330A8D,	//0x1442		VoC_lw16i(RL6_HI,0x633)
0x03324137,	//0x1444		VoC_be16_rd(mode_selet_end,REG7,0x332)
0x5F900A82,	//0x1446		VoC_lw16i(REG2,0x5f90)
0x063D0A8D,	//0x1448		VoC_lw16i(RL6_HI,0x63d)
0x034A4107,	//0x144a		VoC_be16_rd(mode_selet_end,REG7,0x34a)
0x60300A82,	//0x144c		VoC_lw16i(REG2,0x6030)
0x06490A8D,	//0x144e		VoC_lw16i(RL6_HI,0x649)
0x03334097,	//0x1450		VoC_be16_rd(mode_selet_end,REG7,0x333)
0x60FC0A82,	//0x1452		VoC_lw16i(REG2,0x60fc)
0x05EE0A8D,	//0x1454		VoC_lw16i(RL6_HI,0x5ee)
0x03344027,	//0x1456		VoC_be16_rd(mode_selet_end,REG7,0x334)
0x065D0A8D,	//0x1458		VoC_lw16i(RL6_HI,0x65d)
		//0x145a		mode_selet_end
0xE580D866,	//0x145a		VoC_return	|	VoC_lw16_p(REG6,REG6,DEFAULT)
		//0x145c		Coolsand_decompressed_windows
0xF01BFF46,	//0x145c		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0x653C1806,	//0x145e		VoC_lw16i_set_inc(REG2,0x653c,0x1)
0xE280E241,	//0x1460		VoC_rbinc_i(REG4,0x10,DEFAULT)	|	VoC_lbinc_p(REG1)
0x2DE0F005,	//0x1462		VoC_loop_i(0x0,0xf0)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xE241146B,	//0x1464		VoC_lbinc_p(REG1)	|	VoC_loop_i(0x0,0xf0)(hi)
0xE2A2C12C,	//0x1466		VoC_rbinc_i(REG6,0x8,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xF9C6DCA4,	//0x1468		VoC_shru16_ri(REG6,0xfffffff8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC175F846,	//0x146a		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x8,DEFAULT)
		//0x146b		VoC_endloop0
0x653C1805,	//0x146c		VoC_lw16i_set_inc(REG1,0x653c,0x1)
0xFFC0E580,	//0x146e		VoC_NAD	|	VoC_return
