		//0x0298		VoC_code_section_1
		//0x0298		CII_FR_Encode
0x028A14C0,	//0x0298		VoC_lw32_d(REG01,0x828a)
0xDF40DFE9,	//0x029a		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x02A431C2,	//0x029c		VoC_bnez16_r(gsm_encode_reset,REG2)
0x42FE2008,	//0x029e		VoC_lw16d_set_inc(REG0,0x42fe,0x2)
0x01CE2B80,	//0x02a0		VoC_jal(CII_encoder_homing_frame_test)
0x02B03184,	//0x02a2		VoC_bez16_r(FR_label_100,REG4)
		//0x02a4		gsm_encode_reset
0x087B2B80,	//0x02a4		VoC_jal(CII_encoder_reset_fr)
0x09062B80,	//0x02a6		VoC_jal(CII_vad_init)
0xE0337080,	//0x02a8		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x7FFF0A81,	//0x02aa		VoC_lw16i(REG1,0x7fff)
0x43391503,	//0x02ac		VoC_sw16_d(REG3,0x4339)
0x433A1580,	//0x02ae		VoC_sw32_d(REG01,0x433a)
		//0x02b0		FR_label_100
0x034E2B80,	//0x02b0		VoC_jal(CII_Gsm_Coder)
0x04741808,	//0x02b2		VoC_lw16i_set_inc(REG0,0x474,0x2)
0x437A1809,	//0x02b4		VoC_lw16i_set_inc(REG1,0x437a,0x2)
0x1404F023,	//0x02b6		VoC_lw16_d(REG4,0x4339)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x60854339,	//0x02b8		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x4339)(hi)
0x1503FF45,	//0x02ba		VoC_sw16_d(REG3,0x42fc)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xE41C42FC,	//0x02bc		VoC_and16_rr(REG4,REG3,DEFAULT)	|	VoC_sw16_d(REG3,0x42fc)(hi)
0x02DC31C4,	//0x02be		VoC_bnez16_r(gsm_enc_label_100,REG4)
0x048C180B,	//0x02c0		VoC_lw16i_set_inc(REG3,0x48c,0x2)
0x42FC150B,	//0x02c2		VoC_sw16_d(ACC1_HI,0x42fc)
0xDDDDEB41,	//0x02c4		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_loop_i_short(0x1a,DEFAULT)
		//0x02c5		VoC_endloop0
0x00101605,	//0x02c6		VoC_and16_ri(REG5,0x10)
0x02D33185,	//0x02c8		VoC_bez16_r(gsm_enc_label_200,REG5)
0x04881404,	//0x02ca		VoC_lw16_d(REG4,0x488)
0xD9C46883,	//0x02cc		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDCCD9C4,	//0x02ce		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x02cf		VoC_endloop0
0x43821504,	//0x02d0		VoC_sw16_d(REG4,0x4382)
0xD9CCE5CA,	//0x02d2		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_jump(gsm_enc_label_100)
		//0x02d3		gsm_enc_label_200
0x43821404,	//0x02d4		VoC_lw16_d(REG4,0x4382)
0x04881806,	//0x02d6		VoC_lw16i_set_inc(REG2,0x488,0x1)
0xD9CCE883,	//0x02d8		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCA4DDC4,	//0x02da		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x02db		VoC_endloop0
		//0x02dc		gsm_enc_label_100
0x02E12B80,	//0x02dc		VoC_jal(CII_prm2bits_fr)
0xDF05DFA9,	//0x02de		VoC_pop32(ACC1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF027E580,	//0x02e0		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_return
		//0x02e1		CII_prm2bits_fr
0x04741804,	//0x02e2		VoC_lw16i_set_inc(REG0,0x474,0x1)
0x08881805,	//0x02e4		VoC_lw16i_set_inc(REG1,0x888,0x1)
0x00061FBE,	//0x02e6		VoC_lw16i_set_inc(REG2,0x6,0xffffffff)
		//0x02e8		PRM2BIT_L1
0x3AAF48F2,	//0x02e8		VoC_blt16_rd(PRM2BIT_L2,REG2,0xbaaf)
0x02F32C05,	//0x02ea		VoC_loop_i(0x1,0x2)
0x6684D884,	//0x02ec		VoC_loop_r_short(REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xE43DF685,	//0x02ee		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x5C95F80C,	//0x02f0		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x02f1		VoC_endloop0
0xFFC0F685,	//0x02f2		VoC_NOP	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
		//0x02f3		VoC_endloop1
0xE5F3DE10,	//0x02f4		VoC_jump(PRM2BIT_L1)	|	VoC_inc_p(REG2,DEFAULT)
		//0x02f6		PRM2BIT_L2
0x048C1804,	//0x02f6		VoC_lw16i_set_inc(REG0,0x48c,0x1)
0x047C1806,	//0x02f8		VoC_lw16i_set_inc(REG2,0x47c,0x1)
0x04841807,	//0x02fa		VoC_lw16i_set_inc(REG3,0x484,0x1)
0x04800A84,	//0x02fc		VoC_lw16i(REG4,0x480)
0x04880A85,	//0x02fe		VoC_lw16i(REG5,0x488)
0xE0157F16,	//0x0300		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0x03332C09,	//0x0302		VoC_loop_i(0x1,0x4)
0x68E4D8A6,	//0x0304		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xE42FF6C7,	//0x0306		VoC_and16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x5C97F80E,	//0x0308		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x0309		VoC_endloop0
0x58B6F6C7,	//0x030a		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0xFFC0FF32,	//0x030c		VoC_NAD	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0xF6C76845,	//0x030e		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x03842847,	//0x0310		VoC_and16_rd(REG7,0x8384)
0x5C97F80E,	//0x0312		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x0313		VoC_endloop0
0xD846F6C7,	//0x0314		VoC_lw16_p(REG6,REG4,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0xF6C76845,	//0x0316		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x03842847,	//0x0318		VoC_and16_rd(REG7,0x8384)
0x5C97F80E,	//0x031a		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x031b		VoC_endloop0
0x5856F6C7,	//0x031c		VoC_lw16_p(REG6,REG5,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x68C4E015,	//0x031e		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0xE42FF6C7,	//0x0320		VoC_and16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x5C97F80E,	//0x0322		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x0323		VoC_endloop0
0xE9ADF6C7,	//0x0324		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0xE0C7D886,	//0x0326		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF80EE42F,	//0x0328		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
0xF6C75C97,	//0x032a		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xF80EE42F,	//0x032c		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
0xF6C75C97,	//0x032e		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xF80EE42F,	//0x0330		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
		//0x0332		VoC_endloop0
0x0976DC97,	//0x0332		VoC_add32_rd(RL6,RL6,0xbaac)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x0333		VoC_endloop1
0x18043AAC,	//0x0334		VoC_lw16i_set_inc(REG0,0x1a,0x1)(lo)	|	VoC_add32_rd(RL6,RL6,0xbaac)(hi)
0x0740001A,	//0x0336		VoC_add16_rd(REG0,REG0,0xbab0)(lo)	|	VoC_lw16i_set_inc(REG0,0x1a,0x1)(hi)
0x18053AB0,	//0x0338		VoC_lw16i_set_inc(REG1,0x888,0x1)(lo)	|	VoC_add16_rd(REG0,REG0,0xbab0)(hi)
0x18070888,	//0x033a		VoC_lw16i_set_inc(REG3,0x1,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x888,0x1)(hi)
0xF7F20001,	//0x033c		VoC_lw16i_short(INC2,0xffffffff,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1,0x1)(hi)
0x034C2C23,	//0x033e		VoC_loop_i(0x1,0x11)
0xE0057007,	//0x0340		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xE0026A09,	//0x0342		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0x7E92D894,	//0x0344		VoC_shr32_rr(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xE467DE18,	//0x0346		VoC_or16_rr(REG7,REG4,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x54F53C5B,	//0x0348		VoC_bngt16_rd(PRM2BIT_001,REG3,0xd4f5)
0xDE10E5C2,	//0x034a		VoC_inc_p(REG2,DEFAULT)	|	VoC_jump(PRM2BIT_002)
		//0x034b		PRM2BIT_001
		//0x034b		VoC_endloop0
		//0x034c		PRM2BIT_002
		//0x034c		VoC_endloop1
0xE580DC87,	//0x034c		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x034e		CII_Gsm_Coder
0x2004DFE9,	//0x034e		VoC_lw16d_set_inc(REG0,0x42fe,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x180542FE,	//0x0350		VoC_lw16i_set_inc(REG1,0x766,0x1)(lo)	|	VoC_lw16d_set_inc(REG0,0x42fe,0x1)(hi)
0x18060766,	//0x0352		VoC_lw16i_set_inc(REG2,0x474,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x766,0x1)(hi)
0xDFC70474,	//0x0354		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x474,0x1)(hi)
0xDFC1DFC0,	//0x0356		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xFFC0DFC2,	//0x0358		VoC_NAD	|	VoC_push16(REG2,DEFAULT)
0x03D42B80,	//0x035a		VoC_jal(CII_Gsm_Preprocess)
0x04282B80,	//0x035c		VoC_jal(CII_Gsm_LPC_Analysis)
0x06E72B80,	//0x035e		VoC_jal(CII_Gsm_Short_Term_Analysis_Filter)
0x048C1804,	//0x0360		VoC_lw16i_set_inc(REG0,0x48c,0x1)
0x03A81805,	//0x0362		VoC_lw16i_set_inc(REG1,0x3a8,0x1)
0x047C1806,	//0x0364		VoC_lw16i_set_inc(REG2,0x47c,0x1)
0x04841807,	//0x0366		VoC_lw16i_set_inc(REG3,0x484,0x1)
0xDFC1DA10,	//0x0368		VoC_push16(REG1,DEFAULT)	|	VoC_sw16_sd(REG0,0x0,DEFAULT)
0xDFC2DFC1,	//0x036a		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x1806DFC3,	//0x036c		VoC_lw16i_set_inc(REG2,0x488,0x1)(lo)	|	VoC_push16(REG3,DEFAULT)
0x18070488,	//0x036e		VoC_lw16i_set_inc(REG3,0x480,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x488,0x1)(hi)
0xDFC20480,	//0x0370		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x480,0x1)(hi)
0xEFF75FC3,	//0x0372		VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
		//0x0374		Gsm_Coder_Loop_start
0x0384077F,	//0x0374		VoC_add16_rd(REG7,REG7,0x8384)
0x3AAF3C67,	//0x0376		VoC_bngt16_rd(Gsm_Coder_Loop_start2,REG7,0xbaaf)
0x03A62B00,	//0x0378		VoC_jump_lg(Gsm_Coder_Loop_End)
		//0x037a		Gsm_Coder_Loop_start2
0x43371507,	//0x037a		VoC_sw16_d(REG7,0x4337)
0x3D92087E,	//0x037c		VoC_mult16_rd(REG6,REG7,0xbd92)
0xC030D680,	//0x037e		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16_sd(REG0,0x7,DEFAULT)
0xF0045AA7,	//0x0380		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x9,DEFAULT)
0x05B32B80,	//0x0382		VoC_jal(CII_Gsm_Long_Term_Predictor)
0x08502B80,	//0x0384		VoC_jal(CII_Gsm_RPE_Encoding)
0xE0D55674,	//0x0386		VoC_lw16i_short(REG5,0xd,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0xD651412C,	//0x0388		VoC_lw16_sd(REG1,0x4,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x43091806,	//0x038a		VoC_lw16i_set_inc(REG2,0x4309,0x1)
0xE2855A74,	//0x038c		VoC_lw16i_short(REG5,0x28,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x6,DEFAULT)
0xC06C5660,	//0x038e		VoC_add16_rr(REG4,REG1,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x6D03C02D,	//0x0390		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_add16_rr(REG5,REG0,REG5,DEFAULT)
0xA28EA28E,	//0x0392		VoC_add16inc_pp(REG6,REG2,REG1,DEFAULT)	|	VoC_add16inc_pp(REG6,REG2,REG1,IN_PARALLEL)
		//0x0394		VoC_endloop0
0xD610DC86,	//0x0394		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xD632D621,	//0x0396		VoC_lw16_sd(REG2,0x2,DEFAULT)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x0940D643,	//0x0398		VoC_add32_rd(REG01,REG01,0xbaac)(lo)	|	VoC_lw16_sd(REG3,0x3,DEFAULT)
0x09493AAC,	//0x039a		VoC_add32_rd(REG23,REG23,0xbaac)(lo)	|	VoC_add32_rd(REG01,REG01,0xbaac)(hi)
0xDA653AAC,	//0x039c		VoC_sw16_sd(REG5,0x5,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0xbaac)(hi)
0xDA10DA54,	//0x039e		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_sd(REG4,0x4,DEFAULT)
0xDA32DA21,	//0x03a0		VoC_sw16_sd(REG2,0x2,DEFAULT)	|	VoC_sw16_sd(REG1,0x1,DEFAULT)
0xD6A7DA43,	//0x03a2		VoC_lw16_sd(REG7,0x9,DEFAULT)	|	VoC_sw16_sd(REG3,0x3,DEFAULT)
0x03742B00,	//0x03a4		VoC_jump_lg(Gsm_Coder_Loop_start)
		//0x03a6		Gsm_Coder_Loop_End
0x2803F023,	//0x03a6		VoC_and16_rd(REG3,0x4339)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x31C34339,	//0x03a8		VoC_bnez16_r(coder_label_100,REG3)(lo)	|	VoC_and16_rd(REG3,0x4339)(hi)
0x710603C0,	//0x03aa		VoC_lw16i_short(REG6,0x8,DEFAULT)	|	VoC_bnez16_r(coder_label_100,REG3)(hi)
0x1804E007,	//0x03ac		VoC_lw16i_set_inc(REG0,0x436a,0x1)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xEA06436A,	//0x03ae		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x436a,0x1)(hi)
0xE0055884,	//0x03b0		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x03B53244,	//0x03b2		VoC_bnltz16_r(DTX_MODE_label_LBC,REG4)
0xC8D3F7E5,	//0x03b4		VoC_add32_rr(REG67,REG67,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
		//0x03b5		DTX_MODE_label_LBC
		//0x03b5		VoC_endloop0
0x60C7FA23,	//0x03b6		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0x4,DEFAULT)
0xFFC0E006,	//0x03b8		VoC_NAD	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x08EF2B80,	//0x03ba		VoC_jal(CII_APCM_quantization_sub)
0x04881804,	//0x03bc		VoC_lw16i_set_inc(REG0,0x488,0x1)
0xDC87E881,	//0x03be		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x03bf		VoC_endloop0
		//0x03c0		coder_label_100
0x443BF023,	//0x03c0		VoC_bne16_rd(coder_label_200,REG3,0x4302)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xFFC04302,	//0x03c2		VoC_NAD	|	VoC_bne16_rd(coder_label_200,REG3,0x4302)(hi)
0x0C1A2B80,	//0x03c4		VoC_jal(CII_periodicity_update_fr)
0x09582B80,	//0x03c6		VoC_jal(CII_tone_detection_fr)
		//0x03c8		coder_label_200
0x03D01808,	//0x03c8		VoC_lw16i_set_inc(REG0,0x3d0,0x2)
0x03301809,	//0x03ca		VoC_lw16i_set_inc(REG1,0x330,0x2)
0xE1E66942,	//0x03cc		VoC_lw16i_short(REG6,0x1e,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x03ce		VoC_endloop0
0x2B80DF87,	//0x03ce		VoC_jal(CII_copy)(lo)	|	VoC_pop16(REG7,DEFAULT)
0xDFA908E6,	//0x03d0		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_copy)(hi)
0xE580FFC0,	//0x03d2		VoC_return	|	VoC_NOP
		//0x03d4		CII_Gsm_Preprocess
0x454E1806,	//0x03d4		VoC_lw16i_set_inc(REG2,0x454e,0x1)
0x044A1486,	//0x03d6		VoC_lw32_d(RL6,0x44a)
0x04481406,	//0x03d8		VoC_lw16_d(REG6,0x448)
0x044C1407,	//0x03da		VoC_lw16_d(REG7,0x44c)
0x028A14C5,	//0x03dc		VoC_lw32_d(ACC1,0x828a)
0x7FDF0A8F,	//0x03de		VoC_lw16i(RL7_HI,0x7fdf)
0x11EC0ACE,	//0x03e0		VoC_lw16i(RL7_LO,0xffff91ec)
0xFFC0DFC2,	//0x03e2		VoC_NAD	|	VoC_push16(REG2,DEFAULT)
0x040C2D41,	//0x03e4		VoC_loop_i(0x1,0xa0)
0xFF315885,	//0x03e6		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFF44781D,	//0x03e8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x3,DEFAULT)
0xFA7E78F5,	//0x03ea		VoC_shr32_ri(RL6,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
0xF6A64374,	//0x03ec		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG5,REG6,DEFAULT)
0x03F23244,	//0x03ee		VoC_bnltz16_r(Gsm_Preprocess_L1,REG4)
0xFFC0F7E9,	//0x03f0		VoC_NAD	|	VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)
		//0x03f2		Gsm_Preprocess_L1
0xF7846088,	//0x03f2		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0x02AC29C1,	//0x03f4		VoC_and32_rd(REG23,0x82ac)
0xCC9EE1E3,	//0x03f6		VoC_multf32_rr(RL6,REG2,REG3,DEFAULT)	|	VoC_movreg16(REG3,RL7_HI,DEFAULT)
0xC9AEFB8C,	//0x03f8		VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff1,DEFAULT)
0x4934FA86,	//0x03fa		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x10,DEFAULT)
0xE1C2CD1E,	//0x03fc		VoC_movreg16(REG2,RL7_LO,DEFAULT)	|	VoC_multf32_rr(RL6,REG4,REG3,IN_PARALLEL)
0x49A6FA0E,	//0x03fe		VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0x0971CCBA,	//0x0400		VoC_add32_rd(REG23,RL6,0x82f2)(lo)	|	VoC_multf32_rr(REG45,REG2,REG7,IN_PARALLEL)
0x48AA02F2,	//0x0402		VoC_add32_rr(REG45,REG45,ACC1,DEFAULT)	|	VoC_add32_rd(REG23,RL6,0x82f2)(hi)
0x4155FA79,	//0x0404		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_shr32_ri(REG23,0xf,IN_PARALLEL)
0xE047D614,	//0x0406		VoC_movreg16(REG7,REG2,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x03840763,	//0x0408		VoC_add16_rd(REG3,REG4,0x8384)
0xDC955C42,	//0x040a		VoC_sw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG2,REG4,DEFAULT)
		//0x040c		VoC_endloop1
0x1506DA13,	//0x040c		VoC_sw16_d(REG6,0x448)(lo)	|	VoC_sw16_sd(REG3,0x0,DEFAULT)
0x15860448,	//0x040e		VoC_sw32_d(RL6,0x44a)(lo)	|	VoC_sw16_d(REG6,0x448)(hi)
0xE0E8044A,	//0x0410		VoC_movreg16(ACC0_LO,REG7,DEFAULT)	|	VoC_sw32_d(RL6,0x44a)(hi)
0x3247F009,	//0x0412		VoC_bnltz16_r(Gsm_Preprocess_L2,REG7)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xF7E90416,	//0x0414		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Gsm_Preprocess_L2,REG7)(hi)
		//0x0416		Gsm_Preprocess_L2
0x1584DF82,	//0x0416		VoC_sw32_d(ACC0,0x44c)(lo)	|	VoC_pop16(REG2,DEFAULT)
0xE580044C,	//0x0418		VoC_return	|	VoC_sw32_d(ACC0,0x44c)(hi)
		//0x041a		CII_step_t
0xC0A98D03,	//0x041a		VoC_add16_rr(REG1,REG2,REG5,DEFAULT)	|	VoC_multf16_rp(REG3,REG4,REG0,DEFAULT)
0xF84BC0CB,	//0x041c		VoC_shr16_ri(REG3,0x9,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0x341EC3B9,	//0x041e		VoC_bgt16_rr(step_t_L2,REG3,REG6)(lo)	|	VoC_sub16_rr(REG1,REG6,REG7,DEFAULT)
0xF0010425,	//0x0420		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_bgt16_rr(step_t_L2,REG3,REG6)(hi)
0x0425343B,	//0x0422		VoC_bgt16_rr(step_t_L2,REG7,REG3)
0xFFC0C2F9,	//0x0424		VoC_NOP	|	VoC_sub16_rr(REG1,REG3,REG7,DEFAULT)
		//0x0425		step_t_L2
0xE580DC81,	//0x0426		VoC_return	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
		//0x0428		CII_Gsm_LPC_Analysis
0x5630DFE9,	//0x0428		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xFF43E043,	//0x042a		VoC_lw32z(REG67,DEFAULT)	|	VoC_lw16i_short(REG3,0x4,IN_PARALLEL)
0x1507D885,	//0x042c		VoC_sw16_d(REG7,0x6e6)(lo)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFFC006E6,	//0x042e		VoC_NAD	|	VoC_sw16_d(REG7,0x6e6)(hi)
0x04392D40,	//0x0430		VoC_loop_i(0x0,0xa0)
0x04363245,	//0x0432		VoC_bnltz16_r(Autocor_L1,REG5)
0xFFC0C3AD,	//0x0434		VoC_NAD	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x0436		Autocor_L1
0x043934AF,	//0x0436		VoC_bngt16_rr(Autocor_L2,REG5,REG7)
0xD885E0A7,	//0x0438		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0439		Autocor_L2
		//0x0439		VoC_endloop0
0x04403187,	//0x043a		VoC_bez16_r(Autocor_L3,REG7)
0x08AF2B80,	//0x043c		VoC_jal(CII_gsm_norm)
0xFFC0C2F6,	//0x043e		VoC_NAD	|	VoC_sub16_rr(REG6,REG3,REG6,DEFAULT)
		//0x0440		Autocor_L3
0x045E3146,	//0x0440		VoC_bngtz16_r(Autocor_L4,REG6)
0x40000A87,	//0x0442		VoC_lw16i(REG7,0x4000)
0x038440D6,	//0x0444		VoC_be16_rd(Autocor_L5,REG6,0x8384)
0x407EF80F,	//0x0446		VoC_be16_rd(Autocor_L5,REG6,0xbaae)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF80F3AAE,	//0x0448		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_be16_rd(Autocor_L5,REG6,0xbaae)(hi)
0x3AAF4066,	//0x044a		VoC_be16_rd(Autocor_L5,REG6,0xbaaf)
0xFFC0F80F,	//0x044c		VoC_NAD	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x044e		Autocor_L5
0xF009590D,	//0x044e		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0xF0085631,	//0x0450		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x1BCEE020,	//0x0452		VoC_multf32inc_rp(RL6,REG7,REG1,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0xFFC09BCF,	//0x0454		VoC_NAD	|	VoC_multf32inc_rp(RL7,REG7,REG1,IN_PARALLEL)
0x045D2CA0,	//0x0456		VoC_loop_i(0x0,0x50)
0xC9EF49AE,	//0x0458		VoC_add32_rr(RL7,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
0x1BCEE1AE,	//0x045a		VoC_multf32inc_rp(RL6,REG7,REG1,DEFAULT)	|	VoC_movreg16(RL7_LO,RL6_HI,DEFAULT)
0xDDC79BCF,	//0x045c		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_multf32inc_rp(RL7,REG7,REG1,IN_PARALLEL)
		//0x045d		VoC_endloop0
		//0x045e		Autocor_L4
0xF0045630,	//0x045e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x0806180A,	//0x0460		VoC_lw16i_set_inc(REG2,0x806,0x2)
0xFF466001,	//0x0462		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xF3FD604F,	//0x0464		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0xDE001C4C,	//0x0466		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_multf32_pp(ACC0,REG1,REG1,DEFAULT)
0xF6046922,	//0x0468		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
		//0x046a		VoC_endloop0
0x5324DDD6,	//0x046a		VoC_mac32_pp(REG4,REG4,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0x1C0DF7E2,	//0x046c		VoC_multf32_pp(ACC1,REG0,REG1,DEFAULT)	|	VoC_movreg16(REG2,RL7_HI,IN_PARALLEL)
0x7065F7EE,	//0x046e		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_movreg16(RL7_LO,RL7_HI,IN_PARALLEL)
0xDDD4F00B,	//0x0470		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xFFC0DDD5,	//0x0472		VoC_NAD	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x04802C0D,	//0x0474		VoC_loop_i(0x1,0x6)
0xDE007F39,	//0x0476		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0xD8046001,	//0x0478		VoC_lw16_p(REG4,REG0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD9DC6745,	//0x047a		VoC_lw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0xFFC0D121,	//0x047c		VoC_NOP	|	VoC_mac32inc_rp(REG4,REG1,DEFAULT)
0xDDD4D9DC,	//0x047e		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x047f		VoC_endloop0
		//0x0480		VoC_endloop1
0x0384076D,	//0x0480		VoC_add16_rd(REG5,REG5,0x8384)
0xDE007F39,	//0x0482		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x048E2D31,	//0x0484		VoC_loop_i(0x1,0x98)
0xD8046001,	//0x0486		VoC_lw16_p(REG4,REG0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD9DC6925,	//0x0488		VoC_lw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFFC0D121,	//0x048a		VoC_NOP	|	VoC_mac32inc_rp(REG4,REG1,DEFAULT)
0xDDD4D9DC,	//0x048c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x048d		VoC_endloop0
		//0x048e		VoC_endloop1
0xDE007F39,	//0x048e		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0xF0055630,	//0x0490		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xF6026003,	//0x0492		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x04A23146,	//0x0494		VoC_bngtz16_r(Autocor_L6,REG6)
0x06E61506,	//0x0496		VoC_sw16_d(REG6,0x6e6)
0x3AAA0B76,	//0x0498		VoC_sub16_dr(REG6,0xbaaa,REG6)
0xFFC0D9D2,	//0x049a		VoC_NAD	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x04A12CA0,	//0x049c		VoC_loop_i(0x0,0x50)
0xFE357E34,	//0x049e		VoC_shr16_rr(REG5,REG6,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG6,DEFAULT)
0xDDDAD9D2,	//0x04a0		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x04a1		VoC_endloop0
		//0x04a2		Autocor_L6
0xF067F026,	//0x04a2		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x43024486,	//0x04a4		VoC_bne16_rd(NO_DTX_MODE_label_100,REG6,0x4302)
0x0A282B80,	//0x04a6		VoC_jal(CII_vad_computation_fr)
0x42FB1406,	//0x04a8		VoC_lw16_d(REG6,0x42fb)
0x05992B80,	//0x04aa		VoC_jal(CII_tx_dtx_fr)
		//0x04ac		NO_DTX_MODE_label_100
0xF052FF44,	//0x04ac		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x42FB1506,	//0x04ae		VoC_sw16_d(REG6,0x42fb)
0x43391507,	//0x04b0		VoC_sw16_d(REG7,0x4339)
0x0806180A,	//0x04b2		VoC_lw16i_set_inc(REG2,0x806,0x2)
0x08066E08,	//0x04b4		VoC_bnez16_d(Ref_coeff_L1,0x806)
0xF0045622,	//0x04b6		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0xDDD4E881,	//0x04b8		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x04b9		VoC_endloop0
0x05172B00,	//0x04ba		VoC_jump_lg(Ref_coeff_LEnd)
		//0x04bc		Ref_coeff_L1
0x08061483,	//0x04bc		VoC_lw32_d(REG67,0x806)
0x08AF2B80,	//0x04be		VoC_jal(CII_gsm_norm)
0x08741804,	//0x04c0		VoC_lw16i_set_inc(REG0,0x874,0x1)
0x086A1805,	//0x04c2		VoC_lw16i_set_inc(REG1,0x86a,0x1)
0x3AB90B76,	//0x04c4		VoC_sub16_dr(REG6,0xbab9,REG6)
0x3AAC0946,	//0x04c6		VoC_add32_rd(RL6,REG01,0xbaac)
0xD9D2E926,	//0x04c8		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0x1807FEB2,	//0x04ca		VoC_lw16i_set_inc(REG3,0x87f,0x1)(lo)	|	VoC_shr32_rr(REG45,REG6,DEFAULT)
0xDC84087F,	//0x04cc		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x87f,0x1)(hi)
		//0x04ce		VoC_endloop0
0x61A1DC94,	//0x04ce		VoC_movreg16(REG1,RL6_HI,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x606DF006,	//0x04d0		VoC_movreg16(RL6_HI,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x68E3D622,	//0x04d2		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw16_sd(REG2,0x1,IN_PARALLEL)
0xD894D894,	//0x04d4		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
		//0x04d6		VoC_endloop0
0x7025DCB4,	//0x04d6		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xFFC0D90F,	//0x04d8		VoC_NAD	|	VoC_lw32_sd(RL7,0x0,IN_PARALLEL)
0x05162C11,	//0x04da		VoC_loop_i(0x1,0x8)
0x08741483,	//0x04dc		VoC_lw32_d(REG67,0x874)
0xF6C360E4,	//0x04de		VoC_movreg16(REG3,REG6,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x04E43247,	//0x04e0		VoC_bnltz16_r(Ref_coeff_L2,REG7)
0x3AAA0B7F,	//0x04e2		VoC_sub16_dr(REG7,0xbaaa,REG7)
		//0x04e4		Ref_coeff_L2
0x04ED34BE,	//0x04e4		VoC_bngt16_rr(Ref_coeff_L3,REG7,REG6)
0x3AB50B6E,	//0x04e6		VoC_sub16_dr(REG6,0xbab5,REG5)
0xE781F004,	//0x04e8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x04ea		VoC_endloop0
0x2B00DCA4,	//0x04ea		VoC_jump_lg(Ref_coeff_LEnd)(lo)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xE0E00517,	//0x04ec		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jump_lg(Ref_coeff_LEnd)(hi)
		//0x04ed		Ref_coeff_L3
0xDFC260C1,	//0x04ee		VoC_push16(REG2,IN_PARALLEL)	|	VoC_movreg16(REG1,REG6,DEFAULT)
0xFFC0DF46,	//0x04f0		VoC_NAD	|	VoC_push32(RL6,DEFAULT)
0x019A2B80,	//0x04f2		VoC_jal(CII_DIV_S)
0xDF066040,	//0x04f4		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x3144DF82,	//0x04f6		VoC_bngtz16_r(Ref_coeff_L4,REG4)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x0B4004FB,	//0x04f8		VoC_sub16_dr(REG0,0xbaaa,REG0)(lo)	|	VoC_bngtz16_r(Ref_coeff_L4,REG4)(hi)
0xCD033AAA,	//0x04fa		VoC_multf32_rr(REG67,REG4,REG0,DEFAULT)	|	VoC_sub16_dr(REG0,0xbaaa,REG0)(hi)
		//0x04fb		Ref_coeff_L4
0x5CA0D90F,	//0x04fc		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0x41C5C8FB,	//0x04fe		VoC_be16_rd(Ref_coeff_LEnd,REG5,0xbab4)(lo)	|	VoC_add32_rr(REG67,REG67,RL7,IN_PARALLEL)
0x40FF3AB4,	//0x0500		VoC_add16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_be16_rd(Ref_coeff_LEnd,REG5,0xbab4)(hi)
0x7F30F604,	//0x0502		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_movreg16(REG4,REG0,IN_PARALLEL)
0x0B6EE013,	//0x0504		VoC_sub16_dr(REG6,0xbab4,REG5)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x15073AB4,	//0x0506		VoC_sw16_d(REG7,0x874)(lo)	|	VoC_sub16_dr(REG6,0xbab4,REG5)(hi)
0xC15D0874,	//0x0508		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_sw16_d(REG7,0x874)(hi)
0xC01B678B,	//0x050a		VoC_add16_rr(REG3,REG0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xFFC0990B,	//0x050c		VoC_NOP	|	VoC_multf32_rp(REG67,REG4,REG1,DEFAULT)
0x81DFC8FB,	//0x050e		VoC_add16_rp(REG7,REG7,REG3,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xDC879B1C,	//0x0510		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)
0x81CFC93B,	//0x0512		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL7,DEFAULT)
0xDC97FFC0,	//0x0514		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
		//0x0515		VoC_endloop0
		//0x0516		VoC_endloop1
0xD620FFC0,	//0x0516		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_NOP
		//0x0517		Ref_coeff_LEnd
0xD806E91D,	//0x0518		VoC_lw16_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x3246E0C5,	//0x051a		VoC_bnltz16_r(Trans_to_Log_L1,REG6)(lo)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x0B76051F,	//0x051c		VoC_sub16_dr(REG6,0xbaaa,REG6)(lo)	|	VoC_bnltz16_r(Trans_to_Log_L1,REG6)(hi)
0xE0C73AAA,	//0x051e		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_sub16_dr(REG6,0xbaaa,REG6)(hi)
		//0x051f		Trans_to_Log_L1
0x0A83F80E,	//0x0520		VoC_lw16i(REG3,0x5666)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x34BB5666,	//0x0522		VoC_bngt16_rr(Trans_to_Log_L4,REG7,REG3)(lo)	|	VoC_lw16i(REG3,0x5666)(hi)
0x07FE0530,	//0x0524		VoC_sub16_rd(REG6,REG7,0x8005)(lo)	|	VoC_bngt16_rr(Trans_to_Log_L4,REG7,REG3)(hi)
0x0A830005,	//0x0526		VoC_lw16i(REG3,0x799a)(lo)	|	VoC_sub16_rd(REG6,REG7,0x8005)(hi)
0x34BB799A,	//0x0528		VoC_bngt16_rr(Trans_to_Log_L4,REG7,REG3)(lo)	|	VoC_lw16i(REG3,0x799a)(hi)
0x0A860530,	//0x052a		VoC_lw16i(REG6,0x6600)(lo)	|	VoC_bngt16_rr(Trans_to_Log_L4,REG7,REG3)(hi)
0xC3F66600,	//0x052c		VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_lw16i(REG6,0x6600)(hi)
0xFFC0F8F6,	//0x052e		VoC_NAD	|	VoC_shr16_ri(REG6,0xfffffffe,DEFAULT)
		//0x0530		Trans_to_Log_L4
0x05353105,	//0x0530		VoC_bgtz16_r(Trans_to_Log_L5,REG5)
0x3AAA0B76,	//0x0532		VoC_sub16_dr(REG6,0xbaaa,REG6)
0xDC86FFC0,	//0x0534		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x0535		Trans_to_Log_L5
		//0x0535		VoC_endloop0
0x4113F063,	//0x0536		VoC_be16_rd(DTX_MODE_label_200,REG3,0x4339)(lo)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x1FB84339,	//0x0538		VoC_lw16i_set_inc(REG0,0x4368,0xfffffffe)(lo)	|	VoC_be16_rd(DTX_MODE_label_200,REG3,0x4339)(hi)
0x1FB94368,	//0x053a		VoC_lw16i_set_inc(REG1,0x4360,0xfffffffe)(lo)	|	VoC_lw16i_set_inc(REG0,0x4368,0xfffffffe)(hi)
0x180A4360,	//0x053c		VoC_lw16i_set_inc(REG2,0x474,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x4360,0xfffffffe)(hi)
0x69830474,	//0x053e		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x474,0x2)(hi)
0xD9CCD9CC,	//0x0540		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,IN_PARALLEL)
		//0x0542		VoC_endloop0
0x1809DDC4,	//0x0542		VoC_lw16i_set_inc(REG1,0x434a,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x6883434A,	//0x0544		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x434a,0x2)(hi)
0xD9D4D9D4,	//0x0546		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x0548		VoC_endloop0
0xF203DDCC,	//0x0548		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0549		DTX_MODE_label_200
0x4339458B,	//0x054a		VoC_bne16_rd(DTX_MODE_label_300,REG3,0x4339)
0x04741806,	//0x054c		VoC_lw16i_set_inc(REG2,0x474,0x1)
0x434A1804,	//0x054e		VoC_lw16i_set_inc(REG0,0x434a,0x1)
0x700DF111,	//0x0550		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0xFFC0E02C,	//0x0552		VoC_NAD	|	VoC_lw16i_short(RL6_LO,0x2,IN_PARALLEL)
0x05622C11,	//0x0554		VoC_loop_i(0x1,0x8)
0xFF356001,	//0x0556		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xE886FFC0,	//0x0558		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xE0075896,	//0x055a		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x055F3246,	//0x055c		VoC_bnltz16_r(DTX_MODE_label_LAB,REG6)
0xC95DF7E7,	//0x055e		VoC_add32_rr(ACC1,ACC1,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x055f		DTX_MODE_label_LAB
		//0x055f		VoC_endloop0
0xDE00FA15,	//0x0560		VoC_inc_p(REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x2,DEFAULT)
		//0x0562		VoC_endloop1
0xF030DCAA,	//0x0562		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)
		//0x0563		DTX_MODE_label_300
0xEE075620,	//0x0564		VoC_lw16i_short(REG7,0xffffffe0,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0x01000A82,	//0x0566		VoC_lw16i(REG2,0x100)
0x50000A84,	//0x0568		VoC_lw16i(REG4,0x5000)
0xE1F67005,	//0x056a		VoC_lw16i_short(REG6,0x1f,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x041A2B80,	//0x056c		VoC_jal(CII_step_t)
0x041A2B80,	//0x056e		VoC_jal(CII_step_t)
0x08000A85,	//0x0570		VoC_lw16i(REG5,0x800)
0xEF0771E6,	//0x0572		VoC_lw16i_short(REG7,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xf,DEFAULT)
0x041A2B80,	//0x0574		VoC_jal(CII_step_t)
0x76000AC5,	//0x0576		VoC_lw16i(REG5,0xfffff600)
0x041A2B80,	//0x0578		VoC_jal(CII_step_t)
0x368C0A84,	//0x057a		VoC_lw16i(REG4,0x368c)
0x005E0A85,	//0x057c		VoC_lw16i(REG5,0x5e)
0xEF8770E6,	//0x057e		VoC_lw16i_short(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0x041A2B80,	//0x0580		VoC_jal(CII_step_t)
0x3C000A84,	//0x0582		VoC_lw16i(REG4,0x3c00)
0x79000AC5,	//0x0584		VoC_lw16i(REG5,0xfffff900)
0x041A2B80,	//0x0586		VoC_jal(CII_step_t)
0x21560A84,	//0x0588		VoC_lw16i(REG4,0x2156)
0x7EAB0AC5,	//0x058a		VoC_lw16i(REG5,0xfffffeab)
0xEFC77066,	//0x058c		VoC_lw16i_short(REG7,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0x041A2B80,	//0x058e		VoC_jal(CII_step_t)
0x234C0A84,	//0x0590		VoC_lw16i(REG4,0x234c)
0x7B880AC5,	//0x0592		VoC_lw16i(REG5,0xfffffb88)
0x041A2B80,	//0x0594		VoC_jal(CII_step_t)
0xFFC0DFA9,	//0x0596		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF023E580,	//0x0598		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_return
		//0x0599		CII_tx_dtx_fr
0x433B071D,	//0x059a		VoC_add16_rd(REG5,REG3,0x433b)
0xE0447067,	//0x059c		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0x05B03533,	//0x059e		VoC_be16_rr(tx_dtx_end,REG6,REG3)
0x433A1404,	//0x05a0		VoC_lw16_d(REG4,0x433a)
0x05A731C4,	//0x05a2		VoC_bnez16_r(tx_dtx_100,REG4)
0xE1077005,	//0x05a4		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF0A7E5CA,	//0x05a6		VoC_lw16i_short(REG7,0x5,DEFAULT)	|	VoC_jump(tx_dtx_end)
		//0x05a7		tx_dtx_100
0x038407E4,	//0x05a8		VoC_sub16_rd(REG4,REG4,0x8384)
0x4C6AC162,	//0x05aa		VoC_bnlt16_rd(tx_dtx_end,REG2,0xbdd8)(lo)	|	VoC_add16_rr(REG2,REG5,REG4,DEFAULT)
0x0A873DD8,	//0x05ac		VoC_lw16i(REG7,0x24)(lo)	|	VoC_bnlt16_rd(tx_dtx_end,REG2,0xbdd8)(hi)
0xFFC00024,	//0x05ae		VoC_NAD	|	VoC_lw16i(REG7,0x24)(hi)
		//0x05b0		tx_dtx_end
0x433A1582,	//0x05b0		VoC_sw32_d(REG45,0x433a)
0xDFE9E580,	//0x05b2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x05b3		CII_Gsm_Long_Term_Predictor
0xFF435FC0,	//0x05b4		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xF00A600F,	//0x05b6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG0,DEFAULT)
0xD8856D09,	//0x05b8		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0x05BE3245,	//0x05ba		VoC_bnltz16_r(Cal_of_the_LTP_p_L1,REG5)
0xFFC0C3AD,	//0x05bc		VoC_NAD	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x05be		Cal_of_the_LTP_p_L1
0x05C134AF,	//0x05be		VoC_bngt16_rr(Cal_of_the_LTP_p_L2,REG5,REG7)
0xD885E0A7,	//0x05c0		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x05c1		Cal_of_the_LTP_p_L2
		//0x05c1		VoC_endloop0
0x05C63187,	//0x05c2		VoC_bez16_r(Cal_of_the_LTP_p_L3,REG7)
0x08AF2B80,	//0x05c4		VoC_jal(CII_gsm_norm)
		//0x05c6		Cal_of_the_LTP_p_L3
0xF7E27005,	//0x05c6		VoC_movreg16(REG2,RL7_HI,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x3AB23866,	//0x05c8		VoC_bgt16_rd(Cal_of_the_LTP_p_L4,REG6,0xbab2)
0x3AB20B75,	//0x05ca		VoC_sub16_dr(REG5,0xbab2,REG6)
		//0x05cc		Cal_of_the_LTP_p_L4
0x448A180B,	//0x05cc		VoC_lw16i_set_inc(REG3,0x448a,0x2)
0xD68F606E,	//0x05ce		VoC_lw16_sd(RL7_HI,0x7,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG3,DEFAULT)
0xD9D36A85,	//0x05d0		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xFE2F7E2E,	//0x05d2		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0xDDDBD9D3,	//0x05d4		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x05d5		VoC_endloop0
0xE2837F38,	//0x05d6		VoC_lw16i_short(REG3,0x28,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xE2877F46,	//0x05d8		VoC_lw16i_short(REG7,0x28,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xE0164259,	//0x05da		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x05E72CA3,	//0x05dc		VoC_loop_i(0x1,0x51)
0xFF446D02,	//0x05de		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
		//0x05e0		VoC_endloop0
0x7F38D401,	//0x05e0		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0x36A6C0F3,	//0x05e2		VoC_bngt32_rr(Cal_of_the_LTP_p_L5,ACC0,RL6)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)
0x606705E7,	//0x05e4		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_bngt32_rr(Cal_of_the_LTP_p_L5,ACC0,RL6)(hi)
0xC259FF26,	//0x05e6		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x05e7		Cal_of_the_LTP_p_L5
		//0x05e7		VoC_endloop1
0x3D92405F,	//0x05e8		VoC_be16_rd(Cal_of_the_LTP_p_L5t,REG7,0xbd92)
0xD660C3F7,	//0x05ea		VoC_lw16_sd(REG0,0x5,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
		//0x05eb		Cal_of_the_LTP_p_L5t
0x0B6DE1E1,	//0x05ec		VoC_sub16_dr(REG5,0xbab2,REG5)(lo)	|	VoC_movreg16(REG1,RL7_HI,DEFAULT)
0x42793AB2,	//0x05ee		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_sub16_dr(REG5,0xbab2,REG5)(hi)
0x5C07FF44,	//0x05f0		VoC_sw16_p(REG7,REG0,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xDFC1FEAE,	//0x05f2		VoC_push16(REG1,DEFAULT)	|	VoC_shr32_rr(RL6,REG5,IN_PARALLEL)
0xD8966D03,	//0x05f4		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0x4E36F81E,	//0x05f6		VoC_mac32_rr(REG6,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
		//0x05f7		VoC_endloop0
0xF000D896,	//0x05f8		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0x061032C6,	//0x05fa		VoC_bngtz32_r(Cal_of_the_LTP_p_LEnd,RL6)
0x36A6F060,	//0x05fc		VoC_bngt32_rr(Cal_of_the_LTP_p_LEnd,ACC0,RL6)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0xFF230610,	//0x05fe		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_bngt32_rr(Cal_of_the_LTP_p_LEnd,ACC0,RL6)(hi)
0x08AF2B80,	//0x0600		VoC_jal(CII_gsm_norm)
0xC236F000,	//0x0602		VoC_sub16_rr(REG6,REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xFEB67EB4,	//0x0604		VoC_shr32_rr(RL6,REG6,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0xF72561A4,	//0x0606		VoC_movreg16(REG5,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,RL6_HI,DEFAULT)
0x06EA1806,	//0x0608		VoC_lw16i_set_inc(REG2,0x6ea,0x1)
0x9B53E865,	//0x060a		VoC_multf32inc_rp(REG67,REG5,REG2,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0x34A7FFC0,	//0x060c		VoC_bngt16_rr(Cal_of_the_LTP_p_LEnd,REG4,REG7)(lo)	|	VoC_NOP
0xDE000610,	//0x060e		VoC_inc_p(REG0,DEFAULT)	|	VoC_bngt16_rr(Cal_of_the_LTP_p_LEnd,REG4,REG7)(hi)
		//0x060f		VoC_endloop0
		//0x0610		Cal_of_the_LTP_p_LEnd
0x5F82D665,	//0x0610		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16_sd(REG5,0x5,DEFAULT)
0xDF81F004,	//0x0612		VoC_pop16(REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xF0055C50,	//0x0614		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG0,REG5,DEFAULT)
0x0CCD0A84,	//0x0616		VoC_lw16i(REG4,0xccd)
0x06243180,	//0x0618		VoC_bez16_r(Long_term_analysis_filt_L4,REG0)
0x2CCD0A84,	//0x061a		VoC_lw16i(REG4,0x2ccd)
0x038440C0,	//0x061c		VoC_be16_rd(Long_term_analysis_filt_L4,REG0,0x8384)
0x53330A84,	//0x061e		VoC_lw16i(REG4,0x5333)
0x3AAE4060,	//0x0620		VoC_be16_rd(Long_term_analysis_filt_L4,REG0,0xbaae)
0x7FFF0A84,	//0x0622		VoC_lw16i(REG4,0x7fff)
		//0x0624		Long_term_analysis_filt_L4
0xF0065660,	//0x0624		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x43091807,	//0x0626		VoC_lw16i_set_inc(REG3,0x4309,0x1)
0xDFA96D07,	//0x0628		VoC_pop16(RA,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xFFC09B13,	//0x062a		VoC_NOP	|	VoC_multf32inc_rp(REG67,REG4,REG2,DEFAULT)
0xBA7EC8EB,	//0x062c		VoC_sub16inc_pr(REG6,REG1,REG7,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
0xDCB6DC87,	//0x062e		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x062f		VoC_endloop0
0x8342E580,	//0x0630		VoC_add16inc_rp(REG2,REG5,REG0,DEFAULT)	|	VoC_return
		//0x0631		CII_Decoding_of_the_coded_Log_Area_Ratios_sub
0xC2A2FBB1,	//0x0632		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr32_ri(REG23,0xfffffff6,DEFAULT)
0xFFC0CCB1,	//0x0634		VoC_NOP	|	VoC_multf32_rr(REG23,REG2,REG6,DEFAULT)
0xF8FBC879,	//0x0636		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG23,REG23,RL7,DEFAULT)
0xDC93F003,	//0x0638		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xDFE9E580,	//0x063a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x063b		CII_Decoding_of_the_coded_Log_Area_Ratios
0xE003590F,	//0x063c		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xEE057004,	//0x063e		VoC_lw16i_short(REG5,0xffffffe0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x33330A86,	//0x0640		VoC_lw16i(REG6,0x3333)
0x06312B80,	//0x0642		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x06312B80,	//0x0644		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x10000A84,	//0x0646		VoC_lw16i(REG4,0x1000)
0xFFC0F605,	//0x0648		VoC_NAD	|	VoC_lw16i_short(REG5,0xfffffff0,DEFAULT)
0x06312B80,	//0x064a		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x6C000AC4,	//0x064c		VoC_lw16i(REG4,0xffffec00)
0x06312B80,	//0x064e		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x00BC0A84,	//0x0650		VoC_lw16i(REG4,0xbc)
0x0A86F705,	//0x0652		VoC_lw16i(REG6,0x4b17)(lo)	|	VoC_lw16i_short(REG5,0xfffffff8,DEFAULT)
0xFFC04B17,	//0x0654		VoC_NAD	|	VoC_lw16i(REG6,0x4b17)(hi)
0x06312B80,	//0x0656		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x72000AC4,	//0x0658		VoC_lw16i(REG4,0xfffff200)
0x44440A86,	//0x065a		VoC_lw16i(REG6,0x4444)
0x06312B80,	//0x065c		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x7D560AC4,	//0x065e		VoC_lw16i(REG4,0xfffffd56)
0x0A86F785,	//0x0660		VoC_lw16i(REG6,0x7ade)(lo)	|	VoC_lw16i_short(REG5,0xfffffffc,DEFAULT)
0xFFC07ADE,	//0x0662		VoC_NAD	|	VoC_lw16i(REG6,0x7ade)(hi)
0x06312B80,	//0x0664		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0x77100AC4,	//0x0666		VoC_lw16i(REG4,0xfffff710)
0x740C0A86,	//0x0668		VoC_lw16i(REG6,0x740c)
0x06312B80,	//0x066a		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios_sub)
0xFFC0DFA9,	//0x066c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xD622E580,	//0x066e		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_return
		//0x066f		CII_Coefficients_0_12
0xF0065631,	//0x0670		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0xFFC0F031,	//0x0672		VoC_NAD	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xD8A6690A,	//0x0674		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF6C75895,	//0x0676		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xF8167815,	//0x0678		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x2,DEFAULT)
0xC1AD780F,	//0x067a		VoC_add16_rr(REG5,REG6,REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xD8A6C1EF,	//0x067c		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
		//0x067e		VoC_endloop0
0xE580DC87,	//0x067e		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0680		CII_Coefficients_13_26
0xF031D622,	//0x0680		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0xF0045631,	//0x0682		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x6907D610,	//0x0684		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xD896D8A7,	//0x0686		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,IN_PARALLEL)
0xF80F780E,	//0x0688		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xD8A7C1F7,	//0x068a		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
		//0x068c		VoC_endloop0
0xE580DC87,	//0x068c		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x068e		CII_Coefficients_27_39
0xF0055621,	//0x068e		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xF0045632,	//0x0690		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xFFC0D894,	//0x0692		VoC_NAD	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD610690A,	//0x0694		VoC_lw16_sd(REG0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF81458A5,	//0x0696		VoC_shr16_ri(REG4,0x2,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xF81560A6,	//0x0698		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xF80E4165,	//0x069a		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xD894C1AE,	//0x069c		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
		//0x069e		VoC_endloop0
0xE580DC86,	//0x069e		VoC_return	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x06a0		CII_Coefficients_40_159
0xF030D630,	//0x06a0		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xF0055611,	//0x06a2		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0xD8866903,	//0x06a4		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDC96D886,	//0x06a6		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x06a7		VoC_endloop0
0xD610E580,	//0x06a8		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_return
		//0x06a9		CII_LARp_to_rp
0xFF436001,	//0x06aa		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD885691E,	//0x06ac		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x06B73245,	//0x06ae		VoC_bnltz16_r(LARp_to_rp_L1,REG5)
0xF6A47027,	//0x06b0		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x4464C3AD,	//0x06b2		VoC_bne16_rd(LARp_to_rp_L1,REG4,0x828a)(lo)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
0x0A85028A,	//0x06b4		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_bne16_rd(LARp_to_rp_L1,REG4,0x828a)(hi)
0xE0A47FFF,	//0x06b6		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x7fff)(hi)
		//0x06b7		LARp_to_rp_L1
0x48ECF8FD,	//0x06b8		VoC_blt16_rd(LARp_to_rp_L5,REG4,0x8005)(lo)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x07650005,	//0x06ba		VoC_add16_rd(REG5,REG4,0x8005)(lo)	|	VoC_blt16_rd(LARp_to_rp_L5,REG4,0x8005)(hi)
0x0A830005,	//0x06bc		VoC_lw16i(REG3,0x4e66)(lo)	|	VoC_add16_rd(REG5,REG4,0x8005)(hi)
0x341C4E66,	//0x06be		VoC_bgt16_rr(LARp_to_rp_L5,REG3,REG4)(lo)	|	VoC_lw16i(REG3,0x4e66)(hi)
0xF81406C6,	//0x06c0		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_bgt16_rr(LARp_to_rp_L5,REG3,REG4)(hi)
0x66000A83,	//0x06c2		VoC_lw16i(REG3,0x6600)
0xFFC0C11D,	//0x06c4		VoC_NAD	|	VoC_add16_rr(REG5,REG4,REG3,DEFAULT)
		//0x06c6		LARp_to_rp_L5
0x06C93187,	//0x06c6		VoC_bez16_r(LARp_to_rp_L6,REG7)
0xD885C3AD,	//0x06c8		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x06c9		LARp_to_rp_L6
		//0x06ca		VoC_endloop0
0xE0075C95,	//0x06ca		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xD612E580,	//0x06cc		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_return
		//0x06cd		CII_Short_term_analysis_filtering
0x044E1807,	//0x06ce		VoC_lw16i_set_inc(REG3,0x44e,0x1)
0xF0067F0F,	//0x06d0		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x028A14C5,	//0x06d2		VoC_lw32_d(ACC1,0x828a)
0x06E52E39,	//0x06d4		VoC_loop_r(1,REG7)
0xF60C5806,	//0x06d6		VoC_movreg16(RL6_LO,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0xF6C7690A,	//0x06d8		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD83599D0,	//0x06da		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_multf32_rp(REG01,REG7,REG2,DEFAULT)
0xDCB64828,	//0x06dc		VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,ACC1,DEFAULT)
0x9B50414E,	//0x06de		VoC_multf32inc_rp(REG01,REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG1,DEFAULT)
0xC828FFC0,	//0x06e0		VoC_add32_rr(REG01,REG01,ACC1,DEFAULT)	|	VoC_NOP
		//0x06e2		VoC_endloop0
0xF78041CF,	//0x06e2		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG1,DEFAULT)
0xDC87FF39,	//0x06e4		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_movreg32(REG23,RL7,DEFAULT)
		//0x06e5		VoC_endloop1
0xDFE9E580,	//0x06e6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x06e7		CII_Gsm_Short_Term_Analysis_Filter
0x1805F026,	//0x06e8		VoC_lw16i_set_inc(REG1,0x456,0x1)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x14050456,	//0x06ea		VoC_lw16_d(REG5,0x466)(lo)	|	VoC_lw16i_set_inc(REG1,0x456,0x1)(hi)
0x64AE0466,	//0x06ec		VoC_xor16_rr(REG6,REG5,DEFAULT)	|	VoC_lw16_d(REG5,0x466)(hi)
0x45F4E087,	//0x06ee		VoC_mult16_rr(REG4,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x8,IN_PARALLEL)
0x1506C5ED,	//0x06f0		VoC_sw16_d(REG6,0x466)(lo)	|	VoC_mult16_rr(REG5,REG7,REG5,IN_PARALLEL)
0x40620466,	//0x06f2		VoC_add16_rr(REG2,REG1,REG4,DEFAULT)	|	VoC_sw16_d(REG6,0x466)(hi)
0xD620C069,	//0x06f4		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x5FC2DFC1,	//0x06f6		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFFC0F004,	//0x06f8		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x063B2B80,	//0x06fa		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios)
0x44B21804,	//0x06fc		VoC_lw16i_set_inc(REG0,0x44b2,0x1)
0xDFC0FFC0,	//0x06fe		VoC_push16(REG0,DEFAULT)	|	VoC_NOP
0x066F2B80,	//0x0700		VoC_jal(CII_Coefficients_0_12)
0x06A92B80,	//0x0702		VoC_jal(CII_LARp_to_rp)
0xE0D75660,	//0x0704		VoC_lw16i_short(REG7,0xd,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x06CD2B80,	//0x0706		VoC_jal(CII_Short_term_analysis_filtering)
0x06802B80,	//0x0708		VoC_jal(CII_Coefficients_13_26)
0x06A92B80,	//0x070a		VoC_jal(CII_LARp_to_rp)
0xE0E75660,	//0x070c		VoC_lw16i_short(REG7,0xe,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x55940740,	//0x070e		VoC_add16_rd(REG0,REG0,0xd594)
0x06CD2B80,	//0x0710		VoC_jal(CII_Short_term_analysis_filtering)
0x068E2B80,	//0x0712		VoC_jal(CII_Coefficients_27_39)
0x06A92B80,	//0x0714		VoC_jal(CII_LARp_to_rp)
0xE0D75660,	//0x0716		VoC_lw16i_short(REG7,0xd,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x3DD80740,	//0x0718		VoC_add16_rd(REG0,REG0,0xbdd8)
0x06CD2B80,	//0x071a		VoC_jal(CII_Short_term_analysis_filtering)
0x06A02B80,	//0x071c		VoC_jal(CII_Coefficients_40_159)
0x06A92B80,	//0x071e		VoC_jal(CII_LARp_to_rp)
0x0A87D660,	//0x0720		VoC_lw16i(REG7,0x78)(lo)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x07400078,	//0x0722		VoC_add16_rd(REG0,REG0,0xbd92)(lo)	|	VoC_lw16i(REG7,0x78)(hi)
0x2B803D92,	//0x0724		VoC_jal(CII_Short_term_analysis_filtering)(lo)	|	VoC_add16_rd(REG0,REG0,0xbd92)(hi)
0xDF8406CD,	//0x0726		VoC_pop16(REG4,DEFAULT)	|	VoC_jal(CII_Short_term_analysis_filtering)(hi)
0xDF84DF84,	//0x0728		VoC_pop16(REG4,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xFFC0DFA9,	//0x072a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF032E580,	//0x072c		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_return
		//0x072d		CII_Short_term_synthesis_filtering
0x05FF1FBD,	//0x072e		VoC_lw16i_set_inc(REG1,0x5ff,0xffffffff)
0x44911FBC,	//0x0730		VoC_lw16i_set_inc(REG0,0x4491,0xffffffff)
0xD90D7F07,	//0x0732		VoC_lw32_sd(ACC1,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFFC0F033,	//0x0734		VoC_NAD	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x07582E39,	//0x0736		VoC_loop_r(1,REG7)
0xD8165884,	//0x0738		VoC_lw16_p(REG6,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD8A5691B,	//0x073a		VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x028A4474,	//0x073c		VoC_bne16_rd(Short_term_syn_filt_L1,REG4,0x828a)
0x7FFF0A87,	//0x073e		VoC_lw16i(REG7,0x7fff)
0x028A406E,	//0x0740		VoC_be16_rd(Short_term_syn_filt_L2,REG6,0x828a)
		//0x0742		Short_term_syn_filt_L1
0xFFC0CDA3,	//0x0742		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG4,DEFAULT)
0xC37DC8EB,	//0x0744		VoC_sub16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
		//0x0745		Short_term_syn_filt_L2
0x028A447C,	//0x0746		VoC_bne16_rd(Short_term_syn_filt_L3,REG4,0x828a)
0x028A44C5,	//0x0748		VoC_bne16_rd(Short_term_syn_filt_L4,REG5,0x828a)
0x7FFF0A85,	//0x074a		VoC_lw16i(REG5,0x7fff)
0xCD2BE5C4,	//0x074c		VoC_multf32_rr(REG67,REG4,REG5,DEFAULT)	|	VoC_jump(Short_term_syn_filt_L4)
		//0x074d		Short_term_syn_filt_L3
0xC8EBFFC0,	//0x074e		VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)	|	VoC_NOP
		//0x0750		Short_term_syn_filt_L4
0x0384074E,	//0x0750		VoC_add16_rd(REG6,REG1,0x8384)
0x588483CF,	//0x0752		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0xDC67D816,	//0x0754		VoC_sw16_p(REG7,REG6,DEFAULT)	|	VoC_lw16_p(REG6,REG1,IN_PARALLEL)
		//0x0755		VoC_endloop0
0xFF385CB5,	//0x0756		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x0758		VoC_endloop1
0x05F81505,	//0x0758		VoC_sw16_d(REG5,0x5f8)
0xFFC0E580,	//0x075a		VoC_NAD	|	VoC_return
		//0x075c		CII_Weighting_filter
0x43041804,	//0x075c		VoC_lw16i_set_inc(REG0,0x4304,0x1)
0x070A1805,	//0x075e		VoC_lw16i_set_inc(REG1,0x70a,0x1)
0x00001806,	//0x0760		VoC_lw16i_set_inc(REG2,0x0,0x1)
0x08181807,	//0x0762		VoC_lw16i_set_inc(REG3,0x818,0x1)
0xEFFB7F07,	//0x0764		VoC_lw16i_short(ACC1_HI,0xffffffff,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0x00000ACA,	//0x0766		VoC_lw16i(ACC1_LO,0x8000)
0x0A88FF44,	//0x0768		VoC_lw16i(ACC0_LO,0x2000)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF262000,	//0x076a		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i(ACC0_LO,0x2000)(hi)
0x077F2C51,	//0x076c		VoC_loop_i(0x1,0x28)
0xDE106962,	//0x076e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
		//0x0770		VoC_endloop0
0xFF38D401,	//0x0770		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xC0107A74,	//0x0772		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xe,DEFAULT)
0x077A36AC,	//0x0774		VoC_bngt32_rr(Weighting_filter_L1,ACC1,ACC0)
0x028A14C4,	//0x0776		VoC_lw32_d(ACC0,0x828a)
0xFFC0E5C6,	//0x0778		VoC_NAD	|	VoC_jump(Weighting_filter_L2)
		//0x077a		Weighting_filter_L1
0x02AC5464,	//0x077a		VoC_bngt32_rd(Weighting_filter_L2,ACC0,0x82ac)
0x02AC14C4,	//0x077c		VoC_lw32_d(ACC0,0x82ac)
		//0x077e		Weighting_filter_L2
0xDCB8FF34,	//0x077e		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x077f		VoC_endloop1
0xF005E580,	//0x0780		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_return
		//0x0781		CII_RPE_grid_selection
0x0818180C,	//0x0782		VoC_lw16i_set_inc(REG0,0x818,0x3)
0xFF446003,	//0x0784		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x6983DE00,	//0x0786		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xF814D884,	//0x0788		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x078a		VoC_endloop0
0xD8844E24,	//0x078a		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0x7814D8B4,	//0x078c		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0xCE24FF27,	//0x078e		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0x7F26E060,	//0x0790		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x69A3FF44,	//0x0792		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xF814D884,	//0x0794		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x0796		VoC_endloop0
0xD8844E24,	//0x0796		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0xE060DE18,	//0x0798		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0x079E36A6,	//0x079a		VoC_bngt32_rr(RPE_grid_sel_L1,ACC0,RL6)
0xFF267025,	//0x079c		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x079e		RPE_grid_sel_L1
0x69A3FF44,	//0x079e		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xF814D884,	//0x07a0		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)
		//0x07a2		VoC_endloop0
0xD8844E24,	//0x07a2		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0x083F1406,	//0x07a4		VoC_lw16_d(REG6,0x83f)
0x36A6F816,	//0x07a6		VoC_bngt32_rr(RPE_grid_sel_L2,ACC0,RL6)(lo)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x704507AB,	//0x07a8		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_bngt32_rr(RPE_grid_sel_L2,ACC0,RL6)(hi)
0xCDB4FF26,	//0x07aa		VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x07ab		RPE_grid_sel_L2
0xC93CFFC0,	//0x07ac		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_NOP
0x07B236A6,	//0x07ae		VoC_bngt32_rr(RPE_grid_sel_L3,ACC0,RL6)
0xFF267065,	//0x07b0		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
		//0x07b2		RPE_grid_sel_L3
0x0818180F,	//0x07b2		VoC_lw16i_set_inc(REG3,0x818,0x3)
0xD62240EB,	//0x07b4		VoC_lw16_sd(REG2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x08401804,	//0x07b6		VoC_lw16i_set_inc(REG0,0x840,0x1)
0x69A3E001,	//0x07b8		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD8B7D8B7,	//0x07ba		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,IN_PARALLEL)
		//0x07bc		VoC_endloop0
0xDC25DC87,	//0x07bc		VoC_sw16_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0xF006E580,	//0x07be		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_return
		//0x07bf		CII_APCM_quantization_xmaxc_to_exp_mant
0x781BE0E3,	//0x07c0		VoC_shr16_ri(REG3,0x3,DEFAULT)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x3C5FE012,	//0x07c2		VoC_bngt16_rd(APCM_quant_xmaxc_to_exp_mant_L1,REG7,0xba6e)(lo)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0xC2D63A6E,	//0x07c4		VoC_sub16_rr(REG6,REG3,REG2,DEFAULT)	|	VoC_bngt16_rd(APCM_quant_xmaxc_to_exp_mant_L1,REG7,0xba6e)(hi)
		//0x07c6		APCM_quant_xmaxc_to_exp_mant_L1
0xF8EBE0C3,	//0x07c6		VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x3105C3DD,	//0x07c8		VoC_bgtz16_r(APCM_quant_xmaxc_to_exp_mant_L2,REG5)(lo)	|	VoC_sub16_rr(REG5,REG7,REG3,DEFAULT)
0x778607CE,	//0x07ca		VoC_lw16i_short(REG6,0xfffffffc,DEFAULT)	|	VoC_bgtz16_r(APCM_quant_xmaxc_to_exp_mant_L2,REG5)(hi)
0xE5C9E075,	//0x07cc		VoC_jump(APCM_quant_xmaxc_to_exp_mant_L3)	|	VoC_lw16i_short(REG5,0x7,IN_PARALLEL)
		//0x07ce		APCM_quant_xmaxc_to_exp_mant_L2
0x3AB33875,	//0x07ce		VoC_bgt16_rd(APCM_quant_xmaxc_to_exp_mant_L4,REG5,0xbab3)
0xC39678FD,	//0x07d0		VoC_sub16_rr(REG6,REG6,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xE5FBE455,	//0x07d2		VoC_jump(APCM_quant_xmaxc_to_exp_mant_L2)	|	VoC_or16_rr(REG5,REG2,DEFAULT)
		//0x07d4		APCM_quant_xmaxc_to_exp_mant_L4
0x3AB407ED,	//0x07d4		VoC_sub16_rd(REG5,REG5,0xbab4)
		//0x07d6		APCM_quant_xmaxc_to_exp_mant_L3
0xE580FFC0,	//0x07d6		VoC_return	|	VoC_NOP
		//0x07d8		CII_APCM_quantization
0x5FC1DFE9,	//0x07d8		VoC_push16(REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xFFC0FF43,	//0x07da		VoC_NAD	|	VoC_lw32z(REG67,IN_PARALLEL)
0xD89569A9,	//0x07dc		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xd,DEFAULT)
0x07E23245,	//0x07de		VoC_bnltz16_r(APCM_quant_L1,REG5)
0xFFC0C3AD,	//0x07e0		VoC_NAD	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x07e2		APCM_quant_L1
0x07E534AF,	//0x07e2		VoC_bngt16_rr(APCM_quant_L2,REG5,REG7)
0xD895E0A7,	//0x07e4		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x07e5		APCM_quant_L2
		//0x07e5		VoC_endloop0
0x40BBF063,	//0x07e6		VoC_be16_rd(RPE_label_100,REG3,0x4339)(lo)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x1FB04339,	//0x07e8		VoC_lw16i_set_inc(REG0,0x4376,0xfffffffc)(lo)	|	VoC_be16_rd(RPE_label_100,REG3,0x4339)(hi)
0x1FB14376,	//0x07ea		VoC_lw16i_set_inc(REG1,0x4372,0xfffffffc)(lo)	|	VoC_lw16i_set_inc(REG0,0x4376,0xfffffffc)(hi)
0x07094372,	//0x07ec		VoC_add16_rd(REG1,REG1,0x4337)(lo)	|	VoC_lw16i_set_inc(REG1,0x4372,0xfffffffc)(hi)
0x07004337,	//0x07ee		VoC_add16_rd(REG0,REG0,0x4337)(lo)	|	VoC_add16_rd(REG1,REG1,0x4337)(hi)
0x68634337,	//0x07f0		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x4337)(hi)
0xD895D895,	//0x07f2		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
		//0x07f4		VoC_endloop0
0xDC87DC85,	//0x07f4		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x07f6		RPE_label_100
0xF031F030,	//0x07f6		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x08EF2B80,	//0x07f8		VoC_jal(CII_APCM_quantization_sub)
0x07BF2B80,	//0x07fa		VoC_jal(CII_APCM_quantization_xmaxc_to_exp_mant)
0x07F4D650,	//0x07fc		VoC_sub16_rd(REG4,REG6,0xbab2)(lo)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0xDC073AB2,	//0x07fe		VoC_sw16_p(REG7,REG0,DEFAULT)	|	VoC_sub16_rd(REG4,REG6,0xbab2)(hi)
0x06F20A82,	//0x0800		VoC_lw16i(REG2,0x6f2)
0xD6A340AA,	//0x0802		VoC_lw16_sd(REG3,0x9,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xF0075F80,	//0x0804		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xD827DFA9,	//0x0806		VoC_lw16_p(REG7,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD88169A9,	//0x0808		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xd,DEFAULT)
0xC679FE21,	//0x080a		VoC_multf16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_shr16_rr(REG1,REG4,DEFAULT)
0xF861FFC0,	//0x080c		VoC_shr16_ri(REG1,0xc,DEFAULT)	|	VoC_NOP
0x3AB00749,	//0x080e		VoC_add16_rd(REG1,REG1,0xbab0)
0xDCB1D881,	//0x0810		VoC_sw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG1,REG0,DEFAULT)
		//0x0811		VoC_endloop0
0xD90DE580,	//0x0812		VoC_lw32_sd(ACC1,0x0,DEFAULT)	|	VoC_return
		//0x0813		CII_APCM_inverse_quantization
0x06FA0A80,	//0x0814		VoC_lw16i(REG0,0x6fa)
0xE0144028,	//0x0816		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x3AB20B76,	//0x0818		VoC_sub16_dr(REG6,0xbab2,REG6)
0xE0055807,	//0x081a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xF0064330,	//0x081c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)
0xF0077E82,	//0x081e		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_shr32_rr(REG45,REG0,DEFAULT)
0x69B0DFC2,	//0x0820		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xF8FDD8B5,	//0x0822		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,IN_PARALLEL)
0x3AB307ED,	//0x0824		VoC_sub16_rd(REG5,REG5,0xbab3)
0xCDE8F8A5,	//0x0826		VoC_multf32_rr(REG01,REG7,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffff4,DEFAULT)
0xC828FFC0,	//0x0828		VoC_add32_rr(REG01,REG01,ACC1,DEFAULT)	|	VoC_NOP
0xE0014060,	//0x082a		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG1,REG4,DEFAULT)
0x082F3100,	//0x082c		VoC_bgtz16_r(APCM_inverse_quant_L1,REG0)
0xFEB0F7E1,	//0x082e		VoC_shr32_rr(REG01,REG6,DEFAULT)	|	VoC_lw16i_short(REG1,0xffffffff,DEFAULT)
		//0x082f		APCM_inverse_quant_L1
0xDCA0D8B5,	//0x0830		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
		//0x0831		VoC_endloop0
0xFF30E580,	//0x0832		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_return
		//0x0833		CII_RPE_grid_positioning
0xDF827F42,	//0x0834		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_lw32z(REG45,DEFAULT)
0xE0D75811,	//0x0836		VoC_lw16i_short(REG7,0xd,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x3AAA40C9,	//0x0838		VoC_be16_rd(RPE_grid_positioning_L4,REG1,0xbaaa)
0x03844071,	//0x083a		VoC_be16_rd(RPE_grid_positioning_L3,REG1,0x8384)
0x3AAE4059,	//0x083c		VoC_be16_rd(RPE_grid_positioning_L2,REG1,0xbaae)
0xDC84DC84,	//0x083e		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x083f		RPE_grid_positioning_L2
		//0x0840		RPE_grid_positioning_L3
0xD8A5DC84,	//0x0840		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0841		RPE_grid_positioning_L4
0x038407FF,	//0x0842		VoC_sub16_rd(REG7,REG7,0x8384)
0x3107DC85,	//0x0844		VoC_bgtz16_r(RPE_grid_positioning_L2,REG7)(lo)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xFFC0083F,	//0x0846		VoC_NAD	|	VoC_bgtz16_r(RPE_grid_positioning_L2,REG7)(hi)
		//0x0848		RPE_grid_positioning_L5
0x03840749,	//0x0848		VoC_add16_rd(REG1,REG1,0x8384)
0x3AAF3861,	//0x084a		VoC_bgt16_rd(RPE_grid_positioning_L6,REG1,0xbaaf)
0xE5FBDC84,	//0x084c		VoC_jump(RPE_grid_positioning_L5)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x084e		RPE_grid_positioning_L6
0xE580FFC0,	//0x084e		VoC_return	|	VoC_NOP
		//0x0850		CII_Gsm_RPE_Encoding
0xFFC0DFE9,	//0x0850		VoC_NAD	|	VoC_push16(RA,DEFAULT)
0x075C2B80,	//0x0852		VoC_jal(CII_Weighting_filter)
0x07812B80,	//0x0854		VoC_jal(CII_RPE_grid_selection)
0x08401805,	//0x0856		VoC_lw16i_set_inc(REG1,0x840,0x1)
0x07D82B80,	//0x0858		VoC_jal(CII_APCM_quantization)
0xD62DD683,	//0x085a		VoC_lw16_sd(RL6_HI,0x1,DEFAULT)	|	VoC_lw16_sd(REG3,0x7,DEFAULT)
0x43090A8C,	//0x085c		VoC_lw16i(RL6_LO,0x4309)
0x084E1806,	//0x085e		VoC_lw16i_set_inc(REG2,0x84e,0x1)
0x08132B80,	//0x0860		VoC_jal(CII_APCM_inverse_quantization)
0x08332B80,	//0x0862		VoC_jal(CII_RPE_grid_positioning)
0xFFC0DFA9,	//0x0864		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0866		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0867		CII_Gsm_RPE_Decoding
0xFFC0D637,	//0x0868		VoC_NOP	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xFFC0D877,	//0x086a		VoC_NAD	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x07BF2B80,	//0x086c		VoC_jal(CII_APCM_quantization_xmaxc_to_exp_mant)
0x085C1806,	//0x086e		VoC_lw16i_set_inc(REG2,0x85c,0x1)
0x562DD683,	//0x0870		VoC_lw16_sd(RL6_HI,0x1,DEFAULT)	|	VoC_lw16_sd(REG3,0x7,DEFAULT)
0xD66CF007,	//0x0872		VoC_lw16_sd(RL6_LO,0x5,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x08132B80,	//0x0874		VoC_jal(CII_APCM_inverse_quantization)
0x08332B80,	//0x0876		VoC_jal(CII_RPE_grid_positioning)
0xFFC0DFA9,	//0x0878		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x087a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x087b		CII_encoder_reset_fr
0xE2867F44,	//0x087c		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x03301808,	//0x087e		VoC_lw16i_set_inc(REG0,0x330,0x2)
0x08822D42,	//0x0880		VoC_loop_i(0x0,0xa1)
		//0x0882		VoC_endloop0
0x1506DDC4,	//0x0882		VoC_sw16_d(REG6,0x467)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x18080467,	//0x0884		VoC_lw16i_set_inc(REG0,0x4304,0x2)(lo)	|	VoC_sw16_d(REG6,0x467)(hi)
0xEB214304,	//0x0886		VoC_loop_i_short(0x19,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4304,0x2)(hi)
		//0x0888		VoC_endloop0
0x2B80DDC4,	//0x0888		VoC_jal(reset_fr_table)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDFA9100C,	//0x088a		VoC_pop16(RA,DEFAULT)	|	VoC_jal(reset_fr_table)(hi)
0xE580FFC0,	//0x088c		VoC_return	|	VoC_NOP
		//0x088e		CII_decoder_reset
0x7F44DFE9,	//0x088e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1808E286,	//0x0890		VoC_lw16i_set_inc(REG0,0x4c0,0x2)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x2D4204C0,	//0x0892		VoC_loop_i(0x0,0xa1)(lo)	|	VoC_lw16i_set_inc(REG0,0x4c0,0x2)(hi)
0xDDC40895,	//0x0894		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0xa1)(hi)
		//0x0895		VoC_endloop0
0x05F71506,	//0x0896		VoC_sw16_d(REG6,0x5f7)
0x100C2B80,	//0x0898		VoC_jal(reset_fr_table)
0xFFC0DFA9,	//0x089a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x089c		VoC_NAD	|	VoC_return
		//0x089e		CII_bitoff
0x00081FBD,	//0x089e		VoC_lw16i_set_inc(REG1,0x8,0xffffffff)
0x08A431C6,	//0x08a0		VoC_bnez16_r(bitoff_L1,REG6)
0xFFC0E5CA,	//0x08a2		VoC_NAD	|	VoC_jump(bitoff_end)
		//0x08a4		bitoff_L1
0x08A83106,	//0x08a4		VoC_bgtz16_r(bitoff_L2,REG6)
0xFFC0E5C6,	//0x08a6		VoC_NAD	|	VoC_jump(bitoff_end)
		//0x08a8		bitoff_L2
0xDE08780E,	//0x08a8		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xFFC0E5FA,	//0x08aa		VoC_NAD	|	VoC_jump(bitoff_L1)
		//0x08ac		bitoff_end
0xF0056026,	//0x08ac		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG1,DEFAULT)
0xDFE9E580,	//0x08ae		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x08af		CII_gsm_norm
0xE0005F44,	//0x08b0		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x08C033C3,	//0x08b2		VoC_bnltz32_r(gsm_norm_L1,REG67)
0x0AC9FF44,	//0x08b4		VoC_lw16i(ACC0_HI,0xc000)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x361C4000,	//0x08b6		VoC_bgt32_rr(gsm_norm_L2,REG67,ACC0)(lo)	|	VoC_lw16i(ACC0_HI,0xc000)(hi)
0x0AC608BE,	//0x08b8		VoC_lw16i(REG6,0xbaaa)(lo)	|	VoC_bgt32_rr(gsm_norm_L2,REG67,ACC0)(hi)
0x2B003AAA,	//0x08ba		VoC_jump_lg(gsm_norm_Lend)(lo)	|	VoC_lw16i(REG6,0xbaaa)(hi)
0xFFC008DE,	//0x08bc		VoC_NAD	|	VoC_jump_lg(gsm_norm_Lend)(hi)
		//0x08be		gsm_norm_L2
0x3AAA0BDB,	//0x08be		VoC_sub32_dr(REG67,0xbaaa,REG67)
		//0x08c0		gsm_norm_L1
0x29C4FF1C,	//0x08c0		VoC_and32_rd(ACC0,0xb832)(lo)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0x33043832,	//0x08c2		VoC_bez32_r(gsm_norm_L3,ACC0)(lo)	|	VoC_and32_rd(ACC0,0xb832)(hi)
0xFF4408D1,	//0x08c4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bez32_r(gsm_norm_L3,ACC0)(hi)
0x7F000AC9,	//0x08c6		VoC_lw16i(ACC0_HI,0xff00)
0x3304E4DC,	//0x08c8		VoC_bez32_r(gsm_norm_L4,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7AC308CE,	//0x08ca		VoC_shr32_ri(REG67,0x18,DEFAULT)	|	VoC_bez32_r(gsm_norm_L4,ACC0)(hi)
0xE5CFEFF0,	//0x08cc		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
		//0x08ce		gsm_norm_L4
0xE0707A83,	//0x08ce		VoC_lw16i_short(REG0,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFF44E5CC,	//0x08d0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jump(gsm_norm_L6)
		//0x08d1		gsm_norm_L3
0x7F000AC8,	//0x08d2		VoC_lw16i(ACC0_LO,0xff00)
0x3304E4DC,	//0x08d4		VoC_bez32_r(gsm_norm_L5,ACC0)(lo)	|	VoC_and32_rr(ACC0,REG67,DEFAULT)
0x7A4308DA,	//0x08d6		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_bez32_r(gsm_norm_L5,ACC0)(hi)
0xE5C3E0F0,	//0x08d8		VoC_jump(gsm_norm_L6)	|	VoC_lw16i_short(REG0,0xf,IN_PARALLEL)
		//0x08da		gsm_norm_L5
0xFFC0F2E0,	//0x08da		VoC_NAD	|	VoC_lw16i_short(REG0,0x17,DEFAULT)
		//0x08dc		gsm_norm_L6
0x0C9A2846,	//0x08dc		VoC_and16_rd(REG6,0x8c9a)
		//0x08de		gsm_norm_Lend
0xFFC0DF04,	//0x08de		VoC_NAD	|	VoC_pop32(ACC0,DEFAULT)
0x089E2B80,	//0x08e0		VoC_jal(CII_bitoff)
0xDFA94186,	//0x08e2		VoC_pop16(RA,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0xE580FFC0,	//0x08e4		VoC_return	|	VoC_NOP
		//0x08e6		CII_copy
0xD9C5D9C4,	//0x08e6		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x08ED2E30,	//0x08e8		VoC_loop_r(0,REG6)
0xD9C4DDCC,	//0x08ea		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xD9C5DDCD,	//0x08ec		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x08ed		VoC_endloop0
0xE0E3E580,	//0x08ee		VoC_movreg16(REG3,REG7,DEFAULT)	|	VoC_return
		//0x08ef		CII_APCM_quantization_sub
0xFF42784B,	//0x08f0		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x9,DEFAULT)
0xE8CBFFC0,	//0x08f2		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_NAD
0x08F83103,	//0x08f4		VoC_bgtz16_r(APCM_quant_L3s,REG3)
0xFFC0F025,	//0x08f6		VoC_NAD	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x08f8		APCM_quant_L3s
0xF80B646C,	//0x08f8		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x08FE31C4,	//0x08fa		VoC_bnez16_r(APCM_quant_L4s,REG4)
0x03840776,	//0x08fc		VoC_add16_rd(REG6,REG6,0x8384)
		//0x08fe		APCM_quant_L4s
		//0x08fe		VoC_endloop0
0x0773F005,	//0x08fe		VoC_add16_rd(REG3,REG6,0xd756)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x7E1F5756,	//0x0900		VoC_shr16_rr(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG3,REG6,0xd756)(hi)
0xC1F7F8EE,	//0x0902		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xfffffffd,IN_PARALLEL)
0xFFC0E580,	//0x0904		VoC_NAD	|	VoC_return
		//0x0906		CII_vad_init
0x06501808,	//0x0906		VoC_lw16i_set_inc(REG0,0x650,0x2)
0x60000A86,	//0x0908		VoC_lw16i(REG6,0x6000)
0x40000AC7,	//0x090a		VoC_lw16i(REG7,0xffffc000)
0x10000A84,	//0x090c		VoC_lw16i(REG4,0x1000)
0xDDC37005,	//0x090e		VoC_sw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x7A120A83,	//0x0910		VoC_lw16i(REG3,0x7a12)
0xFF445DC2,	//0x0912		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE14670E4,	//0x0914		VoC_lw16i_short(REG6,0x14,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0xE28777E5,	//0x0916		VoC_lw16i_short(REG7,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0x091A2C92,	//0x0918		VoC_loop_i(0x0,0x49)
		//0x091a		VoC_endloop0
0x1504DDC4,	//0x091a		VoC_sw16_d(REG4,0x65a)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x1506065A,	//0x091c		VoC_sw16_d(REG6,0x65d)(lo)	|	VoC_sw16_d(REG4,0x65a)(hi)
0x1503065D,	//0x091e		VoC_sw16_d(REG3,0x65e)(lo)	|	VoC_sw16_d(REG6,0x65d)(hi)
0x1505065E,	//0x0920		VoC_sw16_d(REG5,0x661)(lo)	|	VoC_sw16_d(REG3,0x65e)(hi)
0x15070661,	//0x0922		VoC_sw16_d(REG7,0x664)(lo)	|	VoC_sw16_d(REG5,0x661)(hi)
0xE5800664,	//0x0924		VoC_return	|	VoC_sw16_d(REG7,0x664)(hi)
		//0x0926		CII_step_up_opt_fr
0x1809F006,	//0x0926		VoC_lw16i_set_inc(REG1,0x443c,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0A87443C,	//0x0928		VoC_lw16i(REG7,0x2000)(lo)	|	VoC_lw16i_set_inc(REG1,0x443c,0x2)(hi)
0xDFC12000,	//0x092a		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i(REG7,0x2000)(hi)
0x1808DDCB,	//0x092c		VoC_lw16i_set_inc(REG0,0x4450,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x7F054450,	//0x092e		VoC_movreg32(ACC1,REG01,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4450,0x2)(hi)
0xFFC0E004,	//0x0930		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x094E2E29,	//0x0932		VoC_loop_r(1,REG5)
0xF62358A6,	//0x0934		VoC_movreg16(REG3,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0x09473184,	//0x0936		VoC_bez16_r(VAD_STEP_UP_LABEL1,REG4)
0xFF2859DF,	//0x0938		VoC_movreg32(REG01,ACC1,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xF7E76706,	//0x093a		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xFFC0CDBC,	//0x093c		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)
0xD9DF930C,	//0x093e		VoC_lw32inc_p(RL7,REG3,DEFAULT)	|	VoC_add32inc_rp(ACC0,ACC0,REG1,DEFAULT)
		//0x0940		VoC_endloop0
0xF7E75DC4,	//0x0940		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xE703FF28,	//0x0942		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0xFFC0D9C7,	//0x0944		VoC_NOP	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
		//0x0946		VoC_endloop0
0xF007DDCF,	//0x0946		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x0947		VAD_STEP_UP_LABEL1
0x094B3246,	//0x0948		VoC_bnltz16_r(STEP_UP_01,REG6)
0xF020F7E7,	//0x094a		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x094b		STEP_UP_01
0xC104FB93,	//0x094c		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
		//0x094e		VoC_endloop1
0x4145DD8B,	//0x094e		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sw32_p(REG67,REG1,DEFAULT)
0xE1A2DF80,	//0x0950		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0xD9C36744,	//0x0952		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0xD9C3FA1B,	//0x0954		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
		//0x0956		VoC_endloop0
0xE580DCA7,	//0x0956		VoC_return	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x0958		CII_tone_detection_fr
0x1804DFE9,	//0x0958		VoC_lw16i_set_inc(REG0,0x454e,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x1FBD454E,	//0x095a		VoC_lw16i_set_inc(REG1,0x45ed,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x454e,0x1)(hi)
0x5FC045ED,	//0x095c		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x45ed,0xffffffff)(hi)
0x1806D90D,	//0x095e		VoC_lw16i_set_inc(REG2,0x716,0x1)(lo)	|	VoC_lw32_sd(ACC1,0x0,IN_PARALLEL)
0x2CA00716,	//0x0960		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_set_inc(REG2,0x716,0x1)(hi)
0x9C14096A,	//0x0962		VoC_multf32_pp(ACC0,REG0,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0xC92CFFC0,	//0x0964		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_NOP
0xDC899C56,	//0x0966		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_multf32_pp(RL6,REG1,REG2,DEFAULT)
0xDE10C9AE,	//0x0968		VoC_inc_p(REG2,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
		//0x096a		VoC_endloop0
0xD610DC9D,	//0x096a		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG1,DEFAULT)
0xD887F006,	//0x096c		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x09772D40,	//0x096e		VoC_loop_i(0x0,0xa0)
0x09743107,	//0x0970		VoC_bgtz16_r(TONE_DETECTION_L1,REG7)
0x3AAA0B7F,	//0x0972		VoC_sub16_dr(REG7,0xbaaa,REG7)
		//0x0974		TONE_DETECTION_L1
0x097734BE,	//0x0974		VoC_bngt16_rr(TONE_DETECTION_L2,REG7,REG6)
0xD887E0E6,	//0x0976		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
		//0x0977		TONE_DETECTION_L2
		//0x0977		VoC_endloop0
0x098E3186,	//0x0978		VoC_bez16_r(TONE_DETECTION_L4,REG6)
0xE00860C9,	//0x097a		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0x01882B80,	//0x097c		VoC_jal(CII_NORM_L_ACC0)
0x3AAF0B4D,	//0x097e		VoC_sub16_dr(REG5,0xbaaf,REG1)
0x3B043CF5,	//0x0980		VoC_bngt16_rd(TONE_DETECTION_L4,REG5,0xbb04)
0x0A84D610,	//0x0982		VoC_lw16i(REG4,0x4000)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x7E2C4000,	//0x0984		VoC_shr16_rr(REG4,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x4000)(hi)
0x9B04F602,	//0x0986		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_movreg16(REG2,REG0,IN_PARALLEL)
0x098C2D40,	//0x0988		VoC_loop_i(0x0,0xa0)
0x9B04C92C,	//0x098a		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
		//0x098c		VoC_endloop0
0xFFC0DCA9,	//0x098c		VoC_NAD	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
		//0x098e		TONE_DETECTION_L4
0x00A01FBF,	//0x098e		VoC_lw16i_set_inc(REG3,0xa0,0xffffffff)
0x082E180A,	//0x0990		VoC_lw16i_set_inc(REG2,0x82e,0x2)
0xF0055F8F,	//0x0992		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_pop16(RL7_HI,DEFAULT)
0x2C0BE1EE,	//0x0994		VoC_loop_i(0x1,0x5)(lo)	|	VoC_movreg16(RL7_LO,RL7_HI,DEFAULT)
0xFF4409A0,	//0x0996		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x5)(hi)
0x2E18FF38,	//0x0998		VoC_loop_r(0,REG3)(lo)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xD887099C,	//0x099a		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_r(0,REG3)(hi)
		//0x099c		VoC_endloop0
0x097FD139,	//0x099c		VoC_add32_rd(RL7,RL7,0x8384)(lo)	|	VoC_mac32inc_rp(REG7,REG1,DEFAULT)
0xDE180384,	//0x099e		VoC_inc_p(REG3,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x8384)(hi)
		//0x09a0		VoC_endloop1
0x180ADDD4,	//0x09a0		VoC_lw16i_set_inc(REG2,0x82e,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x1807082E,	//0x09a2		VoC_lw16i_set_inc(REG3,0x45fa,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x82e,0x2)(hi)
0x599445FA,	//0x09a4		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x45fa,0x1)(hi)
0x3344FF42,	//0x09a6		VoC_bnez32_r(TONE_DETECTION_L5,ACC0)(lo)	|	VoC_lw32z(REG45,IN_PARALLEL)
0xE88109AE,	//0x09a8		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_bnez32_r(TONE_DETECTION_L5,ACC0)(hi)
		//0x09aa		VoC_endloop0
0x2B00DCB5,	//0x09aa		VoC_jump_lg(TONE_DETECTION_L6)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xFFC009FC,	//0x09ac		VoC_NAD	|	VoC_jump_lg(TONE_DETECTION_L6)(hi)
		//0x09ae		TONE_DETECTION_L5
0x01882B80,	//0x09ae		VoC_jal(CII_NORM_L_ACC0)
0x3AB90B4C,	//0x09b0		VoC_sub16_dr(REG4,0xbab9,REG1)
0x45EE1804,	//0x09b2		VoC_lw16i_set_inc(REG0,0x45ee,0x1)
0x45F81FBD,	//0x09b4		VoC_lw16i_set_inc(REG1,0x45f8,0xffffffff)
0xD9D4E8A5,	//0x09b6		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xFFC0FEA4,	//0x09b8		VoC_NOP	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xDC98DC88,	//0x09ba		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
		//0x09bb		VoC_endloop0
0x0A8CD90D,	//0x09bc		VoC_lw16i(RL6_LO,0x45ef)(lo)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0x0A8D45EF,	//0x09be		VoC_lw16i(RL6_HI,0x45f7)(lo)	|	VoC_lw16i(RL6_LO,0x45ef)(hi)
0xFFC045F7,	//0x09c0		VoC_NAD	|	VoC_lw16i(RL6_HI,0x45f7)(hi)
0x09F92C09,	//0x09c2		VoC_loop_i(0x1,0x4)
0x45EE1483,	//0x09c4		VoC_lw32_d(REG67,0x45ee)
0x3104E0E4,	//0x09c6		VoC_bgtz16_r(TONE_DETECTION_L7,REG4)(lo)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x0B6409CC,	//0x09c8		VoC_sub16_dr(REG4,0xbaaa,REG4)(lo)	|	VoC_bgtz16_r(TONE_DETECTION_L7,REG4)(hi)
0xFFC03AAA,	//0x09ca		VoC_NAD	|	VoC_sub16_dr(REG4,0xbaaa,REG4)(hi)
		//0x09cc		TONE_DETECTION_L7
0x09D534A6,	//0x09cc		VoC_bngt16_rr(TONE_DETECTION_L8,REG4,REG6)
0x3AB00B6E,	//0x09ce		VoC_sub16_dr(REG6,0xbab0,REG5)
0xE781F005,	//0x09d0		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x09d2		VoC_endloop0
0x2B00DCB5,	//0x09d2		VoC_jump_lg(TONE_DETECTION_L6)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xDF4609FC,	//0x09d4		VoC_push32(RL6,DEFAULT)	|	VoC_jump_lg(TONE_DETECTION_L6)(hi)
		//0x09d5		TONE_DETECTION_L8
0xF6C16080,	//0x09d6		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x019A2B80,	//0x09d8		VoC_jal(CII_DIV_S)
0xF6445F06,	//0x09da		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
0x09E03147,	//0x09dc		VoC_bngtz16_r(TONE_DETECTION_L9,REG7)
0x3AAA0B64,	//0x09de		VoC_sub16_dr(REG4,0xbaaa,REG4)
		//0x09e0		TONE_DETECTION_L9
0xDCB4CDE4,	//0x09e0		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)
0x41CDC92C,	//0x09e2		VoC_be16_rd(TONE_DETECTION_L6,REG5,0xbaaf)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xE1273AAF,	//0x09e4		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_be16_rd(TONE_DETECTION_L6,REG5,0xbaaf)(hi)
0xFF3041BE,	//0x09e6		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x3AAF0B6F,	//0x09e8		VoC_sub16_dr(REG7,0xbaaf,REG5)
0x03840742,	//0x09ea		VoC_add16_rd(REG2,REG0,0x8384)
0x45EE1506,	//0x09ec		VoC_sw16_d(REG6,0x45ee)
0x990CE7CA,	//0x09ee		VoC_multf32_rp(ACC0,REG4,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xC92BFFC0,	//0x09f0		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_NOP
0x9B1481D7,	//0x09f2		VoC_multf32inc_rp(ACC0,REG4,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG2,DEFAULT)
0xC92BDC87,	//0x09f4		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0xFFC081CF,	//0x09f6		VoC_NOP	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
		//0x09f8		VoC_endloop0
0x076DDC97,	//0x09f8		VoC_add16_rd(REG5,REG5,0x8384)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x09f9		VoC_endloop1
0xFFC00384,	//0x09fa		VoC_NAD	|	VoC_add16_rd(REG5,REG5,0x8384)(hi)
		//0x09fc		TONE_DETECTION_L6
0x45FA1483,	//0x09fc		VoC_lw32_d(REG67,0x45fa)
0xCDBCF816,	//0x09fe		VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xC92CFF47,	//0x0a00		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0xF7257817,	//0x0a02		VoC_movreg16(REG5,ACC0_HI,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0xCDB6C1AE,	//0x0a04		VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x4BF7E0EF,	//0x0a06		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_movreg16(RL7_HI,REG7,DEFAULT)
0x3307E003,	//0x0a08		VoC_bez32_r(TONE_DETECTION_End,RL7)(lo)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x33870A24,	//0x0a0a		VoC_bltz32_r(TONE_DETECTION_End,RL7)(lo)	|	VoC_bez32_r(TONE_DETECTION_End,RL7)(hi)
0x32460A24,	//0x0a0c		VoC_bnltz16_r(TONE_DETECTION_L10,REG6)(lo)	|	VoC_bltz32_r(TONE_DETECTION_End,RL7)(hi)
0xE1A60A16,	//0x0a0e		VoC_movreg16(REG6,RL6_HI,DEFAULT)	|	VoC_bnltz16_r(TONE_DETECTION_L10,REG6)(hi)
0x0C750A87,	//0x0a10		VoC_lw16i(REG7,0xc75)
0xFFC0CDBE,	//0x0a12		VoC_NOP	|	VoC_multf32_rr(RL6,REG6,REG7,DEFAULT)
0x0A243637,	//0x0a14		VoC_bgt32_rr(TONE_DETECTION_End,RL6,RL7)
		//0x0a16		TONE_DETECTION_L10
0x7FFF0A87,	//0x0a16		VoC_lw16i(REG7,0x7fff)
0x45FA1805,	//0x0a18		VoC_lw16i_set_inc(REG1,0x45fa,0x1)
0xF6E56885,	//0x0a1a		VoC_movreg16(REG5,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFFC0AE4E,	//0x0a1c		VoC_NOP	|	VoC_multf16inc_pp(REG6,REG1,REG1,DEFAULT)
0xC7F7C376,	//0x0a1e		VoC_multf16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x0a1f		VoC_endloop0
0x4C5FF003,	//0x0a20		VoC_bnlt16_rd(TONE_DETECTION_End,REG7,0xa64d)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xF023264D,	//0x0a22		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bnlt16_rd(TONE_DETECTION_End,REG7,0xa64d)(hi)
		//0x0a24		TONE_DETECTION_End
0x1503DFA9,	//0x0a24		VoC_sw16_d(REG3,0x659)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800659,	//0x0a26		VoC_return	|	VoC_sw16_d(REG3,0x659)(hi)
		//0x0a28		CII_vad_computation_fr
0x1808DFE9,	//0x0a28		VoC_lw16i_set_inc(REG0,0x806,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x20070806,	//0x0a2a		VoC_lw16d_set_inc(REG3,0x6e6,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x806,0x2)(hi)
0x180606E6,	//0x0a2c		VoC_lw16i_set_inc(REG2,0x650,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x6e6,0x1)(hi)
0x140C0650,	//0x0a2e		VoC_lw16_d(RL6_LO,0x65a)(lo)	|	VoC_lw16i_set_inc(REG2,0x650,0x1)(hi)
0x14C2065A,	//0x0a30		VoC_lw32_d(REG45,0x800c)(lo)	|	VoC_lw16_d(RL6_LO,0x65a)(hi)
0xD984000C,	//0x0a32		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw32_d(REG45,0x800c)(hi)
0x3304FF17,	//0x0a34		VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(lo)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xFFC00A58,	//0x0a36		VoC_NAD	|	VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(hi)
0x01882B80,	//0x0a38		VoC_jal(CII_NORM_L_ACC0)
0xE20478FB,	//0x0a3a		VoC_lw16i_short(REG4,0x20,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0xC2CDC0E3,	//0x0a3c		VoC_sub16_rr(REG5,REG3,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x3D820B49,	//0x0a3e		VoC_sub16_dr(REG1,0xbd82,REG1)
0xFF44692B,	//0x0a40		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFE8BD9C3,	//0x0a42		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x4474D132,	//0x0a44		VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0xbefa)(lo)	|	VoC_mac32inc_rp(REG6,REG2,DEFAULT)
0xF8EE3EFA,	//0x0a46		VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)	|	VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0xbefa)(hi)
0x7A0CE0C4,	//0x0a48		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0xF1C4FF17,	//0x0a4a		VoC_lw16i_short(REG4,0xe,DEFAULT)	|	VoC_movreg32(RL7,REG45,IN_PARALLEL)
		//0x0a4b		ENERGY_COMPUTATION_First
		//0x0a4b		VoC_endloop0
0xF7844165,	//0x0a4c		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x3284C365,	//0x0a4e		VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(lo)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0x14C40A54,	//0x0a50		VoC_lw32_d(ACC0,0x8384)(lo)	|	VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(hi)
0xFFC00384,	//0x0a52		VoC_NAD	|	VoC_lw32_d(ACC0,0x8384)(hi)
		//0x0a54		ENERGY_COMPUTATION_100
0x01882B80,	//0x0a54		VoC_jal(CII_NORM_L_ACC0)
0xF724434D,	//0x0a56		VoC_movreg16(REG4,ACC0_HI,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
		//0x0a58		ENERGY_COMPUTATION_EXIT
0x44281587,	//0x0a58		VoC_sw32_d(RL7,0x4428)
0x44261582,	//0x0a5a		VoC_sw32_d(REG45,0x4426)
0x06E62009,	//0x0a5c		VoC_lw16d_set_inc(REG1,0x6e6,0x2)
0x08061808,	//0x0a5e		VoC_lw16i_set_inc(REG0,0x806,0x2)
0x4402180A,	//0x0a60		VoC_lw16i_set_inc(REG2,0x4402,0x2)
0x4414180B,	//0x0a62		VoC_lw16i_set_inc(REG3,0x4414,0x2)
0xE22778F9,	//0x0a64		VoC_lw16i_short(REG7,0x22,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0x3AB60B4D,	//0x0a66		VoC_sub16_dr(REG5,0xbab6,REG1)
0xF041DF41,	//0x0a68		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0666188B,	//0x0a6a		VoC_lw16i_set_inc(REG3,0x666,0x12)
0x065B0809,	//0x0a6c		VoC_mult16_rd(REG1,REG1,0x65b)
0x6929F006,	//0x0a6e		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xD9C7C0C9,	//0x0a70		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG3,REG1,IN_PARALLEL)
0x13DFFEAF,	//0x0a72		VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_shr32_rr(RL7,REG5,DEFAULT)
0x93DFFF3E,	//0x0a74		VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_movreg32(RL6,RL7,IN_PARALLEL)
0xDDCE91DF,	//0x0a76		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_add32_rp(RL7,RL7,REG3,DEFAULT)
		//0x0a78		VoC_endloop0
0xCA595DD7,	//0x0a78		VoC_sub32_rr(REG23,REG23,REG67,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0xF0057046,	//0x0a7a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x065C0830,	//0x0a7c		VoC_mult16_rd(REG0,REG6,0x65c)
0x069C180B,	//0x0a7e		VoC_lw16i_set_inc(REG3,0x69c,0x2)
0xDF014018,	//0x0a80		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD983E924,	//0x0a82		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xDDDBD9D2,	//0x0a84		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x0a86		VoC_endloop0
0x7244DDC2,	//0x0a86		VoC_lw16i_short(REG4,0x12,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x072EE095,	//0x0a88		VoC_add16_rd(REG6,REG5,0x65b)(lo)	|	VoC_lw16i_short(REG5,0x9,IN_PARALLEL)
0x441C065B,	//0x0a8a		VoC_bne16_rd(ACF_AVERAGING101,REG4,0x65b)(lo)	|	VoC_add16_rd(REG6,REG5,0x65b)(hi)
0xF006065B,	//0x0a8c		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING101,REG4,0x65b)(hi)
		//0x0a8e		ACF_AVERAGING101
0x072FF364,	//0x0a8e		VoC_add16_rd(REG7,REG5,0x65c)(lo)	|	VoC_lw16i_short(REG4,0x1b,DEFAULT)
0x441C065C,	//0x0a90		VoC_bne16_rd(ACF_AVERAGING103,REG4,0x65c)(lo)	|	VoC_add16_rd(REG7,REG5,0x65c)(hi)
0xF007065C,	//0x0a92		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING103,REG4,0x65c)(hi)
		//0x0a94		ACF_AVERAGING103
0x1506F033,	//0x0a94		VoC_sw16_d(REG6,0x65b)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x1507065B,	//0x0a96		VoC_sw16_d(REG7,0x65c)(lo)	|	VoC_sw16_d(REG6,0x65b)(hi)
0x180A065C,	//0x0a98		VoC_lw16i_set_inc(REG2,0x4414,0x2)(lo)	|	VoC_sw16_d(REG7,0x65c)(hi)
0x0A804414,	//0x0a9a		VoC_lw16i(REG0,0x4434)(lo)	|	VoC_lw16i_set_inc(REG2,0x4414,0x2)(hi)
0xD9944434,	//0x0a9c		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i(REG0,0x4434)(hi)
0xE00A600B,	//0x0a9e		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG0,DEFAULT)
0x0ABC3304,	//0x0aa0		VoC_bez32_r(schur_recursion_End1,ACC0)
0x01882B80,	//0x0aa2		VoC_jal(CII_NORM_L_ACC0)
0x3AB90B49,	//0x0aa4		VoC_sub16_dr(REG1,0xbab9,REG1)
0x44891FBC,	//0x0aa6		VoC_lw16i_set_inc(REG0,0x4489,0xffffffff)
0x44761807,	//0x0aa8		VoC_lw16i_set_inc(REG3,0x4476,0x1)
0xD9D3E925,	//0x0aaa		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFFC0FE8B,	//0x0aac		VoC_NOP	|	VoC_shr32_rr(REG67,REG1,DEFAULT)
0xDCB6DC86,	//0x0aae		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x0aaf		VoC_endloop0
0x44761482,	//0x0ab0		VoC_lw32_d(REG45,0x4476)
0x0AEE2C11,	//0x0ab2		VoC_loop_i(0x1,0x8)
0x3AAA0B6F,	//0x0ab4		VoC_sub16_dr(REG7,0xbaaa,REG5)
0x0AB93205,	//0x0ab6		VoC_bltz16_r(abs_end,REG5)
0xFF29E0A7,	//0x0ab8		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0ab9		abs_end
0x0AC634BC,	//0x0aba		VoC_bngt16_rr(SCHUR_RECURSION_130,REG7,REG4)
		//0x0abc		schur_recursion_End1
0x0B52FF29,	//0x0abc		VoC_sub16_dr(REG2,0xbab4,REG2)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xF0073AB4,	//0x0abe		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sub16_dr(REG2,0xbab4,REG2)(hi)
0x0AC43142,	//0x0ac0		VoC_bngtz16_r(SCHUR_RECURSION_NEWADD,REG2)
0xDCB7E681,	//0x0ac2		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0ac3		VoC_endloop0
		//0x0ac4		SCHUR_RECURSION_NEWADD
0x0AF02B00,	//0x0ac4		VoC_jump_lg(schur_recursion_End)
		//0x0ac6		SCHUR_RECURSION_130
0xE081E0E0,	//0x0ac6		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x019A2B80,	//0x0ac8		VoC_jal(CII_DIV_S)
0x0ACE3145,	//0x0aca		VoC_bngtz16_r(SCHUR_RECURSION_210,REG5)
0x3AAA0B52,	//0x0acc		VoC_sub16_dr(REG2,0xbaaa,REG2)
		//0x0ace		SCHUR_RECURSION_210
0x14C6CD54,	//0x0ace		VoC_lw32_d(RL6,0x828a)(lo)	|	VoC_multf32_rr(ACC0,REG5,REG2,DEFAULT)
0xDCB2028A,	//0x0ad0		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw32_d(RL6,0x828a)(hi)
0xF6456142,	//0x0ad2		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,ACC1_LO,DEFAULT)
0x3AB341E2,	//0x0ad4		VoC_be16_rd(schur_recursion_End,REG2,0xbab3)
0x3AB30B56,	//0x0ad6		VoC_sub16_dr(REG6,0xbab3,REG2)
0xDE104930,	//0x0ad8		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)
0xFF0D4067,	//0x0ada		VoC_movreg32(ACC1,REG23,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG1,REG4,DEFAULT)
0x44761805,	//0x0adc		VoC_lw16i_set_inc(REG1,0x4476,0x1)
0x44881FBC,	//0x0ade		VoC_lw16i_set_inc(REG0,0x4488,0xffffffff)
0x3AAE074A,	//0x0ae0		VoC_add16_rd(REG2,REG1,0xbaae)
0xDC97678B,	//0x0ae2		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xFFC09944,	//0x0ae4		VoC_NOP	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0x81D4C933,	//0x0ae6		VoC_add16_rp(REG4,REG7,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xFFC09B54,	//0x0ae8		VoC_NOP	|	VoC_multf32inc_rp(ACC0,REG5,REG2,DEFAULT)
0x81C7C933,	//0x0aea		VoC_add16_rp(REG7,REG7,REG0,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xDC87DC94,	//0x0aec		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0aed		VoC_endloop0
		//0x0aee		VoC_endloop1
0x44761482,	//0x0aee		VoC_lw32_d(REG45,0x4476)
		//0x0af0		schur_recursion_End
0x1FBBF105,	//0x0af0		VoC_lw16i_set_inc(REG3,0x442a,0xfffffffe)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x1806442A,	//0x0af2		VoC_lw16i_set_inc(REG2,0x4434,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x442a,0xfffffffe)(hi)
0xE06D4434,	//0x0af4		VoC_movreg16(RL6_HI,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4434,0x1)(hi)
0x09262B80,	//0x0af6		VoC_jal(CII_step_up_opt_fr)
0x1806F031,	//0x0af8		VoC_lw16i_set_inc(REG2,0x442a,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x1807442A,	//0x0afa		VoC_lw16i_set_inc(REG3,0x43f8,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x442a,0x1)(hi)
0x180843F8,	//0x0afc		VoC_lw16i_set_inc(REG0,0x4460,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x43f8,0x1)(hi)
0xF1264460,	//0x0afe		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4460,0x2)(hi)
0xF6415FC0,	//0x0b00		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x0B0B2C13,	//0x0b02		VoC_loop_i(0x1,0x9)
0xFF446783,	//0x0b04		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD12AD895,	//0x0b06		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x0b07		VoC_endloop0
0x07F6C2B2,	//0x0b08		VoC_sub16_rd(REG6,REG6,0x8384)(lo)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0x5DC40384,	//0x0b0a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x8384)(hi)
		//0x0b0b		VoC_endloop1
0xDF80C271,	//0x0b0c		VoC_pop16(REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)
0xD984F006,	//0x0b0e		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x01882B80,	//0x0b10		VoC_jal(CII_NORM_L_ACC0)
0x3AB90B4A,	//0x0b12		VoC_sub16_dr(REG2,0xbab9,REG1)
0xD9C26924,	//0x0b14		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xD9C2FE92,	//0x0b16		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
		//0x0b18		VoC_endloop0
0x1501DCB4,	//0x0b18		VoC_sw16_d(REG1,0x43f7)(lo)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x180843F7,	//0x0b1a		VoC_lw16i_set_inc(REG0,0x4402,0x2)(lo)	|	VoC_sw16_d(REG1,0x43f7)(hi)
0xDFC14402,	//0x0b1c		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4402,0x2)(hi)
0x43F91806,	//0x0b1e		VoC_lw16i_set_inc(REG2,0x43f9,0x1)
0x1807D984,	//0x0b20		VoC_lw16i_set_inc(REG3,0x838,0x1)(lo)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x33440838,	//0x0b22		VoC_bnez32_r(spectral_comp_L1,ACC0)(lo)	|	VoC_lw16i_set_inc(REG3,0x838,0x1)(hi)
0x0A870B2A,	//0x0b24		VoC_lw16i(REG7,0xfff)(lo)	|	VoC_bnez32_r(spectral_comp_L1,ACC0)(hi)
0xE9210FFF,	//0x0b26		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i(REG7,0xfff)(hi)
		//0x0b28		VoC_endloop0
0xE5CADCB7,	//0x0b28		VoC_jump(spectral_comp_L2)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x0b2a		spectral_comp_L1
0x01882B80,	//0x0b2a		VoC_jal(CII_NORM_L_ACC0)
0x3D820B49,	//0x0b2c		VoC_sub16_dr(REG1,0xbd82,REG1)
0xD9C46924,	//0x0b2e		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xD9C4FE8C,	//0x0b30		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG1,DEFAULT)
		//0x0b32		VoC_endloop0
0xFF44DCB8,	//0x0b32		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
		//0x0b33		spectral_comp_L2
0x08391807,	//0x0b34		VoC_lw16i_set_inc(REG3,0x839,0x1)
0xD413E901,	//0x0b36		VoC_mac32inc_pp(REG2,REG3,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x0b37		VoC_endloop0
0xE0017F43,	//0x0b38		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x33C4FF25,	//0x0b3a		VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x0BE40B40,	//0x0b3c		VoC_sub32_dr(ACC0,0xbaaa,ACC0)(lo)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(hi)
0xFFC03AAA,	//0x0b3e		VoC_NAD	|	VoC_sub32_dr(ACC0,0xbaaa,ACC0)(hi)
		//0x0b40		SPECTRAL_COMPARISON104
0x0B5A3304,	//0x0b40		VoC_bez32_r(SPECTRAL_COMPARISON106,ACC0)
0x08381405,	//0x0b42		VoC_lw16_d(REG5,0x838)
0x2B80F8ED,	//0x0b44		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_shr16_ri(REG5,0xfffffffd,DEFAULT)
0xDF400188,	//0x0b46		VoC_push32(REG01,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3485E120,	//0x0b48		VoC_bngt16_rr(SPECTRAL_COMPARISON109,REG0,REG5)(lo)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xC2280B4E,	//0x0b4a		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_bngt16_rr(SPECTRAL_COMPARISON109,REG0,REG5)(hi)
0x028A14C3,	//0x0b4c		VoC_lw32_d(REG67,0x828a)
		//0x0b4e		SPECTRAL_COMPARISON109
0xFFC0E0A1,	//0x0b4e		VoC_NAD	|	VoC_movreg16(REG1,REG5,DEFAULT)
0x019A2B80,	//0x0b50		VoC_jal(CII_DIV_S)
0xE0035F00,	//0x0b52		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xFBFBC8CB,	//0x0b54		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG23,DEFAULT)
0x0B5A33C5,	//0x0b56		VoC_bnltz32_r(SPECTRAL_COMPARISON106,ACC1)
0x3AAA0BDB,	//0x0b58		VoC_sub32_dr(REG67,0xbaaa,REG67)
		//0x0b5a		SPECTRAL_COMPARISON106
0x7E8BFB93,	//0x0b5a		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
0x1404E005,	//0x0b5c		VoC_lw16_d(REG4,0x43f8)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x324443F8,	//0x0b5e		VoC_bnltz16_r(SPECTRAL_COMPARISON_LA1,REG4)(lo)	|	VoC_lw16_d(REG4,0x43f8)(hi)
0xF7E50B62,	//0x0b60		VoC_lw16i_short(REG5,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(SPECTRAL_COMPARISON_LA1,REG4)(hi)
		//0x0b62		SPECTRAL_COMPARISON_LA1
0x48D3FBAA,	//0x0b62		VoC_add32_rr(REG67,REG67,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffff5,DEFAULT)
0xFEA3DF84,	//0x0b64		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_pop16(REG4,IN_PARALLEL)
0x06E4099A,	//0x0b66		VoC_sub32_rd(REG45,REG67,0x6e4)
0x06E41583,	//0x0b68		VoC_sw32_d(REG67,0x6e4)
0x0B6E33C2,	//0x0b6a		VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)
0x3AAA0BD2,	//0x0b6c		VoC_sub32_dr(REG45,0xbaaa,REG45)
		//0x0b6e		SPECTRAL_COMPARISON113
0x0A82F003,	//0x0b6e		VoC_lw16i(REG2,0xccd)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x368A0CCD,	//0x0b70		VoC_bngt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)(lo)	|	VoC_lw16i(REG2,0xccd)(hi)
0xF0230B74,	//0x0b72		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bngt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)(hi)
		//0x0b74		SPECTRAL_COMPARISON115
0x06621400,	//0x0b74		VoC_lw16_d(REG0,0x662)
0x06630700,	//0x0b76		VoC_add16_rd(REG0,REG0,0x663)
0x4858F001,	//0x0b78		VoC_blt16_rd(threshold_adaptation_100,REG0,0xbab0)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF0213AB0,	//0x0b7a		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_blt16_rd(threshold_adaptation_100,REG0,0xbab0)(hi)
		//0x0b7c		threshold_adaptation_100
0x1403E060,	//0x0b7c		VoC_lw16_d(REG3,0x659)(lo)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x14820659,	//0x0b7e		VoC_lw32_d(REG45,0x4428)(lo)	|	VoC_lw16_d(REG3,0x659)(hi)
0x14864428,	//0x0b80		VoC_lw32_d(RL6,0x4426)(lo)	|	VoC_lw32_d(REG45,0x4428)(hi)
0x14064426,	//0x0b82		VoC_lw16_d(REG6,0x65e)(lo)	|	VoC_lw32_d(RL6,0x4426)(hi)
0x1407065E,	//0x0b84		VoC_lw16_d(REG7,0x65d)(lo)	|	VoC_lw16_d(REG6,0x65e)(hi)
0x728F065D,	//0x0b86		VoC_lw16i_short(RL7_HI,0x14,DEFAULT)	|	VoC_lw16_d(REG7,0x65d)(hi)
0x0A8EE139,	//0x0b88		VoC_lw16i(RL7_LO,0x61a8)(lo)	|	VoC_lw16i_short(ACC0_HI,0x13,IN_PARALLEL)
0x0A8861A8,	//0x0b8a		VoC_lw16i(ACC0_LO,0x493e)(lo)	|	VoC_lw16i(RL7_LO,0x61a8)(hi)
0x3622493E,	//0x0b8c		VoC_bgt32_rr(THRESHOLD_ADAPTATION_End,ACC0,REG45)(lo)	|	VoC_lw16i(ACC0_LO,0x493e)(hi)
0x70050BFA,	//0x0b8e		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bgt32_rr(THRESHOLD_ADAPTATION_End,ACC0,REG45)(hi)
0x3180E014,	//0x0b90		VoC_bez16_r(THRESHOLD_ADAPTATION107,REG0)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x40610B97,	//0x0b92		VoC_be16_rd(THRESHOLD_ADAPTATION107,REG1,0x8384)(lo)	|	VoC_bez16_r(THRESHOLD_ADAPTATION107,REG0)(hi)
0x447B0384,	//0x0b94		VoC_bne16_rd(THRESHOLD_ADAPTATION10A,REG3,0x8384)(lo)	|	VoC_be16_rd(THRESHOLD_ADAPTATION107,REG1,0x8384)(hi)
0xFF1F0384,	//0x0b96		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_bne16_rd(THRESHOLD_ADAPTATION10A,REG3,0x8384)(hi)
		//0x0b97		THRESHOLD_ADAPTATION107
0x065F1505,	//0x0b98		VoC_sw16_d(REG5,0x65f)
0x0BFA2B00,	//0x0b9a		VoC_jump_lg(THRESHOLD_ADAPTATION_End)
		//0x0b9c		THRESHOLD_ADAPTATION10A
0x065F0725,	//0x0b9c		VoC_add16_rd(REG5,REG4,0x65f)
0x3AB4387D,	//0x0b9e		VoC_bgt16_rd(THRESHOLD_ADAPTATION108,REG5,0xbab4)
0x1505FF1F,	//0x0ba0		VoC_sw16_d(REG5,0x65f)(lo)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x2B00065F,	//0x0ba2		VoC_jump_lg(THRESHOLD_ADAPTATION_End)(lo)	|	VoC_sw16_d(REG5,0x65f)(hi)
0xE0C50BFA,	//0x0ba4		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_jump_lg(THRESHOLD_ADAPTATION_End)(hi)
		//0x0ba5		THRESHOLD_ADAPTATION108
0xC376F82E,	//0x0ba6		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,DEFAULT)
0x02F24C76,	//0x0ba8		VoC_bnlt16_rd(THRESHOLD_ADAPTATION109,REG6,0x82f2)
0x07FFF8FE,	//0x0baa		VoC_sub16_rd(REG7,REG7,0x8384)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xFFC00384,	//0x0bac		VoC_NAD	|	VoC_sub16_rd(REG7,REG7,0x8384)(hi)
		//0x0bae		THRESHOLD_ADAPTATION109
0xE0016180,	//0x0bae		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x4882C802,	//0x0bb0		VoC_add32_rr(REG45,REG45,REG01,DEFAULT)	|	VoC_add32_rr(REG45,REG01,REG01,DEFAULT)
0x7A0AE010,	//0x0bb2		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0xC041F7A1,	//0x0bb4		VoC_add16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_movreg16(REG1,RL6_HI,IN_PARALLEL)
0x02AC5462,	//0x0bb6		VoC_bngt32_rd(THRESHOLD_ADAPTATION110,REG45,0x82ac)
0xC0417A0A,	//0x0bb8		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
		//0x0bba		THRESHOLD_ADAPTATION110
0x3683E080,	//0x0bba		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(lo)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x7F440BCC,	//0x0bbc		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(hi)
0x7822F6C2,	//0x0bbe		VoC_shr16_ri(REG2,0x4,DEFAULT)	|	VoC_movreg16(REG2,REG6,IN_PARALLEL)
0xE0C8E003,	//0x0bc0		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x5469C909,	//0x0bc2		VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x82ac)(lo)	|	VoC_add32_rr(REG23,ACC0,REG23,DEFAULT)
0xFA0902AC,	//0x0bc4		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x82ac)(hi)
0x0384077F,	//0x0bc6		VoC_add16_rd(REG7,REG7,0x8384)
		//0x0bc8		THRESHOLD_ADAPTATION113
0x3698E046,	//0x0bc8		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(lo)	|	VoC_movreg16(REG6,REG2,DEFAULT)
0xFF030BCC,	//0x0bca		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(hi)
		//0x0bcc		THRESHOLD_ADAPTATION117
0x0A82F363,	//0x0bcc		VoC_lw16i(REG2,0x4c4b)(lo)	|	VoC_lw16i_short(REG3,0x1b,DEFAULT)
0xFF1F4C4B,	//0x0bce		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw16i(REG2,0x4c4b)(hi)
0xFF457F32,	//0x0bd0		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x0BDA351D,	//0x0bd2		VoC_be16_rr(THRESHOLD_ADAPTATION120,REG3,REG5)
0x7FFF0A8A,	//0x0bd4		VoC_lw16i(ACC1_LO,0x7fff)
0x0BDA342B,	//0x0bd6		VoC_bgt16_rr(THRESHOLD_ADAPTATION120,REG5,REG3)
0xFF0A7F11,	//0x0bd8		VoC_movreg32(REG45,REG23,IN_PARALLEL)	|	VoC_movreg32(REG23,REG45,DEFAULT)
		//0x0bda		THRESHOLD_ADAPTATION120
0x60A6C358,	//0x0bda		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_sub16_rr(REG0,REG5,REG3,DEFAULT)
0x7005FE02,	//0x0bdc		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_shr16_rr(REG2,REG0,IN_PARALLEL)
0xC88AE003,	//0x0bde		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x0BE63695,	//0x0be0		VoC_bngt32_rr(THRESHOLD_ADAPTATION121,REG45,ACC1)
0x0775FA0A,	//0x0be2		VoC_add16_rd(REG5,REG6,0x8384)(lo)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
0xE5C30384,	//0x0be4		VoC_jump(THRESHOLD_ADAPTATION124)	|	VoC_add16_rd(REG5,REG6,0x8384)(hi)
		//0x0be6		THRESHOLD_ADAPTATION121
0xFFC0E0C5,	//0x0be6		VoC_NAD	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x0be8		THRESHOLD_ADAPTATION124
0x0BEC36BA,	//0x0be8		VoC_bngt32_rr(THRESHOLD_ADAPTATION127,RL7,REG45)
0xFFC0FF17,	//0x0bea		VoC_NAD	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x0bec		THRESHOLD_ADAPTATION127
0x43F71401,	//0x0bec		VoC_lw16_d(REG1,0x43f7)
0x06501804,	//0x0bee		VoC_lw16i_set_inc(REG0,0x650,0x1)
0x065A1501,	//0x0bf0		VoC_sw16_d(REG1,0x65a)
0x43F81806,	//0x0bf2		VoC_lw16i_set_inc(REG2,0x43f8,0x1)
0xD8A3E923,	//0x0bf4		VoC_lw16inc_p(REG3,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xDC83F125,	//0x0bf6		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x9,DEFAULT)
		//0x0bf7		VoC_endloop0
0x065F1505,	//0x0bf8		VoC_sw16_d(REG5,0x65f)
		//0x0bfa		THRESHOLD_ADAPTATION_End
0x065E150E,	//0x0bfa		VoC_sw16_d(RL7_LO,0x65e)
0x065D150F,	//0x0bfc		VoC_sw16_d(RL7_HI,0x65d)
0x44261486,	//0x0bfe		VoC_lw32_d(RL6,0x4426)
0x36B7F000,	//0x0c00		VoC_bngt32_rr(DECISION_PENG_101,RL6,RL7)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF0200C04,	//0x0c02		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(DECISION_PENG_101,RL6,RL7)(hi)
		//0x0c04		DECISION_PENG_101
0x06601483,	//0x0c04		VoC_lw32_d(REG67,0x660)
0x03840776,	//0x0c06		VoC_add16_rd(REG6,REG6,0x8384)
0x03844060,	//0x0c08		VoC_be16_rd(VAD_HANDOVER101,REG0,0x8384)
0xFFC0F006,	//0x0c0a		VoC_NAD	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0c0c		VAD_HANDOVER101
0x3AAF4866,	//0x0c0c		VoC_blt16_rd(VAD_HANDOVER103,REG6,0xbaaf)
0xE03670A7,	//0x0c0e		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x5,DEFAULT)
		//0x0c10		VAD_HANDOVER103
0x0C143207,	//0x0c10		VoC_bltz16_r(VAD_HANDOVER104,REG7)
0xC3C7F020,	//0x0c12		VoC_sub16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x0c14		VAD_HANDOVER104
0x42FB1500,	//0x0c14		VoC_sw16_d(REG0,0x42fb)
0x1583DFA9,	//0x0c16		VoC_sw32_d(REG67,0x660)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800660,	//0x0c18		VoC_return	|	VoC_sw32_d(REG67,0x660)(hi)
		//0x0c1a		CII_periodicity_update_fr
0x047C1804,	//0x0c1a		VoC_lw16i_set_inc(REG0,0x47c,0x1)
0x06641406,	//0x0c1c		VoC_lw16_d(REG6,0x664)
0x2C09F007,	//0x0c1e		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xD8050C33,	//0x0c20		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0x0C2734B5,	//0x0c22		VoC_bngt16_rr(PERIODICITYUPDATE101,REG6,REG5)
0x60C5E0A8,	//0x0c24		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG5,DEFAULT)
0xE864F706,	//0x0c26		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)
		//0x0c27		PERIODICITYUPDATE101
0x0C2B3435,	//0x0c28		VoC_bgt16_rr(PERIODICITYUPDATE102,REG6,REG5)
0xF024C375,	//0x0c2a		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG6,DEFAULT)
		//0x0c2b		PERIODICITYUPDATE102
		//0x0c2b		VoC_endloop0
0x34ABC3AB,	//0x0c2c		VoC_bngt16_rr(PERIODICITYUPDATE103A,REG5,REG3)(lo)	|	VoC_sub16_rr(REG3,REG6,REG5,DEFAULT)
0xE0650C30,	//0x0c2e		VoC_movreg16(REG5,REG3,DEFAULT)	|	VoC_bngt16_rr(PERIODICITYUPDATE103A,REG5,REG3)(hi)
		//0x0c30		PERIODICITYUPDATE103A
0x3AAE4C5D,	//0x0c30		VoC_bnlt16_rd(PERIODICITYUPDATE104,REG5,0xbaae)
0xD886C1E7,	//0x0c32		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
		//0x0c33		PERIODICITYUPDATE104
		//0x0c33		VoC_endloop1
0x06621405,	//0x0c34		VoC_lw16_d(REG5,0x662)
0x06641506,	//0x0c36		VoC_sw16_d(REG6,0x664)
0x06621507,	//0x0c38		VoC_sw16_d(REG7,0x662)
0x06631505,	//0x0c3a		VoC_sw16_d(REG5,0x663)
0xFFC0E580,	//0x0c3c		VoC_NAD	|	VoC_return
		//0x0c3e		CII_FR_Decode
0x028A14C4,	//0x0c3e		VoC_lw32_d(ACC0,0x828a)
0xDF44DFE9,	//0x0c40		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0C483182,	//0x0c42		VoC_bez16_r(gsm_decode_L1,REG2)
0x088E2B80,	//0x0c44		VoC_jal(CII_decoder_reset)
0x0CDF2B80,	//0x0c46		VoC_jal(CII_dtx_dec_init)
		//0x0c48		gsm_decode_L1
0x0EA32B80,	//0x0c48		VoC_jal(CII_bits2prm_fr)
0x11462B80,	//0x0c4a		VoC_jal(CII_extra_bfi_filter)
0x0E782B80,	//0x0c4c		VoC_jal(CII_decoder_homing_frame_test)
0x0C5C3181,	//0x0c4e		VoC_bez16_r(gsm_decode_100,REG1)
0x42FF2008,	//0x0c50		VoC_lw16d_set_inc(REG0,0x42ff,0x2)
0xE0837102,	//0x0c52		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0x0C562CA0,	//0x0c54		VoC_loop_i(0x0,0x50)
		//0x0c56		VoC_endloop0
0xFFC0DDC1,	//0x0c56		VoC_NAD	|	VoC_sw32inc_p(REG23,REG0,DEFAULT)
0x0CDF2B80,	//0x0c58		VoC_jal(CII_dtx_dec_init)
0x0CDC2B00,	//0x0c5a		VoC_jump_lg(gsm_decode_LEnd)
		//0x0c5c		gsm_decode_100
0x0DD32B80,	//0x0c5c		VoC_jal(CII_rx_dtx_fr)
0x40806E0C,	//0x0c5e		VoC_bnez16_d(gsm_decode_120,0x4080)
0x40826E0A,	//0x0c60		VoC_bnez16_d(gsm_decode_120,0x4082)
0x06041808,	//0x0c62		VoC_lw16i_set_inc(REG0,0x604,0x2)
0x43861809,	//0x0c64		VoC_lw16i_set_inc(REG1,0x4386,0x2)
0xD9C46CC3,	//0x0c66		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x26,DEFAULT)
0xDDCCD9C4,	//0x0c68		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0c69		VoC_endloop0
		//0x0c6a		gsm_decode_120
0x433F1407,	//0x0c6a		VoC_lw16_d(REG7,0x433f)
0x1603E0E3,	//0x0c6c		VoC_and16_ri(REG3,0x40)(lo)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x16070040,	//0x0c6e		VoC_and16_ri(REG7,0x20)(lo)	|	VoC_and16_ri(REG3,0x40)(hi)
0x31C30020,	//0x0c70		VoC_bnez16_r(gsm_decode_130,REG3)(lo)	|	VoC_and16_ri(REG7,0x20)(hi)
0x31870C76,	//0x0c72		VoC_bez16_r(gsm_decode_140,REG7)(lo)	|	VoC_bnez16_r(gsm_decode_130,REG3)(hi)
0xFFC00C99,	//0x0c74		VoC_NAD	|	VoC_bez16_r(gsm_decode_140,REG7)(hi)
		//0x0c76		gsm_decode_130
0x43E61804,	//0x0c76		VoC_lw16i_set_inc(REG0,0x43e6,0x1)
0x43DE1805,	//0x0c78		VoC_lw16i_set_inc(REG1,0x43de,0x1)
0x43F20A8C,	//0x0c7a		VoC_lw16i(RL6_LO,0x43f2)
0x43EE0A8D,	//0x0c7c		VoC_lw16i(RL6_HI,0x43ee)
0x03541847,	//0x0c7e		VoC_lw16i_set_inc(REG3,0x8354,0x1)
0x4340071B,	//0x0c80		VoC_add16_rd(REG3,REG3,0x4340)
0x06041806,	//0x0c82		VoC_lw16i_set_inc(REG2,0x604,0x1)
0xE0035834,	//0x0c84		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG3,DEFAULT)
0x02AC0B65,	//0x0c86		VoC_sub16_dr(REG5,0x82ac,REG4)
0x0384076D,	//0x0c88		VoC_add16_rd(REG5,REG5,0x8384)
0x06180A8E,	//0x0c8a		VoC_lw16i(RL7_LO,0x618)
0xD90C698B,	//0x0c8c		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xc,DEFAULT)
0xF6465121,	//0x0c8e		VoC_movreg16(REG6,REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG4,REG1,DEFAULT)
0xDE105128,	//0x0c90		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG5,REG0,DEFAULT)
0x3AB34463,	//0x0c92		VoC_bne16_rd(gsm_decode_1ABC,REG3,0xbab3)
0xFF3061C2,	//0x0c94		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_LO,DEFAULT)
		//0x0c96		gsm_decode_1ABC
0x5C69D90C,	//0x0c96		VoC_sw16_p(ACC0_HI,REG6,DEFAULT)	|	VoC_lw32_sd(ACC0,0x0,DEFAULT)
		//0x0c97		VoC_endloop0
0xF207DE18,	//0x0c98		VoC_lw16i_short(REG7,0x10,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
		//0x0c99		gsm_decode_140
0x433F2807,	//0x0c9a		VoC_and16_rd(REG7,0x433f)
0x0CA031C7,	//0x0c9c		VoC_bnez16_r(gsm_decode_150,REG7)
0x433C6C16,	//0x0c9e		VoC_bez16_d(gsm_decode_160,0x433c)
		//0x0ca0		gsm_decode_150
0x0D722B80,	//0x0ca0		VoC_jal(CII_lost_frame_process)
0x06181804,	//0x0ca2		VoC_lw16i_set_inc(REG0,0x618,0x1)
0x00400A87,	//0x0ca4		VoC_lw16i(REG7,0x40)
0xD8866885,	//0x0ca6		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x0CAB34BE,	//0x0ca8		VoC_bngt16_rr(gsm_decode_170,REG7,REG6)
0xD886E0C7,	//0x0caa		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
		//0x0cab		gsm_decode_170
		//0x0cab		VoC_endloop0
0x3AAF4877,	//0x0cac		VoC_blt16_rd(gsm_decode_180,REG7,0xbaaf)
0x4C2EF0C6,	//0x0cae		VoC_bnlt16_rd(gsm_decode_160,REG6,0x433c)(lo)	|	VoC_lw16i_short(REG6,0x6,DEFAULT)
0xFFC0433C,	//0x0cb0		VoC_NAD	|	VoC_bnlt16_rd(gsm_decode_160,REG6,0x433c)(hi)
		//0x0cb2		gsm_decode_180
0x0D3C2B80,	//0x0cb2		VoC_jal(CII_silence_frame_paramer)
		//0x0cb4		gsm_decode_160
0x1407F100,	//0x0cb4		VoC_lw16_d(REG7,0x433f)(lo)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x6438433F,	//0x0cb6		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x433f)(hi)
0x1607F007,	//0x0cb8		VoC_and16_ri(REG7,0x4)(lo)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x31C00004,	//0x0cba		VoC_bnez16_r(gsm_decode_200,REG0)(lo)	|	VoC_and16_ri(REG7,0x4)(hi)
0x31870CC0,	//0x0cbc		VoC_bez16_r(gsm_decode_200_end,REG7)(lo)	|	VoC_bnez16_r(gsm_decode_200,REG0)(hi)
0xFFC00CDA,	//0x0cbe		VoC_NAD	|	VoC_bez16_r(gsm_decode_200_end,REG7)(hi)
		//0x0cc0		gsm_decode_200
0x43E61808,	//0x0cc0		VoC_lw16i_set_inc(REG0,0x43e6,0x2)
0x43DE1809,	//0x0cc2		VoC_lw16i_set_inc(REG1,0x43de,0x2)
0x0604180A,	//0x0cc4		VoC_lw16i_set_inc(REG2,0x604,0x2)
0x43F20A8C,	//0x0cc6		VoC_lw16i(RL6_LO,0x43f2)
0x43EE0A8D,	//0x0cc8		VoC_lw16i(RL6_HI,0x43ee)
0x06180A8E,	//0x0cca		VoC_lw16i(RL7_LO,0x618)
0xE00368CA,	//0x0ccc		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xD9D5D98C,	//0x0cce		VoC_lw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDDCDDDC4,	//0x0cd0		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x3AAF4463,	//0x0cd2		VoC_bne16_rd(gsm_decode_200ABC,REG3,0xbaaf)
0xFF3061C2,	//0x0cd4		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_LO,DEFAULT)
		//0x0cd6		gsm_decode_200ABC
		//0x0cd6		VoC_endloop0
0xFFC0DE18,	//0x0cd6		VoC_NAD	|	VoC_inc_p(REG3,DEFAULT)
0x0D132B80,	//0x0cd8		VoC_jal(CII_CN_paramer)
		//0x0cda		gsm_decode_200_end
0x0F172B80,	//0x0cda		VoC_jal(CII_Gsm_Decoder)
		//0x0cdc		gsm_decode_LEnd
0xDF04DFA9,	//0x0cdc		VoC_pop32(ACC0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF081E580,	//0x0cde		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_return
		//0x0cdf		CII_dtx_dec_init
0x0A82F026,	//0x0ce0		VoC_lw16i(REG2,0x7fff)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x14C47FFF,	//0x0ce2		VoC_lw32_d(ACC0,0x8010)(lo)	|	VoC_lw16i(REG2,0x7fff)(hi)
0x15010010,	//0x0ce4		VoC_sw16_d(REG1,0x433d)(lo)	|	VoC_lw32_d(ACC0,0x8010)(hi)
0x1502433D,	//0x0ce6		VoC_sw16_d(REG2,0x433e)(lo)	|	VoC_sw16_d(REG1,0x433d)(hi)
0x1506433E,	//0x0ce8		VoC_sw16_d(REG6,0x433f)(lo)	|	VoC_sw16_d(REG2,0x433e)(hi)
0x1584433F,	//0x0cea		VoC_sw32_d(ACC0,0x4342)(lo)	|	VoC_sw16_d(REG6,0x433f)(hi)
0x72E14342,	//0x0cec		VoC_lw16i_short(REG1,0x17,DEFAULT)	|	VoC_sw32_d(ACC0,0x4342)(hi)
0x1808FF44,	//0x0cee		VoC_lw16i_set_inc(REG0,0x4386,0x2)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x18064386,	//0x0cf0		VoC_lw16i_set_inc(REG2,0x438e,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x4386,0x2)(hi)
0x6F02438E,	//0x0cf2		VoC_loop_i_short(0x38,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x438e,0x1)(hi)
0xDDC4E286,	//0x0cf4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
		//0x0cf5		VoC_endloop0
0x43401501,	//0x0cf6		VoC_sw16_d(REG1,0x4340)
0x43411508,	//0x0cf8		VoC_sw16_d(ACC0_LO,0x4341)
0x433C1508,	//0x0cfa		VoC_sw16_d(ACC0_LO,0x433c)
0xDCA6E881,	//0x0cfc		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0cfd		VoC_endloop0
0xE2AC714F,	//0x0cfe		VoC_lw16i_short(RL6_LO,0x2a,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0xa,DEFAULT)
0xE27D72AE,	//0x0d00		VoC_lw16i_short(RL6_HI,0x27,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x15,DEFAULT)
0x43DE1808,	//0x0d02		VoC_lw16i_set_inc(REG0,0x43de,0x2)
0x43E6180A,	//0x0d04		VoC_lw16i_set_inc(REG2,0x43e6,0x2)
0xDDD6DDC6,	//0x0d06		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xE09C708D,	//0x0d08		VoC_lw16i_short(RL6_LO,0x9,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x4,DEFAULT)
0x5DD7DDC7,	//0x0d0a		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xF06EE02F,	//0x0d0c		VoC_lw16i_short(RL7_LO,0x3,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x2,IN_PARALLEL)
0xDDD6DDC6,	//0x0d0e		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDD7DDC7,	//0x0d10		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xDFE9E580,	//0x0d12		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0d13		CII_CN_paramer
0x06141805,	//0x0d14		VoC_lw16i_set_inc(REG1,0x614,0x1)
0x06101806,	//0x0d16		VoC_lw16i_set_inc(REG2,0x610,0x1)
0x43421484,	//0x0d18		VoC_lw32_d(ACC0,0x4342)
0xFFC0F003,	//0x0d1a		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x0D222C09,	//0x0d1c		VoC_loop_i(0x1,0x4)
0xE0205C93,	//0x0d1e		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0x0DB32B80,	//0x0d20		VoC_jal(CII_pseudonoise_fr)
		//0x0d22		VoC_endloop1
0x0A8CDCA7,	//0x0d22		VoC_lw16i(RL6_LO,0x28)(lo)	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
0x0A8D0028,	//0x0d24		VoC_lw16i(RL6_HI,0x78)(lo)	|	VoC_lw16i(RL6_LO,0x28)(hi)
0x18050078,	//0x0d26		VoC_lw16i_set_inc(REG1,0x61c,0x1)(lo)	|	VoC_lw16i(RL6_HI,0x78)(hi)
0x1586061C,	//0x0d28		VoC_sw32_d(RL6,0x60c)(lo)	|	VoC_lw16i_set_inc(REG1,0x61c,0x1)(hi)
0x1586060C,	//0x0d2a		VoC_sw32_d(RL6,0x60e)(lo)	|	VoC_sw32_d(RL6,0x60c)(hi)
0x2C69060E,	//0x0d2c		VoC_loop_i(0x1,0x34)(lo)	|	VoC_sw32_d(RL6,0x60e)(hi)
0xF0600D36,	//0x0d2e		VoC_lw16i_short(REG0,0x3,DEFAULT)	|	VoC_loop_i(0x1,0x34)(hi)
		//0x0d2f		CN_paramer_100
0x0DB32B80,	//0x0d30		VoC_jal(CII_pseudonoise_fr)
0x0D2F3187,	//0x0d32		VoC_bez16_r(CN_paramer_100,REG7)
0x3AB343DF,	//0x0d34		VoC_be16_rd(CN_paramer_100,REG7,0xbab3)
		//0x0d36		VoC_endloop1
0xDFA9DC97,	//0x0d36		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x43421584,	//0x0d38		VoC_sw32_d(ACC0,0x4342)
0xFFC0E580,	//0x0d3a		VoC_NAD	|	VoC_return
		//0x0d3c		CII_silence_frame_paramer
0xE2AC714F,	//0x0d3c		VoC_lw16i_short(RL6_LO,0x2a,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0xa,DEFAULT)
0xE27D72AE,	//0x0d3e		VoC_lw16i_short(RL6_HI,0x27,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x15,DEFAULT)
0x06041808,	//0x0d40		VoC_lw16i_set_inc(REG0,0x604,0x2)
0xE09C708D,	//0x0d42		VoC_lw16i_short(RL6_LO,0x9,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x4,DEFAULT)
0xE02F5DC6,	//0x0d44		VoC_lw16i_short(RL7_HI,0x2,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xE03E5DC7,	//0x0d46		VoC_lw16i_short(RL7_LO,0x3,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xE2855DC6,	//0x0d48		VoC_lw16i_short(REG5,0x28,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xE0045DC7,	//0x0d4a		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x060C1807,	//0x0d4c		VoC_lw16i_set_inc(REG3,0x60c,0x1)
0x06141805,	//0x0d4e		VoC_lw16i_set_inc(REG1,0x614,0x1)
0x06101806,	//0x0d50		VoC_lw16i_set_inc(REG2,0x610,0x1)
0x06181804,	//0x0d52		VoC_lw16i_set_inc(REG0,0x618,0x1)
0xE0166886,	//0x0d54		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC94DC84,	//0x0d56		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE0385CA6,	//0x0d58		VoC_lw16i_short(ACC0_LO,0x3,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x0d5a		VoC_endloop0
0xE0395CB5,	//0x0d5a		VoC_lw16i_short(ACC0_HI,0x3,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x6B42F050,	//0x0d5c		VoC_loop_i_short(0x1a,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xDDC4E045,	//0x0d5e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
		//0x0d5f		VoC_endloop0
0x061D1834,	//0x0d60		VoC_lw16i_set_inc(REG0,0x61d,0xd)
0x061F1835,	//0x0d62		VoC_lw16i_set_inc(REG1,0x61f,0xd)
0x06201836,	//0x0d64		VoC_lw16i_set_inc(REG2,0x620,0xd)
0xDC85E883,	//0x0d66		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCA5DC95,	//0x0d68		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x0d69		VoC_endloop0
0x06251834,	//0x0d6a		VoC_lw16i_set_inc(REG0,0x625,0xd)
0x06261835,	//0x0d6c		VoC_lw16i_set_inc(REG1,0x626,0xd)
0xDC85E882,	//0x0d6e		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0d70		VoC_endloop0
0xE580DC95,	//0x0d70		VoC_return	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x0d72		CII_lost_frame_process
0x1808DFE9,	//0x0d72		VoC_lw16i_set_inc(REG0,0x4386,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x18094386,	//0x0d74		VoC_lw16i_set_inc(REG1,0x604,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x4386,0x2)(hi)
0x6CC30604,	//0x0d76		VoC_loop_i_short(0x26,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x604,0x2)(hi)
0xD9C4D9C4,	//0x0d78		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
		//0x0d7a		VoC_endloop0
0xE0165DCC,	//0x0d7a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x433F1407,	//0x0d7c		VoC_lw16_d(REG7,0x433f)
0x1607E0E1,	//0x0d7e		VoC_and16_ri(REG7,0x80)(lo)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0x16010080,	//0x0d80		VoC_and16_ri(REG1,0x1)(lo)	|	VoC_and16_ri(REG7,0x80)(hi)
0x14840001,	//0x0d82		VoC_lw32_d(ACC0,0x4342)(lo)	|	VoC_and16_ri(REG1,0x1)(hi)
0x18064342,	//0x0d84		VoC_lw16i_set_inc(REG2,0x439a,0x1)(lo)	|	VoC_lw32_d(ACC0,0x4342)(hi)
0x350E439A,	//0x0d86		VoC_be16_rr(lost_frame_process_300,REG1,REG6)(lo)	|	VoC_lw16i_set_inc(REG2,0x439a,0x1)(hi)
0x31870D98,	//0x0d88		VoC_bez16_r(lost_frame_process_200,REG7)(lo)	|	VoC_be16_rr(lost_frame_process_300,REG1,REG6)(hi)
0x180A0DAF,	//0x0d8a		VoC_lw16i_set_inc(REG2,0x43de,0x2)(lo)	|	VoC_bez16_r(lost_frame_process_200,REG7)(hi)
0x180B43DE,	//0x0d8c		VoC_lw16i_set_inc(REG3,0x604,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x43de,0x2)(hi)
0x68830604,	//0x0d8e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x604,0x2)(hi)
0xD9D4D9D4,	//0x0d90		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x0d92		VoC_endloop0
0x1484DDDC,	//0x0d92		VoC_lw32_d(ACC0,0x4342)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x18064342,	//0x0d94		VoC_lw16i_set_inc(REG2,0x43ee,0x1)(lo)	|	VoC_lw32_d(ACC0,0x4342)(hi)
0xE5C343EE,	//0x0d96		VoC_jump(lost_frame_process_400)	|	VoC_lw16i_set_inc(REG2,0x43ee,0x1)(hi)
		//0x0d98		lost_frame_process_300
0x433C413E,	//0x0d98		VoC_be16_rd(lost_frame_process_200,REG6,0x433c)
		//0x0d9a		lost_frame_process_400
0x06181805,	//0x0d9a		VoC_lw16i_set_inc(REG1,0x618,0x1)
0x06101807,	//0x0d9c		VoC_lw16i_set_inc(REG3,0x610,0x1)
0x0DAE2C09,	//0x0d9e		VoC_loop_i(0x1,0x4)
0x4866D816,	//0x0da0		VoC_blt16_rd(lost_frame_process_10,REG6,0x8434)(lo)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0x0A860434,	//0x0da2		VoC_lw16i(REG6,0x40)(lo)	|	VoC_blt16_rd(lost_frame_process_10,REG6,0x8434)(hi)
0xF80E0040,	//0x0da4		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i(REG6,0x40)(hi)
		//0x0da5		lost_frame_process_10
0x0DA93246,	//0x0da6		VoC_bnltz16_r(lost_frame_process_100,REG6)
0xF040F006,	//0x0da8		VoC_lw16i_short(REG0,0x2,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0da9		lost_frame_process_100
0xDCA6DC96,	//0x0daa		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x0DB32B80,	//0x0dac		VoC_jal(CII_pseudonoise_fr)
		//0x0dae		VoC_endloop1
0xDFA9DCB7,	//0x0dae		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x0daf		lost_frame_process_200
0x43421584,	//0x0db0		VoC_sw32_d(ACC0,0x4342)
0xF007E580,	//0x0db2		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x0db3		CII_pseudonoise_fr
0xFF25661D,	//0x0db4		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x038429C5,	//0x0db6		VoC_and32_rd(ACC1,0x8384)
0x3345F020,	//0x0db8		VoC_bnez32_r(PSEUDONOISE102,ACC1)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF0000DBC,	//0x0dba		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez32_r(PSEUDONOISE102,ACC1)(hi)
		//0x0dbc		PSEUDONOISE102
0x0A8BFF45,	//0x0dbc		VoC_lw16i(ACC1_HI,0x1000)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x64E51000,	//0x0dbe		VoC_and32_rr(ACC1,ACC0,DEFAULT)	|	VoC_lw16i(ACC1_HI,0x1000)(hi)
0x3305E004,	//0x0dc0		VoC_bez32_r(PSEUDONOISE103,ACC1)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xF0240DC4,	//0x0dc2		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez32_r(PSEUDONOISE103,ACC1)(hi)
		//0x0dc4		PSEUDONOISE103
0xF8FF64A0,	//0x0dc4		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_xor16_rr(REG0,REG4,DEFAULT)
0x29C2FF22,	//0x0dc6		VoC_and32_rd(REG45,0x8384)(lo)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xE4670384,	//0x0dc8		VoC_or16_rr(REG7,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x8384)(hi)
0xE0147A0C,	//0x0dca		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x3184E404,	//0x0dcc		VoC_bez16_r(PSEUDONOISE105,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0x2A440DD1,	//0x0dce		VoC_or32_rd(ACC0,0x8008)(lo)	|	VoC_bez16_r(PSEUDONOISE105,REG4)(hi)
0xFF250008,	//0x0dd0		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_or32_rd(ACC0,0x8008)(hi)
		//0x0dd1		PSEUDONOISE105
		//0x0dd1		VoC_endloop0
0xF023E580,	//0x0dd2		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_return
		//0x0dd3		CII_rx_dtx_fr
0x40801402,	//0x0dd4		VoC_lw16_d(REG2,0x4080)
0x40821401,	//0x0dd6		VoC_lw16_d(REG1,0x4082)
0x0DE031C2,	//0x0dd8		VoC_bnez16_r(RX_DTX102,REG2)
0x3AAE40D1,	//0x0dda		VoC_be16_rd(RX_DTX107,REG1,0xbaae)
0x0DE331C1,	//0x0ddc		VoC_bnez16_r(RX_DTX103,REG1)
0xE5C5F063,	//0x0dde		VoC_jump(RX_DTX107)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
		//0x0de0		RX_DTX102
0x3181F083,	//0x0de0		VoC_bez16_r(RX_DTX107,REG1)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0xF0430DE4,	//0x0de2		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_bez16_r(RX_DTX107,REG1)(hi)
		//0x0de3		RX_DTX103
		//0x0de4		RX_DTX107
0x1407F020,	//0x0de4		VoC_lw16_d(REG7,0x433f)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x6438433F,	//0x0de6		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x433f)(hi)
0x1406F6E5,	//0x0de8		VoC_lw16_d(REG6,0x433c)(lo)	|	VoC_movreg16(REG5,REG7,IN_PARALLEL)
0x3180433C,	//0x0dea		VoC_bez16_r(RX_DTX120,REG0)(lo)	|	VoC_lw16_d(REG6,0x433c)(hi)
0xF0870DFF,	//0x0dec		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_bez16_r(RX_DTX120,REG0)(hi)
0x038440D3,	//0x0dee		VoC_be16_rd(RX_DTX130a,REG3,0x8384)
0x00240A87,	//0x0df0		VoC_lw16i(REG7,0x24)
0x3AAE41E3,	//0x0df2		VoC_be16_rd(RX_DTX130,REG3,0xbaae)
0x4463F027,	//0x0df4		VoC_bne16_rd(RX_DTX110,REG3,0xbab0)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xC1BE3AB0,	//0x0df6		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_bne16_rd(RX_DTX110,REG3,0xbab0)(hi)
		//0x0df8		RX_DTX130a
0xE0A7E5D6,	//0x0df8		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_jump(RX_DTX130)
		//0x0df9		RX_DTX110
0x3AAF4563,	//0x0dfa		VoC_bne16_rd(RX_DTX130,REG3,0xbaaf)
0xE0067027,	//0x0dfc		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xF107E5D0,	//0x0dfe		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_jump(RX_DTX130)
		//0x0dff		RX_DTX120
0x038440F3,	//0x0e00		VoC_be16_rd(RX_DTX130,REG3,0x8384)
0x00280A87,	//0x0e02		VoC_lw16i(REG7,0x28)
0x3AAE40D3,	//0x0e04		VoC_be16_rd(RX_DTX130,REG3,0xbaae)
0x02000A87,	//0x0e06		VoC_lw16i(REG7,0x200)
0x3AB04073,	//0x0e08		VoC_be16_rd(RX_DTX130,REG3,0xbab0)
0x445BE0A7,	//0x0e0a		VoC_bne16_rd(RX_DTX130,REG3,0xbaaf)(lo)	|	VoC_movreg16(REG7,REG5,DEFAULT)
0xF0273AAF,	//0x0e0c		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bne16_rd(RX_DTX130,REG3,0xbaaf)(hi)
		//0x0e0e		RX_DTX130
0x1506F020,	//0x0e0e		VoC_sw16_d(REG6,0x433c)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x1404433C,	//0x0e10		VoC_lw16_d(REG4,0x4341)(lo)	|	VoC_sw16_d(REG6,0x433c)(hi)
0x14024341,	//0x0e12		VoC_lw16_d(REG2,0x4340)(lo)	|	VoC_lw16_d(REG4,0x4341)(hi)
0xE4384340,	//0x0e14		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG2,0x4340)(hi)
0x0E1C3180,	//0x0e16		VoC_bez16_r(RX_DTX140,REG0)
0xE1727004,	//0x0e18		VoC_lw16i_short(REG2,0x17,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x0E4C2B00,	//0x0e1a		VoC_jump_lg(RX_DTX160)
		//0x0e1c		RX_DTX140
0xE438F080,	//0x0e1c		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x0E243180,	//0x0e1e		VoC_bez16_r(RX_DTX141,REG0)
0xF2E2F004,	//0x0e20		VoC_lw16i_short(REG2,0x17,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x433C1504,	//0x0e22		VoC_sw16_d(REG4,0x433c)
		//0x0e24		RX_DTX141
0xE438F100,	//0x0e24		VoC_and16_rr(REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x0E353180,	//0x0e26		VoC_bez16_r(RX_DTX150,REG0)
0x446BF004,	//0x0e28		VoC_bne16_rd(RX_DTX142,REG3,0x8384)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0020384,	//0x0e2a		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_bne16_rd(RX_DTX142,REG3,0x8384)(hi)
0xFFC0E5C9,	//0x0e2c		VoC_NAD	|	VoC_jump(RX_DTX150)
		//0x0e2e		RX_DTX142
0x3AAE447B,	//0x0e2e		VoC_bne16_rd(RX_DTX150,REG3,0xbaae)
0x348AF2E1,	//0x0e30		VoC_bngt16_rr(RX_DTX150,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x17,DEFAULT)
0x07520E35,	//0x0e32		VoC_add16_rd(REG2,REG2,0x8384)(lo)	|	VoC_bngt16_rr(RX_DTX150,REG1,REG2)(hi)
0xE0E00384,	//0x0e34		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x8384)(hi)
		//0x0e35		RX_DTX150
0x02001600,	//0x0e36		VoC_and16_ri(REG0,0x200)
0x0E4C3180,	//0x0e38		VoC_bez16_r(RX_DTX160,REG0)
0x348AF2E1,	//0x0e3a		VoC_bngt16_rr(RX_DTX151,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x17,DEFAULT)
0x07520E3F,	//0x0e3c		VoC_add16_rd(REG2,REG2,0x8384)(lo)	|	VoC_bngt16_rr(RX_DTX151,REG1,REG2)(hi)
0xF0210384,	//0x0e3e		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x8384)(hi)
		//0x0e3f		RX_DTX151
0x40834431,	//0x0e40		VoC_bne16_rd(RX_DTX152,REG1,0x4083)
0x00101687,	//0x0e42		VoC_or16_ri(REG7,0x10)
0xE5C3C10C,	//0x0e44		VoC_jump(RX_DTX153)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
		//0x0e46		RX_DTX152
0x00401687,	//0x0e46		VoC_or16_ri(REG7,0x40)
		//0x0e48		RX_DTX153
0x0E4C34A1,	//0x0e48		VoC_bngt16_rr(RX_DTX160,REG4,REG1)
0x00801687,	//0x0e4a		VoC_or16_ri(REG7,0x80)
		//0x0e4c		RX_DTX160
0x43411504,	//0x0e4c		VoC_sw16_d(REG4,0x4341)
0x43401502,	//0x0e4e		VoC_sw16_d(REG2,0x4340)
0x1402F021,	//0x0e50		VoC_lw16_d(REG2,0x433e)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x6439433E,	//0x0e52		VoC_and16_rr(REG1,REG7,DEFAULT)	|	VoC_lw16_d(REG2,0x433e)(hi)
0x1404C08A,	//0x0e54		VoC_lw16_d(REG4,0x433d)(lo)	|	VoC_add16_rr(REG2,REG2,REG1,IN_PARALLEL)
0x3181433D,	//0x0e56		VoC_bez16_r(RX_DTX161,REG1)(lo)	|	VoC_lw16_d(REG4,0x433d)(hi)
0xF0840E5C,	//0x0e58		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_bez16_r(RX_DTX161,REG1)(hi)
0xFFC0E5D6,	//0x0e5a		VoC_NAD	|	VoC_jump(RX_DTX170)
		//0x0e5c		RX_DTX161
0x3DD83CF2,	//0x0e5c		VoC_bngt16_rd(RX_DTX162,REG2,0xbdd8)
0x00021687,	//0x0e5e		VoC_or16_ri(REG7,0x2)
0x69580A80,	//0x0e60		VoC_lw16i(REG0,0x6958)
0x70810A81,	//0x0e62		VoC_lw16i(REG1,0x7081)
0xE0047002,	//0x0e64		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x43421580,	//0x0e66		VoC_sw32_d(REG01,0x4342)
0xFFC0E5C8,	//0x0e68		VoC_NAD	|	VoC_jump(RX_DTX170)
		//0x0e6a		RX_DTX162
0x0E6E31C4,	//0x0e6a		VoC_bnez16_r(RX_DTX163,REG4)
0xE5C3F002,	//0x0e6c		VoC_jump(RX_DTX170)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x0e6e		RX_DTX163
0x038407E4,	//0x0e6e		VoC_sub16_rd(REG4,REG4,0x8384)
		//0x0e70		RX_DTX170
0x433E1502,	//0x0e70		VoC_sw16_d(REG2,0x433e)
0x433D1504,	//0x0e72		VoC_sw16_d(REG4,0x433d)
0x433F1507,	//0x0e74		VoC_sw16_d(REG7,0x433f)
0xFFC0E580,	//0x0e76		VoC_NAD	|	VoC_return
		//0x0e78		CII_decoder_homing_frame_test
0x06041806,	//0x0e78		VoC_lw16i_set_inc(REG2,0x604,0x1)
0x07021804,	//0x0e7a		VoC_lw16i_set_inc(REG0,0x702,0x1)
0xD8A16906,	//0x0e7c		VoC_lw16inc_p(REG1,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xE499D883,	//0x0e7e		VoC_xor16_rr(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0x0EA131C1,	//0x0e80		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x0e82		VoC_endloop0
0xE885D8A1,	//0x0e82		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0x00281701,	//0x0e84		VoC_xor16_ri(REG1,0x28)
0x0EA131C1,	//0x0e86		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x0e88		VoC_endloop0
0xE985D8A1,	//0x0e88		VoC_loop_i_short(0xc,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0x00001701,	//0x0e8a		VoC_xor16_ri(REG1,0x0)
0x0EA131C1,	//0x0e8c		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x0e8e		VoC_endloop0
0x6D65D8A1,	//0x0e8e		VoC_loop_i_short(0x2b,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0xE4A9E045,	//0x0e90		VoC_xor16_rr(REG1,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x0EA131C1,	//0x0e92		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x0e94		VoC_endloop0
0x1701D8A1,	//0x0e94		VoC_xor16_ri(REG1,0x3)(lo)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0x31C10003,	//0x0e96		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)(lo)	|	VoC_xor16_ri(REG1,0x3)(hi)
0x69050EA1,	//0x0e98		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_bnez16_r(DEC_HOMING_LABLE,REG1)(hi)
0xE4A9D8A1,	//0x0e9a		VoC_xor16_rr(REG1,REG5,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,IN_PARALLEL)
0x0EA131C1,	//0x0e9c		VoC_bnez16_r(DEC_HOMING_LABLE,REG1)
		//0x0e9e		VoC_endloop0
0xF021D8A1,	//0x0e9e		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0xF001E580,	//0x0ea0		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_return
		//0x0ea1		DEC_HOMING_LABLE
0xF025E580,	//0x0ea2		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_return
		//0x0ea3		CII_bits2prm_fr
0x00001808,	//0x0ea4		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x3AB40740,	//0x0ea6		VoC_add16_rd(REG0,REG0,0xbab4)
0x08881805,	//0x0ea8		VoC_lw16i_set_inc(REG1,0x888,0x1)
0xF3FE59C3,	//0x0eaa		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x0EB42C11,	//0x0eac		VoC_loop_i(0x1,0x8)
0xF6C46C05,	//0x0eae		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x20,DEFAULT)
0xFA0B642C,	//0x0eb0		VoC_shr32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0xDC94E0C4,	//0x0eb2		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x0eb3		VoC_endloop0
		//0x0eb4		VoC_endloop1
0xFFC0D9C3,	//0x0eb4		VoC_NAD	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF6C46905,	//0x0eb6		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xFA0B642C,	//0x0eb8		VoC_shr32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0xDC94E0C4,	//0x0eba		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x0ebb		VoC_endloop0
0x06041804,	//0x0ebc		VoC_lw16i_set_inc(REG0,0x604,0x1)
0x08881805,	//0x0ebe		VoC_lw16i_set_inc(REG1,0x888,0x1)
0x00061FBF,	//0x0ec0		VoC_lw16i_set_inc(REG3,0x6,0xffffffff)
0xFFC0F002,	//0x0ec2		VoC_NAD	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x0ec4		BITS2PRM_L1
0x3AAF48F3,	//0x0ec4		VoC_blt16_rd(BITS2PRM_L2,REG3,0xbaaf)
0x0ECF2C05,	//0x0ec6		VoC_loop_i(0x1,0x2)
0xE00466C4,	//0x0ec8		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG3,DEFAULT)
0xFE15D895,	//0x0eca		VoC_shr16_rr(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x0ecc		VoC_endloop0
0xDE10646C,	//0x0ecc		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xDC84F002,	//0x0ece		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x0ecf		VoC_endloop1
0xE5F3DE18,	//0x0ed0		VoC_jump(BITS2PRM_L1)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0ed2		BITS2PRM_L2
0x061C1804,	//0x0ed2		VoC_lw16i_set_inc(REG0,0x61c,0x1)
0x060C0A86,	//0x0ed4		VoC_lw16i(REG6,0x60c)
0x06140A87,	//0x0ed6		VoC_lw16i(REG7,0x614)
0x06100A84,	//0x0ed8		VoC_lw16i(REG4,0x610)
0x06180A85,	//0x0eda		VoC_lw16i(REG5,0x618)
0xFF1F7F16,	//0x0edc		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0xFFC0F003,	//0x0ede		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x0F152C09,	//0x0ee0		VoC_loop_i(0x1,0x4)
0xE00268E4,	//0x0ee2		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0xFE15D895,	//0x0ee4		VoC_shr16_rr(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x0ee6		VoC_endloop0
0xDE10646B,	//0x0ee6		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_or16_rr(REG3,REG5,DEFAULT)
0xFF327002,	//0x0ee8		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x6844DC63,	//0x0eea		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_sw16_p(REG3,REG6,DEFAULT)
0xD896E003,	//0x0eec		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x6473FE16,	//0x0eee		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
		//0x0eef		VoC_endloop0
0x097FDE10,	//0x0ef0		VoC_add32_rd(RL7,RL7,0xbaac)(lo)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x5C733AAC,	//0x0ef2		VoC_sw16_p(REG3,REG7,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0xbaac)(hi)
0x6844E002,	//0x0ef4		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xD896E003,	//0x0ef6		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x6473FE16,	//0x0ef8		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
		//0x0ef9		VoC_endloop0
0xF002DE10,	//0x0efa		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x68C4DCC3,	//0x0efc		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_sw16inc_p(REG3,REG4,DEFAULT)
0xD896E003,	//0x0efe		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x6473FE16,	//0x0f00		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
		//0x0f01		VoC_endloop0
0x0976DE10,	//0x0f02		VoC_add32_rd(RL6,RL6,0xbaac)(lo)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x5C533AAC,	//0x0f04		VoC_sw16_p(REG3,REG5,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0xbaac)(hi)
0x69ADEFF2,	//0x0f06		VoC_loop_i_short(0xd,DEFAULT)	|	VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)
0xD896E003,	//0x0f08		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xD896E473,	//0x0f0a		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_or16_rr(REG3,REG6,DEFAULT)
0x6473FE16,	//0x0f0c		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
0xD896DE10,	//0x0f0e		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x6473FE16,	//0x0f10		VoC_or16_rr(REG3,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
0xF003EFF2,	//0x0f12		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)
		//0x0f14		VoC_endloop0
0xFF3BDC83,	//0x0f14		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
		//0x0f15		VoC_endloop1
0xDFE9E580,	//0x0f16		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f17		CII_Gsm_Decoder
0x42FF2004,	//0x0f18		VoC_lw16d_set_inc(REG0,0x42ff,0x1)
0x07661805,	//0x0f1a		VoC_lw16i_set_inc(REG1,0x766,0x1)
0x061C1806,	//0x0f1c		VoC_lw16i_set_inc(REG2,0x61c,0x1)
0xDFC0DFC7,	//0x0f1e		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xDFC2DFC1,	//0x0f20		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x05381804,	//0x0f22		VoC_lw16i_set_inc(REG0,0x538,0x1)
0x08061805,	//0x0f24		VoC_lw16i_set_inc(REG1,0x806,0x1)
0x060C1806,	//0x0f26		VoC_lw16i_set_inc(REG2,0x60c,0x1)
0xDFC1DFC0,	//0x0f28		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x1804DFC2,	//0x0f2a		VoC_lw16i_set_inc(REG0,0x614,0x1)(lo)	|	VoC_push16(REG2,DEFAULT)
0x18050614,	//0x0f2c		VoC_lw16i_set_inc(REG1,0x618,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x614,0x1)(hi)
0x18060618,	//0x0f2e		VoC_lw16i_set_inc(REG2,0x610,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x618,0x1)(hi)
0xDFC00610,	//0x0f30		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x610,0x1)(hi)
0x5FC2DFC1,	//0x0f32		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFFC0EFF7,	//0x0f34		VoC_NAD	|	VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)
		//0x0f36		Gsm_Decoder_Loop_start
0x0384077F,	//0x0f36		VoC_add16_rd(REG7,REG7,0x8384)
0x3AAF3C67,	//0x0f38		VoC_bngt16_rd(Gsm_Decoder_Loop_start2,REG7,0xbaaf)
0x0F622B00,	//0x0f3a		VoC_jump_lg(Gsm_Decoder_Loop_End)
		//0x0f3c		Gsm_Decoder_Loop_start2
0xF0057030,	//0x0f3c		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xFFC0DAA7,	//0x0f3e		VoC_NAD	|	VoC_sw16_sd(REG7,0x9,DEFAULT)
0x08672B80,	//0x0f40		VoC_jal(CII_Gsm_RPE_Decoding)
0x0F822B80,	//0x0f42		VoC_jal(CII_Gsm_Long_Term_Synthesis_Filtering)
0xD620D674,	//0x0f44		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0x5642D631,	//0x0f46		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x5613E0D5,	//0x0f48		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0xd,IN_PARALLEL)
0x0940C12C,	//0x0f4a		VoC_add32_rd(REG01,REG01,0xbaac)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)
0x09493AAC,	//0x0f4c		VoC_add32_rd(REG23,REG23,0xbaac)(lo)	|	VoC_add32_rd(REG01,REG01,0xbaac)(hi)
0xDA743AAC,	//0x0f4e		VoC_sw16_sd(REG4,0x6,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0xbaac)(hi)
0xF0095A20,	//0x0f50		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_sw16_sd(REG0,0x1,DEFAULT)
0xF0085A31,	//0x0f52		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sw16_sd(REG1,0x2,DEFAULT)
0xE0A65A42,	//0x0f54		VoC_lw16i_short(REG6,0xa,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x3,DEFAULT)
0x56A7DA13,	//0x0f56		VoC_lw16_sd(REG7,0x9,DEFAULT)	|	VoC_sw16_sd(REG3,0x0,DEFAULT)
0xC57DE285,	//0x0f58		VoC_mult16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x28,IN_PARALLEL)
0x5660D681,	//0x0f5a		VoC_lw16_sd(REG0,0x5,DEFAULT)	|	VoC_lw16_sd(REG1,0x7,DEFAULT)
0xFFC0C069,	//0x0f5c		VoC_NAD	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x08E62B80,	//0x0f5e		VoC_jal(CII_copy)
0x0F362B00,	//0x0f60		VoC_jump_lg(Gsm_Decoder_Loop_start)
		//0x0f62		Gsm_Decoder_Loop_End
0x06041804,	//0x0f62		VoC_lw16i_set_inc(REG0,0x604,0x1)
0xDF84E8C1,	//0x0f64		VoC_pop16(REG4,DEFAULT)	|	VoC_loop_i_short(0x6,DEFAULT)
		//0x0f65		VoC_endloop0
0x2B80DA10,	//0x0f66		VoC_jal(CII_Gsm_Short_Term_Synthesis_Filter)(lo)	|	VoC_sw16_sd(REG0,0x0,DEFAULT)
0xDF800FAE,	//0x0f68		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_Gsm_Short_Term_Synthesis_Filter)(hi)
0x5F81DF87,	//0x0f6a		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x5F86F004,	//0x0f6c		VoC_pop16(REG6,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x5FA9F005,	//0x0f6e		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x1405D90D,	//0x0f70		VoC_lw16_d(REG5,0x601)(lo)	|	VoC_lw32_sd(ACC1,0x0,IN_PARALLEL)
0x0A840601,	//0x0f72		VoC_lw16i(REG4,0x6e14)(lo)	|	VoC_lw16_d(REG5,0x601)(hi)
0xCD636E14,	//0x0f74		VoC_multf32_rr(REG67,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x6e14)(hi)
0x0F7E2D41,	//0x0f76		VoC_loop_i(0x1,0xa0)
0x81CDC8EB,	//0x0f78		VoC_add16_rp(REG5,REG7,REG1,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
0x2843C16B,	//0x0f7a		VoC_and16_rd(REG3,0x851e)(lo)	|	VoC_add16_rr(REG3,REG5,REG5,DEFAULT)
0xCD63051E,	//0x0f7c		VoC_multf32_rr(REG67,REG5,REG4,DEFAULT)	|	VoC_and16_rd(REG3,0x851e)(hi)
		//0x0f7e		VoC_endloop1
0x1505DC93,	//0x0f7e		VoC_sw16_d(REG5,0x601)(lo)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xE5800601,	//0x0f80		VoC_return	|	VoC_sw16_d(REG5,0x601)(hi)
		//0x0f82		CII_Gsm_Long_Term_Synthesis_Filtering
0x1407D646,	//0x0f82		VoC_lw16_d(REG7,0x5f7)(lo)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0xD86605F7,	//0x0f84		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16_d(REG7,0x5f7)(hi)
0x486ED90D,	//0x0f86		VoC_blt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0xbd92)(lo)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0x385E3D92,	//0x0f88		VoC_bgt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0x886e)(lo)	|	VoC_blt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0xbd92)(hi)
0xE0C7086E,	//0x0f8a		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_bgt16_rd(Gsm_Long_Term_Syn_Filt_L1,REG6,0x886e)(hi)
		//0x0f8c		Gsm_Long_Term_Syn_Filt_L1
0x0A85D634,	//0x0f8c		VoC_lw16i(REG5,0x6ee)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xD84406EE,	//0x0f8e		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x6ee)(hi)
0x05F71507,	//0x0f90		VoC_sw16_d(REG7,0x5f7)
0x3AAF3864,	//0x0f92		VoC_bgt16_rd(Gsm_Long_Term_Syn_Filt_LAB1,REG4,0xbaaf)
0xFFC0C165,	//0x0f94		VoC_NAD	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
		//0x0f96		Gsm_Long_Term_Syn_Filt_LAB1
0xF0065660,	//0x0f96		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0xD6524239,	//0x0f98		VoC_lw16_sd(REG2,0x4,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG7,DEFAULT)
0xF6035855,	//0x0f9a		VoC_movreg16(REG3,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xED049B4B,	//0x0f9c		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG5,REG1,DEFAULT)
0x83D4C8EB,	//0x0f9e		VoC_add16inc_rp(REG4,REG7,REG2,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC1,DEFAULT)
0xDC849B4B,	//0x0fa0		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG5,REG1,DEFAULT)
		//0x0fa1		VoC_endloop0
0xF00B7052,	//0x0fa2		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x086E07DA,	//0x0fa4		VoC_sub16_rd(REG2,REG3,0x886e)
0x05F207DB,	//0x0fa6		VoC_sub16_rd(REG3,REG3,0x85f2)
0xD9DCEBC4,	//0x0fa8		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_i_short(0x1e,DEFAULT)
0xDDD4D9DD,	//0x0faa		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG3,DEFAULT)
		//0x0fac		VoC_endloop0
0xE580DDD5,	//0x0fac		VoC_return	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0fae		CII_Gsm_Short_Term_Synthesis_Filter
0xE0165FE9,	//0x0fae		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x05E61805,	//0x0fb0		VoC_lw16i_set_inc(REG1,0x5e6,0x1)
0x05F61405,	//0x0fb2		VoC_lw16_d(REG5,0x5f6)
0xE08764AE,	//0x0fb4		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG5,DEFAULT)
0xC5ED45F4,	//0x0fb6		VoC_mult16_rr(REG5,REG7,REG5,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG7,REG6,DEFAULT)
0x05F61506,	//0x0fb8		VoC_sw16_d(REG6,0x5f6)
0xC0694062,	//0x0fba		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0xDFC1D620,	//0x0fbc		VoC_push16(REG1,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xF0045FC2,	//0x0fbe		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x063B2B80,	//0x0fc0		VoC_jal(CII_Decoding_of_the_coded_Log_Area_Ratios)
0x448A1804,	//0x0fc2		VoC_lw16i_set_inc(REG0,0x448a,0x1)
0x433F1402,	//0x0fc4		VoC_lw16_d(REG2,0x433f)
0x1602DFC0,	//0x0fc6		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_push16(REG0,DEFAULT)
0x31820001,	//0x0fc8		VoC_bez16_r(CII_Gsm_Short_Term_Synthesis_Filter_100,REG2)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0xFFC00FFC,	//0x0fca		VoC_NAD	|	VoC_bez16_r(CII_Gsm_Short_Term_Synthesis_Filter_100,REG2)(hi)
0x066F2B80,	//0x0fcc		VoC_jal(CII_Coefficients_0_12)
0x06A92B80,	//0x0fce		VoC_jal(CII_LARp_to_rp)
0x5673D662,	//0x0fd0		VoC_lw16_sd(REG3,0x6,DEFAULT)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xFFC0E0D7,	//0x0fd2		VoC_NAD	|	VoC_lw16i_short(REG7,0xd,IN_PARALLEL)
0x072D2B80,	//0x0fd4		VoC_jal(CII_Short_term_synthesis_filtering)
0x06802B80,	//0x0fd6		VoC_jal(CII_Coefficients_13_26)
0x06A92B80,	//0x0fd8		VoC_jal(CII_LARp_to_rp)
0xE0D65662,	//0x0fda		VoC_lw16i_short(REG6,0xd,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xC0B25673,	//0x0fdc		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0xE0E740F3,	//0x0fde		VoC_lw16i_short(REG7,0xe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x072D2B80,	//0x0fe0		VoC_jal(CII_Short_term_synthesis_filtering)
0x068E2B80,	//0x0fe2		VoC_jal(CII_Coefficients_27_39)
0x06A92B80,	//0x0fe4		VoC_jal(CII_LARp_to_rp)
0xE1B65662,	//0x0fe6		VoC_lw16i_short(REG6,0x1b,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xC0B25673,	//0x0fe8		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0xE0D740F3,	//0x0fea		VoC_lw16i_short(REG7,0xd,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x072D2B80,	//0x0fec		VoC_jal(CII_Short_term_synthesis_filtering)
0x06A02B80,	//0x0fee		VoC_jal(CII_Coefficients_40_159)
0x06A92B80,	//0x0ff0		VoC_jal(CII_LARp_to_rp)
0xE2865662,	//0x0ff2		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0xC0B25673,	//0x0ff4		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0x0A87C0F3,	//0x0ff6		VoC_lw16i(REG7,0x78)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x2B800078,	//0x0ff8		VoC_jal(CII_Short_term_synthesis_filtering)(lo)	|	VoC_lw16i(REG7,0x78)(hi)
0xE5CB072D,	//0x0ffa		VoC_jump(CII_Gsm_Short_Term_Synthesis_Filter_100_end)	|	VoC_jal(CII_Short_term_synthesis_filtering)(hi)
		//0x0ffc		CII_Gsm_Short_Term_Synthesis_Filter_100
0x06A02B80,	//0x0ffc		VoC_jal(CII_Coefficients_40_159)
0x06A92B80,	//0x0ffe		VoC_jal(CII_LARp_to_rp)
0xD673D662,	//0x1000		VoC_lw16_sd(REG3,0x6,DEFAULT)	|	VoC_lw16_sd(REG2,0x5,DEFAULT)
0x00A00A87,	//0x1002		VoC_lw16i(REG7,0xa0)
0x072D2B80,	//0x1004		VoC_jal(CII_Short_term_synthesis_filtering)
		//0x1006		CII_Gsm_Short_Term_Synthesis_Filter_100_end
0xDF84DF84,	//0x1006		VoC_pop16(REG4,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xDFA9DF84,	//0x1008		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xE580FFC0,	//0x100a		VoC_return	|	VoC_NOP
		//0x100c		reset_fr_table
0x199A0A86,	//0x100c		VoC_lw16i(REG6,0x199a)
0x40000A87,	//0x100e		VoC_lw16i(REG7,0x4000)
0x06EA1808,	//0x1010		VoC_lw16i_set_inc(REG0,0x6ea,0x2)
0x66660A88,	//0x1012		VoC_lw16i(ACC0_LO,0x6666)
0x7FFF0A89,	//0x1014		VoC_lw16i(ACC0_HI,0x7fff)
0xDDC4DDC3,	//0x1016		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x0CCD0A86,	//0x1018		VoC_lw16i(REG6,0xccd)
0x2CCD0A87,	//0x101a		VoC_lw16i(REG7,0x2ccd)
0x53330A88,	//0x101c		VoC_lw16i(ACC0_LO,0x5333)
0x7FFF0A89,	//0x101e		VoC_lw16i(ACC0_HI,0x7fff)
0xDDC4DDC3,	//0x1020		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x71C80A86,	//0x1022		VoC_lw16i(REG6,0x71c8)
0x66670A87,	//0x1024		VoC_lw16i(REG7,0x6667)
0x5D180A88,	//0x1026		VoC_lw16i(ACC0_LO,0x5d18)
0x55560A89,	//0x1028		VoC_lw16i(ACC0_HI,0x5556)
0xDDC4DDC3,	//0x102a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x4EC50A86,	//0x102c		VoC_lw16i(REG6,0x4ec5)
0x49250A87,	//0x102e		VoC_lw16i(REG7,0x4925)
0x44440A88,	//0x1030		VoC_lw16i(ACC0_LO,0x4444)
0x40000A89,	//0x1032		VoC_lw16i(ACC0_HI,0x4000)
0xDDC4DDC3,	//0x1034		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x47FF0A86,	//0x1036		VoC_lw16i(REG6,0x47ff)
0x4FFF0A87,	//0x1038		VoC_lw16i(REG7,0x4fff)
0x57FF0A88,	//0x103a		VoC_lw16i(ACC0_LO,0x57ff)
0x5FFF0A89,	//0x103c		VoC_lw16i(ACC0_HI,0x5fff)
0xDDC4DDC3,	//0x103e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x67FF0A86,	//0x1040		VoC_lw16i(REG6,0x67ff)
0x6FFF0A87,	//0x1042		VoC_lw16i(REG7,0x6fff)
0x77FF0A88,	//0x1044		VoC_lw16i(ACC0_LO,0x77ff)
0x7FFF0A89,	//0x1046		VoC_lw16i(ACC0_HI,0x7fff)
0xDDC4DDC3,	//0x1048		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00090A86,	//0x104a		VoC_lw16i(REG6,0x9)
0x00170A87,	//0x104c		VoC_lw16i(REG7,0x17)
0x000F0A88,	//0x104e		VoC_lw16i(ACC0_LO,0xf)
0x00080A89,	//0x1050		VoC_lw16i(ACC0_HI,0x8)
0xDDC4DDC3,	//0x1052		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00070A86,	//0x1054		VoC_lw16i(REG6,0x7)
0x00030A87,	//0x1056		VoC_lw16i(REG7,0x3)
0x00030A88,	//0x1058		VoC_lw16i(ACC0_LO,0x3)
0x00020A89,	//0x105a		VoC_lw16i(ACC0_HI,0x2)
0xDDC4DDC3,	//0x105c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x7F7A0AC6,	//0x105e		VoC_lw16i(REG6,0xffffff7a)
0x7E8A0AC7,	//0x1060		VoC_lw16i(REG7,0xfffffe8a)
0x00000A88,	//0x1062		VoC_lw16i(ACC0_LO,0x0)
0x08060A89,	//0x1064		VoC_lw16i(ACC0_HI,0x806)
0xDDC4DDC3,	//0x1066		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x166D0A86,	//0x1068		VoC_lw16i(REG6,0x166d)
0x20000A87,	//0x106a		VoC_lw16i(REG7,0x2000)
0x166D0A88,	//0x106c		VoC_lw16i(ACC0_LO,0x166d)
0x08060A89,	//0x106e		VoC_lw16i(ACC0_HI,0x806)
0xDDC4DDC3,	//0x1070		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00000A86,	//0x1072		VoC_lw16i(REG6,0x0)
0x7E8A0AC7,	//0x1074		VoC_lw16i(REG7,0xfffffe8a)
0x7F7A0AC8,	//0x1076		VoC_lw16i(ACC0_LO,0xffffff7a)
0x00000A89,	//0x1078		VoC_lw16i(ACC0_HI,0x0)
0xDDC4DDC3,	//0x107a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00000A86,	//0x107c		VoC_lw16i(REG6,0x0)
0x000C0A87,	//0x107e		VoC_lw16i(REG7,0xc)
0x00330A88,	//0x1080		VoC_lw16i(ACC0_LO,0x33)
0x00720A89,	//0x1082		VoC_lw16i(ACC0_HI,0x72)
0xDDC4DDC3,	//0x1084		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x00CC0A86,	//0x1086		VoC_lw16i(REG6,0xcc)
0x013E0A87,	//0x1088		VoC_lw16i(REG7,0x13e)
0x01CA0A88,	//0x108a		VoC_lw16i(ACC0_LO,0x1ca)
0x026E0A89,	//0x108c		VoC_lw16i(ACC0_HI,0x26e)
0xDDC4DDC3,	//0x108e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x032B0A86,	//0x1090		VoC_lw16i(REG6,0x32b)
0x04010A87,	//0x1092		VoC_lw16i(REG7,0x401)
0x04EE0A88,	//0x1094		VoC_lw16i(ACC0_LO,0x4ee)
0x05F30A89,	//0x1096		VoC_lw16i(ACC0_HI,0x5f3)
0xDDC4DDC3,	//0x1098		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x070F0A86,	//0x109a		VoC_lw16i(REG6,0x70f)
0x08420A87,	//0x109c		VoC_lw16i(REG7,0x842)
0x098C0A88,	//0x109e		VoC_lw16i(ACC0_LO,0x98c)
0x0AEB0A89,	//0x10a0		VoC_lw16i(ACC0_HI,0xaeb)
0xDDC4DDC3,	//0x10a2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x0C5F0A86,	//0x10a4		VoC_lw16i(REG6,0xc5f)
0x0DE80A87,	//0x10a6		VoC_lw16i(REG7,0xde8)
0x0F840A88,	//0x10a8		VoC_lw16i(ACC0_LO,0xf84)
0x11350A89,	//0x10aa		VoC_lw16i(ACC0_HI,0x1135)
0xDDC4DDC3,	//0x10ac		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x12F80A86,	//0x10ae		VoC_lw16i(REG6,0x12f8)
0x14CD0A87,	//0x10b0		VoC_lw16i(REG7,0x14cd)
0x16B30A88,	//0x10b2		VoC_lw16i(ACC0_LO,0x16b3)
0x18AA0A89,	//0x10b4		VoC_lw16i(ACC0_HI,0x18aa)
0xDDC4DDC3,	//0x10b6		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x1AB00A86,	//0x10b8		VoC_lw16i(REG6,0x1ab0)
0x1CC50A87,	//0x10ba		VoC_lw16i(REG7,0x1cc5)
0x1EE90A88,	//0x10bc		VoC_lw16i(ACC0_LO,0x1ee9)
0x21190A89,	//0x10be		VoC_lw16i(ACC0_HI,0x2119)
0xDDC4DDC3,	//0x10c0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x23560A86,	//0x10c2		VoC_lw16i(REG6,0x2356)
0x259F0A87,	//0x10c4		VoC_lw16i(REG7,0x259f)
0x27F20A88,	//0x10c6		VoC_lw16i(ACC0_LO,0x27f2)
0x2A4F0A89,	//0x10c8		VoC_lw16i(ACC0_HI,0x2a4f)
0xDDC4DDC3,	//0x10ca		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x2CB40A86,	//0x10cc		VoC_lw16i(REG6,0x2cb4)
0x2F210A87,	//0x10ce		VoC_lw16i(REG7,0x2f21)
0x31950A88,	//0x10d0		VoC_lw16i(ACC0_LO,0x3195)
0x340E0A89,	//0x10d2		VoC_lw16i(ACC0_HI,0x340e)
0xDDC4DDC3,	//0x10d4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x368C0A86,	//0x10d6		VoC_lw16i(REG6,0x368c)
0x390F0A87,	//0x10d8		VoC_lw16i(REG7,0x390f)
0x3B930A88,	//0x10da		VoC_lw16i(ACC0_LO,0x3b93)
0x3E1A0A89,	//0x10dc		VoC_lw16i(ACC0_HI,0x3e1a)
0xDDC4DDC3,	//0x10de		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x40A10A86,	//0x10e0		VoC_lw16i(REG6,0x40a1)
0x43280A87,	//0x10e2		VoC_lw16i(REG7,0x4328)
0x45AE0A88,	//0x10e4		VoC_lw16i(ACC0_LO,0x45ae)
0x48320A89,	//0x10e6		VoC_lw16i(ACC0_HI,0x4832)
0xDDC4DDC3,	//0x10e8		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x4AB20A86,	//0x10ea		VoC_lw16i(REG6,0x4ab2)
0x4D2E0A87,	//0x10ec		VoC_lw16i(REG7,0x4d2e)
0x4FA50A88,	//0x10ee		VoC_lw16i(ACC0_LO,0x4fa5)
0x52160A89,	//0x10f0		VoC_lw16i(ACC0_HI,0x5216)
0xDDC4DDC3,	//0x10f2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x547F0A86,	//0x10f4		VoC_lw16i(REG6,0x547f)
0x56E00A87,	//0x10f6		VoC_lw16i(REG7,0x56e0)
0x59380A88,	//0x10f8		VoC_lw16i(ACC0_LO,0x5938)
0x5B860A89,	//0x10fa		VoC_lw16i(ACC0_HI,0x5b86)
0xDDC4DDC3,	//0x10fc		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x5DC90A86,	//0x10fe		VoC_lw16i(REG6,0x5dc9)
0x5FFF0A87,	//0x1100		VoC_lw16i(REG7,0x5fff)
0x622A0A88,	//0x1102		VoC_lw16i(ACC0_LO,0x622a)
0x64460A89,	//0x1104		VoC_lw16i(ACC0_HI,0x6446)
0xDDC4DDC3,	//0x1106		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x66540A86,	//0x1108		VoC_lw16i(REG6,0x6654)
0x68530A87,	//0x110a		VoC_lw16i(REG7,0x6853)
0x6A410A88,	//0x110c		VoC_lw16i(ACC0_LO,0x6a41)
0x6C1F0A89,	//0x110e		VoC_lw16i(ACC0_HI,0x6c1f)
0xDDC4DDC3,	//0x1110		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x6DEB0A86,	//0x1112		VoC_lw16i(REG6,0x6deb)
0x6FA50A87,	//0x1114		VoC_lw16i(REG7,0x6fa5)
0x714B0A88,	//0x1116		VoC_lw16i(ACC0_LO,0x714b)
0x72DE0A89,	//0x1118		VoC_lw16i(ACC0_HI,0x72de)
0xDDC4DDC3,	//0x111a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x745D0A86,	//0x111c		VoC_lw16i(REG6,0x745d)
0x75C70A87,	//0x111e		VoC_lw16i(REG7,0x75c7)
0x771B0A88,	//0x1120		VoC_lw16i(ACC0_LO,0x771b)
0x78590A89,	//0x1122		VoC_lw16i(ACC0_HI,0x7859)
0xDDC4DDC3,	//0x1124		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x79810A86,	//0x1126		VoC_lw16i(REG6,0x7981)
0x7A910A87,	//0x1128		VoC_lw16i(REG7,0x7a91)
0x7B8A0A88,	//0x112a		VoC_lw16i(ACC0_LO,0x7b8a)
0x7C6C0A89,	//0x112c		VoC_lw16i(ACC0_HI,0x7c6c)
0xDDC4DDC3,	//0x112e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x7D350A86,	//0x1130		VoC_lw16i(REG6,0x7d35)
0x7DE60A87,	//0x1132		VoC_lw16i(REG7,0x7de6)
0x7E7E0A88,	//0x1134		VoC_lw16i(ACC0_LO,0x7e7e)
0x7EFD0A89,	//0x1136		VoC_lw16i(ACC0_HI,0x7efd)
0xDDC4DDC3,	//0x1138		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x7F630A86,	//0x113a		VoC_lw16i(REG6,0x7f63)
0x7FB00A87,	//0x113c		VoC_lw16i(REG7,0x7fb0)
0x7FE30A88,	//0x113e		VoC_lw16i(ACC0_LO,0x7fe3)
0x7FFC0A89,	//0x1140		VoC_lw16i(ACC0_HI,0x7ffc)
0xDDC4DDC3,	//0x1142		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xFFC0E580,	//0x1144		VoC_NAD	|	VoC_return
		//0x1146		CII_extra_bfi_filter
0xE2847026,	//0x1146		VoC_lw16i_short(REG4,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x00780A85,	//0x1148		VoC_lw16i(REG5,0x78)
0x060C1805,	//0x114a		VoC_lw16i_set_inc(REG1,0x60c,0x1)
0x40826E0D,	//0x114c		VoC_bnez16_d(bfi_filter_exit,0x4082)
0xD897E88A,	//0x114e		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x11563427,	//0x1150		VoC_bgt16_rr(update_bfi,REG4,REG7)
0x1156343D,	//0x1152		VoC_bgt16_rr(update_bfi,REG7,REG5)
0xFFC0E5C4,	//0x1154		VoC_NAD	|	VoC_jump(no_update_bfi)
		//0x1156		update_bfi
0x40801506,	//0x1156		VoC_sw16_d(REG6,0x4080)
		//0x1158		no_update_bfi
		//0x1158		VoC_endloop0
0xE580FFC0,	//0x1158		VoC_return	|	VoC_NOP
		//0x1159		bfi_filter_exit
