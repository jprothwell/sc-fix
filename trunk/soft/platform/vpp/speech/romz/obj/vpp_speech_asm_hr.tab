		//0x0298		VoC_code_section_1
		//0x0298		CII_HR_Encode
0x3182DFE9,	//0x0298		VoC_bez16_r(Encoder_101,REG2)(lo)	|	VoC_push16(RA,DEFAULT)
0x2B80029D,	//0x029a		VoC_jal(CII_resetHREnc)(lo)	|	VoC_bez16_r(Encoder_101,REG2)(hi)
0xF7061368,	//0x029c		VoC_lw16i_short(REG6,0xfff8,DEFAULT)	|	VoC_jal(CII_resetHREnc)(hi)
		//0x029d		Encoder_101
0x056C1809,	//0x029e		VoC_lw16i_set_inc(REG1,0x56c,0x2)
0x2008E0C7,	//0x02a0		VoC_lw16d_set_inc(REG0,0x42fe,0x2)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x2CA042FE,	//0x02a2		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16d_set_inc(REG0,0x42fe,0x2)(hi)
0xD9C602A8,	//0x02a4		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0xFFC0E4DE,	//0x02a6		VoC_NOP	|	VoC_and32_rr(RL6,REG67,DEFAULT)
		//0x02a8		VoC_endloop0
0x1808DDCE,	//0x02a8		VoC_lw16i_set_inc(REG0,0x56c,0x2)(lo)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0x2B80056C,	//0x02aa		VoC_jal(CII_encoder_homing_frame_test)(lo)	|	VoC_lw16i_set_inc(REG0,0x56c,0x2)(hi)
0xDFC401CE,	//0x02ac		VoC_push16(REG4,DEFAULT)	|	VoC_jal(CII_encoder_homing_frame_test)(hi)
0x03332B80,	//0x02ae		VoC_jal(CII_speechEncoder)
0x3180DF80,	//0x02b0		VoC_bez16_r(Encoder_homing,REG0)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xFFC002B6,	//0x02b2		VoC_NAD	|	VoC_bez16_r(Encoder_homing,REG0)(hi)
0x13682B80,	//0x02b4		VoC_jal(CII_resetHREnc)
		//0x02b6		Encoder_homing
0x3ABA1844,	//0x02b6		VoC_lw16i_set_inc(REG0,0xbaba,0x1)
0x055D6C04,	//0x02b8		VoC_bez16_d(Prm2bits_MODE0,0x55d)
0x575A1844,	//0x02ba		VoC_lw16i_set_inc(REG0,0xd75a,0x1)
		//0x02bc		Prm2bits_MODE0
0x0C721805,	//0x02bc		VoC_lw16i_set_inc(REG1,0xc72,0x1)
0x05581806,	//0x02be		VoC_lw16i_set_inc(REG2,0x558,0x1)
0x02C92C25,	//0x02c0		VoC_loop_i(0x1,0x12)
0xD8A75886,	//0x02c2		VoC_lw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF025E784,	//0x02c4		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xF80FE43D,	//0x02c6		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
		//0x02c8		VoC_endloop0
0x1FBFDC95,	//0x02c8		VoC_lw16i_set_inc(REG3,0xc81,0xffffffff)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x02c9		VoC_endloop1
0x18050C81,	//0x02ca		VoC_lw16i_set_inc(REG1,0x1a,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0xc81,0xffffffff)(hi)
0x0749001A,	//0x02cc		VoC_add16_rd(REG1,REG1,0xbab0)(lo)	|	VoC_lw16i_set_inc(REG1,0x1a,0x1)(hi)
0x5FA93AB0,	//0x02ce		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0xbab0)(hi)
0x2C0FE200,	//0x02d0		VoC_loop_i(0x1,0x7)(lo)	|	VoC_lw16i_short(REG0,0x20,IN_PARALLEL)
0xFF4202D9,	//0x02d2		VoC_lw32z(REG45,DEFAULT)	|	VoC_loop_i(0x1,0x7)(hi)
0xFBFAEA03,	//0x02d4		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_loop_i_short(0x10,DEFAULT)
0xE474D8B6,	//0x02d6		VoC_or16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x02d7		VoC_endloop0
0xDC94C0C3,	//0x02d8		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
		//0x02d9		VoC_endloop1
0xF02AE580,	//0x02da		VoC_lw16i_short(ACC1_LO,0x1,DEFAULT)	|	VoC_return
		//0x02db		CII_avgGsHistQntz_gsQuant_opt
0xFF445FE9,	//0x02dc		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE00B6B88,	//0x02de		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x1c,DEFAULT)
0xD9C75986,	//0x02e0		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0xFA2F7A26,	//0x02e2		VoC_shr32_ri(RL7,0x5,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
0xC93C64EE,	//0x02e4		VoC_add32_rr(ACC0,ACC0,RL7,IN_PARALLEL)	|	VoC_and32_rr(RL6,ACC1,DEFAULT)
		//0x02e6		VoC_endloop0
0xFF25C934,	//0x02e6		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0x12490A84,	//0x02e8		VoC_lw16i(REG4,0x1249)
0x0B2B2B80,	//0x02ea		VoC_jal(CII_L_mpy_ls_opt)
0x396E1848,	//0x02ec		VoC_lw16i_set_inc(REG0,0xb96e,0x2)
0x14C5C964,	//0x02ee		VoC_lw32_d(ACC1,0x800a)(lo)	|	VoC_add32_rr(ACC0,ACC1,ACC0,DEFAULT)
0x1805000A,	//0x02f0		VoC_lw16i_set_inc(REG1,0x0,0x1)(lo)	|	VoC_lw32_d(ACC1,0x800a)(hi)
0xDFA90000,	//0x02f2		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x0,0x1)(hi)
0x9706EC0A,	//0x02f4		VoC_sub32inc_rp(RL6,ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0x02FA33C6,	//0x02f6		VoC_bnltz32_r(CII_gsQuant_opt_abs_pos,RL6)
0x3AAA0BF6,	//0x02f8		VoC_sub32_dr(RL6,0xbaaa,RL6)
		//0x02fa		CII_gsQuant_opt_abs_pos
0x02FE36AE,	//0x02fa		VoC_bngt32_rr(CII_gsQuant_opt_no_new_min,ACC1,RL6)
0xFF356022,	//0x02fc		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x02fe		CII_gsQuant_opt_no_new_min
		//0x02fe		VoC_endloop0
0xE580DE08,	//0x02fe		VoC_return	|	VoC_inc_p(REG1,DEFAULT)
		//0x0300		CII_getPnBits_opt
0xE00268F7,	//0x0300		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0xFA0C7F26,	//0x0302		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x575629C6,	//0x0304		VoC_and32_rd(RL6,0xd756)
0xFF377A0E,	//0x0306		VoC_movreg32(RL7,RL6,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
		//0x0308		GTPNB_opt_while_begin
0x030D3306,	//0x0308		VoC_bez32_r(GTPNB_opt_while_end,RL6)
0xFA0E6577,	//0x030a		VoC_shr32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_xor32_rr(RL7,RL6,DEFAULT)
0xF8FAE5FC,	//0x030c		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_jump(GTPNB_opt_while_begin)
		//0x030d		GTPNB_opt_while_end
0x038429C7,	//0x030e		VoC_and32_rd(RL7,0x8384)
0x03143307,	//0x0310		VoC_bez32_r(GTPNB_opt_FeedBack,RL7)
0x00082A44,	//0x0312		VoC_or32_rd(ACC0,0x8008)
		//0x0314		GTPNB_opt_FeedBack
0x2844E104,	//0x0314		VoC_and16_rd(REG4,0x8384)(lo)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xE4620384,	//0x0316		VoC_or16_rr(REG2,REG4,DEFAULT)	|	VoC_and16_rd(REG4,0x8384)(hi)
		//0x0317		VoC_endloop0
0xD884E580,	//0x0318		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_return
		//0x0319		CII_lpcZsFir_opt
0x423EF027,	//0x031a		VoC_sub16_rr(REG6,REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xC3BEDCA4,	//0x031c		VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)
0x03312C4F,	//0x031e		VoC_loop_i(0x1,0x27)
0x14C4F144,	//0x0320		VoC_lw32_d(ACC0,0x801e)(lo)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x385F001E,	//0x0322		VoC_bgt16_rd(CII_lpcZsFir_100,REG7,0xbab6)(lo)	|	VoC_lw32_d(ACC0,0x801e)(hi)
0xE0E43AB6,	//0x0324		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_bgt16_rd(CII_lpcZsFir_100,REG7,0xbab6)(hi)
		//0x0326		CII_lpcZsFir_100
0xE702C1F3,	//0x0326		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG6,DEFAULT)
0xD12BD895,	//0x0328		VoC_mac32inc_rp(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x0329		VoC_endloop0
0x06C7C261,	//0x032a		VoC_multf32inc_pd(RL7,REG0,0x828a)(lo)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
0xFBE4028A,	//0x032c		VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_multf32inc_pd(RL7,REG0,0x828a)(hi)
0x077FCB3C,	//0x032e		VoC_add16_rd(REG7,REG7,0x8384)(lo)	|	VoC_sub32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDCA90384,	//0x0330		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x8384)(hi)
		//0x0331		VoC_endloop1
0xDFE9E580,	//0x0332		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0333		CII_speechEncoder
0x55CE1844,	//0x0334		VoC_lw16i_set_inc(REG0,0xd5ce,0x1)
0x056C1805,	//0x0336		VoC_lw16i_set_inc(REG1,0x56c,0x1)
0x082C180A,	//0x0338		VoC_lw16i_set_inc(REG2,0x82c,0x2)
0x08301807,	//0x033a		VoC_lw16i_set_inc(REG3,0x830,0x1)
0x7024DFC1,	//0x033c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x2B80E005,	//0x033e		VoC_jal(CII_iir_d_opt)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xD61112D5,	//0x0340		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_jal(CII_iir_d_opt)(hi)
0x55D31844,	//0x0342		VoC_lw16i_set_inc(REG0,0xd5d3,0x1)
0xEFF57004,	//0x0344		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x12D52B80,	//0x0346		VoC_jal(CII_iir_d_opt)
0x1804DF81,	//0x0348		VoC_lw16i_set_inc(REG0,0x9ab,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xD89209AB,	//0x034a		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x9ab,0x1)(hi)
0x034F2D40,	//0x034c		VoC_loop_i(0x0,0xa0)
0xDC82D892,	//0x034e		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
		//0x034f		VoC_endloop0
0x0D021805,	//0x0350		VoC_lw16i_set_inc(REG1,0xd02,0x1)
0x09A11804,	//0x0352		VoC_lw16i_set_inc(REG0,0x9a1,0x1)
0x05252B80,	//0x0354		VoC_jal(CII_aflat_opt)
0x0C751401,	//0x0356		VoC_lw16_d(REG1,0xc75)
0x558E0AC0,	//0x0358		VoC_lw16i(REG0,0xd58e)
0xC040C049,	//0x035a		VoC_add16_rr(REG0,REG1,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG1,DEFAULT)
0x43801FB9,	//0x035c		VoC_lw16i_set_inc(REG1,0x4380,0xfffffffe)
0x1804D800,	//0x035e		VoC_lw16i_set_inc(REG0,0xc78,0x1)(lo)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x15000C78,	//0x0360		VoC_sw16_d(REG0,0xc74)(lo)	|	VoC_lw16i_set_inc(REG0,0xc78,0x1)(hi)
0x2B800C74,	//0x0362		VoC_jal(CII_rcToADp_opt_new)(lo)	|	VoC_sw16_d(REG0,0xc74)(hi)
0xF0041655,	//0x0364		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jal(CII_rcToADp_opt_new)(hi)
0x037E3187,	//0x0366		VoC_bez16_r(EN_CODE_100,REG7)
0x084C1804,	//0x0368		VoC_lw16i_set_inc(REG0,0x84c,0x1)
0x0CB21805,	//0x036a		VoC_lw16i_set_inc(REG1,0xcb2,0x1)
0xD884E944,	//0x036c		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x08421806,	//0x036e		VoC_lw16i_set_inc(REG2,0x842,0x1)
		//0x0370		VoC_endloop0
0x1804DC94,	//0x0370		VoC_lw16i_set_inc(REG0,0x838,0x1)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x18050838,	//0x0372		VoC_lw16i_set_inc(REG1,0xc78,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x838,0x1)(hi)
0x18070C78,	//0x0374		VoC_lw16i_set_inc(REG3,0x4380,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xc78,0x1)(hi)
0xE9444380,	//0x0376		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x4380,0x1)(hi)
0xD8A5D884,	//0x0378		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDCB5DC94,	//0x037a		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x037b		VoC_endloop0
0x03D92B00,	//0x037c		VoC_jump_lg(EN_CODE_100_end)
		//0x037e		EN_CODE_100
0x1804F032,	//0x037e		VoC_lw16i_set_inc(REG0,0x4380,0x1)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x18454380,	//0x0380		VoC_lw16i_set_inc(REG1,0xd5d8,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x4380,0x1)(hi)
0x14C655D8,	//0x0382		VoC_lw32_d(RL6,0x828a)(lo)	|	VoC_lw16i_set_inc(REG1,0xd5d8,0x1)(hi)
0x1807028A,	//0x0384		VoC_lw16i_set_inc(REG3,0xcf0,0x1)(lo)	|	VoC_lw32_d(RL6,0x828a)(hi)
0xF1450CF0,	//0x0386		VoC_lw16i_short(REG5,0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xcf0,0x1)(hi)
0x2C05DFC3,	//0x0388		VoC_loop_i(0x1,0x2)(lo)	|	VoC_push16(REG3,DEFAULT)
0xE9490396,	//0x038a		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x40649E0B,	//0x038c		VoC_be16_rd(getNWCoefs_LABEL1,REG4,0x995f)(lo)	|	VoC_multf32inc_pp(REG67,REG0,REG1,DEFAULT)
0xC8F3195F,	//0x038e		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_be16_rd(getNWCoefs_LABEL1,REG4,0x995f)(hi)
0xCB9BE5C4,	//0x0390		VoC_sub32_rr(REG67,RL6,REG67,DEFAULT)	|	VoC_jump(getNWCoefs_LABEL2)
		//0x0391		getNWCoefs_LABEL1
0x0D2C1806,	//0x0392		VoC_lw16i_set_inc(REG2,0xd2c,0x1)
		//0x0394		getNWCoefs_LABEL2
		//0x0394		VoC_endloop0
0xC228DCB7,	//0x0394		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x0396		VoC_endloop1
0x04000A84,	//0x0396		VoC_lw16i(REG4,0x400)
0xC28DF021,	//0x0398		VoC_sub16_rr(REG5,REG2,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF3FF5CA4,	//0x039a		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0x03AA2C4F,	//0x039c		VoC_loop_i(0x1,0x27)
0x14C4F144,	//0x039e		VoC_lw32_d(ACC0,0x801e)(lo)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x3859001E,	//0x03a0		VoC_bgt16_rd(CII_lpcIrZsIir_100,REG1,0xbab6)(lo)	|	VoC_lw32_d(ACC0,0x801e)(hi)
0xE0243AB6,	//0x03a2		VoC_movreg16(REG4,REG1,DEFAULT)	|	VoC_bgt16_rd(CII_lpcIrZsIir_100,REG1,0xbab6)(hi)
		//0x03a4		CII_lpcIrZsIir_100
0xE701C14B,	//0x03a4		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add16_rr(REG3,REG5,REG1,DEFAULT)
		//0x03a6		VoC_endloop0
0xC220D483,	//0x03a6		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_msu32inc_pp(REG0,REG3,DEFAULT)
0xDE08FBE4,	//0x03a8		VoC_inc_p(REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)
		//0x03aa		VoC_endloop1
0x1804DCA9,	//0x03aa		VoC_lw16i_set_inc(REG0,0xd2c,0x1)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0x18060D2C,	//0x03ac		VoC_lw16i_set_inc(REG2,0xd04,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xd2c,0x1)(hi)
0xDF810D04,	//0x03ae		VoC_pop16(REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xd04,0x1)(hi)
0x2B80DFC2,	//0x03b0		VoC_jal(CII_lpcZsFir_opt)(lo)	|	VoC_push16(REG2,DEFAULT)
0xD6100319,	//0x03b2		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jal(CII_lpcZsFir_opt)(hi)
0x0CFA0A81,	//0x03b4		VoC_lw16i(REG1,0xcfa)
0x2B80E002,	//0x03b6		VoC_jal(CII_lpcZsFir_opt)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xD6100319,	//0x03b8		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jal(CII_lpcZsFir_opt)(hi)
0x2B80F050,	//0x03ba		VoC_jal(CII_g_corr1_opt_paris)(lo)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xF0310BDF,	//0x03bc		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_jal(CII_g_corr1_opt_paris)(hi)
0x0D561808,	//0x03be		VoC_lw16i_set_inc(REG0,0xd56,0x2)
0x3AAA0B4F,	//0x03c0		VoC_sub16_dr(REG7,0xbaaa,REG1)
0xE283600C,	//0x03c2		VoC_lw16i_short(REG3,0x28,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
0x0D2C0A86,	//0x03c4		VoC_lw16i(REG6,0xd2c)
0x03D12C17,	//0x03c6		VoC_loop_i(0x1,0xb)
0x7F44C399,	//0x03c8		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sub16_rr(REG1,REG6,REG3,DEFAULT)
0xE6C2D612,	//0x03ca		VoC_loop_r_short(REG3,DEFAULT)	|	VoC_lw16_sd(REG2,0x0,IN_PARALLEL)
0xD121D8A4,	//0x03cc		VoC_mac32inc_rp(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x03cd		VoC_endloop0
0xFEBCDE18,	//0x03ce		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xDDC4D61D,	//0x03d0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16_sd(RL6_HI,0x0,DEFAULT)
		//0x03d1		VoC_endloop1
0x15BB2B80,	//0x03d2		VoC_jal(CII_aFlatRcDp_opt)
0x1FB9DF80,	//0x03d4		VoC_lw16i_set_inc(REG1,0xcb2,0xfffffffe)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x2B800CB2,	//0x03d6		VoC_jal(CII_rcToADp_opt_new)(lo)	|	VoC_lw16i_set_inc(REG1,0xcb2,0xfffffffe)(hi)
0xF0251655,	//0x03d8		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_jal(CII_rcToADp_opt_new)(hi)
		//0x03d9		EN_CODE_100_end
0x43801804,	//0x03da		VoC_lw16i_set_inc(REG0,0x4380,0x1)
0x43B31505,	//0x03dc		VoC_sw16_d(REG5,0x43b3)
0x438A1806,	//0x03de		VoC_lw16i_set_inc(REG2,0x438a,0x1)
0x08421807,	//0x03e0		VoC_lw16i_set_inc(REG3,0x842,0x1)
0x08380A84,	//0x03e2		VoC_lw16i(REG4,0x838)
0x0CB20A8C,	//0x03e4		VoC_lw16i(RL6_LO,0xcb2)
0x0CBC0A8D,	//0x03e6		VoC_lw16i(RL6_HI,0xcbc)
0x0CE61805,	//0x03e8		VoC_lw16i_set_inc(REG1,0xce6,0x1)
0x0C780A86,	//0x03ea		VoC_lw16i(REG6,0xc78)
0x56000ACF,	//0x03ec		VoC_lw16i(RL7_HI,0xd600)
0x56040ACE,	//0x03ee		VoC_lw16i(RL7_LO,0xd604)
0x084C0A88,	//0x03f0		VoC_lw16i(ACC0_LO,0x84c)
0x081A1405,	//0x03f2		VoC_lw16_d(REG5,0x81a)
0xF7097F35,	//0x03f4		VoC_movreg16(ACC0_HI,ACC0_LO,IN_PARALLEL)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
0x0C741407,	//0x03f6		VoC_lw16_d(REG7,0xc74)
0x22B52B80,	//0x03f8		VoC_jal(CII_getSfrmLpcTx_opt)
0x1805F005,	//0x03fa		VoC_lw16i_set_inc(REG1,0x8f6,0x1)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x180408F6,	//0x03fc		VoC_lw16i_set_inc(REG0,0x856,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x8f6,0x1)(hi)
0xD8990856,	//0x03fe		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x856,0x1)(hi)
0x04032D22,	//0x0400		VoC_loop_i(0x0,0x91)
0xDC89D899,	//0x0402		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0403		VoC_endloop0
		//0x0404		WEIGHTSPEECHFRAME_LOOP_START
0x1FBCDFC5,	//0x0404		VoC_lw16i_set_inc(REG0,0x988,0xffffffff)(lo)	|	VoC_push16(REG5,DEFAULT)
0x18070988,	//0x0406		VoC_lw16i_set_inc(REG3,0x438a,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x988,0xffffffff)(hi)
0x1805438A,	//0x0408		VoC_lw16i_set_inc(REG1,0xcf0,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x438a,0x1)(hi)
0x18060CF0,	//0x040a		VoC_lw16i_set_inc(REG2,0xa6a,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xcf0,0x1)(hi)
0xF1460A6A,	//0x040c		VoC_lw16i_short(REG6,0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xa6a,0x1)(hi)
0x00280A87,	//0x040e		VoC_lw16i(REG7,0x28)
0xC576C57F,	//0x0410		VoC_mult16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC0794038,	//0x0412		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDF43C0F3,	//0x0414		VoC_push32(REG67,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x16832B80,	//0x0416		VoC_jal(CII_lpcFir_opt)
0x1804DF03,	//0x0418		VoC_lw16i_set_inc(REG0,0xcf0,0x1)(lo)	|	VoC_pop32(REG67,DEFAULT)
0x18070CF0,	//0x041a		VoC_lw16i_set_inc(REG3,0xcbc,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xcf0,0x1)(hi)
0x1FBD0CBC,	//0x041c		VoC_lw16i_set_inc(REG1,0x8e7,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG3,0xcbc,0x1)(hi)
0x180608E7,	//0x041e		VoC_lw16i_set_inc(REG2,0xa74,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x8e7,0xffffffff)(hi)
0x40380A74,	//0x0420		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xa74,0x1)(hi)
0xC0F3C079,	//0x0422		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x12322B80,	//0x0424		VoC_jal(CII_lpcIir_opt_paris)
0x076DDF85,	//0x0426		VoC_add16_rd(REG5,REG5,0x8384)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x406D0384,	//0x0428		VoC_be16_rd(WEIGHTSPEECHFRAME_go,REG5,0xbab0)(lo)	|	VoC_add16_rd(REG5,REG5,0x8384)(hi)
0x2B003AB0,	//0x042a		VoC_jump_lg(WEIGHTSPEECHFRAME_LOOP_START)(lo)	|	VoC_be16_rd(WEIGHTSPEECHFRAME_go,REG5,0xbab0)(hi)
0xFFC00404,	//0x042c		VoC_NAD	|	VoC_jump_lg(WEIGHTSPEECHFRAME_LOOP_START)(hi)
		//0x042e		WEIGHTSPEECHFRAME_go
0x081B1400,	//0x042e		VoC_lw16_d(REG0,0x81b)
0x0C751401,	//0x0430		VoC_lw16_d(REG1,0xc75)
0x0C860A82,	//0x0432		VoC_lw16i(REG2,0xc86)
0x0CA60A83,	//0x0434		VoC_lw16i(REG3,0xca6)
0x0CAA0A84,	//0x0436		VoC_lw16i(REG4,0xcaa)
0x0CAE0A85,	//0x0438		VoC_lw16i(REG5,0xcae)
0x0C820A86,	//0x043a		VoC_lw16i(REG6,0xc82)
0x42FC1407,	//0x043c		VoC_lw16_d(REG7,0x42fc)
0x203D2B80,	//0x043e		VoC_jal(CII_openLoopLagSearch_new)
0x1500F007,	//0x0440		VoC_sw16_d(REG0,0xc95)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x15000C95,	//0x0442		VoC_sw16_d(REG0,0xce5)(lo)	|	VoC_sw16_d(REG0,0xc95)(hi)
0x18040CE5,	//0x0444		VoC_lw16i_set_inc(REG0,0xc82,0x1)(lo)	|	VoC_sw16_d(REG0,0xce5)(hi)
0x14060C82,	//0x0446		VoC_lw16_d(REG6,0xa98)(lo)	|	VoC_lw16i_set_inc(REG0,0xc82,0x1)(hi)
0x2C090A98,	//0x0448		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16_d(REG6,0xa98)(hi)
0xD805045C,	//0x044a		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0x045034B5,	//0x044c		VoC_bngt16_rr(PERIODICITYUPDATE101,REG6,REG5)
0xF6C560A6,	//0x044e		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0450		PERIODICITYUPDATE101
0xE864FFC0,	//0x0450		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_NAD
0x04553435,	//0x0452		VoC_bgt16_rr(PERIODICITYUPDATE102,REG6,REG5)
0xF024C375,	//0x0454		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG6,DEFAULT)
		//0x0455		PERIODICITYUPDATE102
		//0x0455		VoC_endloop0
0x4863C3AB,	//0x0456		VoC_blt16_rd(PERIODICITYUPDATE103,REG3,0xbaae)(lo)	|	VoC_sub16_rr(REG3,REG6,REG5,DEFAULT)
0x4C5D3AAE,	//0x0458		VoC_bnlt16_rd(PERIODICITYUPDATE104,REG5,0xbaae)(lo)	|	VoC_blt16_rd(PERIODICITYUPDATE103,REG3,0xbaae)(hi)
0xC1E73AAE,	//0x045a		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_bnlt16_rd(PERIODICITYUPDATE104,REG5,0xbaae)(hi)
		//0x045b		PERIODICITYUPDATE103
		//0x045c		PERIODICITYUPDATE104
		//0x045c		VoC_endloop1
0x1405D886,	//0x045c		VoC_lw16_d(REG5,0xa96)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x15060A96,	//0x045e		VoC_sw16_d(REG6,0xa98)(lo)	|	VoC_lw16_d(REG5,0xa96)(hi)
0xC17E0A98,	//0x0460		VoC_add16_rr(REG6,REG5,REG7,DEFAULT)	|	VoC_sw16_d(REG6,0xa98)(hi)
0x3AB34C5E,	//0x0462		VoC_bnlt16_rd(PERIODICITYUPDATE105,REG6,0xbab3)
0xF033F004,	//0x0464		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0465		PERIODICITYUPDATE105
0x0A961507,	//0x0466		VoC_sw16_d(REG7,0xa96)
0x0A4C1504,	//0x0468		VoC_sw16_d(REG4,0xa4c)
0x0A4E0A80,	//0x046a		VoC_lw16i(REG0,0xa4e)
0x0C960A83,	//0x046c		VoC_lw16i(REG3,0xc96)
0xD881E983,	//0x046e		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_loop_i_short(0xc,DEFAULT)
0xDCB1F7F1,	//0x0470		VoC_sw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
		//0x0471		VoC_endloop0
0x0C860A86,	//0x0472		VoC_lw16i(REG6,0xc86)
0xFFC0F007,	//0x0474		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0476		EN_LOOP_START
0x0CEE1506,	//0x0476		VoC_sw16_d(REG6,0xcee)
0x0C961812,	//0x0478		VoC_lw16i_set_inc(REG2,0xc96,0x4)
0x0A83C0BA,	//0x047a		VoC_lw16i(REG3,0x4412)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xE8824412,	//0x047c		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i(REG3,0x4412)(hi)
0xDE10DCB2,	//0x047e		VoC_inc_p(REG2,DEFAULT)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
		//0x047f		VoC_endloop0
0x3AB60878,	//0x0480		VoC_mult16_rd(REG0,REG7,0xbab6)
0x0CBC0A83,	//0x0482		VoC_lw16i(REG3,0xcbc)
0xF8F040C3,	//0x0484		VoC_shr16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
0x08E70A81,	//0x0486		VoC_lw16i(REG1,0x8e7)
0xD8A1C040,	//0x0488		VoC_lw16inc_p(REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG0,REG1,REG0,DEFAULT)
0x58A6D8A4,	//0x048a		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x7032F6C2,	//0x048c		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_movreg16(REG2,REG6,IN_PARALLEL)
0x0A85DFC1,	//0x048e		VoC_lw16i(REG5,0xce6)(lo)	|	VoC_push16(REG1,IN_PARALLEL)
0xC17D0CE6,	//0x0490		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i(REG5,0xce6)(hi)
0xDFC7417D,	//0x0492		VoC_push16(REG7,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x42FC1407,	//0x0494		VoC_lw16_d(REG7,0x42fc)
0x0DC12B80,	//0x0496		VoC_jal(CII_sfrmAnalysis_opt)
0x5F82DF87,	//0x0498		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x0716E013,	//0x049a		VoC_add16_rd(REG6,REG2,0xcee)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0xC1DF0CEE,	//0x049c		VoC_add16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG6,REG2,0xcee)(hi)
0x3AB04067,	//0x049e		VoC_be16_rd(EN_LOOP_END,REG7,0xbab0)
0x04762B00,	//0x04a0		VoC_jump_lg(EN_LOOP_START)
		//0x04a2		EN_LOOP_END
0x0C951404,	//0x04a2		VoC_lw16_d(REG4,0xc95)
0x42FC6E0F,	//0x04a4		VoC_bnez16_d(EN_CODE_200,0x42fc)
0x0A5E1400,	//0x04a6		VoC_lw16_d(REG0,0xa5e)
0x0A5A1805,	//0x04a8		VoC_lw16i_set_inc(REG1,0xa5a,0x1)
0x0C751500,	//0x04aa		VoC_sw16_d(REG0,0xc75)
0x0C921806,	//0x04ac		VoC_lw16i_set_inc(REG2,0xc92,0x1)
0xD8936863,	//0x04ae		VoC_lw16inc_p(REG3,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDCA3D893,	//0x04b0		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
		//0x04b1		VoC_endloop0
0xF8D4E5DA,	//0x04b2		VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)	|	VoC_jump(EN_CODE_200_END)
		//0x04b3		EN_CODE_200
0x03340A82,	//0x04b4		VoC_lw16i(REG2,0x334)
0x0C9E1805,	//0x04b6		VoC_lw16i_set_inc(REG1,0xc9e,0x1)
0x0A4D2004,	//0x04b8		VoC_lw16d_set_inc(REG0,0xa4d,0x1)
0x396E0AC3,	//0x04ba		VoC_lw16i(REG3,0xb96e)
0xE88CC0E3,	//0x04bc		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xF8FED896,	//0x04be		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x0846C0F5,	//0x04c0		VoC_mult16_rd(REG6,REG0,0xbaae)(lo)	|	VoC_add16_rr(REG5,REG3,REG6,DEFAULT)
0xD9AC3AAE,	//0x04c2		VoC_lw32_p(ACC0,REG5,DEFAULT)	|	VoC_mult16_rd(REG6,REG0,0xbaae)(hi)
0xDE00C0B7,	//0x04c4		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG2,REG6,DEFAULT)
0x3DD83C58,	//0x04c6		VoC_bngt16_rd(EN_LOOP1_100,REG0,0xbdd8)
0xDDBCF000,	//0x04c8		VoC_sw32_p(ACC0,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x04c9		EN_LOOP1_100
		//0x04c9		VoC_endloop0
0x0A4D1500,	//0x04ca		VoC_sw16_d(REG0,0xa4d)
		//0x04cc		EN_CODE_200_END
0x0C741482,	//0x04cc		VoC_lw32_d(REG45,0xc74)
0x0C780A80,	//0x04ce		VoC_lw16i(REG0,0xc78)
0x081A1582,	//0x04d0		VoC_sw32_d(REG45,0x81a)
0x08380A81,	//0x04d2		VoC_lw16i(REG1,0x838)
0x43800A82,	//0x04d4		VoC_lw16i(REG2,0x4380)
0x08420A83,	//0x04d6		VoC_lw16i(REG3,0x842)
0xD884E944,	//0x04d8		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC94D8A5,	//0x04da		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x04dc		VoC_endloop0
0x0A80DCB5,	//0x04dc		VoC_lw16i(REG0,0xcb2)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x0A810CB2,	//0x04de		VoC_lw16i(REG1,0x84c)(lo)	|	VoC_lw16i(REG0,0xcb2)(hi)
0xD884084C,	//0x04e0		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i(REG1,0x84c)(hi)
0xD884E942,	//0x04e2		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x04e4		VoC_endloop0
0x6E19DC94,	//0x04e4		VoC_bnez16_d(EN_CODE_300,0x42fc)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xF06742FC,	//0x04e6		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_bnez16_d(EN_CODE_300,0x42fc)(hi)
0x1507F026,	//0x04e8		VoC_sw16_d(REG7,0xce5)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x15060CE5,	//0x04ea		VoC_sw16_d(REG6,0xce4)(lo)	|	VoC_sw16_d(REG7,0xce5)(hi)
0x0A870CE4,	//0x04ec		VoC_lw16i(REG7,0x1ff)(lo)	|	VoC_sw16_d(REG6,0xce4)(hi)
0xF3E601FF,	//0x04ee		VoC_lw16i_short(REG6,0x1f,DEFAULT)	|	VoC_lw16i(REG7,0x1ff)(hi)
0x0C961804,	//0x04f0		VoC_lw16i_set_inc(REG0,0xc96,0x1)
0x0C9E1805,	//0x04f2		VoC_lw16i_set_inc(REG1,0xc9e,0x1)
0xDC87E882,	//0x04f4		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x04f6		VoC_endloop0
0x0A80DC96,	//0x04f6		VoC_lw16i(REG0,0xca2)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xF80F0CA2,	//0x04f8		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_lw16i(REG0,0xca2)(hi)
0xDC87F80E,	//0x04fa		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xDC86E861,	//0x04fc		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x04fd		VoC_endloop0
		//0x04fe		EN_CODE_300
0x05581804,	//0x04fe		VoC_lw16i_set_inc(REG0,0x558,0x1)
0x0C751406,	//0x0500		VoC_lw16_d(REG6,0xc75)
0x0C921805,	//0x0502		VoC_lw16i_set_inc(REG1,0xc92,0x1)
0xD896E862,	//0x0504		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0506		VoC_endloop0
0x1482DC86,	//0x0506		VoC_lw32_d(REG45,0xce4)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x18050CE4,	//0x0508		VoC_lw16i_set_inc(REG1,0xc96,0x1)(lo)	|	VoC_lw32_d(REG45,0xce4)(hi)
0x18060C96,	//0x050a		VoC_lw16i_set_inc(REG2,0xc9a,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xc96,0x1)(hi)
0x18070C9A,	//0x050c		VoC_lw16i_set_inc(REG3,0xc9e,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xc9a,0x1)(hi)
0x6A050C9E,	//0x050e		VoC_bngtz16_d(CII_fillBitAlloc_100,0xce5)(lo)	|	VoC_lw16i_set_inc(REG3,0xc9e,0x1)(hi)
0xE0220CE5,	//0x0510		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_bngtz16_d(CII_fillBitAlloc_100,0xce5)(hi)
0x0CA20A81,	//0x0512		VoC_lw16i(REG1,0xca2)
		//0x0514		CII_fillBitAlloc_100
0xDC86E8A6,	//0x0514		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDC85DC84,	//0x0516		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xD8A4D896,	//0x0518		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
		//0x051a		VoC_endloop0
0xDFA9D8B5,	//0x051a		VoC_pop16(RA,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x09881804,	//0x051c		VoC_lw16i_set_inc(REG0,0x988,0x1)
0x54AA0741,	//0x051e		VoC_add16_rd(REG1,REG0,0xd4aa)
0xD894EC63,	//0x0520		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_i_short(0x23,DEFAULT)
0xDC84FFC0,	//0x0522		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x0523		VoC_endloop0
0xDFE9E580,	//0x0524		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0525		CII_aflat_opt
0x2B80DFC1,	//0x0526		VoC_jal(CII_flat_opt)(lo)	|	VoC_push16(REG1,DEFAULT)
0xD6140894,	//0x0528		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_flat_opt)(hi)
0xE080F050,	//0x052a		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x0D221809,	//0x052c		VoC_lw16i_set_inc(REG1,0xd22,0x2)
0xDF446845,	//0x052e		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x1507D9C6,	//0x0530		VoC_sw16_d(REG7,0xd28)(lo)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDDCE0D28,	//0x0532		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_sw16_d(REG7,0xd28)(hi)
		//0x0533		VoC_endloop0
0x0C751506,	//0x0534		VoC_sw16_d(REG6,0xc75)
0x0D0C0A81,	//0x0536		VoC_lw16i(REG1,0xd0c)
0x13162B80,	//0x0538		VoC_jal(CII_rcToCorrDpL_opt)
0x13C22B80,	//0x053a		VoC_jal(CII_vad_algorithm)
0x6E03E004,	//0x053c		VoC_bnez16_d(AFLAT100,0x4302)(lo)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0xF0244302,	//0x053e		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnez16_d(AFLAT100,0x4302)(hi)
		//0x0540		AFLAT100
0x1504DF04,	//0x0540		VoC_sw16_d(REG4,0x42fb)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0x180842FB,	//0x0542		VoC_lw16i_set_inc(REG0,0xd0c,0x2)(lo)	|	VoC_sw16_d(REG4,0x42fb)(hi)
0x70270D0C,	//0x0544		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xd0c,0x2)(hi)
0x31C4E006,	//0x0546		VoC_bnez16_r(SWCOMFORTNOISE_opt_100,REG4)(lo)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x1406054C,	//0x0548		VoC_lw16_d(REG6,0x331)(lo)	|	VoC_bnez16_r(SWCOMFORTNOISE_opt_100,REG4)(hi)
0xC1BE0331,	//0x054a		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16_d(REG6,0x331)(hi)
		//0x054c		SWCOMFORTNOISE_opt_100
0x0333073D,	//0x054c		VoC_add16_rd(REG5,REG7,0x333)
0x05DE3186,	//0x054e		VoC_bez16_r(SWCOMFORTNOISE_opt_RETURN1,REG6)
0x03321404,	//0x0550		VoC_lw16_d(REG4,0x332)
0x3A750863,	//0x0552		VoC_mult16_rd(REG3,REG4,0xba75)
0x037C180A,	//0x0554		VoC_lw16i_set_inc(REG2,0x37c,0x2)
0x180BC09A,	//0x0556		VoC_lw16i_set_inc(REG3,0x36c,0x2)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xC0E3036C,	//0x0558		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x36c,0x2)(hi)
0xD9C76963,	//0x055a		VoC_lw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDDD7D9C7,	//0x055c		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
		//0x055d		VoC_endloop0
0xC13CC13C,	//0x055e		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x3AB9445C,	//0x0560		VoC_bne16_rd(updateCNHist_no_modulo,REG4,0xbab9)
0xDD9CF004,	//0x0562		VoC_sw32_p(ACC0,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0563		updateCNHist_no_modulo
0x03321504,	//0x0564		VoC_sw16_d(REG4,0x332)
0x04321404,	//0x0566		VoC_lw16_d(REG4,0x432)
0x03844476,	//0x0568		VoC_bne16_rd(SWCOMFORTNOISE_opt_101,REG6,0x8384)
0x4C5DF004,	//0x056a		VoC_bnlt16_rd(SWCOMFORTNOISE_opt_101,REG5,0xbd99)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0243D99,	//0x056c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnlt16_rd(SWCOMFORTNOISE_opt_101,REG5,0xbd99)(hi)
		//0x056e		SWCOMFORTNOISE_opt_101
0x01090A8F,	//0x056e		VoC_lw16i(RL7_HI,0x109)
0x19880A8E,	//0x0570		VoC_lw16i(RL7_LO,0x1988)
0x057831C4,	//0x0572		VoC_bnez16_r(SWCOMFORTNOISE_opt_Lbrst,REG4)
0x3AB44546,	//0x0574		VoC_bne16_rd(SWCOMFORTNOISE_opt_no_1st_SID,REG6,0xbab4)
0xFFC0E5C4,	//0x0576		VoC_NAD	|	VoC_jump(SWCOMFORTNOISE_opt_1st_SID)
		//0x0578		SWCOMFORTNOISE_opt_Lbrst
0x038444E6,	//0x0578		VoC_bne16_rd(SWCOMFORTNOISE_opt_no_1st_SID,REG6,0x8384)
		//0x057a		SWCOMFORTNOISE_opt_1st_SID
0x04341587,	//0x057a		VoC_sw32_d(RL7,0x434)
0x1808DF42,	//0x057c		VoC_lw16i_set_inc(REG0,0x334,0x2)(lo)	|	VoC_push32(REG45,DEFAULT)
0x2B800334,	//0x057e		VoC_jal(CII_avgGsHistQntz_gsQuant_opt)(lo)	|	VoC_lw16i_set_inc(REG0,0x334,0x2)(hi)
0xDF0202DB,	//0x0580		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CII_avgGsHistQntz_gsQuant_opt)(hi)
0x042D1502,	//0x0582		VoC_sw16_d(REG2,0x42d)
		//0x0584		SWCOMFORTNOISE_opt_no_1st_SID
0x3AB44CC6,	//0x0584		VoC_bnlt16_rd(SWCOMFORTNOISE_opt_106,REG6,0xbab4)
0x05DB3184,	//0x0586		VoC_bez16_r(SWCOMFORTNOISE_opt_RETURN,REG4)
0xDF425FC6,	//0x0588		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x05B62B00,	//0x058a		VoC_jump_lg(SWCOMFORTNOISE_opt_swSP_0)
		//0x058c		SWCOMFORTNOISE_opt_106
0xDFC6F005,	//0x058c		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFF435F42,	//0x058e		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x0D3C1808,	//0x0590		VoC_lw16i_set_inc(REG0,0xd3c,0x2)
0x037C189A,	//0x0592		VoC_lw16i_set_inc(REG2,0x37c,0x16)
0x036C180B,	//0x0594		VoC_lw16i_set_inc(REG3,0x36c,0x2)
0xD9DEE903,	//0x0596		VoC_lw32inc_p(RL6,REG3,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xC8F3FA1E,	//0x0598		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x3,DEFAULT)
		//0x0599		VoC_endloop0
0xF6437024,	//0x059a		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x05A92C17,	//0x059c		VoC_loop_i(0x1,0xb)
0xFF466908,	//0x059e		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD9D55994,	//0x05a0		VoC_lw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0xFA1D7A14,	//0x05a2		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0xC9AE64D4,	//0x05a4		VoC_add32_rr(RL6,RL6,ACC1,IN_PARALLEL)	|	VoC_and32_rr(ACC0,REG45,DEFAULT)
		//0x05a6		VoC_endloop0
0x5E18C9A6,	//0x05a6		VoC_inc_p(REG3,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0xDDC6F662,	//0x05a8		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
		//0x05a9		VoC_endloop1
0x0ADC2B80,	//0x05aa		VoC_jal(CII_r0Quant_opt)
0x042C1506,	//0x05ac		VoC_sw16_d(REG6,0x42c)
0x0D3C1808,	//0x05ae		VoC_lw16i_set_inc(REG0,0xd3c,0x2)
0x0D320A84,	//0x05b0		VoC_lw16i(REG4,0xd32)
0x042E0A85,	//0x05b2		VoC_lw16i(REG5,0x42e)
0x06952B80,	//0x05b4		VoC_jal(CII_lpcCorrQntz_opt)
		//0x05b6		SWCOMFORTNOISE_opt_swSP_0
0x042C1403,	//0x05b6		VoC_lw16_d(REG3,0x42c)
0x042E1804,	//0x05b8		VoC_lw16i_set_inc(REG0,0x42e,0x1)
0x0A561805,	//0x05ba		VoC_lw16i_set_inc(REG1,0xa56,0x1)
0x0A5E1503,	//0x05bc		VoC_sw16_d(REG3,0xa5e)
0x042D1403,	//0x05be		VoC_lw16_d(REG3,0x42d)
0xDC93E881,	//0x05c0		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x05c1		VoC_endloop0
0xD8836863,	//0x05c2		VoC_lw16inc_p(REG3,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC93D883,	//0x05c4		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x05c5		VoC_endloop0
0xDF02DF86,	//0x05c6		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x1804F007,	//0x05c8		VoC_lw16i_set_inc(REG0,0xa4e,0x1)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x18050A4E,	//0x05ca		VoC_lw16i_set_inc(REG1,0xa52,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xa4e,0x1)(hi)
0x14840A52,	//0x05cc		VoC_lw32_d(ACC0,0x434)(lo)	|	VoC_lw16i_set_inc(REG1,0xa52,0x1)(hi)
0xDF420434,	//0x05ce		VoC_push32(REG45,DEFAULT)	|	VoC_lw32_d(ACC0,0x434)(hi)
0x05D72C09,	//0x05d0		VoC_loop_i(0x1,0x4)
0x03002B80,	//0x05d2		VoC_jal(CII_getPnBits_opt)
0x2B80DC82,	//0x05d4		VoC_jal(CII_getPnBits_opt)(lo)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xDC920300,	//0x05d6		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_jal(CII_getPnBits_opt)(hi)
		//0x05d7		VoC_endloop1
0x1584DF02,	//0x05d8		VoC_sw32_d(ACC0,0x434)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xF0500434,	//0x05da		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_sw32_d(ACC0,0x434)(hi)
		//0x05db		SWCOMFORTNOISE_opt_RETURN
0x04321504,	//0x05dc		VoC_sw16_d(REG4,0x432)
		//0x05de		SWCOMFORTNOISE_opt_RETURN1
0x03331505,	//0x05de		VoC_sw16_d(REG5,0x333)
0x03311506,	//0x05e0		VoC_sw16_d(REG6,0x331)
0x1507DF80,	//0x05e2		VoC_sw16_d(REG7,0x42fc)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x180942FC,	//0x05e4		VoC_lw16i_set_inc(REG1,0xc78,0x2)(lo)	|	VoC_sw16_d(REG7,0x42fc)(hi)
0x31C70C78,	//0x05e6		VoC_bnez16_r(AFLAT101,REG7)(lo)	|	VoC_lw16i_set_inc(REG1,0xc78,0x2)(hi)
0xD9C705EE,	//0x05e8		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_bnez16_r(AFLAT101,REG7)(hi)
0xD9C7E8A2,	//0x05ea		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x05ec		VoC_endloop0
0xE5C8DDCF,	//0x05ec		VoC_jump(AFLATRETURNN)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x05ee		AFLAT101
0x0A80E024,	//0x05ee		VoC_lw16i(REG0,0xd0c)(lo)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0x0A850D0C,	//0x05f0		VoC_lw16i(REG5,0xc92)(lo)	|	VoC_lw16i(REG0,0xd0c)(hi)
0x2B800C92,	//0x05f2		VoC_jal(CII_lpcCorrQntz_opt)(lo)	|	VoC_lw16i(REG5,0xc92)(hi)
0xDFA90695,	//0x05f4		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_lpcCorrQntz_opt)(hi)
		//0x05f5		AFLATRETURNN
0xE580FFC0,	//0x05f6		VoC_return	|	VoC_NOP
		//0x05f8		CII_aflatRecursionLoop_opt
0x1804C155,	//0x05f8		VoC_lw16i_set_inc(REG0,0x43b2,0x1)(lo)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x086B43B2,	//0x05fa		VoC_mult16_rp(REG3,REG1,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x43b2,0x1)(hi)
0xDFE9D851,	//0x05fc		VoC_push16(RA,DEFAULT)	|	VoC_lw16_p(REG1,REG5,IN_PARALLEL)
0xDC83DC81,	//0x05fe		VoC_sw16inc_p(REG3,REG0,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
0x2B80DF40,	//0x0600		VoC_jal(CII_setupPreQ)(lo)	|	VoC_push32(REG01,DEFAULT)
0xF8F2084C,	//0x0602		VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_jal(CII_setupPreQ)(hi)
0x53BE0AC3,	//0x0604		VoC_lw16i(REG3,0xd3be)
0x1807C09A,	//0x0606		VoC_lw16i_set_inc(REG3,0xd74,0x1)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x82D00D74,	//0x0608		VoC_add16inc_rp(REG0,REG3,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xd74,0x1)(hi)
0xDFC0D821,	//0x060a		VoC_push16(REG0,DEFAULT)	|	VoC_lw16_p(REG1,REG2,DEFAULT)
0xF0065FC1,	//0x060c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
		//0x060e		CII_aflatRecurLoop_begin
0x2B80DFC3,	//0x060e		VoC_jal(CII_getNextVec_opt)(lo)	|	VoC_push16(REG3,DEFAULT)
0xD6300816,	//0x0610		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_jal(CII_getNextVec_opt)(hi)
0x14C4D91D,	//0x0612		VoC_lw32_d(ACC0,0x828a)(lo)	|	VoC_lw32_sd(ACC1,0x2,DEFAULT)
0x1E03028A,	//0x0614		VoC_multf32inc_pp(REG67,REG0,REG0,DEFAULT)	|	VoC_lw32_d(ACC0,0x828a)(hi)
0x1805E005,	//0x0616		VoC_lw16i_set_inc(REG1,0xdba,0x1)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x56240DBA,	//0x0618		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xdba,0x1)(hi)
0xE703C8E3,	//0x061a		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,IN_PARALLEL)
0xDC979E03,	//0x061c		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_multf32inc_pp(REG67,REG0,REG0,DEFAULT)
		//0x061e		VoC_endloop0
0x5911C8E3,	//0x061e		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0x5630C261,	//0x0620		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x5FC5DF45,	//0x0622		VoC_push16(REG5,DEFAULT)	|	VoC_push32(ACC1,IN_PARALLEL)
0x5886DF41,	//0x0624		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0x5897F3FF,	//0x0626		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x7025DF44,	//0x0628		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_push32(ACC0,IN_PARALLEL)
0x5940DF40,	//0x062a		VoC_lw32_sd(REG01,0x7,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x2E21C32C,	//0x062c		VoC_loop_r(1,REG4)(lo)	|	VoC_sub16_rr(REG4,REG4,REG5,IN_PARALLEL)
0xC32C0679,	//0x062e		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_loop_r(1,REG4)(hi)
0x5131E023,	//0x0630		VoC_mac32inc_rp(REG6,REG1,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x5133D914,	//0x0632		VoC_mac32inc_rp(REG6,REG3,DEFAULT)	|	VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)
0x50A8F705,	//0x0634		VoC_msu32_rp(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
0xD138DF42,	//0x0636		VoC_mac32inc_rp(REG7,REG0,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0x06423184,	//0x0638		VoC_bez16_r(CII_aflatRecurLoop_skipL1,REG4)
0xD8B4E707,	//0x063a		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD91C5131,	//0x063c		VoC_lw32_sd(ACC0,0x2,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xDCA94E34,	//0x063e		VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_mac32_rr(REG6,REG4,DEFAULT)
0xD1A8D038,	//0x0640		VoC_msu32inc_rp(REG5,REG0,DEFAULT)	|	VoC_mac32_rp(REG7,REG0,DEFAULT)
		//0x0641		VoC_endloop0
		//0x0642		CII_aflatRecurLoop_skipL1
0xF7F0DF02,	//0x0642		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xC2A27033,	//0x0644		VoC_sub16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xF3FD5C29,	//0x0646		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG2,DEFAULT)
0xD822591D,	//0x0648		VoC_lw16_p(REG2,REG2,IN_PARALLEL)	|	VoC_lw32_sd(ACC1,0x2,DEFAULT)
0x02F2485A,	//0x064a		VoC_blt16_rd(CII_aflatRecurLoop_PNew,REG2,0x82f2)
0xE162DA15,	//0x064c		VoC_movreg16(REG2,ACC1_HI,DEFAULT)	|	VoC_sw16_sd(REG5,0x0,DEFAULT)
		//0x064d		CII_aflatRecurLoop_PNew
0x1B85F7F2,	//0x064e		VoC_multf32inc_rp(ACC1,REG6,REG0,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0x40A2D914,	//0x0650		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)
0xD1A9F705,	//0x0652		VoC_msu32inc_rp(REG5,REG1,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
0xFBFD513B,	//0x0654		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
0x066D3184,	//0x0656		VoC_bez16_r(CII_aflatRecurLoop_skipL2,REG4)
0xD91FD926,	//0x0658		VoC_lw32_sd(RL7,0x2,DEFAULT)	|	VoC_lw32_sd(RL6,0x3,DEFAULT)
0xE707DD1E,	//0x065a		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_sw32_sd(RL6,0x2,DEFAULT)
0xC92E1B85,	//0x065c		VoC_add32_rr(RL6,ACC0,ACC1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC1,REG6,REG0,DEFAULT)
0xD91451A9,	//0x065e		VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)	|	VoC_msu32inc_rp(REG5,REG1,DEFAULT)
0xFBFD513B,	//0x0660		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
		//0x0662		VoC_endloop0
0x7030DCAD,	//0x0662		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG2,DEFAULT)
0xE707DD27,	//0x0664		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_sw32_sd(RL7,0x3,IN_PARALLEL)
0xC92E1B85,	//0x0666		VoC_add32_rr(RL6,ACC0,ACC1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC1,REG6,REG0,DEFAULT)
0xD91451A9,	//0x0668		VoC_lw32_sd(ACC0,0x1,IN_PARALLEL)	|	VoC_msu32inc_rp(REG5,REG1,DEFAULT)
0xFBFD513B,	//0x066a		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
		//0x066c		VoC_endloop0
0xC92EDCAD,	//0x066c		VoC_add32_rr(RL6,ACC0,ACC1,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG2,DEFAULT)
		//0x066d		CII_aflatRecurLoop_skipL2
0x7032F031,	//0x066e		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x5CADD908,	//0x0670		VoC_sw16inc_p(RL6_HI,REG2,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0x5919F004,	//0x0672		VoC_lw32_sd(REG23,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x5897D886,	//0x0674		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0x5920F3FF,	//0x0676		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0xDD08E015,	//0x0678		VoC_sw32_sd(REG01,0x0,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
		//0x0679		VoC_endloop1
0xDF045F84,	//0x067a		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xDF045033,	//0x067c		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG3,DEFAULT)
0xDF055033,	//0x067e		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG3,DEFAULT)
0xDF05503A,	//0x0680		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG2,DEFAULT)
0x028A1250,	//0x0682		VoC_msu32_pd(REG2,0x828a)
0xDF835F00,	//0x0684		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x068A3184,	//0x0686		VoC_bez16_r(CII_aflatRecurLoop_no_max,REG4)
0x7FFF0A89,	//0x0688		VoC_lw16i(ACC0_HI,0x7fff)
		//0x068a		CII_aflatRecurLoop_no_max
0x7033C269,	//0x068a		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG5,DEFAULT)
0xDF40DC89,	//0x068c		VoC_push32(REG01,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,IN_PARALLEL)
0x060E31C1,	//0x068e		VoC_bnez16_r(CII_aflatRecurLoop_begin,REG1)
0xDF80DF80,	//0x0690		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDF00DFA9,	//0x0692		VoC_pop32(REG01,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0694		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0695		CII_lpcCorrQntz_opt
0x1809DF42,	//0x0696		VoC_lw16i_set_inc(REG1,0xd80,0x2)(lo)	|	VoC_push32(REG45,DEFAULT)
0x180A0D80,	//0x0698		VoC_lw16i_set_inc(REG2,0xda4,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0xd80,0x2)(hi)
0x1FBB0DA4,	//0x069a		VoC_lw16i_set_inc(REG3,0xda4,0xfffffffe)(lo)	|	VoC_lw16i_set_inc(REG2,0xda4,0x2)(hi)
0xDFC10DA4,	//0x069c		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xda4,0xfffffffe)(hi)
0xD9C7E927,	//0x069e		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0x70E6FA17,	//0x06a0		VoC_lw16i_short(REG6,0x7,DEFAULT)	|	VoC_shr32_ri(RL7,0x2,DEFAULT)
0xDDCFE0B7,	//0x06a2		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0xb,IN_PARALLEL)
0xDDDFDDD7,	//0x06a4		VoC_sw32inc_p(RL7,REG3,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x06a5		VoC_endloop0
0xFA17D9C7,	//0x06a6		VoC_shr32_ri(RL7,0x2,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFA16D9C6,	//0x06a8		VoC_shr32_ri(RL6,0x2,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDDD7DDCF,	//0x06aa		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0x1805DDD6,	//0x06ac		VoC_lw16i_set_inc(REG1,0xd6f,0x1)(lo)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
0x42700D6F,	//0x06ae		VoC_sub16_rr(REG0,REG1,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xd6f,0x1)(hi)
0x42F2C27B,	//0x06b0		VoC_sub16_rr(REG2,REG3,REG6,DEFAULT)	|	VoC_sub16_rr(REG3,REG1,REG7,IN_PARALLEL)
0x4335C2FC,	//0x06b2		VoC_sub16_rr(REG5,REG4,REG6,DEFAULT)	|	VoC_sub16_rr(REG4,REG3,REG7,IN_PARALLEL)
0x1805DF40,	//0x06b4		VoC_lw16i_set_inc(REG1,0xd6d,0x1)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0x5F820D6D,	//0x06b6		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xd6d,0x1)(hi)
0x5F41DF42,	//0x06b8		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG45,IN_PARALLEL)
0x14C7F004,	//0x06ba		VoC_lw32_d(RL7,0x828a)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x93D6028A,	//0x06bc		VoC_add32inc_rp(RL6,RL7,REG2,DEFAULT)	|	VoC_lw32_d(RL7,0x828a)(hi)
0x93D593D4,	//0x06be		VoC_add32inc_rp(ACC1,RL7,REG2,DEFAULT)	|	VoC_add32inc_rp(ACC0,RL7,REG2,DEFAULT)
0xDC89DC8D,	//0x06c0		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)
0xDC99DC8B,	//0x06c2		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)
0x93D6DC9D,	//0x06c4		VoC_add32inc_rp(RL6,RL7,REG2,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG1,DEFAULT)
0x5C9BDC99,	//0x06c6		VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0xDC9DE012,	//0x06c8		VoC_sw16inc_p(RL6_HI,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
		//0x06ca		CII_lpcCorrQntz_opt_iSeg_loop
0xF001DFC2,	//0x06ca		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x52BD0AC5,	//0x06cc		VoC_lw16i(REG5,0xd2bd)
0x520A0AC6,	//0x06ce		VoC_lw16i(REG6,0xd20a)
0x526A0ACE,	//0x06d0		VoC_lw16i(RL7_LO,0xd26a)
0x529A0ACF,	//0x06d2		VoC_lw16i(RL7_HI,0xd29a)
0x05F82B80,	//0x06d4		VoC_jal(CII_aflatRecursionLoop_opt)
0x0A80F084,	//0x06d6		VoC_lw16i(REG0,0x43f4)(lo)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x0A8343F4,	//0x06d8		VoC_lw16i(REG3,0x43b2)(lo)	|	VoC_lw16i(REG0,0x43f4)(hi)
0x2B8043B2,	//0x06da		VoC_jal(CII_findBestInQuantList_opt)(lo)	|	VoC_lw16i(REG3,0x43b2)(hi)
0xDFC407E8,	//0x06dc		VoC_push16(REG4,DEFAULT)	|	VoC_jal(CII_findBestInQuantList_opt)(hi)
		//0x06dd		CII_lpcCorrQntz_opt_iVec_loop
0x04360864,	//0x06de		VoC_mult16_rd(REG4,REG4,0x8436)
0x44FD180A,	//0x06e0		VoC_lw16i_set_inc(REG2,0x44fd,0x2)
0xD622C2A4,	//0x06e2		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)
0x0AC5D841,	//0x06e4		VoC_lw16i(REG5,0xd2b9)(lo)	|	VoC_lw16_p(REG1,REG4,DEFAULT)
0x0AC652B9,	//0x06e6		VoC_lw16i(REG6,0xc10a)(lo)	|	VoC_lw16i(REG5,0xd2b9)(hi)
0x0ACE410A,	//0x06e8		VoC_lw16i(RL7_LO,0xcd0a)(lo)	|	VoC_lw16i(REG6,0xc10a)(hi)
0x0ACF4D0A,	//0x06ea		VoC_lw16i(RL7_HI,0xd00a)(lo)	|	VoC_lw16i(RL7_LO,0xcd0a)(hi)
0x2B80500A,	//0x06ec		VoC_jal(CII_aflatRecursionLoop_opt)(lo)	|	VoC_lw16i(RL7_HI,0xd00a)(hi)
0xF02405F8,	//0x06ee		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_jal(CII_aflatRecursionLoop_opt)(hi)
0x44FC0A80,	//0x06f0		VoC_lw16i(REG0,0x44fc)
0x43B20A83,	//0x06f2		VoC_lw16i(REG3,0x43b2)
0x07E82B80,	//0x06f4		VoC_jal(CII_findBestInQuantList_opt)
0xE0235622,	//0x06f6		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x04360856,	//0x06f8		VoC_mult16_rd(REG6,REG2,0x8436)
0x44FC1808,	//0x06fa		VoC_lw16i_set_inc(REG0,0x44fc,0x2)
0xC1864181,	//0x06fc		VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG0,DEFAULT)
0xF009401C,	//0x06fe		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG0,REG3,DEFAULT)
0xD844C05D,	//0x0700		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_add16_rr(REG5,REG1,REG3,DEFAULT)
0x5F83D855,	//0x0702		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x4063E017,	//0x0704		VoC_be16_rd(CII_lpcCorrQntz_opt_copy,REG3,0xbab0)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x34AC3AB0,	//0x0706		VoC_bngt16_rr(CII_lpcCorrQntz_opt_no_copy,REG5,REG4)(lo)	|	VoC_be16_rd(CII_lpcCorrQntz_opt_copy,REG3,0xbab0)(hi)
0xD9C4070D,	//0x0708		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_bngt16_rr(CII_lpcCorrQntz_opt_no_copy,REG5,REG4)(hi)
		//0x0709		CII_lpcCorrQntz_opt_copy
0xD9C4EC22,	//0x070a		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x21,DEFAULT)
		//0x070c		VoC_endloop0
0xC2FCDDCC,	//0x070c		VoC_sub16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x070d		CII_lpcCorrQntz_opt_no_copy
0x06DD31C4,	//0x070e		VoC_bnez16_r(CII_lpcCorrQntz_opt_iVec_loop,REG4)
0x0AC6C1BB,	//0x0710		VoC_lw16i(REG6,0xc10a)(lo)	|	VoC_add16_rr(REG3,REG6,REG7,DEFAULT)
0x0ACE410A,	//0x0712		VoC_lw16i(RL7_LO,0xcd0a)(lo)	|	VoC_lw16i(REG6,0xc10a)(hi)
0x0ACF4D0A,	//0x0714		VoC_lw16i(RL7_HI,0xd00a)(lo)	|	VoC_lw16i(RL7_LO,0xcd0a)(hi)
0xD833500A,	//0x0716		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16i(RL7_HI,0xd00a)(hi)
0x084C2B80,	//0x0718		VoC_jal(CII_setupPreQ)
0x07D3D921,	//0x071a		VoC_sub16_rd(REG3,REG2,0x8384)(lo)	|	VoC_lw32_sd(REG23,0x3,DEFAULT)
0x2B800384,	//0x071c		VoC_jal(CII_getNextVec_opt)(lo)	|	VoC_sub16_rd(REG3,REG2,0x8384)(hi)
0xD6170816,	//0x071e		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_jal(CII_getNextVec_opt)(hi)
0x3AAF4867,	//0x0720		VoC_blt16_rd(CII_lpcCorrQntz_opt_no_NewRecur1,REG7,0xbaaf)
0x07D32B00,	//0x0722		VoC_jump_lg(CII_lpcCorrQntz_opt_no_NewRecur)
		//0x0724		CII_lpcCorrQntz_opt_no_NewRecur1
0x0D801808,	//0x0724		VoC_lw16i_set_inc(REG0,0xd80,0x2)
0x0DA61809,	//0x0726		VoC_lw16i_set_inc(REG1,0xda6,0x2)
0x3AB0087E,	//0x0728		VoC_mult16_rd(REG6,REG7,0xbab0)
0x53BE0AC3,	//0x072a		VoC_lw16i(REG3,0xd3be)
0xD921419E,	//0x072c		VoC_lw32_sd(REG23,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0x80B2D91A,	//0x072e		VoC_add16_rp(REG2,REG2,REG6,DEFAULT)	|	VoC_lw32_sd(REG45,0x2,DEFAULT)
0x038407D2,	//0x0730		VoC_sub16_rd(REG2,REG2,0x8384)
0x0A84DF42,	//0x0732		VoC_lw16i(REG4,0x4604)(lo)	|	VoC_push32(REG45,DEFAULT)
0x0A854604,	//0x0734		VoC_lw16i(REG5,0x462a)(lo)	|	VoC_lw16i(REG4,0x4604)(hi)
0x5FC2462A,	//0x0736		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i(REG5,0x462a)(hi)
0x5F42DF40,	//0x0738		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x184BF8F7,	//0x073a		VoC_lw16i_set_inc(REG3,0xd3be,0x2)(lo)	|	VoC_shr16_ri(REG7,0xfffffffe,IN_PARALLEL)
0x40FB53BE,	//0x073c		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xd3be,0x2)(hi)
0x180AE0A4,	//0x073e		VoC_lw16i_set_inc(REG2,0x463e,0x2)(lo)	|	VoC_lw16i_short(REG4,0xa,IN_PARALLEL)
0xD8B5463E,	//0x0740		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x463e,0x2)(hi)
0xD8B7D8B6,	//0x0742		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x1FBBD8B7,	//0x0744		VoC_lw16i_set_inc(REG3,0x4664,0xfffffffe)(lo)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0x432D4664,	//0x0746		VoC_sub16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x4664,0xfffffffe)(hi)
0x5F41E004,	//0x0748		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x5F43DFC3,	//0x074a		VoC_push32(REG67,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0xDFC4DFC5,	//0x074c		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG5,IN_PARALLEL)
0xD654DFC4,	//0x074e		VoC_lw16_sd(REG4,0x4,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
		//0x074f		CII_afNBR_loop_start
0x9D23E023,	//0x0750		VoC_multf32_pp(REG67,REG4,REG4,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x095BF02E,	//0x0752		VoC_add32_rd(REG67,REG67,0x828a)(lo)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0xD846028A,	//0x0754		VoC_lw16_p(REG6,REG4,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x828a)(hi)
0x07782E29,	//0x0756		VoC_loop_r(1,REG5)
0xF6C459CC,	//0x0758		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0x0B2B2B80,	//0x075a		VoC_jal(CII_L_mpy_ls_opt)
0x59C49105,	//0x075c		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add32_rp(ACC1,ACC0,REG0,DEFAULT)
0x2B80F6E4,	//0x075e		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_movreg16(REG4,REG7,IN_PARALLEL)
0xC92D0B2B,	//0x0760		VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xF6C459DC,	//0x0762		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x0B2B2B80,	//0x0764		VoC_jal(CII_L_mpy_ls_opt)
0x3307C92D,	//0x0766		VoC_bez32_r(CII_afNBR_swNShift_cmpt,RL7)(lo)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xDFC00775,	//0x0768		VoC_push16(REG0,DEFAULT)	|	VoC_bez32_r(CII_afNBR_swNShift_cmpt,RL7)(hi)
0xF7625FC2,	//0x076a		VoC_movreg16(REG2,ACC1_HI,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x0BF42B80,	//0x076c		VoC_jal(CII_norm_s_opt)
0x0744DF82,	//0x076e		VoC_add16_rd(REG4,REG0,0xbaae)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x5F803AAE,	//0x0770		VoC_pop16(REG0,DEFAULT)	|	VoC_add16_rd(REG4,REG0,0xbaae)(hi)
0xFF47F008,	//0x0772		VoC_lw32z(RL7,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xD614DA14,	//0x0774		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_sw16_sd(REG4,0x0,DEFAULT)
		//0x0775		CII_afNBR_swNShift_cmpt
0xFFC0FEA5,	//0x0776		VoC_NOP	|	VoC_shr32_rr(ACC1,REG4,DEFAULT)
		//0x0778		VoC_endloop1
0xFF1FDDD5,	//0x0778		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xE0165634,	//0x077a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xC3345642,	//0x077c		VoC_sub16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x3,DEFAULT)
0xF68778FC,	//0x077e		VoC_movreg16(REG7,REG4,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xC0A25A34,	//0x0780		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x2,DEFAULT)
0xF3F84134,	//0x0782		VoC_lw16i_short(INC0,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF00B77D1,	//0x0784		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0xF3FA6713,	//0x0786		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xF7E459DC,	//0x0788		VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x0B2B2B80,	//0x078a		VoC_jal(CII_L_mpy_ls_opt)
0x59C4930D,	//0x078c		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add32inc_rp(ACC1,ACC0,REG1,DEFAULT)
0x2B80F7C4,	//0x078e		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)
0xFBFC0B2B,	//0x0790		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0x31C7C92D,	//0x0792		VoC_bnez16_r(CII_afNBR_incr_invert,REG7)(lo)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xF0500796,	//0x0794		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_bnez16_r(CII_afNBR_incr_invert,REG7)(hi)
		//0x0796		CII_afNBR_incr_invert
0xFEA5D614,	//0x0796		VoC_shr32_rr(ACC1,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xDDD5C3F7,	//0x0798		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
		//0x0799		VoC_endloop0
0xD90B5624,	//0x079a		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0xD9117027,	//0x079c		VoC_lw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xD9185625,	//0x079e		VoC_lw32_sd(REG01,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0x07F6E43D,	//0x07a0		VoC_sub16_rd(REG6,REG6,0xbaae)(lo)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0x34B43AAE,	//0x07a2		VoC_bngt16_rr(CII_afNBR_swap1,REG6,REG4)(lo)	|	VoC_sub16_rd(REG6,REG6,0xbaae)(hi)
0x31C507AB,	//0x07a4		VoC_bnez16_r(CII_afNBR_swap1,REG5)(lo)	|	VoC_bngt16_rr(CII_afNBR_swap1,REG6,REG4)(hi)
0x604007AB,	//0x07a6		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_bnez16_r(CII_afNBR_swap1,REG5)(hi)
0x6061F602,	//0x07a8		VoC_movreg16(REG1,REG3,DEFAULT)	|	VoC_movreg16(REG2,REG0,IN_PARALLEL)
0xF051F623,	//0x07aa		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_movreg16(REG3,REG1,IN_PARALLEL)
		//0x07ab		CII_afNBR_swap1
0x07B335A6,	//0x07ac		VoC_bne16_rr(CII_afNBR_swap2,REG4,REG6)
0x07B231C5,	//0x07ae		VoC_bnez16_r(CII_afNBR_swap3,REG5)
0xF6616040,	//0x07b0		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_movreg16(REG0,REG2,DEFAULT)
		//0x07b2		CII_afNBR_swap3
0xD655D921,	//0x07b2		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_lw32_sd(REG23,0x3,DEFAULT)
		//0x07b3		CII_afNBR_swap2
0x413CC17D,	//0x07b4		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xDA55D90B,	//0x07b6		VoC_sw16_sd(REG5,0x4,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,IN_PARALLEL)
0xF3FB5A24,	//0x07b8		VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)	|	VoC_sw16_sd(REG4,0x1,DEFAULT)
0x5A43D635,	//0x07ba		VoC_sw16_sd(REG3,0x3,DEFAULT)	|	VoC_lw16_sd(REG5,0x2,DEFAULT)
0x35A6F00A,	//0x07bc		VoC_bne16_rr(CII_afNBR_loop_start,REG4,REG6)(lo)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xE8A2074F,	//0x07be		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_bne16_rr(CII_afNBR_loop_start,REG4,REG6)(hi)
0x5F84FF01,	//0x07c0		VoC_pop16(REG4,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
		//0x07c1		VoC_endloop0
0x7030DF00,	//0x07c2		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0x14C4F005,	//0x07c4		VoC_lw32_d(ACC0,0x828a)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x67C3028A,	//0x07c6		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw32_d(ACC0,0x828a)(hi)
0x93159315,	//0x07c8		VoC_add32inc_rp(ACC1,ACC0,REG2,DEFAULT)	|	VoC_add32inc_rp(ACC1,ACC0,REG2,IN_PARALLEL)
		//0x07ca		VoC_endloop0
0x6062DC8B,	//0x07ca		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)
0x67C5F620,	//0x07cc		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_movreg16(REG0,REG1,IN_PARALLEL)
0x9316F3FD,	//0x07ce		VoC_add32inc_rp(RL6,ACC0,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xDC8D931F,	//0x07d0		VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_add32inc_rp(RL7,ACC0,REG3,DEFAULT)
		//0x07d2		VoC_endloop0
0xDF82DC9F,	//0x07d2		VoC_pop16(REG2,DEFAULT)	|	VoC_sw16inc_p(RL7_HI,REG1,DEFAULT)
		//0x07d3		CII_lpcCorrQntz_opt_no_NewRecur
0x0752F052,	//0x07d4		VoC_add16_rd(REG2,REG2,0x8384)(lo)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x0B530384,	//0x07d6		VoC_sub16_dr(REG3,0xbab0,REG2)(lo)	|	VoC_add16_rd(REG2,REG2,0x8384)(hi)
0x31C33AB0,	//0x07d8		VoC_bnez16_r(CII_lpcCorrQntz_opt_iSeg_loop,REG3)(lo)	|	VoC_sub16_dr(REG3,0xbab0,REG2)(hi)
0x5FA906CA,	//0x07da		VoC_pop16(RA,DEFAULT)	|	VoC_bnez16_r(CII_lpcCorrQntz_opt_iSeg_loop,REG3)(hi)
0x7031DF00,	//0x07dc		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0xDF00DF00,	//0x07de		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0x453F1A08,	//0x07e0		VoC_lw16i_set_inc(REG0,0x453f,0x42)
0xD887DF01,	//0x07e2		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xD887E862,	//0x07e4		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x07e6		VoC_endloop0
0xE580DCB7,	//0x07e6		VoC_return	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x07e8		CII_findBestInQuantList_opt
0x1441DFC0,	//0x07e8		VoC_lw16_d(REG1,0x82ac)(lo)	|	VoC_push16(REG0,DEFAULT)
0x702502AC,	//0x07ea		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16_d(REG1,0x82ac)(hi)
0xD8B2D8B6,	//0x07ec		VoC_lw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)
0xDC85E705,	//0x07ee		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x0740DC82,	//0x07f0		VoC_add16_rd(REG0,REG0,0x8434)(lo)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xDC010434,	//0x07f2		VoC_sw16_p(REG1,REG0,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x8434)(hi)
		//0x07f3		VoC_endloop0
0xF1085F80,	//0x07f4		VoC_lw16i_short(INC0,0x42,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x3AAE0740,	//0x07f6		VoC_add16_rd(REG0,REG0,0xbaae)
0xF1094229,	//0x07f8		VoC_lw16i_short(INC1,0x42,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG5,DEFAULT)
0xDF40FFC0,	//0x07fa		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0x08132E31,	//0x07fc		VoC_loop_r(1,REG6)
0xE00658B5,	//0x07fe		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xD9086712,	//0x0800		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0x080E31C6,	//0x0802		VoC_bnez16_r(findBestInQuantList_LABEL3,REG6)
0x343DD807,	//0x0804		VoC_bgt16_rr(findBestInQuantList_LABEL1,REG7,REG5)(lo)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x5E08080A,	//0x0806		VoC_inc_p(REG1,DEFAULT)	|	VoC_bgt16_rr(findBestInQuantList_LABEL1,REG7,REG5)(hi)
0xE5C9DE00,	//0x0808		VoC_jump(findBestInQuantList_LABEL2)	|	VoC_inc_p(REG0,IN_PARALLEL)
		//0x080a		findBestInQuantList_LABEL1
0xD8177026,	//0x080a		VoC_lw16_p(REG7,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xE5C3DC92,	//0x080c		VoC_jump(findBestInQuantList_LABEL4)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
		//0x080e		findBestInQuantList_LABEL3
0xDC97D817,	//0x080e		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
		//0x0810		findBestInQuantList_LABEL4
0xDC85D805,	//0x0810		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
		//0x0812		findBestInQuantList_LABEL2
		//0x0812		VoC_endloop0
0xDE10FFC0,	//0x0812		VoC_inc_p(REG2,DEFAULT)	|	VoC_NOP
		//0x0813		VoC_endloop1
0xE580DF00,	//0x0814		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0816		CII_getNextVec_opt
0x0A832005,	//0x0816		VoC_lw16d_set_inc(REG1,0xa83,0x1)
0x0A7E0709,	//0x0818		VoC_add16_rd(REG1,REG1,0xa7e)
0x52C20AC0,	//0x081a		VoC_lw16i(REG0,0xd2c2)
0xD8947005,	//0x081c		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFBC26086,	//0x081e		VoC_shr32_ri(REG45,0xfffffff8,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x00FF1606,	//0x0820		VoC_and16_ri(REG6,0xff)
0xD8944187,	//0x0822		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG6,REG0,DEFAULT)
0x0A80071B,	//0x0824		VoC_add16_rd(REG3,REG3,0xa80)
0xD8774146,	//0x0826		VoC_lw16_p(REG7,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG0,DEFAULT)
0x0A7E0789,	//0x0828		VoC_sub16_rd(REG1,REG1,0xa7e)
0xE0055866,	//0x082a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xDF43E087,	//0x082c		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0x00FF1607,	//0x082e		VoC_and16_ri(REG7,0xff)
0xC1C77BC2,	//0x0830		VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xE0354146,	//0x0832		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG0,DEFAULT)
0xC0EA5877,	//0x0834		VoC_add16_rr(REG2,REG3,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xDF025866,	//0x0836		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x0A816C0D,	//0x0838		VoC_bez16_d(N_iThree_L2,0xa81)
0x0A826E07,	//0x083a		VoC_bnez16_d(N_iThree_L1,0xa82)
0xF6A47020,	//0x083c		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF6E660C5,	//0x083e		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF000E5C6,	//0x0840		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jump(N_iThree_LE)
		//0x0841		N_iThree_L1
0x038407C9,	//0x0842		VoC_sub16_rd(REG1,REG1,0x8384)
0xDC27E5C2,	//0x0844		VoC_sw16_p(REG7,REG2,DEFAULT)	|	VoC_jump(N_iThree_LE)
		//0x0845		N_iThree_L2
		//0x0846		N_iThree_LE
0xDCB5DCB4,	//0x0846		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x1580DC36,	//0x0848		VoC_sw32_d(REG01,0xa82)(lo)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
0xE5800A82,	//0x084a		VoC_return	|	VoC_sw32_d(REG01,0xa82)(hi)
		//0x084c		CII_setupPreQ
0xC2B9F027,	//0x084c		VoC_sub16_rr(REG1,REG2,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x0AC0F8F1,	//0x084e		VoC_lw16i(REG0,0xd3c2)(lo)	|	VoC_shr16_ri(REG1,0xfffffffe,DEFAULT)
0xC04053C2,	//0x0850		VoC_add16_rr(REG0,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG0,0xd3c2)(hi)
0xD805C03C,	//0x0852		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_add16_rr(REG4,REG0,REG7,DEFAULT)
0x1505B928,	//0x0854		VoC_sw16_d(REG5,0xa80)(lo)	|	VoC_sub16_pr(REG0,REG4,REG5,DEFAULT)
0x40580A80,	//0x0856		VoC_be16_rd(SETUPPREQ_100,REG0,0xbaae)(lo)	|	VoC_sw16_d(REG5,0xa80)(hi)
0xF0073AAE,	//0x0858		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_be16_rd(SETUPPREQ_100,REG0,0xbaae)(hi)
		//0x085a		SETUPPREQ_100
0xF7C57024,	//0x085a		VoC_movreg16(REG5,RL7_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x3AAE406A,	//0x085c		VoC_be16_rd(SETUPPREQ_2,REG2,0xbaae)
0x3AAF40E2,	//0x085e		VoC_be16_rd(SETUPPREQ_3,REG2,0xbaaf)
0xE060E0C5,	//0x0860		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x0861		SETUPPREQ_2
0x3AAF085B,	//0x0862		VoC_mult16_rd(REG3,REG3,0xbaaf)
0xF80BE420,	//0x0864		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_and16_rr(REG0,REG4,DEFAULT)
0x086C3180,	//0x0866		VoC_bez16_r(SETUPPREQ_end,REG0)
0xE5C3F004,	//0x0868		VoC_jump(SETUPPREQ_end)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x086a		SETUPPREQ_3
0xF8FB61E5,	//0x086a		VoC_shr16_ri(REG3,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG5,RL7_HI,DEFAULT)
		//0x086c		SETUPPREQ_end
0x0A811507,	//0x086c		VoC_sw16_d(REG7,0xa81)
0x0A7E1505,	//0x086e		VoC_sw16_d(REG5,0xa7e)
0x0A831503,	//0x0870		VoC_sw16_d(REG3,0xa83)
0x0A821504,	//0x0872		VoC_sw16_d(REG4,0xa82)
0xDFE9E580,	//0x0874		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0875		CII_flat_recursion_opt
0xDD09DD10,	//0x0876		VoC_sw32_sd(REG23,0x0,DEFAULT)	|	VoC_sw32_sd(REG01,0x1,DEFAULT)
0xD919D920,	//0x0878		VoC_lw32_sd(REG23,0x2,DEFAULT)	|	VoC_lw32_sd(REG01,0x3,DEFAULT)
0x59CDD9C4,	//0x087a		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x59D6FEB4,	//0x087c		VoC_lw32inc_p(RL6,REG2,DEFAULT)	|	VoC_shr32_rr(ACC0,REG6,IN_PARALLEL)
0x59DFFEB5,	//0x087e		VoC_lw32inc_p(RL7,REG3,DEFAULT)	|	VoC_shr32_rr(ACC1,REG6,IN_PARALLEL)
0x5D44FEB6,	//0x0880		VoC_sw32_sd(ACC0,0x7,DEFAULT)	|	VoC_shr32_rr(RL6,REG6,IN_PARALLEL)
0x5D3DFEB7,	//0x0882		VoC_sw32_sd(ACC1,0x6,DEFAULT)	|	VoC_shr32_rr(RL7,REG6,IN_PARALLEL)
0x2B80C92C,	//0x0884		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
0xDD360B2B,	//0x0886		VoC_sw32_sd(RL6,0x5,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0x5D2FFF25,	//0x0888		VoC_sw32_sd(RL7,0x4,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x2B80C9F4,	//0x088a		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_add32_rr(ACC0,RL7,RL6,IN_PARALLEL)
0xDFA90B2B,	//0x088c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xDD20FF26,	//0x088e		VoC_sw32_sd(REG01,0x3,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xD910DD19,	//0x0890		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_sw32_sd(REG23,0x2,DEFAULT)
0xE580D909,	//0x0892		VoC_return	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
		//0x0894		CII_flat_opt
0x0A82DFE9,	//0x0894		VoC_lw16i(REG2,0xd32)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A830D32,	//0x0896		VoC_lw16i(REG3,0x4542)(lo)	|	VoC_lw16i(REG2,0xd32)(hi)
0x0A844542,	//0x0898		VoC_lw16i(REG4,0x43b2)(lo)	|	VoC_lw16i(REG3,0x4542)(hi)
0xDFC143B2,	//0x089a		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i(REG4,0x43b2)(hi)
0xDF415FC4,	//0x089c		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xDFC1DFC0,	//0x089e		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDFC3DFC2,	//0x08a0		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xF229DFC4,	//0x08a2		VoC_lw16i_short(ACC0_HI,0x11,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x7F0B0A88,	//0x08a4		VoC_lw16i(ACC0_LO,0x7f0b)
0x08AA2D40,	//0x08a6		VoC_loop_i(0x0,0xa0)
0xF81ED886,	//0x08a8		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x08aa		VoC_endloop0
0xD650CE36,	//0x08aa		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_mac32_rr(REG6,REG6,DEFAULT)
0x54AA0741,	//0x08ac		VoC_add16_rd(REG1,REG0,0xd4aa)
0xE948FF26,	//0x08ae		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xD894D886,	//0x08b0		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF81C781E,	//0x08b2		VoC_shr16_ri(REG4,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
0xCE24CEB6,	//0x08b4		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_msu32_rr(REG6,REG6,DEFAULT)
0xE526FFC0,	//0x08b6		VoC_or32_rr(RL6,ACC0,DEFAULT)	|	VoC_NOP
		//0x08b7		VoC_endloop0
0x2B80FF34,	//0x08b8		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0xF0070188,	//0x08ba		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AB20B49,	//0x08bc		VoC_sub16_dr(REG1,0xbab2,REG1)
0x08C43201,	//0x08be		VoC_bltz16_r(COV32a,REG1)
0xC077F026,	//0x08c0		VoC_add16_rr(REG7,REG1,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC1F7F80F,	//0x08c2		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x08c4		COV32a
0xF8FEE0E6,	//0x08c4		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xDFC6D650,	//0x08c6		VoC_push16(REG6,DEFAULT)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x0EC21805,	//0x08c8		VoC_lw16i_set_inc(REG1,0xec2,0x1)
0x2D54D884,	//0x08ca		VoC_loop_i(0x0,0xaa)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFE3C08CF,	//0x08cc		VoC_shr16_rr(REG4,REG7,DEFAULT)	|	VoC_loop_i(0x0,0xaa)(hi)
0xDC94D884,	//0x08ce		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x08cf		VoC_endloop0
0x2C15F7E5,	//0x08d0		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0xFF44097C,	//0x08d2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x0384076D,	//0x08d4		VoC_add16_rd(REG5,REG5,0x8384)
0x0ECC180B,	//0x08d6		VoC_lw16i_set_inc(REG3,0xecc,0x2)
0xC2E8F050,	//0x08d8		VoC_sub16_rr(REG0,REG3,REG5,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xE200DFC7,	//0x08da		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x08DF2CA0,	//0x08dc		VoC_loop_i(0x0,0x50)
0xD233D9C3,	//0x08de		VoC_bimac32inc_rp(REG67,REG3)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x08df		VoC_endloop0
0xF0075F87,	//0x08e0		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x31C5F030,	//0x08e2		VoC_bnez16_r(LAP1,REG5)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDFC708E7,	//0x08e4		VoC_push16(REG7,DEFAULT)	|	VoC_bnez16_r(LAP1,REG5)(hi)
0xFF25FF26,	//0x08e6		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
		//0x08e7		LAP1
0x0CF00A81,	//0x08e8		VoC_lw16i(REG1,0xcf0)
0xC069C069,	//0x08ea		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x3AB54CF5,	//0x08ec		VoC_bnlt16_rd(cov32kk,REG5,0xbab5)
0x3185DD8C,	//0x08ee		VoC_bez16_r(LAP2,REG5)(lo)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
0x1807090B,	//0x08f0		VoC_lw16i_set_inc(REG3,0xecc,0x1)(lo)	|	VoC_bez16_r(LAP2,REG5)(hi)
0xC2E80ECC,	//0x08f2		VoC_sub16_rr(REG0,REG3,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xecc,0x1)(hi)
0xD1B0D8B6,	//0x08f4		VoC_msu32inc_rp(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xD886E743,	//0x08f6		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDD8CD1B3,	//0x08f8		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_msu32inc_rp(REG6,REG3,DEFAULT)
		//0x08f9		VoC_endloop0
		//0x08fa		cov32kk
0x5617FF2C,	//0x08fa		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0x0AC7FEBC,	//0x08fc		VoC_lw16i(REG7,0xd5ea)(lo)	|	VoC_shr32_rr(ACC0,REG7,IN_PARALLEL)
0xC1EF55EA,	//0x08fe		VoC_add16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_lw16i(REG7,0xd5ea)(hi)
0xDF42C1EF,	//0x0900		VoC_push32(REG45,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
0xFF22D9BB,	//0x0902		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_lw32_p(REG67,REG7,DEFAULT)
0x2B80DF43,	//0x0904		VoC_jal(CII_L_mpy_ll_opt)(lo)	|	VoC_push32(REG67,DEFAULT)
0xDF070B1E,	//0x0906		VoC_pop32(RL7,DEFAULT)	|	VoC_jal(CII_L_mpy_ll_opt)(hi)
0xFF2C7F25,	//0x0908		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xF7F1DF02,	//0x090a		VoC_lw16i_short(INC1,0xffffffff,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
		//0x090b		LAP2
0x3AB60B6C,	//0x090c		VoC_sub16_dr(REG4,0xbab6,REG5)
0x0F6B1FBC,	//0x090e		VoC_lw16i_set_inc(REG0,0xf6b,0xffffffff)
0x1FBEC229,	//0x0910		VoC_lw16i_set_inc(REG2,0xecb,0xffffffff)(lo)	|	VoC_sub16_rr(REG1,REG0,REG5,DEFAULT)
0x0A860ECB,	//0x0912		VoC_lw16i(REG6,0xf6c)(lo)	|	VoC_lw16i_set_inc(REG2,0xecb,0xffffffff)(hi)
0xC1760F6C,	//0x0914		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_lw16i(REG6,0xf6c)(hi)
0xF7F3C176,	//0x0916		VoC_lw16i_short(INC3,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x31C5C2AB,	//0x0918		VoC_bnez16_r(LAP8,REG5)(lo)	|	VoC_sub16_rr(REG3,REG2,REG5,DEFAULT)
0xDDB6091C,	//0x091a		VoC_sw32_p(RL6,REG6,DEFAULT)	|	VoC_bnez16_r(LAP8,REG5)(hi)
		//0x091c		LAP8
0xD887E708,	//0x091c		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD8A7D1B9,	//0x091e		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_msu32inc_rp(REG7,REG1,DEFAULT)
0x0776D13B,	//0x0920		VoC_add16_rd(REG6,REG6,0xbaae)(lo)	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
0xE5263AAE,	//0x0922		VoC_or32_rr(RL6,ACC0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0xbaae)(hi)
		//0x0924		VoC_endloop0
0x31C5DDB4,	//0x0924		VoC_bnez16_r(LAP3,REG5)(lo)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0xDF460944,	//0x0926		VoC_push32(RL6,DEFAULT)	|	VoC_bnez16_r(LAP3,REG5)(hi)
0xDF047F26,	//0x0928		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x01882B80,	//0x092a		VoC_jal(CII_NORM_L_ACC0)
0xC38ED626,	//0x092c		VoC_sub16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,DEFAULT)
0x03840B4F,	//0x092e		VoC_sub16_dr(REG7,0x8384,REG1)
0xFEBD7EBE,	//0x0930		VoC_shr32_rr(ACC1,REG7,IN_PARALLEL)	|	VoC_shr32_rr(RL6,REG7,DEFAULT)
0xFF35C9AE,	//0x0932		VoC_movreg32(ACC1,RL6,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
0x000829C5,	//0x0934		VoC_and32_rd(ACC1,0x8008)
0x093B3345,	//0x0936		VoC_bnez32_r(cov32and,ACC1)
0x07F6FBFE,	//0x0938		VoC_sub16_rd(REG6,REG6,0x8384)(lo)	|	VoC_shr32_ri(RL6,0xffffffff,DEFAULT)
0xDF460384,	//0x093a		VoC_push32(RL6,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x8384)(hi)
		//0x093b		cov32and
0x0B4FDA26,	//0x093c		VoC_sub16_dr(REG7,0xbaae,REG1)(lo)	|	VoC_sw16_sd(REG6,0x1,DEFAULT)
0x14853AAE,	//0x093e		VoC_lw32_d(ACC1,0xf6c)(lo)	|	VoC_sub16_dr(REG7,0xbaae,REG1)(hi)
0xFEBD0F6C,	//0x0940		VoC_shr32_rr(ACC1,REG7,DEFAULT)	|	VoC_lw32_d(ACC1,0xf6c)(hi)
0xFF2CDFC7,	//0x0942		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
		//0x0944		LAP3
0x0A86D642,	//0x0944		VoC_lw16i(REG6,0xf6e)(lo)	|	VoC_lw16_sd(REG2,0x3,DEFAULT)
0x56500F6E,	//0x0946		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_lw16i(REG6,0xf6e)(hi)
0x0753F0B0,	//0x0948		VoC_add16_rd(REG3,REG2,0xbd92)(lo)	|	VoC_lw16i_short(INC0,0x2c,IN_PARALLEL)
0x086F3D92,	//0x094a		VoC_mult16_rd(REG7,REG5,0xbab0)(lo)	|	VoC_add16_rd(REG3,REG2,0xbd92)(hi)
0x56613AB0,	//0x094c		VoC_lw16_sd(REG1,0x5,DEFAULT)	|	VoC_mult16_rd(REG7,REG5,0xbab0)(hi)
0x4038F0B3,	//0x094e		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_short(INC3,0x2c,IN_PARALLEL)
0xC079F0B2,	//0x0950		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i_short(INC2,0x2c,IN_PARALLEL)
0x086FC0BA,	//0x0952		VoC_mult16_rd(REG7,REG5,0xbd92)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x07D23D92,	//0x0954		VoC_sub16_rd(REG2,REG2,0xbab0)(lo)	|	VoC_mult16_rd(REG7,REG5,0xbd92)(hi)
0xC0FB3AB0,	//0x0956		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0xbab0)(hi)
0xC176C176,	//0x0958		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x3185DDC5,	//0x095a		VoC_bez16_r(LAP10,REG5)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDD95095E,	//0x095c		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_bez16_r(LAP10,REG5)(hi)
		//0x095e		LAP10
0xD617DE10,	//0x095e		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0xF0B1671A,	//0x0960		VoC_lw16i_short(INC1,0x2c,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0x0776D9B4,	//0x0962		VoC_add16_rd(REG6,REG6,0xbaae)(lo)	|	VoC_lw32_p(ACC0,REG6,DEFAULT)
0xFEBC3AAE,	//0x0964		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0xbaae)(hi)
0x09703185,	//0x0966		VoC_bez16_r(LAP7,REG5)
0xFF3B5F43,	//0x0968		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xFF225F42,	//0x096a		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x0B1E2B80,	//0x096c		VoC_jal(CII_L_mpy_ll_opt)
0xDF03DF02,	//0x096e		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
		//0x0970		LAP7
0x03844074,	//0x0970		VoC_be16_rd(LAP5,REG4,0x8384)
0xDDC4DDD4,	//0x0972		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE5C4DDDC,	//0x0974		VoC_jump(LAP6)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0976		LAP5
0x09793185,	//0x0976		VoC_bez16_r(LAP6,REG5)
0xDDCCDDD4,	//0x0978		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x0979		LAP6
		//0x097a		VoC_endloop0
0x038407E4,	//0x097a		VoC_sub16_rd(REG4,REG4,0x8384)
		//0x097c		VoC_endloop1
0x1808FF44,	//0x097c		VoC_lw16i_set_inc(REG0,0xec2,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x18090EC2,	//0x097e		VoC_lw16i_set_inc(REG1,0xecc,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xec2,0x2)(hi)
0x2CA10ECC,	//0x0980		VoC_loop_i(0x1,0x50)(lo)	|	VoC_lw16i_set_inc(REG1,0xecc,0x2)(hi)
0xD9C30984,	//0x0982		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x50)(hi)
		//0x0984		VoC_endloop1
0x14C3D231,	//0x0984		VoC_lw32_d(REG67,0xd5fe)(lo)	|	VoC_bimac32inc_rp(REG67,REG1)
0x561355FE,	//0x0986		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_lw32_d(REG67,0xd5fe)(hi)
0xFE9AFF22,	//0x0988		VoC_shr32_rr(REG45,REG3,DEFAULT)	|	VoC_movreg32(REG45,ACC0,IN_PARALLEL)
0x0B1E2B80,	//0x098a		VoC_jal(CII_L_mpy_ll_opt)
0xDF075F87,	//0x098c		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF85DF86,	//0x098e		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0x0A84DF87,	//0x0990		VoC_lw16i(REG4,0x24)(lo)	|	VoC_pop16(REG7,DEFAULT)
0xC1E70024,	//0x0992		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x24)(hi)
0xDF84E881,	//0x0994		VoC_pop16(REG4,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0995		VoC_endloop0
0xDFC6DDBC,	//0x0996		VoC_push16(REG6,DEFAULT)	|	VoC_sw32_p(ACC0,REG7,DEFAULT)
0x3AB40B6C,	//0x0998		VoC_sub16_dr(REG4,0xbab4,REG5)
0x3307F007,	//0x099a		VoC_bez32_r(EN_FLAT_opt_100,RL7)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x2B80099F,	//0x099c		VoC_jal(CII_sqroot_opt)(lo)	|	VoC_bez32_r(EN_FLAT_opt_100,RL7)(hi)
0xF0060BFF,	//0x099e		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jal(CII_sqroot_opt)(hi)
		//0x099f		EN_FLAT_opt_100
0x2845E085,	//0x09a0		VoC_and16_rd(REG5,0x8384)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xDFC60384,	//0x09a2		VoC_push16(REG6,DEFAULT)	|	VoC_and16_rd(REG5,0x8384)(hi)
0x3185DFC6,	//0x09a4		VoC_bez16_r(EN_FLAT_opt_101,REG5)(lo)	|	VoC_push16(REG6,DEFAULT)
0x0A7B09A9,	//0x09a6		VoC_multf32_rd(REG67,REG7,0x825a)(lo)	|	VoC_bez16_r(EN_FLAT_opt_101,REG5)(hi)
0xF80C025A,	//0x09a8		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_multf32_rd(REG67,REG7,0x825a)(hi)
		//0x09a9		EN_FLAT_opt_101
0x09AE3204,	//0x09aa		VoC_bltz16_r(EN_FLAT_opt_103,REG4)
0xE5C2FEA3,	//0x09ac		VoC_jump(EN_FLAT_opt_104)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
		//0x09ae		EN_FLAT_opt_103
0xDF43FF43,	//0x09ae		VoC_push32(REG67,DEFAULT)	|	VoC_lw32z(REG67,DEFAULT)
		//0x09af		EN_FLAT_opt_104
0x0ADC2B80,	//0x09b0		VoC_jal(CII_r0Quant_opt)
0xFF435FC6,	//0x09b2		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
		//0x09b4		EN_FLAT_opt_LOOP_START
0x0873F033,	//0x09b4		VoC_mult16_rd(REG3,REG6,0xbe24)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xF0243E24,	//0x09b6		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_mult16_rd(REG3,REG6,0xbe24)(hi)
0x55290B5B,	//0x09b8		VoC_sub16_dr(REG3,0xd529,REG3)
0xF8FEE426,	//0x09ba		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_and16_rr(REG6,REG4,DEFAULT)
0xDFC6D655,	//0x09bc		VoC_push16(REG6,DEFAULT)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0xC15C4175,	//0x09be		VoC_add16_rr(REG4,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xD9AFC134,	//0x09c0		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x7EBED9A6,	//0x09c2		VoC_shr32_rr(RL6,REG7,DEFAULT)	|	VoC_lw32_p(RL6,REG4,DEFAULT)
0x49F5FEBF,	//0x09c4		VoC_add32_rr(ACC1,RL7,RL6,DEFAULT)	|	VoC_shr32_rr(RL7,REG7,IN_PARALLEL)
0x4175D912,	//0x09c6		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_lw32_sd(REG45,0x1,IN_PARALLEL)
0x415DC134,	//0x09c8		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)
0xD9AFC11E,	//0x09ca		VoC_lw32_p(RL7,REG5,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG3,IN_PARALLEL)
0x7EBED9A6,	//0x09cc		VoC_shr32_rr(RL6,REG7,DEFAULT)	|	VoC_lw32_p(RL6,REG4,DEFAULT)
0x49F4FEBF,	//0x09ce		VoC_add32_rr(ACC0,RL7,RL6,DEFAULT)	|	VoC_shr32_rr(RL7,REG7,IN_PARALLEL)
0x59B6D9AF,	//0x09d0		VoC_lw32_p(RL6,REG6,DEFAULT)	|	VoC_lw32_p(RL7,REG5,IN_PARALLEL)
0xFEBEFEBF,	//0x09d2		VoC_shr32_rr(RL6,REG7,DEFAULT)	|	VoC_shr32_rr(RL7,REG7,IN_PARALLEL)
0xC9E4C9F7,	//0x09d4		VoC_add32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,RL6,DEFAULT)
0xE122FA0C,	//0x09d6		VoC_movreg16(REG2,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x0BF42B80,	//0x09d8		VoC_jal(CII_norm_s_opt)
0x028A14C2,	//0x09da		VoC_lw32_d(REG45,0x828a)
0xFE857E84,	//0x09dc		VoC_shr32_rr(ACC1,REG0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG0,DEFAULT)
0xC8A148A8,	//0x09de		VoC_add32_rr(REG23,REG45,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG45,ACC1,DEFAULT)
0xF6206062,	//0x09e0		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x09E63240,	//0x09e2		VoC_bnltz16_r(EN_FLAT_opt_ABS_SWNUM,REG0)
0xE0154340,	//0x09e4		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)
		//0x09e6		EN_FLAT_opt_ABS_SWNUM
0xD637D673,	//0x09e6		VoC_lw16_sd(REG7,0x2,DEFAULT)	|	VoC_lw16_sd(REG3,0x6,DEFAULT)
0x09F13410,	//0x09e8		VoC_bgt16_rr(EN_FLAT_opt_NOT_NULL_DIV,REG2,REG0)
0x3AB60B7F,	//0x09ea		VoC_sub16_dr(REG7,0xbab6,REG7)
0xE7C1F006,	//0x09ec		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x09ee		VoC_endloop0
0x2B00DCB6,	//0x09ee		VoC_jump_lg(EN_FLAT_opt_END)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xE0410AD2,	//0x09f0		VoC_movreg16(REG1,REG2,DEFAULT)	|	VoC_jump_lg(EN_FLAT_opt_END)(hi)
		//0x09f1		EN_FLAT_opt_NOT_NULL_DIV
0x019A2B80,	//0x09f2		VoC_jal(CII_DIV_S)
0x09F731C5,	//0x09f4		VoC_bnez16_r(EN_FLAT_opt_NEG_DIV,REG5)
0xF125C352,	//0x09f6		VoC_lw16i_short(REG5,0x9,DEFAULT)	|	VoC_sub16_rr(REG2,REG5,REG2,DEFAULT)
		//0x09f7		EN_FLAT_opt_NEG_DIV
0xDA73DCB2,	//0x09f8		VoC_sw16_sd(REG3,0x6,DEFAULT)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
0x0AD2353D,	//0x09fa		VoC_be16_rr(EN_FLAT_opt_END,REG7,REG5)
0xF0105F44,	//0x09fc		VoC_lw16i_short(INC0,0x4,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xF0A15F44,	//0x09fe		VoC_lw16i_short(INC1,0x28,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xF0125F44,	//0x0a00		VoC_lw16i_short(INC2,0x4,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xF0135F44,	//0x0a02		VoC_lw16i_short(INC3,0x4,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xCC93C37D,	//0x0a04		VoC_multf32_rr(REG67,REG2,REG2,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG7,DEFAULT)
0x095BE044,	//0x0a06		VoC_add32_rd(REG67,REG67,0x828a)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x5616028A,	//0x0a08		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x828a)(hi)
0xDFC4D931,	//0x0a0a		VoC_push16(REG4,DEFAULT)	|	VoC_lw32_sd(REG23,0x5,IN_PARALLEL)
0x5680DFC7,	//0x0a0c		VoC_lw16_sd(REG0,0x7,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xC0F3C0B2,	//0x0a0e		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)
0xC0304031,	//0x0a10		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG6,DEFAULT)
0xF045DFC5,	//0x0a12		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0A173186,	//0x0a14		VoC_bez16_r(EN_FLAT_opt_j_1_is_ZERO,REG6)
0xDF40F7C5,	//0x0a16		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
		//0x0a17		EN_FLAT_opt_j_1_is_ZERO
0x5F41C028,	//0x0a18		VoC_push32(REG23,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x40AAC069,	//0x0a1a		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0xDF40C0EB,	//0x0a1c		VoC_push32(REG01,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0xDFC55F41,	//0x0a1e		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x2B80D686,	//0x0a20		VoC_jal(CII_flat_recursion_opt)(lo)	|	VoC_lw16_sd(REG6,0x7,DEFAULT)
0xD6250875,	//0x0a22		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_jal(CII_flat_recursion_opt)(hi)
0xD934E754,	//0x0a24		VoC_lw32_sd(ACC0,0x5,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0x2B80D634,	//0x0a26		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xD92F0B2B,	//0x0a28		VoC_lw32_sd(RL7,0x4,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC92CC93C,	//0x0a2a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDDCD644,	//0x0a2c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0x08752B80,	//0x0a2e		VoC_jal(CII_flat_recursion_opt)
0xD634D93C,	//0x0a30		VoC_lw16_sd(REG4,0x2,DEFAULT)	|	VoC_lw32_sd(ACC0,0x6,DEFAULT)
0x0B2B2B80,	//0x0a32		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD947,	//0x0a34		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x7,DEFAULT)
0xFFC0C934,	//0x0a36		VoC_NOP	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x0a38		VoC_endloop0
0x5625DDC4,	//0x0a38		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC37DE017,	//0x0a3a		VoC_sub16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x0A913145,	//0x0a3c		VoC_bngtz16_r(LOOP_END_LABEL_FLAT,REG5)
0x0A8E2E29,	//0x0a3e		VoC_loop_r(1,REG5)
0x0A86D655,	//0x0a40		VoC_lw16i(REG6,0x2c)(lo)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x56A0002C,	//0x0a42		VoC_lw16_sd(REG0,0x9,DEFAULT)	|	VoC_lw16i(REG6,0x2c)(hi)
0xD951C5BC,	//0x0a44		VoC_lw32_sd(REG23,0x9,DEFAULT)	|	VoC_mult16_rr(REG4,REG6,REG7,IN_PARALLEL)
0x4020C12C,	//0x0a46		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x40A2C021,	//0x0a48		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG4,IN_PARALLEL)
0x5D20C0E3,	//0x0a4a		VoC_sw32_sd(REG01,0x3,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x5D19D614,	//0x0a4c		VoC_sw32_sd(REG23,0x2,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x432DE045,	//0x0a4e		VoC_sub16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x4028C336,	//0x0a50		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG6,IN_PARALLEL)
0x40B2C029,	//0x0a52		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG5,IN_PARALLEL)
0x5D10C0E3,	//0x0a54		VoC_sw32_sd(REG01,0x1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x5D09D626,	//0x0a56		VoC_sw32_sd(REG23,0x0,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,IN_PARALLEL)
0xD644C3BE,	//0x0a58		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
0xD68667A1,	//0x0a5a		VoC_lw16_sd(REG6,0x7,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x08752B80,	//0x0a5c		VoC_jal(CII_flat_recursion_opt)
0xD6345934,	//0x0a5e		VoC_lw16_sd(REG4,0x2,IN_PARALLEL)	|	VoC_lw32_sd(ACC0,0x5,DEFAULT)
0x0B2B2B80,	//0x0a60		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD92F,	//0x0a62		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x4,DEFAULT)
0xD944C92C,	//0x0a64		VoC_lw32_sd(ACC0,0x7,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x2B80DDDC,	//0x0a66		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xD93F0B2B,	//0x0a68		VoC_lw32_sd(RL7,0x6,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC934C93C,	//0x0a6a		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDCCD92C,	//0x0a6c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32_sd(ACC0,0x4,DEFAULT)
0x0B2B2B80,	//0x0a6e		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD937,	//0x0a70		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x5,DEFAULT)
0xD93CC92C,	//0x0a72		VoC_lw32_sd(ACC0,0x6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x2B80DDD4,	//0x0a74		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9470B2B,	//0x0a76		VoC_lw32_sd(RL7,0x7,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC934C93C,	//0x0a78		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDC4D644,	//0x0a7a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
		//0x0a7b		VoC_endloop0
0x08752B80,	//0x0a7c		VoC_jal(CII_flat_recursion_opt)
0xD634592C,	//0x0a7e		VoC_lw16_sd(REG4,0x2,IN_PARALLEL)	|	VoC_lw32_sd(ACC0,0x4,DEFAULT)
0x0B2B2B80,	//0x0a80		VoC_jal(CII_L_mpy_ls_opt)
0xC93CD937,	//0x0a82		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_lw32_sd(RL7,0x5,DEFAULT)
0xD93CC92C,	//0x0a84		VoC_lw32_sd(ACC0,0x6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x2B80DDD4,	//0x0a86		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xD9470B2B,	//0x0a88		VoC_lw32_sd(RL7,0x7,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xC934C93C,	//0x0a8a		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xDDC4D644,	//0x0a8c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
		//0x0a8e		VoC_endloop1
0x0384077F,	//0x0a8e		VoC_add16_rd(REG7,REG7,0x8384)
0xD644E5C5,	//0x0a90		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_jump(LOOP_END_LABEL_FLAT1)
		//0x0a91		LOOP_END_LABEL_FLAT
0x00240A83,	//0x0a92		VoC_lw16i(REG3,0x24)
0xD920C29A,	//0x0a94		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)
		//0x0a95		LOOP_END_LABEL_FLAT1
0x00240A83,	//0x0a96		VoC_lw16i(REG3,0x24)
0xC2594018,	//0x0a98		VoC_sub16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xDD20D918,	//0x0a9a		VoC_sw32_sd(REG01,0x3,DEFAULT)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0xC0594018,	//0x0a9c		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xDD18C09A,	//0x0a9e		VoC_sw32_sd(REG01,0x2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x08752B80,	//0x0aa0		VoC_jal(CII_flat_recursion_opt)
0xDF075F87,	//0x0aa2		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF075F87,	//0x0aa4		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF07DF07,	//0x0aa6		VoC_pop32(RL7,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF845F04,	//0x0aa8		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
0x0B2B2B80,	//0x0aaa		VoC_jal(CII_L_mpy_ls_opt)
0xC93CDF07,	//0x0aac		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF07492C,	//0x0aae		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDF075F86,	//0x0ab0		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x5F84DDD4,	//0x0ab2		VoC_pop16(REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x7045D911,	//0x0ab4		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,IN_PARALLEL)
0x4364F0B2,	//0x0ab6		VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)	|	VoC_lw16i_short(INC2,0x2c,IN_PARALLEL)
0x40A2F0B3,	//0x0ab8		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0x2c,IN_PARALLEL)
0xFF44C0E3,	//0x0aba		VoC_lw32z(ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xD9D667C4,	//0x0abc		VoC_lw32inc_p(RL6,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD9DF6534,	//0x0abe		VoC_lw32inc_p(RL7,REG3,IN_PARALLEL)	|	VoC_or32_rr(ACC0,RL6,DEFAULT)
		//0x0ac0		VoC_endloop0
0xD9D6653C,	//0x0ac0		VoC_lw32inc_p(RL6,REG2,IN_PARALLEL)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0xD6267007,	//0x0ac2		VoC_lw16_sd(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x03840776,	//0x0ac4		VoC_add16_rd(REG6,REG6,0x8384)
0x0ACC32C4,	//0x0ac6		VoC_bngtz32_r(EN_FLAT_opt_L_TmpA_NPOS,ACC0)
0x01882B80,	//0x0ac8		VoC_jal(CII_NORM_L_ACC0)
0x3AAE0B4F,	//0x0aca		VoC_sub16_dr(REG7,0xbaae,REG1)
		//0x0acc		EN_FLAT_opt_L_TmpA_NPOS
0xDA37DA26,	//0x0acc		VoC_sw16_sd(REG7,0x2,DEFAULT)	|	VoC_sw16_sd(REG6,0x1,DEFAULT)
0x35B1F141,	//0x0ace		VoC_bne16_rr(EN_FLAT_opt_LOOP_START,REG6,REG1)(lo)	|	VoC_lw16i_short(REG1,0xa,DEFAULT)
0xE5C209B4,	//0x0ad0		VoC_jump(EN_FLAT_opt_END_bis)	|	VoC_bne16_rr(EN_FLAT_opt_LOOP_START,REG6,REG1)(hi)
		//0x0ad2		EN_FLAT_opt_END
0xDF86DF80,	//0x0ad2		VoC_pop16(REG6,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
		//0x0ad3		EN_FLAT_opt_END_bis
0xDF87E861,	//0x0ad4		VoC_pop16(REG7,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0ad5		VoC_endloop0
0x5F80DF80,	//0x0ad6		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDFA9DF04,	//0x0ad8		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(ACC0,IN_PARALLEL)
0xE580DF05,	//0x0ada		VoC_return	|	VoC_pop32(ACC1,DEFAULT)
		//0x0adc		CII_r0Quant_opt
0x028A095B,	//0x0adc		VoC_add32_rd(REG67,REG67,0x828a)
0x558F1848,	//0x0ade		VoC_lw16i_set_inc(REG0,0xd58f,0x2)
0xE0066BE5,	//0x0ae0		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x1f,DEFAULT)
0x340FD881,	//0x0ae2		VoC_bgt16_rr(CII_r0Quant_opt_100,REG1,REG7)(lo)	|	VoC_lw16inc_p(REG1,REG0,DEFAULT)
0x07760AE7,	//0x0ae4		VoC_add16_rd(REG6,REG6,0x8384)(lo)	|	VoC_bgt16_rr(CII_r0Quant_opt_100,REG1,REG7)(hi)
		//0x0ae5		VoC_endloop0
0xE5800384,	//0x0ae6		VoC_return	|	VoC_add16_rd(REG6,REG6,0x8384)(hi)
		//0x0ae7		CII_r0Quant_opt_100
		//0x0ae8		CII_hnwFilt_opt
0x0EF81505,	//0x0ae8		VoC_sw16_d(REG5,0xef8)
0x0A85E0C7,	//0x0aea		VoC_lw16i(REG5,0x27)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x412E0027,	//0x0aec		VoC_add16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x27)(hi)
0x40EBDFC0,	//0x0aee		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_push16(REG0,IN_PARALLEL)
0x5E08E004,	//0x0af0		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x3207E015,	//0x0af2		VoC_bltz16_r(END_LOOP_ADDR_LABEL_ADDED0,REG7)(lo)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x2E390B1B,	//0x0af4		VoC_loop_r(1,REG7)(lo)	|	VoC_bltz16_r(END_LOOP_ADDR_LABEL_ADDED0,REG7)(hi)
0xDFC30B1A,	//0x0af6		VoC_push16(REG3,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x3DDE0757,	//0x0af8		VoC_add16_rd(REG7,REG2,0xbdde)
0xE05343E7,	//0x0afa		VoC_lw16i_short(REG3,0x5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)
0x02F214C4,	//0x0afc		VoC_lw32_d(ACC0,0x82f2)
0x02F21078,	//0x0afe		VoC_mac32_pd(REG7,0x82f2)
0xC3A75620,	//0x0b00		VoC_sub16_rr(REG7,REG6,REG4,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xC01841DF,	//0x0b02		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG3,DEFAULT)
0x6E0AC0BB,	//0x0b04		VoC_bnez16_d(hnwFilt06,0xef8)(lo)	|	VoC_add16_rr(REG3,REG2,REG7,DEFAULT)
0xE8C50EF8,	//0x0b06		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_bnez16_d(hnwFilt06,0xef8)(hi)
0x0B173207,	//0x0b08		VoC_bltz16_r(hnwFilt06_bis,REG7)
0xC3EF5833,	//0x0b0a		VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
		//0x0b0c		VoC_endloop0
0xC0BB5118,	//0x0b0c		VoC_add16_rr(REG3,REG2,REG7,IN_PARALLEL)	|	VoC_mac32inc_rp(REG3,REG0,DEFAULT)
0xE8C6E5C9,	//0x0b0e		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_jump(hnwFilt06_bis)
		//0x0b0f		hnwFilt06
0x0B133247,	//0x0b10		VoC_bnltz16_r(hnwFilt05,REG7)
0xC3EFC1CB,	//0x0b12		VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG1,DEFAULT)
		//0x0b13		hnwFilt05
0x5118D833,	//0x0b14		VoC_mac32inc_rp(REG3,REG0,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
		//0x0b15		VoC_endloop0
0xDF83C0BB,	//0x0b16		VoC_pop16(REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG2,REG7,IN_PARALLEL)
		//0x0b17		hnwFilt06_bis
0xC12CFBFC,	//0x0b18		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
		//0x0b1a		VoC_endloop1
0xC069DCB9,	//0x0b1a		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
		//0x0b1b		END_LOOP_ADDR_LABEL_ADDED0
0xE580DF80,	//0x0b1c		VoC_return	|	VoC_pop16(REG0,DEFAULT)
		//0x0b1e		CII_L_mpy_ll_opt
0xF90C790E,	//0x0b1e		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCDE4CD36,	//0x0b20		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_multf32_rr(RL6,REG4,REG6,DEFAULT)
0xFA0CFA86,	//0x0b22		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_shr32_ri(RL6,0x10,DEFAULT)
0xC934CD76,	//0x0b24		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_multf32_rr(RL6,REG5,REG6,DEFAULT)
0xC934FA0E,	//0x0b26		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0xFA744E2F,	//0x0b28		VoC_shr32_ri(ACC0,0xe,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG7,DEFAULT)
0xE105E580,	//0x0b2a		VoC_movreg16(REG5,ACC0_LO,DEFAULT)	|	VoC_return
		//0x0b2b		CII_L_mpy_ls_opt
0xCD64F90D,	//0x0b2c		VoC_multf32_rr(ACC0,REG5,REG4,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0x4E2CE125,	//0x0b2e		VoC_mac32_rr(REG5,REG4,DEFAULT)	|	VoC_movreg16(REG5,ACC0_HI,DEFAULT)
0xE580FA7C,	//0x0b30		VoC_return	|	VoC_shr32_ri(ACC0,0xf,IN_PARALLEL)
		//0x0b32		CII_scaleExcite_opt
0xDFE9993E,	//0x0b32		VoC_push16(RA,DEFAULT)	|	VoC_multf32_rp(RL6,REG4,REG7,DEFAULT)
0xDFC061A2,	//0x0b34		VoC_push16(REG0,IN_PARALLEL)	|	VoC_movreg16(REG2,RL6_HI,DEFAULT)
0x0BF42B80,	//0x0b36		VoC_jal(CII_norm_s_opt)
0xE0137E86,	//0x0b38		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_shr32_rr(RL6,REG0,DEFAULT)
0xF00441DF,	//0x0b3a		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG3,DEFAULT)
0x028A14C7,	//0x0b3c		VoC_lw32_d(RL7,0x828a)
0xDF8039C2,	//0x0b3e		VoC_pop16(REG0,IN_PARALLEL)	|	VoC_sub16_pr(REG2,REG7,REG0,DEFAULT)
0xE004429A,	//0x0b40		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)
0x0B473242,	//0x0b42		VoC_bnltz16_r(scaleExcite01,REG2)
0xF883C314,	//0x0b44		VoC_shr16_ri(REG3,0xfffffff0,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)
0xFE96E5C4,	//0x0b46		VoC_shr32_rr(RL6,REG2,DEFAULT)	|	VoC_jump(scaleExcite_loop)
		//0x0b47		scaleExcite01
0xF002C9B9,	//0x0b48		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_add32_rr(REG23,RL6,RL7,DEFAULT)
		//0x0b4a		scaleExcite_loop
0x49BBDFA9,	//0x0b4a		VoC_add32_rr(REG67,RL6,RL7,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x9BC4FEA7,	//0x0b4c		VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)	|	VoC_shr32_rr(RL7,REG4,IN_PARALLEL)
0xC93CED04,	//0x0b4e		VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0x9BC4FE94,	//0x0b50		VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG2,DEFAULT)
		//0x0b52		VoC_endloop0
0xE580DC99,	//0x0b52		VoC_return	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0b54		CII_quantLag_opt_paris
0x548F1442,	//0x0b54		VoC_lw16_d(REG2,0xd48f)
0xF6407001,	//0x0b56		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x548E0AC4,	//0x0b58		VoC_lw16i(REG4,0xd48e)
0xF808C115,	//0x0b5a		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG5,REG4,REG2,DEFAULT)
		//0x0b5b		QUANTLAG103
0x341ED853,	//0x0b5c		VoC_bgt16_rr(QUANTLAG102,REG3,REG6)(lo)	|	VoC_lw16_p(REG3,REG5,DEFAULT)
0xE0410B60,	//0x0b5e		VoC_movreg16(REG1,REG2,DEFAULT)	|	VoC_bgt16_rr(QUANTLAG102,REG3,REG6)(hi)
		//0x0b60		QUANTLAG102
0xC115C042,	//0x0b60		VoC_add16_rr(REG5,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG1,REG0,DEFAULT)
0x0B5B358A,	//0x0b62		VoC_bne16_rr(QUANTLAG103,REG1,REG2)
0xE580D853,	//0x0b64		VoC_return	|	VoC_lw16_p(REG3,REG5,DEFAULT)
		//0x0b66		CII_get_ipjj_opt_paris
0x03570A60,	//0x0b66		VoC_multf32_rd(REG01,REG4,0x8357)
0xF908FFC0,	//0x0b68		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_NOP
0x3AB20A44,	//0x0b6a		VoC_multf32_rd(ACC0,REG0,0xbab2)
0x0964FFC0,	//0x0b6c		VoC_add32_rd(ACC0,ACC0,0x828a)(lo)	|	VoC_NOP
0xE120028A,	//0x0b6e		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x828a)(hi)
0x3AB24468,	//0x0b70		VoC_bne16_rd(GETIPJJ100,REG0,0xbab2)
0x0749F000,	//0x0b72		VoC_add16_rd(REG1,REG1,0x8384)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE5800384,	//0x0b74		VoC_return	|	VoC_add16_rd(REG1,REG1,0x8384)(hi)
		//0x0b75		GETIPJJ100
		//0x0b76		CII_fp_ex_opt
0xE0C4F007,	//0x0b76		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0b78		fp_ex0
0x3D92485F,	//0x0b78		VoC_blt16_rd(fp_ex03_go,REG7,0xbd92)
0xDFE9E580,	//0x0b7a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b7b		fp_ex03_go
0x0B662B80,	//0x0b7c		VoC_jal(CII_get_ipjj_opt_paris)
0xDFA9DF43,	//0x0b7e		VoC_pop16(RA,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x3D920B7E,	//0x0b80		VoC_sub16_dr(REG6,0xbd92,REG7)
0x3D924C59,	//0x0b82		VoC_bnlt16_rd(fp_ex00,REG1,0xbd92)
0xC1EBC27E,	//0x0b84		VoC_add16_rr(REG3,REG7,REG5,DEFAULT)	|	VoC_sub16_rr(REG6,REG1,REG7,DEFAULT)
		//0x0b85		fp_ex00
0x42C9F033,	//0x0b86		VoC_sub16_rr(REG1,REG3,REG1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xDFC6F005,	//0x0b88		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x0BA33146,	//0x0b8a		VoC_bngtz16_r(fp_ex_else,REG6)
0x0B9331C0,	//0x0b8c		VoC_bnez16_r(fp_ex01,REG0)
0xD8906783,	//0x0b8e		VoC_lw16inc_p(REG0,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xDCB0D890,	//0x0b90		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_lw16inc_p(REG0,REG1,DEFAULT)
		//0x0b91		VoC_endloop0
0xF0A7E5D1,	//0x0b92		VoC_lw16i_short(REG7,0x5,DEFAULT)	|	VoC_jump(fp_ex_else)
		//0x0b93		fp_ex01
0x5452185A,	//0x0b94		VoC_lw16i_set_inc(REG2,0xd452,0x6)
0x2E31C082,	//0x0b96		VoC_loop_r(1,REG6)(lo)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0xC2790BA1,	//0x0b98		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_loop_r(1,REG6)(hi)
0x14C4DFC2,	//0x0b9a		VoC_lw32_d(ACC0,0x828a)(lo)	|	VoC_push16(REG2,DEFAULT)
0xE941028A,	//0x0b9c		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw32_d(ACC0,0x828a)(hi)
		//0x0b9e		VoC_endloop0
0xC279D40A,	//0x0b9e		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG2,DEFAULT)
0x5E08DF82,	//0x0ba0		VoC_inc_p(REG1,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x0ba1		VoC_endloop1
0xDF81DCB9,	//0x0ba2		VoC_pop16(REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)
		//0x0ba3		fp_ex_else
0x41CFDF03,	//0x0ba4		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x3101C134,	//0x0ba6		VoC_bgtz16_r(fp_ex0,REG1)(lo)	|	VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)
0xE5800B78,	//0x0ba8		VoC_return	|	VoC_bgtz16_r(fp_ex0,REG1)(hi)
		//0x0baa		CII_maxCCOverGWithSign_opt_paris
0x00001804,	//0x0baa		VoC_lw16i_set_inc(REG0,0x0,0x1)
0xD8A4E7DB,	//0x0bac		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDF41D8B5,	//0x0bae		VoC_push32(REG23,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0x0BB43180,	//0x0bb0		VoC_bez16_r(MAXCCOVERGVI103,REG0)
0x0BC63145,	//0x0bb2		VoC_bngtz16_r(MAXCCOVERGVI101,REG5)
		//0x0bb4		MAXCCOVERGVI103
0xFFC0CD21,	//0x0bb4		VoC_NOP	|	VoC_multf32_rr(REG23,REG4,REG4,DEFAULT)
0x028A0949,	//0x0bb6		VoC_add32_rd(REG23,REG23,0x828a)
0x0BBC3244,	//0x0bb8		VoC_bnltz16_r(MAXCCOVERGVI100,REG4)
0x3AAA0B5B,	//0x0bba		VoC_sub16_dr(REG3,0xbaaa,REG3)
		//0x0bbc		MAXCCOVERGVI100
0xCEAFCCF4,	//0x0bbc		VoC_msu32_rr(REG5,REG7,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0x0BC33180,	//0x0bbe		VoC_bez16_r(MAXCCOVERGVI102,REG0)
0x0BC33284,	//0x0bc0		VoC_bgtz32_r(MAXCCOVERGVI102,ACC0)
0xE067E5C4,	//0x0bc2		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_jump(MAXCCOVERGVI101)
		//0x0bc3		MAXCCOVERGVI102
0xF60160A6,	//0x0bc4		VoC_movreg16(REG1,REG0,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0bc6		MAXCCOVERGVI101
0xDE00DF01,	//0x0bc6		VoC_inc_p(REG0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x0bc7		VoC_endloop0
0xE043E580,	//0x0bc8		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_return
		//0x0bc9		CII_v_con_opt
0x7F0EF033,	//0x0bca		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x6005F005,	//0x0bcc		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x2C29E026,	//0x0bce		VoC_loop_i(0x1,0x14)(lo)	|	VoC_lw16i_short(REG6,0x2,IN_PARALLEL)
0xFF440BDD,	//0x0bd0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x14)(hi)
0xC1757F45,	//0x0bd2		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xE701FFC0,	//0x0bd4		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_NAD
		//0x0bd6		VoC_endloop0
0xD4185410,	//0x0bd6		VoC_mac32inc_pp(REG3,REG0,IN_PARALLEL)	|	VoC_mac32inc_pp(REG2,REG0,DEFAULT)
0x7BFCFF31,	//0x0bd8		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0xE0A0FBFD,	//0x0bda		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xDC9BDC99,	//0x0bdc		VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0bdd		VoC_endloop1
0xDFE9E580,	//0x0bde		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0bdf		CII_g_corr1_opt_paris
0xEA81FF44,	//0x0be0		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0be2		VoC_endloop0
0x2B80D500,	//0x0be2		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0xDFA90188,	//0x0be4		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xE580FFC0,	//0x0be6		VoC_return	|	VoC_NOP
		//0x0be8		CII_b_con_opt
0x000814C1,	//0x0be8		VoC_lw32_d(REG23,0x8008)
0xF026E708,	//0x0bea		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xF667642E,	//0x0bec		VoC_movreg16(REG7,REG3,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG5,DEFAULT)
0x0BF131C6,	//0x0bee		VoC_bnez16_r(b_con01,REG6)
0xF80DC29F,	//0x0bf0		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_sub16_rr(REG7,REG2,REG3,DEFAULT)
		//0x0bf1		b_con01
		//0x0bf2		VoC_endloop0
0xE580DC87,	//0x0bf2		VoC_return	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0bf4		CII_norm_s_opt
0x00001FBC,	//0x0bf4		VoC_lw16i_set_inc(REG0,0x0,0xffffffff)
0x0BFE3182,	//0x0bf6		VoC_bez16_r(NORM_S_RETURN,REG2)
0xE9E3FFC0,	//0x0bf8		VoC_loop_i_short(0xf,DEFAULT)	|	VoC_NAD
0x02F24C62,	//0x0bfa		VoC_bnlt16_rd(NORM_S_RETURN,REG2,0x82f2)
		//0x0bfc		VoC_endloop0
0xDE0078FA,	//0x0bfc		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
		//0x0bfe		NORM_S_RETURN
0xFA0FE580,	//0x0bfe		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_return
		//0x0bff		CII_sqroot_opt
0x000809FB,	//0x0c00		VoC_sub32_rd(REG67,RL7,0x8008)
0x0008097F,	//0x0c02		VoC_add32_rd(RL7,RL7,0x8008)
0xF6E66847,	//0x0c04		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0xCEBEFF44,	//0x0c06		VoC_msu32_rr(REG7,REG6,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x6126E0C5,	//0x0c08		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xC93FFA0C,	//0x0c0a		VoC_add32_rr(RL7,ACC0,RL7,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)
		//0x0c0b		VoC_endloop0
0xFFC0CDBC,	//0x0c0c		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)
0x028A0964,	//0x0c0e		VoC_add32_rd(ACC0,ACC0,0x828a)
0xE127CEBE,	//0x0c10		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_msu32_rr(REG7,REG6,DEFAULT)
0xCE35CEB5,	//0x0c12		VoC_mac32_rr(REG6,REG5,DEFAULT)	|	VoC_msu32_rr(REG6,REG5,DEFAULT)
0xC9E4E126,	//0x0c14		VoC_add32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x03620F78,	//0x0c16		VoC_msu32_rd(REG7,0x8362)
0x03680A77,	//0x0c18		VoC_multf32_rd(RL7,REG6,0x8368)
0xC9E3FFC0,	//0x0c1a		VoC_add32_rr(REG67,RL7,ACC0,DEFAULT)	|	VoC_NOP
0xDFE9E580,	//0x0c1c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c1d		CII_sub_rs_rrNs
0x2840E020,	//0x0c1e		VoC_and16_rd(REG0,0x8384)(lo)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x7F270384,	//0x0c20		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_and16_rd(REG0,0x8384)(hi)
0x2B80FF05,	//0x0c22		VoC_jal(CII_sqroot_opt)(lo)	|	VoC_movreg32(ACC1,REG01,IN_PARALLEL)
0xFF2A0BFF,	//0x0c24		VoC_movreg32(REG45,ACC1,DEFAULT)	|	VoC_jal(CII_sqroot_opt)(hi)
0x3184F006,	//0x0c26		VoC_bez16_r(rs_rrNs00,REG4)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x07ED0C2D,	//0x0c28		VoC_sub16_rd(REG5,REG5,0x8384)(lo)	|	VoC_bez16_r(rs_rrNs00,REG4)(hi)
0x0A7B0384,	//0x0c2a		VoC_multf32_rd(REG67,REG7,0x825a)(lo)	|	VoC_sub16_rd(REG5,REG5,0x8384)(hi)
0xDF01025A,	//0x0c2c		VoC_pop32(REG23,DEFAULT)	|	VoC_multf32_rd(REG67,REG7,0x825a)(hi)
		//0x0c2d		rs_rrNs00
0x2B80FF1C,	//0x0c2e		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xF80D0188,	//0x0c30		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B49,	//0x0c32		VoC_sub16_dr(REG1,0xbaaa,REG1)
0xFE8B434D,	//0x0c34		VoC_shr32_rr(REG67,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
0x028A0958,	//0x0c36		VoC_add32_rd(REG01,REG67,0x828a)
0xF808D8A0,	//0x0c38		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16inc_p(REG0,REG2,DEFAULT)
0xFFC0D826,	//0x0c3a		VoC_NAD	|	VoC_lw16_p(REG6,REG2,DEFAULT)
0x019A2B80,	//0x0c3c		VoC_jal(CII_DIV_S)
0x0BF42B80,	//0x0c3e		VoC_jal(CII_norm_s_opt)
0x07EDC3AD,	//0x0c40		VoC_sub16_rd(REG5,REG5,0x8384)(lo)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
0x43450384,	//0x0c42		VoC_sub16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x8384)(hi)
0xDCB2DFA9,	//0x0c44		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_pop16(RA,IN_PARALLEL)
0xE580DCB5,	//0x0c46		VoC_return	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x0c48		CII_rs_rrNs_opt
0xDF415FE9,	//0x0c48		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0BDF2B80,	//0x0c4a		VoC_jal(CII_g_corr1_opt_paris)
0x0C1D2B80,	//0x0c4c		VoC_jal(CII_sub_rs_rrNs)
0xF050DFA9,	//0x0c4e		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE0C2E580,	//0x0c50		VoC_movreg16(REG2,REG6,DEFAULT)	|	VoC_return
		//0x0c51		CII_lpcZsIir_opt
0x1809F052,	//0x0c52		VoC_lw16i_set_inc(REG1,0x4494,0x2)(lo)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xDF474494,	//0x0c54		VoC_push32(RL7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x4494,0x2)(hi)
0xD9D76A83,	//0x0c56		VoC_lw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xDDCFD9D7,	//0x0c58		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG2,DEFAULT)
		//0x0c59		VoC_endloop0
0x60A0DFC7,	//0x0c5a		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x6061F004,	//0x0c5c		VoC_movreg16(REG1,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xD885F3FD,	//0x0c5e		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0x44941806,	//0x0c60		VoC_lw16i_set_inc(REG2,0x4494,0x1)
0xE0165C15,	//0x0c62		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x001E14C7,	//0x0c64		VoC_lw32_d(RL7,0x801e)
0xDE187F3C,	//0x0c66		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0x00000AC7,	//0x0c68		VoC_lw16i(REG7,0x8000)
0x0C762C15,	//0x0c6a		VoC_loop_i(0x1,0xa)
0xD491E781,	//0x0c6c		VoC_msu32inc_pp(REG2,REG1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x0c6d		VoC_endloop0
0xF66142B2,	//0x0c6e		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0xFBE451B8,	//0x0c70		VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)	|	VoC_msu32inc_rp(REG7,REG0,DEFAULT)
0x3AB64076,	//0x0c72		VoC_be16_rd(lpcZsIir_NP_IS_MIN,REG6,0xbab6)
0x03840776,	//0x0c74		VoC_add16_rd(REG6,REG6,0x8384)
		//0x0c76		VoC_endloop1
0xFF3C5CB9,	//0x0c76		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
		//0x0c78		lpcZsIir_NP_IS_MIN
0x77D2F126,	//0x0c78		VoC_lw16i_short(INC2,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0x4271F009,	//0x0c7a		VoC_sub16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x2C3BC0B2,	//0x0c7c		VoC_loop_i(0x1,0x1d)(lo)	|	VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)
0xDFC20C87,	//0x0c7e		VoC_push16(REG2,DEFAULT)	|	VoC_loop_i(0x1,0x1d)(hi)
0xFF3C620A,	//0x0c80		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_aligninc_pp(REG1,REG2,DEFAULT)
0xDCB968A2,	//0x0c82		VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x0c84		VoC_endloop0
0x5F82D591,	//0x0c84		VoC_pop16(REG2,DEFAULT)	|	VoC_bimsu32inc_pp(REG2,REG1)
0x51B8C2F1,	//0x0c86		VoC_msu32inc_rp(REG7,REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG3,REG6,IN_PARALLEL)
		//0x0c87		VoC_endloop1
0x5F87FBE4,	//0x0c88		VoC_pop16(REG7,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0x7032DF07,	//0x0c8a		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_pop32(RL7,IN_PARALLEL)
0xDCB9F005,	//0x0c8c		VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDFE9E580,	//0x0c8e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c8f		CII_v_srch_opt
0x038407E5,	//0x0c90		VoC_sub16_rd(REG5,REG4,0x8384)
0x5FC0F050,	//0x0c92		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x180AF009,	//0x0c94		VoC_lw16i_set_inc(REG2,0x4672,0x2)(lo)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x0A834672,	//0x0c96		VoC_lw16i(REG3,0x28)(lo)	|	VoC_lw16i_set_inc(REG2,0x4672,0x2)(hi)
0x670D0028,	//0x0c98		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i(REG3,0x28)(hi)
0xFF44FF46,	//0x0c9a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x0C9F2C29,	//0x0c9c		VoC_loop_i(0x1,0x14)
0xD231D9C3,	//0x0c9e		VoC_bimac32inc_rp(REG67,REG1)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0c9f		VoC_endloop1
0x33C4C259,	//0x0ca0		VoC_bnltz32_r(v_srch02,ACC0)(lo)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x0BE40CA5,	//0x0ca2		VoC_sub32_dr(ACC0,0xbaaa,ACC0)(lo)	|	VoC_bnltz32_r(v_srch02,ACC0)(hi)
0xDDD43AAA,	//0x0ca4		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_dr(ACC0,0xbaaa,ACC0)(hi)
		//0x0ca5		v_srch02
		//0x0ca6		VoC_endloop0
0x7030C9A6,	//0x0ca6		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0xFF34F005,	//0x0ca8		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x01882B80,	//0x0caa		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B49,	//0x0cac		VoC_sub16_dr(REG1,0xbaaa,REG1)
0x180AFF43,	//0x0cae		VoC_lw16i_set_inc(REG2,0x4672,0x2)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0xE7054672,	//0x0cb0		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4672,0x2)(hi)
0xFE8FD997,	//0x0cb2		VoC_shr32_rr(RL7,REG1,DEFAULT)	|	VoC_lw32_p(RL7,REG2,DEFAULT)
0xDDD7FA0F,	//0x0cb4		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
		//0x0cb6		VoC_endloop0
0xDF82CAFB,	//0x0cb6		VoC_pop16(REG2,DEFAULT)	|	VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)
0x447A180B,	//0x0cb8		VoC_lw16i_set_inc(REG3,0x447a,0x2)
0x3DD90860,	//0x0cba		VoC_mult16_rd(REG0,REG4,0xbdd9)
0x6603DF41,	//0x0cbc		VoC_loop_r_short(REG0,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xD9D4D9D4,	//0x0cbe		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x0cc0		VoC_endloop0
0x1809DDDC,	//0x0cc0		VoC_lw16i_set_inc(REG1,0x45e2,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x700045E2,	//0x0cc2		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x45e2,0x2)(hi)
0x075BDF01,	//0x0cc4		VoC_add16_rd(REG3,REG3,0xbd92)(lo)	|	VoC_pop32(REG23,IN_PARALLEL)
0xDFC23D92,	//0x0cc6		VoC_push16(REG2,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0xbd92)(hi)
		//0x0cc8		v_srch_loop0
0xDFC3C346,	//0x0cc8		VoC_push16(REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG0,DEFAULT)
0xDFC25E08,	//0x0cca		VoC_push16(REG2,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x0CD93146,	//0x0ccc		VoC_bngtz16_r(COMPILED_NEW_ADDR6,REG6)
0x0CD82E31,	//0x0cce		VoC_loop_r(1,REG6)
0xFF446A82,	//0x0cd0		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x0cd2		VoC_endloop0
0xD612D513,	//0x0cd2		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG3)
0xF72A610B,	//0x0cd4		VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,ACC0_LO,DEFAULT)
0x00280A86,	//0x0cd6		VoC_lw16i(REG6,0x28)
		//0x0cd8		VoC_endloop1
0xDE00DDCD,	//0x0cd8		VoC_inc_p(REG0,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0cd9		COMPILED_NEW_ADDR6
0xE003DF82,	//0x0cda		VoC_movreg16(REG3,REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xC059F8FB,	//0x0cdc		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0x40B2DF83,	//0x0cde		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x3485C0F3,	//0x0ce0		VoC_bngt16_rr(v_srch_loop0,REG0,REG5)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)
0x72860CC8,	//0x0ce2		VoC_lw16i_short(REG6,0x14,DEFAULT)	|	VoC_bngt16_rr(v_srch_loop0,REG0,REG5)(hi)
0xC536FF44,	//0x0ce4		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xE781DF82,	//0x0ce6		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x0ce8		VoC_endloop0
0x1807D512,	//0x0ce8		VoC_lw16i_set_inc(REG3,0x45e2,0x1)(lo)	|	VoC_bimac32inc_pp(REG2,REG2)
0xFF2645E2,	//0x0cea		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x45e2,0x1)(hi)
0x01882B80,	//0x0cec		VoC_jal(CII_NORM_L_ACC0)
0x3AB00B49,	//0x0cee		VoC_sub16_dr(REG1,0xbab0,REG1)
0x07C9FE8E,	//0x0cf0		VoC_sub16_rd(REG1,REG1,0x8384)(lo)	|	VoC_shr32_rr(RL6,REG1,DEFAULT)
0x60620384,	//0x0cf2		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x8384)(hi)
0xDFC7E000,	//0x0cf4		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0x0D0D2E29,	//0x0cf6		VoC_loop_r(1,REG5)
0xDE10C346,	//0x0cf8		VoC_inc_p(REG2,DEFAULT)	|	VoC_sub16_rr(REG6,REG5,REG0,DEFAULT)
0xD9D45E18,	//0x0cfa		VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x678AE107,	//0x0cfc		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0xFE8BF726,	//0x0cfe		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,IN_PARALLEL)
0x48F6D9D4,	//0x0d00		VoC_add32_rr(RL6,REG67,RL6,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0x095BFBFB,	//0x0d02		VoC_add32_rd(REG67,REG67,0x828a)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x6107028A,	//0x0d04		VoC_movreg16(REG7,ACC0_LO,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x828a)(hi)
0xDCB7F726,	//0x0d06		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,IN_PARALLEL)
		//0x0d07		VoC_endloop0
0x3AAE07D2,	//0x0d08		VoC_sub16_rd(REG2,REG2,0xbaae)
0xE006DE00,	//0x0d0a		VoC_movreg16(REG6,REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x40B2F8FE,	//0x0d0c		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
		//0x0d0d		VoC_endloop1
0x7105C0C3,	//0x0d0e		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)
0x1805F024,	//0x0d10		VoC_lw16i_set_inc(REG1,0xef8,0x1)(lo)	|	VoC_lw16i_short(INC0,0x9,IN_PARALLEL)
0x40640EF8,	//0x0d12		VoC_be16_rd(v_srch_siEBits,REG4,0xbab5)(lo)	|	VoC_lw16i_set_inc(REG1,0xef8,0x1)(hi)
0x70C53AB5,	//0x0d14		VoC_lw16i_short(REG5,0x6,DEFAULT)	|	VoC_be16_rd(v_srch_siEBits,REG4,0xbab5)(hi)
0xE020F01C,	//0x0d16		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x7,IN_PARALLEL)
		//0x0d17		v_srch_siEBits
0x4672180B,	//0x0d18		VoC_lw16i_set_inc(REG3,0x4672,0x2)
0x40AAC142,	//0x0d1a		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG2,REG5,REG0,DEFAULT)
0x14C7F6B2,	//0x0d1c		VoC_lw32_d(RL7,0x828a)(lo)	|	VoC_movreg16(INC2,REG5,IN_PARALLEL)
0x6743028A,	//0x0d1e		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw32_d(RL7,0x828a)(hi)
0x93DB93DB,	//0x0d20		VoC_add32inc_rp(REG67,RL7,REG3,DEFAULT)	|	VoC_add32inc_rp(REG67,RL7,REG3,IN_PARALLEL)
		//0x0d22		VoC_endloop0
0xC068DC87,	//0x0d22		VoC_add16_rr(REG0,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x038407EF,	//0x0d24		VoC_sub16_rd(REG7,REG5,0x8384)
0x1807C239,	//0x0d26		VoC_lw16i_set_inc(REG3,0x45e3,0x1)(lo)	|	VoC_sub16_rr(REG1,REG0,REG7,DEFAULT)
0xFFC045E3,	//0x0d28		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x45e3,0x1)(hi)
0x0D402E29,	//0x0d2a		VoC_loop_r(1,REG5)
0x0D343147,	//0x0d2c		VoC_bngtz16_r(COMPILED_NEW_LABEL7,REG7)
0xD8B6E7C5,	//0x0d2e		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xFFC0F8FE,	//0x0d30		VoC_NOP	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xDCA6DC96,	//0x0d32		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x0d33		VoC_endloop0
		//0x0d34		COMPILED_NEW_LABEL7
0x0B76D8B6,	//0x0d34		VoC_sub16_dr(REG6,0xbaaa,REG6)(lo)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC33E3AAA,	//0x0d36		VoC_sub16_rr(REG6,REG4,REG7,DEFAULT)	|	VoC_sub16_dr(REG6,0xbaaa,REG6)(hi)
0x40F3DC86,	//0x0d38		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xC3F7E016,	//0x0d3a		VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x40B2C149,	//0x0d3c		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG5,REG1,DEFAULT)
0xC279C57E,	//0x0d3e		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG5,REG7,IN_PARALLEL)
		//0x0d40		VoC_endloop1
0xC56AC2B2,	//0x0d40		VoC_mult16_rr(REG2,REG5,REG5,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
0x1807F007,	//0x0d42		VoC_lw16i_set_inc(REG3,0xef8,0x1)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x5E100EF8,	//0x0d44		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xef8,0x1)(hi)
0xD8B6C0D1,	//0x0d46		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG3,REG2,IN_PARALLEL)
0xC3F0E683,	//0x0d48		VoC_sub16_rr(REG0,REG7,REG6,DEFAULT)	|	VoC_loop_r_short(REG2,DEFAULT)
0xDC90D8B6,	//0x0d4a		VoC_sw16inc_p(REG0,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x0d4b		VoC_endloop0
0x44701805,	//0x0d4c		VoC_lw16i_set_inc(REG1,0x4470,0x1)
0x40000AC0,	//0x0d4e		VoC_lw16i(REG0,0xc000)
0xDC90E741,	//0x0d50		VoC_sw16inc_p(REG0,REG1,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x0d51		VoC_endloop0
0x5FC4DF85,	//0x0d52		VoC_push16(REG4,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x1804F006,	//0x0d54		VoC_lw16i_set_inc(REG0,0xff,0x1)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x150700FF,	//0x0d56		VoC_sw16_d(REG7,0x4684)(lo)	|	VoC_lw16i_set_inc(REG0,0xff,0x1)(hi)
0x18454684,	//0x0d58		VoC_lw16i_set_inc(REG1,0xd608,0x1)(lo)	|	VoC_sw16_d(REG7,0x4684)(hi)
0x0AC65608,	//0x0d5a		VoC_lw16i(REG6,0xd748)(lo)	|	VoC_lw16i_set_inc(REG1,0xd608,0x1)(hi)
0xF0E75748,	//0x0d5c		VoC_lw16i_short(REG7,0x7,DEFAULT)	|	VoC_lw16i(REG6,0xd748)(hi)
0x3AB540C4,	//0x0d5e		VoC_be16_rd(v_srch_psw_other,REG4,0xbab5)
0xE0577810,	//0x0d60		VoC_lw16i_short(REG7,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x57081845,	//0x0d62		VoC_lw16i_set_inc(REG1,0xd708,0x1)
0x57520AC6,	//0x0d64		VoC_lw16i(REG6,0xd752)
		//0x0d66		v_srch_psw_other
0xF6227004,	//0x0d66		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xFF15700C,	//0x0d68		VoC_movreg32(ACC1,REG45,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0xCD6A7F34,	//0x0d6a		VoC_multf32_rr(REG45,REG5,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0x028A14C6,	//0x0d6c		VoC_lw32_d(RL6,0x828a)
0xE124C8B2,	//0x0d6e		VoC_movreg16(REG4,ACC0_HI,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL6,DEFAULT)
0x0EF81807,	//0x0d70		VoC_lw16i_set_inc(REG3,0xef8,0x1)
0x44700A84,	//0x0d72		VoC_lw16i(REG4,0x4470)
0xF6C55F42,	//0x0d74		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xF6067000,	//0x0d76		VoC_movreg16(REG6,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDFC35F42,	//0x0d78		VoC_push16(REG3,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x0DA12E31,	//0x0d7a		VoC_loop_r(1,REG6)
0xDE005896,	//0x0d7c		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x00FF1606,	//0x0d7e		VoC_and16_ri(REG6,0xff)
0xD8A640F3,	//0x0d80		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0x4136F946,	//0x0d82		VoC_add16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x5F40C171,	//0x0d84		VoC_push32(REG01,DEFAULT)	|	VoC_add16_rr(REG1,REG5,REG6,IN_PARALLEL)
0xFFC0F780,	//0x0d86		VoC_NAD	|	VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)
0xD18367C4,	//0x0d88		VoC_msu32inc_rp(REG0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x8149010E,	//0x0d8a		VoC_add16_rp(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG4,REG1,DEFAULT)
		//0x0d8c		VoC_endloop0
0xE0015433,	//0x0d8c		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_mac32inc_pp(REG6,REG3,DEFAULT)
0x84755083,	//0x0d8e		VoC_sub16_rp(REG5,REG1,REG6,IN_PARALLEL)	|	VoC_msu32_rp(REG0,REG3,DEFAULT)
0xD91A6161,	//0x0d90		VoC_lw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC1_HI,DEFAULT)
0xCC485C65,	//0x0d92		VoC_multf32_rr(REG01,REG1,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG6,DEFAULT)
0xC830E126,	//0x0d94		VoC_add32_rr(REG01,REG01,RL6,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xCC624DAF,	//0x0d96		VoC_multf32_rr(REG45,REG1,REG4,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG6,REG5,DEFAULT)
0x3697FFC0,	//0x0d98		VoC_bngt32_rr(v_srch_no_update,REG45,RL7)(lo)	|	VoC_NOP
0xE0C00DA0,	//0x0d9a		VoC_movreg16(REG0,REG6,DEFAULT)	|	VoC_bngt32_rr(v_srch_no_update,REG45,RL7)(hi)
0xDD18D908,	//0x0d9c		VoC_sw32_sd(REG01,0x2,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x46841500,	//0x0d9e		VoC_sw16_d(REG0,0x4684)
		//0x0da0		v_srch_no_update
0x590ADF00,	//0x0da0		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x0da1		VoC_endloop1
0x5F83D613,	//0x0da2		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16_sd(REG3,0x0,IN_PARALLEL)
0x5F84DF02,	//0x0da4		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x1406DF06,	//0x0da6		VoC_lw16_d(REG6,0x4684)(lo)	|	VoC_pop32(RL6,IN_PARALLEL)
0x60C04684,	//0x0da8		VoC_movreg16(REG0,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x4684)(hi)
0x7808FF46,	//0x0daa		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x64B0E015,	//0x0dac		VoC_xor16_rr(REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x1809E002,	//0x0dae		VoC_lw16i_set_inc(REG1,0x4672,0x2)(lo)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xE70A4672,	//0x0db0		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x4672,0x2)(hi)
0x60A7F8FA,	//0x0db2		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x6407F8FD,	//0x0db4		VoC_and16_rr(REG7,REG0,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)
0x31C7DE10,	//0x0db6		VoC_bnez16_r(v_srch111,REG7)(lo)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x958E0DBB,	//0x0db8		VoC_sub32_rp(RL6,RL6,REG1,DEFAULT)	|	VoC_bnez16_r(v_srch111,REG7)(hi)
0x938E958E,	//0x0dba		VoC_add32inc_rp(RL6,RL6,REG1,DEFAULT)	|	VoC_sub32_rp(RL6,RL6,REG1,DEFAULT)
		//0x0dbb		v_srch111
		//0x0dbb		VoC_endloop0
0x33C6DFA9,	//0x0dbc		VoC_bnltz32_r(v_srch333,RL6)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE4900DC0,	//0x0dbe		VoC_xor16_rr(REG0,REG2,DEFAULT)	|	VoC_bnltz32_r(v_srch333,RL6)(hi)
		//0x0dc0		v_srch333
0xDFE9E580,	//0x0dc0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0dc1		CII_sfrmAnalysis_opt
0x441E152A,	//0x0dc2		VoC_sw16_d(SP16,0x441e)
0x441C0A88,	//0x0dc4		VoC_lw16i(ACC0_LO,0x441c)
0x441A0A8A,	//0x0dc6		VoC_lw16i(ACC1_LO,0x441a)
0x44180A8C,	//0x0dc8		VoC_lw16i(RL6_LO,0x4418)
0xDFCADFC8,	//0x0dca		VoC_push16(ACC1_LO,DEFAULT)	|	VoC_push16(ACC0_LO,DEFAULT)
0xDFC3DFCC,	//0x0dcc		VoC_push16(REG3,DEFAULT)	|	VoC_push16(RL6_LO,DEFAULT)
0x1405DFC5,	//0x0dce		VoC_lw16_d(REG5,0x4414)(lo)	|	VoC_push16(REG5,DEFAULT)
0x14034414,	//0x0dd0		VoC_lw16_d(REG3,0xc95)(lo)	|	VoC_lw16_d(REG5,0x4414)(hi)
0xD8550C95,	//0x0dd2		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_d(REG3,0xc95)(hi)
0xDFC5DFC3,	//0x0dd4		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x44121403,	//0x0dd6		VoC_lw16_d(REG3,0x4412)
0x44131405,	//0x0dd8		VoC_lw16_d(REG5,0x4413)
0xD855D833,	//0x0dda		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xDFC5DFC3,	//0x0ddc		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x43B20A83,	//0x0dde		VoC_lw16i(REG3,0x43b2)
0x0BD60A85,	//0x0de0		VoC_lw16i(REG5,0xbd6)
0xDFC5DFC3,	//0x0de2		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x0CF00A83,	//0x0de4		VoC_lw16i(REG3,0xcf0)
0x44200A85,	//0x0de6		VoC_lw16i(REG5,0x4420)
0xDFC5DFC3,	//0x0de8		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x0B1A0A83,	//0x0dea		VoC_lw16i(REG3,0xb1a)
0x549D075B,	//0x0dec		VoC_add16_rd(REG3,REG3,0xd49d)
0x43DA0A85,	//0x0dee		VoC_lw16i(REG5,0x43da)
0xDFC5DFC3,	//0x0df0		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x441F152A,	//0x0df2		VoC_sw16_d(SP16,0x441f)
0x11A13187,	//0x0df4		VoC_bez16_r(sfrmAnalysis_mid,REG7)
0xDFC1DFC0,	//0x0df6		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xDFC4DFC2,	//0x0df8		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xD6B1DFC6,	//0x0dfa		VoC_lw16_sd(REG1,0xa,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xD713D6A2,	//0x0dfc		VoC_lw16_sd(REG3,0x10,DEFAULT)	|	VoC_lw16_sd(REG2,0x9,DEFAULT)
0xE0055FC7,	//0x0dfe		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x001E14C7,	//0x0e00		VoC_lw32_d(RL7,0x801e)
0x0E172C15,	//0x0e02		VoC_loop_i(0x1,0xa)
0xFF3CF144,	//0x0e04		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x0E0E3185,	//0x0e06		VoC_bez16_r(lpcZiIir_skip_1st,REG5)
0xD48BE741,	//0x0e08		VoC_msu32inc_pp(REG1,REG3,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x0e09		VoC_endloop0
0xC32C4069,	//0x0e0a		VoC_sub16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x03840749,	//0x0e0c		VoC_add16_rd(REG1,REG1,0x8384)
		//0x0e0e		lpcZiIir_skip_1st
0xD8A7E702,	//0x0e0e		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
		//0x0e10		VoC_endloop0
0x076DD1BB,	//0x0e10		VoC_add16_rd(REG5,REG5,0x8384)(lo)	|	VoC_msu32inc_rp(REG7,REG3,DEFAULT)
0x42A20384,	//0x0e12		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x8384)(hi)
0x07DBFBE4,	//0x0e14		VoC_sub16_rd(REG3,REG3,0xbab6)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0xDC193AB6,	//0x0e16		VoC_sw16_p(ACC0_HI,REG1,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0xbab6)(hi)
		//0x0e17		VoC_endloop1
0xF00B77D1,	//0x0e18		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0x0E272C3D,	//0x0e1a		VoC_loop_i(0x1,0x1e)
0xDFC16209,	//0x0e1c		VoC_push16(REG1,IN_PARALLEL)	|	VoC_aligninc_pp(REG1,REG1,DEFAULT)
0xFF3C68A2,	//0x0e1e		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x0e20		VoC_endloop0
0x5F81D58B,	//0x0e20		VoC_pop16(REG1,DEFAULT)	|	VoC_bimsu32inc_pp(REG1,REG3)
0x7BE4E012,	//0x0e22		VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0x07DBC051,	//0x0e24		VoC_sub16_rd(REG3,REG3,0xbab6)(lo)	|	VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xDC193AB6,	//0x0e26		VoC_sw16_p(ACC0_HI,REG1,DEFAULT)	|	VoC_sub16_rd(REG3,REG3,0xbab6)(hi)
		//0x0e27		VoC_endloop1
0xD6B2DF87,	//0x0e28		VoC_lw16_sd(REG2,0xa,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x43EA1809,	//0x0e2a		VoC_lw16i_set_inc(REG1,0x43ea,0x2)
0xDFC1A614,	//0x0e2c		VoC_push16(REG1,DEFAULT)	|	VoC_sub16inc_pp(REG4,REG0,REG2,DEFAULT)
0xA615EA83,	//0x0e2e		VoC_sub16inc_pp(REG5,REG0,REG2,DEFAULT)	|	VoC_loop_i_short(0x14,DEFAULT)
0xDDCAA614,	//0x0e30		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_sub16inc_pp(REG4,REG0,REG2,DEFAULT)
		//0x0e31		VoC_endloop0
0x0AC8F3A9,	//0x0e32		VoC_lw16i(ACC0_LO,0xff4c)(lo)	|	VoC_lw16i_short(ACC0_HI,0x1d,DEFAULT)
0xD6127F4C,	//0x0e34		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i(ACC0_LO,0xff4c)(hi)
0xD8A4ED03,	//0x0e36		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xCE24F814,	//0x0e38		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
		//0x0e39		VoC_endloop0
0x0962F006,	//0x0e3a		VoC_add32_rd(REG45,ACC0,0x828a)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x3C75028A,	//0x0e3c		VoC_bngt16_rd(sfrmAnalysis_000,REG5,0x9f18)(lo)	|	VoC_add32_rd(REG45,ACC0,0x828a)(hi)
0xF0261F18,	//0x0e3e		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_bngt16_rd(sfrmAnalysis_000,REG5,0x9f18)(hi)
0x00003C5D,	//0x0e40		VoC_bngt16_rd(sfrmAnalysis_000,REG5,0x8000)
0xD611F046,	//0x0e42		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
		//0x0e43		sfrmAnalysis_000
0xF6225FC6,	//0x0e44		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xD9CA7052,	//0x0e46		VoC_lw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xFE34EA84,	//0x0e48		VoC_shr16_rr(REG4,REG6,DEFAULT)	|	VoC_loop_i_short(0x14,DEFAULT)
0xD9CAFE35,	//0x0e4a		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_shr16_rr(REG5,REG6,DEFAULT)
		//0x0e4c		VoC_endloop0
0xF000DDD2,	//0x0e4c		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x44151403,	//0x0e4e		VoC_lw16_d(REG3,0x4415)
0x44161500,	//0x0e50		VoC_sw16_d(REG0,0x4416)
0xDFC0DC30,	//0x0e52		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_p(REG0,REG3,DEFAULT)
0x0D180A83,	//0x0e54		VoC_lw16i(REG3,0xd18)
0xDFC3D720,	//0x0e56		VoC_push16(REG3,DEFAULT)	|	VoC_lw16_sd(REG0,0x11,DEFAULT)
0x0F5A3140,	//0x0e58		VoC_bngtz16_r(sfrmAnalysis_011,REG0)
0xD752D670,	//0x0e5a		VoC_lw16_sd(REG2,0x14,DEFAULT)	|	VoC_lw16_sd(REG0,0x6,DEFAULT)
0xD643D687,	//0x0e5c		VoC_lw16_sd(REG3,0x3,DEFAULT)	|	VoC_lw16_sd(REG7,0x7,DEFAULT)
0x0B1A0A81,	//0x0e5e		VoC_lw16i(REG1,0xb1a)
0xE025F004,	//0x0e60		VoC_movreg16(REG5,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0e61		closedLoopLagSearch_loopstart
0xC100DF40,	//0x0e62		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x549D076D,	//0x0e64		VoC_add16_rd(REG5,REG5,0xd49d)
0xDF42D806,	//0x0e66		VoC_push32(REG45,DEFAULT)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x0B762B80,	//0x0e68		VoC_jal(CII_fp_ex_opt)
0x0862DF02,	//0x0e6a		VoC_mult16_rd(REG2,REG4,0xbd92)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x0A833D92,	//0x0e6c		VoC_lw16i(REG3,0xef8)(lo)	|	VoC_mult16_rd(REG2,REG4,0xbd92)(hi)
0xC0D30EF8,	//0x0e6e		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i(REG3,0xef8)(hi)
0xDFC4D756,	//0x0e70		VoC_push16(REG4,DEFAULT)	|	VoC_lw16_sd(REG6,0x14,DEFAULT)
0x0C512B80,	//0x0e72		VoC_jal(CII_lpcZsIir_opt)
0xD687DF84,	//0x0e74		VoC_lw16_sd(REG7,0x7,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x03840764,	//0x0e76		VoC_add16_rd(REG4,REG4,0x8384)
0x343CDF00,	//0x0e78		VoC_bgt16_rr(closedLoopLagSearch_loopstart,REG7,REG4)(lo)	|	VoC_pop32(REG01,DEFAULT)
0xD7520E61,	//0x0e7a		VoC_lw16_sd(REG2,0x14,DEFAULT)	|	VoC_bgt16_rr(closedLoopLagSearch_loopstart,REG7,REG4)(hi)
0x0EF81804,	//0x0e7c		VoC_lw16i_set_inc(REG0,0xef8,0x1)
0x0AC8F3A9,	//0x0e7e		VoC_lw16i(ACC0_LO,0xff4c)(lo)	|	VoC_lw16i_short(ACC0_HI,0x1d,DEFAULT)
0xED037F4C,	//0x0e80		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16i(ACC0_LO,0xff4c)(hi)
0xF815D885,	//0x0e82		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x0e84		VoC_endloop0
0x07FECE2D,	//0x0e84		VoC_sub16_rd(REG6,REG7,0x8384)(lo)	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
0x70050384,	//0x0e86		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sub16_rd(REG6,REG7,0x8384)(hi)
0x3206F0A0,	//0x0e88		VoC_bltz16_r(jump_labellele0,REG6)(lo)	|	VoC_lw16i_short(INC0,0x28,IN_PARALLEL)
0xE7830E90,	//0x0e8a		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_bltz16_r(jump_labellele0,REG6)(hi)
0xF815D885,	//0x0e8c		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x0e8e		VoC_endloop0
0xFFC0CE2D,	//0x0e8e		VoC_NAD	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
		//0x0e90		jump_labellele0
0x44701808,	//0x0e90		VoC_lw16i_set_inc(REG0,0x4470,0x2)
0x447C1809,	//0x0e92		VoC_lw16i_set_inc(REG1,0x447c,0x2)
0x028A0962,	//0x0e94		VoC_add32_rd(REG45,ACC0,0x828a)
0x3C75F004,	//0x0e96		VoC_bngt16_rd(CLOSEDLOOPLAG100,REG5,0x9f18)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0241F18,	//0x0e98		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt16_rd(CLOSEDLOOPLAG100,REG5,0x9f18)(hi)
0x00003C5D,	//0x0e9a		VoC_bngt16_rd(CLOSEDLOOPLAG100,REG5,0x8000)
0xFF06F044,	//0x0e9c		VoC_movreg32(RL6,REG01,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x0e9d		CLOSEDLOOPLAG100
0x0EF81806,	//0x0e9e		VoC_lw16i_set_inc(REG2,0xef8,0x1)
0x2E39DFC4,	//0x0ea0		VoC_loop_r(1,REG7)(lo)	|	VoC_push16(REG4,DEFAULT)
0xD6530EAE,	//0x0ea2		VoC_lw16_sd(REG3,0x4,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0xFF457F44,	//0x0ea4		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xD825ED05,	//0x0ea6		VoC_lw16_p(REG5,REG2,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0x4E2DFE25,	//0x0ea8		VoC_mac32_rr(REG5,REG5,DEFAULT)	|	VoC_shr16_rr(REG5,REG4,DEFAULT)
0xDCA5D12B,	//0x0eaa		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG3,IN_PARALLEL)
		//0x0eab		VoC_endloop0
0xDDCCFFC0,	//0x0eac		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
		//0x0eae		VoC_endloop1
0xFF30DDC5,	//0x0eae		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x7F44FF41,	//0x0eb0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32z(REG23,DEFAULT)
0xE7C7FF45,	//0x0eb2		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD9CFD9C2,	//0x0eb4		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x0EB933C2,	//0x0eb6		VoC_bnltz32_r(CLOSEDLOOPLAG901,REG45)
0xE514CA52,	//0x0eb8		VoC_or32_rr(ACC0,REG45,DEFAULT)	|	VoC_sub32_rr(REG45,REG23,REG45,DEFAULT)
		//0x0eb9		CLOSEDLOOPLAG901
		//0x0eba		VoC_endloop0
0x2B80E53D,	//0x0eba		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_or32_rr(ACC1,RL7,DEFAULT)
0xFF2C0188,	//0x0ebc		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B4D,	//0x0ebe		VoC_sub16_dr(REG5,0xbaaa,REG1)
0x01882B80,	//0x0ec0		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B4C,	//0x0ec2		VoC_sub16_dr(REG4,0xbaaa,REG1)
0x1806FF30,	//0x0ec4		VoC_lw16i_set_inc(REG2,0x4488,0x1)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x18074488,	//0x0ec6		VoC_lw16i_set_inc(REG3,0x448e,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x4488,0x1)(hi)
0x14C4448E,	//0x0ec8		VoC_lw32_d(ACC0,0x828a)(lo)	|	VoC_lw16i_set_inc(REG3,0x448e,0x1)(hi)
0xF051028A,	//0x0eca		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_lw32_d(ACC0,0x828a)(hi)
0xE7C8DF41,	//0x0ecc		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xD9CED9C7,	//0x0ece		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFEA67EAF,	//0x0ed0		VoC_shr32_rr(RL6,REG4,IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG5,DEFAULT)
0xC9A6C9E7,	//0x0ed2		VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xDCBDDCAF,	//0x0ed4		VoC_sw16inc_p(RL6_HI,REG3,DEFAULT)	|	VoC_sw16inc_p(RL7_HI,REG2,DEFAULT)
		//0x0ed5		VoC_endloop0
0x2B80DF01,	//0x0ed6		VoC_jal(CII_maxCCOverGWithSign_opt_paris)(lo)	|	VoC_pop32(REG23,DEFAULT)
0xD6820BAA,	//0x0ed8		VoC_lw16_sd(REG2,0x7,DEFAULT)	|	VoC_jal(CII_maxCCOverGWithSign_opt_paris)(hi)
0xFFC0C056,	//0x0eda		VoC_NOP	|	VoC_add16_rr(REG6,REG1,REG2,DEFAULT)
0x2B80D866,	//0x0edc		VoC_jal(CII_quantLag_opt_paris)(lo)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xDF850B54,	//0x0ede		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CII_quantLag_opt_paris)(hi)
0x44161506,	//0x0ee0		VoC_sw16_d(REG6,0x4416)
0x44171505,	//0x0ee2		VoC_sw16_d(REG5,0x4417)
0x1403D7A1,	//0x0ee4		VoC_lw16_d(REG3,0x4415)(lo)	|	VoC_lw16_sd(REG1,0x19,DEFAULT)
0x14044415,	//0x0ee6		VoC_lw16_d(REG4,0x60d)(lo)	|	VoC_lw16_d(REG3,0x4415)(hi)
0x1502060D,	//0x0ee8		VoC_sw16_d(REG2,0x60d)(lo)	|	VoC_lw16_d(REG4,0x60d)(hi)
0x3181060D,	//0x0eea		VoC_bez16_r(sfrmAnalysis_003,REG1)(lo)	|	VoC_sw16_d(REG2,0x60d)(hi)
0xC2A20EF0,	//0x0eec		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_bez16_r(sfrmAnalysis_003,REG1)(hi)
0x3AB40752,	//0x0eee		VoC_add16_rd(REG2,REG2,0xbab4)
		//0x0ef0		sfrmAnalysis_003
0xDC32D664,	//0x0ef0		VoC_sw16_p(REG2,REG3,DEFAULT)	|	VoC_lw16_sd(REG4,0x5,DEFAULT)
0x0B662B80,	//0x0ef2		VoC_jal(CII_get_ipjj_opt_paris)
0x542E185A,	//0x0ef4		VoC_lw16i_set_inc(REG2,0xd42e,0x6)
0x0A85C082,	//0x0ef6		VoC_lw16i(REG5,0x2a)(lo)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x1804002A,	//0x0ef8		VoC_lw16i_set_inc(REG0,0x43e4,0x1)(lo)	|	VoC_lw16i(REG5,0x2a)(hi)
0xD65343E4,	//0x0efa		VoC_lw16_sd(REG3,0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x43e4,0x1)(hi)
0xD8A7DA60,	//0x0efc		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16_sd(REG0,0x5,DEFAULT)
0xEFD468C9,	//0x0efe		VoC_lw16i_short(REG4,0xfffd,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0x3AAA0B7E,	//0x0f00		VoC_sub16_dr(REG6,0xbaaa,REG7)
0xFFC0CD9B,	//0x0f02		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG3,DEFAULT)
0x028A095B,	//0x0f04		VoC_add32_rd(REG67,REG67,0x828a)
0xDC87D8A7,	//0x0f06		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
		//0x0f07		VoC_endloop0
0xC34DC30C,	//0x0f08		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG1,DEFAULT)
0xDA25DA74,	//0x0f0a		VoC_sw16_sd(REG5,0x1,DEFAULT)	|	VoC_sw16_sd(REG4,0x6,DEFAULT)
0xF0065692,	//0x0f0c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x8,DEFAULT)
0xE0155643,	//0x0f0e		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x3,DEFAULT)
0x0A86C2A9,	//0x0f10		VoC_lw16i(REG6,0x28)(lo)	|	VoC_sub16_rr(REG1,REG2,REG5,DEFAULT)
0xD6600028,	//0x0f12		VoC_lw16_sd(REG0,0x5,DEFAULT)	|	VoC_lw16i(REG6,0x28)(hi)
0xF3FF77F0,	//0x0f14		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xDF427031,	//0x0f16		VoC_push32(REG45,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x0AE82B80,	//0x0f18		VoC_jal(CII_hnwFilt_opt)
0xD6F2DF02,	//0x0f1a		VoC_lw16_sd(REG2,0xe,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x00280A86,	//0x0f1c		VoC_lw16i(REG6,0x28)
0xF6435660,	//0x0f1e		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x0BE01805,	//0x0f20		VoC_lw16i_set_inc(REG1,0xbe0,0x1)
0x549A0749,	//0x0f22		VoC_add16_rd(REG1,REG1,0xd49a)
0x0AE82B80,	//0x0f24		VoC_jal(CII_hnwFilt_opt)
0xD630D6F2,	//0x0f26		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_lw16_sd(REG2,0xe,DEFAULT)
0xD8A6D641,	//0x0f28		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16_sd(REG1,0x3,DEFAULT)
0xB873ED04,	//0x0f2a		VoC_sub16_pr(REG3,REG1,REG6,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD8A6FE03,	//0x0f2c		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_shr16_rr(REG3,REG0,DEFAULT)
		//0x0f2e		VoC_endloop0
0x1406DC93,	//0x0f2e		VoC_lw16_d(REG6,0x4416)(lo)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xD6B54416,	//0x0f30		VoC_lw16_sd(REG5,0xa,DEFAULT)	|	VoC_lw16_d(REG6,0x4416)(hi)
0x0B762B80,	//0x0f32		VoC_jal(CII_fp_ex_opt)
0xD6D0D6B1,	//0x0f34		VoC_lw16_sd(REG0,0xc,DEFAULT)	|	VoC_lw16_sd(REG1,0xa,DEFAULT)
0xD892F030,	//0x0f36		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xD892ED02,	//0x0f38		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
		//0x0f3a		VoC_endloop0
0xD613DC82,	//0x0f3a		VoC_lw16_sd(REG3,0x0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xD756D6D5,	//0x0f3c		VoC_lw16_sd(REG6,0x14,DEFAULT)	|	VoC_lw16_sd(REG5,0xc,DEFAULT)
0x0C512B80,	//0x0f3e		VoC_jal(CII_lpcZsIir_opt)
0x1FBFD674,	//0x0f40		VoC_lw16i_set_inc(REG3,0xd18,0xffffffff)(lo)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0x60620D18,	//0x0f42		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xd18,0xffffffff)(hi)
0x7005D626,	//0x0f44		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,IN_PARALLEL)
0xF001D660,	//0x0f46		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_lw16_sd(REG0,0x5,IN_PARALLEL)
0xF00577F0,	//0x0f48		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0x0F4E3146,	//0x0f4a		VoC_bngtz16_r(sfrmAnalysis_004,REG6)
0x0AE82B80,	//0x0f4c		VoC_jal(CII_hnwFilt_opt)
		//0x0f4e		sfrmAnalysis_004
0x1404D6D0,	//0x0f4e		VoC_lw16_d(REG4,0x4417)(lo)	|	VoC_lw16_sd(REG0,0xc,DEFAULT)
0x56114417,	//0x0f50		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16_d(REG4,0x4417)(hi)
0xED06F004,	//0x0f52		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xD813D802,	//0x0f54		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0xFE23FE22,	//0x0f56		VoC_shr16_rr(REG3,REG4,DEFAULT)	|	VoC_shr16_rr(REG2,REG4,DEFAULT)
0xDC93DC82,	//0x0f58		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
		//0x0f59		VoC_endloop0
		//0x0f5a		sfrmAnalysis_011
0x0AC5F0E6,	//0x0f5a		VoC_lw16i(REG5,0xbd72)(lo)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0x6A053D72,	//0x0f5c		VoC_bngtz16_d(sfrmAnalysis_012,0xc95)(lo)	|	VoC_lw16i(REG5,0xbd72)(hi)
0xF1260C95,	//0x0f5e		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_bngtz16_d(sfrmAnalysis_012,0xc95)(hi)
0x3FA20AC5,	//0x0f60		VoC_lw16i(REG5,0xbfa2)
		//0x0f62		sfrmAnalysis_012
0xDFC6F000,	//0x0f62		VoC_push16(REG6,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xD776DFC5,	//0x0f64		VoC_lw16_sd(REG6,0x16,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
		//0x0f65		sfrmAnalysis_loop0
0x3D920841,	//0x0f66		VoC_mult16_rd(REG1,REG0,0xbd92)
0x0D401807,	//0x0f68		VoC_lw16i_set_inc(REG3,0xd40,0x1)
0xD615C0CB,	//0x0f6a		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0xDFC0414D,	//0x0f6c		VoC_push16(REG0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x2B80DFC3,	//0x0f6e		VoC_jal(CII_lpcZsIir_opt)(lo)	|	VoC_push16(REG3,DEFAULT)
0xDF830C51,	//0x0f70		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(CII_lpcZsIir_opt)(hi)
0x6062F7F3,	//0x0f72		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x3146D656,	//0x0f74		VoC_bngtz16_r(sfrmAnalysis_009,REG6)(lo)	|	VoC_lw16_sd(REG6,0x4,IN_PARALLEL)
0x56900F7E,	//0x0f76		VoC_lw16_sd(REG0,0x8,DEFAULT)	|	VoC_bngtz16_r(sfrmAnalysis_009,REG6)(hi)
0x56A4E001,	//0x0f78		VoC_lw16_sd(REG4,0x9,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0xF7F0E005,	//0x0f7a		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0AE82B80,	//0x0f7c		VoC_jal(CII_hnwFilt_opt)
		//0x0f7e		sfrmAnalysis_009
0xDF80F030,	//0x0f7e		VoC_pop16(REG0,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDE00D621,	//0x0f80		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x0F653408,	//0x0f82		VoC_bgt16_rr(sfrmAnalysis_loop0,REG1,REG0)
0x0D401807,	//0x0f84		VoC_lw16i_set_inc(REG3,0xd40,0x1)
0x0D181804,	//0x0f86		VoC_lw16i_set_inc(REG0,0xd18,0x1)
0x6A05DFC3,	//0x0f88		VoC_bngtz16_d(CII_sfrmAnalysis_100,0xc95)(lo)	|	VoC_push16(REG3,DEFAULT)
0xD6350C95,	//0x0f8a		VoC_lw16_sd(REG5,0x2,DEFAULT)	|	VoC_bngtz16_d(CII_sfrmAnalysis_100,0xc95)(hi)
0x127A2B80,	//0x0f8c		VoC_jal(CII_decorr_opt)
		//0x0f8e		CII_sfrmAnalysis_100
0xD610D634,	//0x0f8e		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0x2B80D671,	//0x0f90		VoC_jal(CII_v_srch_opt)(lo)	|	VoC_lw16_sd(REG1,0x6,DEFAULT)
0xDB400C8F,	//0x0f92		VoC_sw16_sd(REG0,0x13,DEFAULT)	|	VoC_jal(CII_v_srch_opt)(hi)
0xF6055634,	//0x0f94		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0x2B80D6D0,	//0x0f96		VoC_jal(CII_b_con_opt)(lo)	|	VoC_lw16_sd(REG0,0xc,DEFAULT)
0xD6200BE8,	//0x0f98		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_jal(CII_b_con_opt)(hi)
0xF0A056D2,	//0x0f9a		VoC_lw16i_short(INC0,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0xc,DEFAULT)
0x1809D634,	//0x0f9c		VoC_lw16i_set_inc(REG1,0x4420,0x2)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0x2B804420,	//0x0f9e		VoC_jal(CII_v_con_opt)(lo)	|	VoC_lw16i_set_inc(REG1,0x4420,0x2)(hi)
0xF0000BC9,	//0x0fa0		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
0x44200A81,	//0x0fa2		VoC_lw16i(REG1,0x4420)
0xDA21DB30,	//0x0fa4		VoC_sw16_sd(REG1,0x1,DEFAULT)	|	VoC_sw16_sd(REG0,0x12,DEFAULT)
0x0C956E37,	//0x0fa6		VoC_bnez16_d(CII_sfrmAnalysis_300_END,0xc95)
0x0A81D610,	//0x0fa8		VoC_lw16i(REG1,0xea8)(lo)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xD6D20EA8,	//0x0faa		VoC_lw16_sd(REG2,0xc,DEFAULT)	|	VoC_lw16i(REG1,0xea8)(hi)
0x2B80D634,	//0x0fac		VoC_jal(CII_v_con_opt)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xD6370BC9,	//0x0fae		VoC_lw16_sd(REG7,0x2,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
0x3E8A0AC0,	//0x0fb0		VoC_lw16i(REG0,0xbe8a)
0xDFC0F004,	//0x0fb2		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0fb4		sfrmAnalysis_LOOP_100_START
0x3D920861,	//0x0fb4		VoC_mult16_rd(REG1,REG4,0xbd92)
0x40CBD623,	//0x0fb6		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0xD615D796,	//0x0fb8		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_lw16_sd(REG6,0x18,IN_PARALLEL)
0xFFC0C14D,	//0x0fba		VoC_NAD	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x0C512B80,	//0x0fbc		VoC_jal(CII_lpcZsIir_opt)
0x03840764,	//0x0fbe		VoC_add16_rd(REG4,REG4,0x8384)
0x0FB435BC,	//0x0fc0		VoC_bne16_rr(sfrmAnalysis_LOOP_100_START,REG7,REG4)
0x0A80D645,	//0x0fc2		VoC_lw16i(REG0,0xea8)(lo)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0xD6230EA8,	//0x0fc4		VoC_lw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16i(REG0,0xea8)(hi)
0x127A2B80,	//0x0fc6		VoC_jal(CII_decorr_opt)
0x1804D644,	//0x0fc8		VoC_lw16i_set_inc(REG0,0xd40,0x1)(lo)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0x18050D40,	//0x0fca		VoC_lw16i_set_inc(REG1,0x43ea,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xd40,0x1)(hi)
0x2B8043EA,	//0x0fcc		VoC_jal(CII_v_srch_opt)(lo)	|	VoC_lw16i_set_inc(REG1,0x43ea,0x1)(hi)
0xDB400C8F,	//0x0fce		VoC_sw16_sd(REG0,0x13,DEFAULT)	|	VoC_jal(CII_v_srch_opt)(hi)
0xF6055644,	//0x0fd0		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0x2B80D6E0,	//0x0fd2		VoC_jal(CII_b_con_opt)(lo)	|	VoC_lw16_sd(REG0,0xd,DEFAULT)
0xDF800BE8,	//0x0fd4		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_b_con_opt)(hi)
0x44481809,	//0x0fd6		VoC_lw16i_set_inc(REG1,0x4448,0x2)
0xF0A056D2,	//0x0fd8		VoC_lw16i_short(INC0,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0xc,DEFAULT)
0x2B80D634,	//0x0fda		VoC_jal(CII_v_con_opt)(lo)	|	VoC_lw16_sd(REG4,0x2,DEFAULT)
0xD6F50BC9,	//0x0fdc		VoC_lw16_sd(REG5,0xe,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
		//0x0fdd		CII_sfrmAnalysis_300_END
0x0EA80A83,	//0x0fde		VoC_lw16i(REG3,0xea8)
0xDA23D786,	//0x0fe0		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x17,DEFAULT)
0x0C512B80,	//0x0fe2		VoC_jal(CII_lpcZsIir_opt)
0x77F0D656,	//0x0fe4		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG6,0x4,DEFAULT)
0xF031F3FF,	//0x0fe6		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x0FF13146,	//0x0fe8		VoC_bngtz16_r(CII_sfrmAnalysis_400,REG6)
0x5622D690,	//0x0fea		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x8,DEFAULT)
0xD623E005,	//0x0fec		VoC_lw16_sd(REG3,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x2B80D6A4,	//0x0fee		VoC_jal(CII_hnwFilt_opt)(lo)	|	VoC_lw16_sd(REG4,0x9,DEFAULT)
0xF0330AE8,	//0x0ff0		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_jal(CII_hnwFilt_opt)(hi)
		//0x0ff1		CII_sfrmAnalysis_400
0x0C956E0B,	//0x0ff2		VoC_bnez16_d(CII_sfrmAnalysis_500,0xc95)
0x0A87D623,	//0x0ff4		VoC_lw16i(REG7,0x28)(lo)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0x56F50028,	//0x0ff6		VoC_lw16_sd(REG5,0xe,DEFAULT)	|	VoC_lw16i(REG7,0x28)(hi)
0x5786C0FB,	//0x0ff8		VoC_lw16_sd(REG6,0x17,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x2B80C17D,	//0x0ffa		VoC_jal(CII_lpcZsIir_opt)(lo)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xF0500C51,	//0x0ffc		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_jal(CII_lpcZsIir_opt)(hi)
		//0x0ffd		CII_sfrmAnalysis_500
0x0C956A07,	//0x0ffe		VoC_bngtz16_d(CII_sfrmAnalysis_600,0xc95)
0xD772D700,	//0x1000		VoC_lw16_sd(REG2,0x16,DEFAULT)	|	VoC_lw16_sd(REG0,0xf,DEFAULT)
0x2B80D793,	//0x1002		VoC_jal(CII_rs_rrNs_opt)(lo)	|	VoC_lw16_sd(REG3,0x18,DEFAULT)
0xD6F00C48,	//0x1004		VoC_lw16_sd(REG0,0xe,DEFAULT)	|	VoC_jal(CII_rs_rrNs_opt)(hi)
		//0x1005		CII_sfrmAnalysis_600
0x57A3D772,	//0x1006		VoC_lw16_sd(REG3,0x19,DEFAULT)	|	VoC_lw16_sd(REG2,0x16,DEFAULT)
0xFFC0F005,	//0x1008		VoC_NAD	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x0C482B80,	//0x100a		VoC_jal(CII_rs_rrNs_opt)
0x0C956E0A,	//0x100c		VoC_bnez16_d(CII_sfrmAnalysis_700,0xc95)
0x0A87D6F0,	//0x100e		VoC_lw16i(REG7,0x28)(lo)	|	VoC_lw16_sd(REG0,0xe,DEFAULT)
0x57720028,	//0x1010		VoC_lw16_sd(REG2,0x16,DEFAULT)	|	VoC_lw16i(REG7,0x28)(hi)
0xD7B3C038,	//0x1012		VoC_lw16_sd(REG3,0x1a,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)
0x0C482B80,	//0x1014		VoC_jal(CII_rs_rrNs_opt)
		//0x1016		CII_sfrmAnalysis_700
0xD621D670,	//0x1016		VoC_lw16_sd(REG1,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x6,DEFAULT)
0x00280A87,	//0x1018		VoC_lw16i(REG7,0x28)
0xD643C07A,	//0x101a		VoC_lw16_sd(REG3,0x3,DEFAULT)	|	VoC_add16_rr(REG2,REG1,REG7,DEFAULT)
0xD7A5D7B4,	//0x101c		VoC_lw16_sd(REG5,0x19,DEFAULT)	|	VoC_lw16_sd(REG4,0x1a,DEFAULT)
0xD667D796,	//0x101e		VoC_lw16_sd(REG7,0x5,DEFAULT)	|	VoC_lw16_sd(REG6,0x18,DEFAULT)
0x1507D767,	//0x1020		VoC_sw16_d(REG7,0xef8)(lo)	|	VoC_lw16_sd(REG7,0x15,DEFAULT)
0x70300EF8,	//0x1022		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_sw16_d(REG7,0xef8)(hi)
0xDFC7F005,	//0x1024		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF425FC6,	//0x1026		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x102C3187,	//0x1028		VoC_bez16_r(CII_g_quant_vl_Lable0,REG7)
0xF6616022,	//0x102a		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x102c		CII_g_quant_vl_Lable0
0x0EFA0A83,	//0x102c		VoC_lw16i(REG3,0xefa)
0x2C0DF006,	//0x102e		VoC_loop_i(0x1,0x6)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xDF401052,	//0x1030		VoC_push32(REG01,DEFAULT)	|	VoC_loop_i(0x1,0x6)(hi)
0xF031DFC2,	//0x1032		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x03844466,	//0x1034		VoC_bne16_rd(CII_g_quant_vl_Lable1,REG6,0x8384)
0xFFC0E041,	//0x1036		VoC_NAD	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x1038		CII_g_quant_vl_Lable1
0x3AAE40C6,	//0x1038		VoC_be16_rd(CII_g_quant_vl_Lable2,REG6,0xbaae)
0x3AAF4466,	//0x103a		VoC_bne16_rd(CII_g_quant_vl_Lable3,REG6,0xbaaf)
0xFFC0E020,	//0x103c		VoC_NAD	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x103e		CII_g_quant_vl_Lable3
0x3AB04466,	//0x103e		VoC_bne16_rd(CII_g_quant_vl_Lable4,REG6,0xbab0)
		//0x1040		CII_g_quant_vl_Lable2
0xFFC0E040,	//0x1040		VoC_NAD	|	VoC_movreg16(REG0,REG2,DEFAULT)
		//0x1042		CII_g_quant_vl_Lable4
0x3AAE386E,	//0x1042		VoC_bgt16_rd(CII_g_quant_vl_Lable10,REG6,0xbaae)
0x12C72B80,	//0x1044		VoC_jal(CII_g_corr2_opt)
0xF050E5C6,	//0x1046		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_jump(CII_g_quant_vl_Lable11)
		//0x1047		CII_g_quant_vl_Lable10
0x0BDF2B80,	//0x1048		VoC_jal(CII_g_corr1_opt_paris)
0xFF25F030,	//0x104a		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
		//0x104c		CII_g_quant_vl_Lable11
0x028A096A,	//0x104c		VoC_add32_rd(REG45,ACC1,0x828a)
0xDCB5DF82,	//0x104e		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xDF00DCB1,	//0x1050		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
		//0x1052		VoC_endloop1
0x03840776,	//0x1052		VoC_add16_rd(REG6,REG6,0x8384)
0x3AB707DF,	//0x1054		VoC_sub16_rd(REG7,REG3,0xbab7)
0x0A85DFC7,	//0x1056		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_push16(REG7,DEFAULT)
0x0A837FFF,	//0x1058		VoC_lw16i(REG3,0xf08)(lo)	|	VoC_lw16i(REG5,0x7fff)(hi)
0x15050F08,	//0x105a		VoC_sw16_d(REG5,0xf06)(lo)	|	VoC_lw16i(REG3,0xf08)(hi)
0xF0050F06,	//0x105c		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16_d(REG5,0xf06)(hi)
0xDF43DFC7,	//0x105e		VoC_push32(REG67,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
		//0x105f		LOOP_START0
0x7046DFC5,	//0x1060		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0778F005,	//0x1062		VoC_add16_rd(REG0,REG7,0xbab2)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xC0323AB2,	//0x1064		VoC_add16_rr(REG2,REG0,REG6,DEFAULT)	|	VoC_add16_rd(REG0,REG7,0xbab2)(hi)
0x447DC0B1,	//0x1066		VoC_bne16_rd(LOOP_ADDR2,REG5,0x8384)(lo)	|	VoC_add16_rr(REG1,REG2,REG6,DEFAULT)
0x07780384,	//0x1068		VoC_add16_rd(REG0,REG7,0xbab0)(lo)	|	VoC_bne16_rd(LOOP_ADDR2,REG5,0x8384)(hi)
0xE0013AB0,	//0x106a		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_add16_rd(REG0,REG7,0xbab0)(hi)
0x3AB6077A,	//0x106c		VoC_add16_rd(REG2,REG7,0xbab6)
		//0x106e		LOOP_ADDR2
0x3AAE4475,	//0x106e		VoC_bne16_rd(LOOP_ADDR3,REG5,0xbaae)
0xE001C1F0,	//0x1070		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG7,REG6,DEFAULT)
0x3AB2077A,	//0x1072		VoC_add16_rd(REG2,REG7,0xbab2)
		//0x1074		LOOP_ADDR3
0x3AAF4475,	//0x1074		VoC_bne16_rd(LOOP_ADDR4,REG5,0xbaaf)
0xC1F160E0,	//0x1076		VoC_add16_rr(REG1,REG7,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0xFFC0C072,	//0x1078		VoC_NAD	|	VoC_add16_rr(REG2,REG1,REG6,DEFAULT)
		//0x107a		LOOP_ADDR4
0x3AB04475,	//0x107a		VoC_bne16_rd(LOOP_ADDR5,REG5,0xbab0)
0xF6E260E0,	//0x107c		VoC_movreg16(REG2,REG7,IN_PARALLEL)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x3AB40779,	//0x107e		VoC_add16_rd(REG1,REG7,0xbab4)
		//0x1080		LOOP_ADDR5
0xF007D884,	//0x1080		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xDFC19B0C,	//0x1082		VoC_push16(REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG4,REG1,DEFAULT)
0x2C05D805,	//0x1084		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0xFF251093,	//0x1086		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x2B80E0C8,	//0x1088		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xFF2C0188,	//0x108a		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B49,	//0x108c		VoC_sub16_dr(REG1,0xbaaa,REG1)
0xFE8CC34D,	//0x108e		VoC_shr32_rr(ACC0,REG1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
0x028A0963,	//0x1090		VoC_add32_rd(REG67,ACC0,0x828a)
0xF00699D4,	//0x1092		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
		//0x1093		VoC_endloop1
0xDF815E10,	//0x1094		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x814D8155,	//0x1096		VoC_add16_rp(REG5,REG5,REG1,DEFAULT)	|	VoC_add16_rp(REG5,REG5,REG2,DEFAULT)
0x4466D616,	//0x1098		VoC_bne16_rd(LOOP_END1,REG6,0xbaaf)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x07ED3AAF,	//0x109a		VoC_sub16_rd(REG5,REG5,0x8384)(lo)	|	VoC_bne16_rd(LOOP_END1,REG6,0xbaaf)(hi)
0xDCB70384,	//0x109c		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sub16_rd(REG5,REG5,0x8384)(hi)
		//0x109d		LOOP_END1
0x3825DCB5,	//0x109e		VoC_bgt16_rd(LOOP_END0,REG5,0xf06)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x15050F06,	//0x10a0		VoC_sw16_d(REG5,0xf06)(lo)	|	VoC_bgt16_rd(LOOP_END0,REG5,0xf06)(hi)
0xDF030F06,	//0x10a2		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG5,0xf06)(hi)
		//0x10a3		LOOP_END0
0x076DDF85,	//0x10a4		VoC_add16_rd(REG5,REG5,0x8384)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x40650384,	//0x10a6		VoC_be16_rd(LOOP_START0_new,REG5,0xd756)(lo)	|	VoC_add16_rd(REG5,REG5,0x8384)(hi)
0x2B005756,	//0x10a8		VoC_jump_lg(LOOP_START0)(lo)	|	VoC_be16_rd(LOOP_START0_new,REG5,0xd756)(hi)
0xF006105F,	//0x10aa		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jump_lg(LOOP_START0)(hi)
		//0x10ab		LOOP_START0_new
0x0F061404,	//0x10ac		VoC_lw16_d(REG4,0xf06)
0x0F081808,	//0x10ae		VoC_lw16i_set_inc(REG0,0xf08,0x2)
0x0F091809,	//0x10b0		VoC_lw16i_set_inc(REG1,0xf09,0x2)
0xD807E8A9,	//0x10b2		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x3143BA63,	//0x10b4		VoC_bngtz16_r(gainTweak55,REG3)(lo)	|	VoC_sub16inc_pr(REG3,REG1,REG4,DEFAULT)
0xFE9B10B8,	//0x10b6		VoC_shr32_rr(REG67,REG3,DEFAULT)	|	VoC_bngtz16_r(gainTweak55,REG3)(hi)
		//0x10b8		gainTweak55
0x028A095B,	//0x10b8		VoC_add32_rd(REG67,REG67,0x828a)
0xDC87F006,	//0x10ba		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x10bb		VoC_endloop0
0x0F081405,	//0x10bc		VoC_lw16_d(REG5,0xf08)
0x0F0A07AD,	//0x10be		VoC_sub16_rd(REG5,REG5,0xf0a)
0x11203145,	//0x10c0		VoC_bngtz16_r(gainTweak_end,REG5)
0x0F0C1406,	//0x10c2		VoC_lw16_d(REG6,0xf0c)
0x0F0E07B6,	//0x10c4		VoC_sub16_rd(REG6,REG6,0xf0e)
0x0F100736,	//0x10c6		VoC_add16_rd(REG6,REG6,0xf10)
0x11203146,	//0x10c8		VoC_bngtz16_r(gainTweak_end,REG6)
0x112034AE,	//0x10ca		VoC_bngt16_rr(gainTweak_end,REG5,REG6)
0xE0A9FF44,	//0x10cc		VoC_movreg16(ACC0_HI,REG5,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x01882B80,	//0x10ce		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B49,	//0x10d0		VoC_sub16_dr(REG1,0xbaaa,REG1)
0x382A0B4A,	//0x10d2		VoC_sub16_dr(REG2,0xb82a,REG1)
0xF80DFE0D,	//0x10d4		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_shr16_rr(REG5,REG1,DEFAULT)
0xE0C9FF44,	//0x10d6		VoC_movreg16(ACC0_HI,REG6,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x01882B80,	//0x10d8		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B49,	//0x10da		VoC_sub16_dr(REG1,0xbaaa,REG1)
0xFE0EC08F,	//0x10dc		VoC_shr16_rr(REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG7,REG2,REG1,DEFAULT)
0xF6C160A0,	//0x10de		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x019A2B80,	//0x10e0		VoC_jal(CII_DIV_S)
0xE049FF44,	//0x10e2		VoC_movreg16(ACC0_HI,REG2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x2B80FF27,	//0x10e4		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFF460188,	//0x10e6		VoC_lw32z(RL6,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B49,	//0x10e8		VoC_sub16_dr(REG1,0xbaaa,REG1)
0xFE8FC3CA,	//0x10ea		VoC_shr32_rr(RL7,REG1,DEFAULT)	|	VoC_sub16_rr(REG2,REG7,REG1,DEFAULT)
0x0BFF2B80,	//0x10ec		VoC_jal(CII_sqroot_opt)
0xE040E0ED,	//0x10ee		VoC_movreg16(REG0,REG2,DEFAULT)	|	VoC_movreg16(RL6_HI,REG7,DEFAULT)
0x00011600,	//0x10f0		VoC_and16_ri(REG0,0x1)
0x10F83180,	//0x10f2		VoC_bez16_r(gainTweak99,REG0)
0x025A0A7E,	//0x10f4		VoC_multf32_rd(RL6,REG7,0x825a)
0x038407D2,	//0x10f6		VoC_sub16_rd(REG2,REG2,0x8384)
		//0x10f8		gainTweak99
0xE1A9FF44,	//0x10f8		VoC_movreg16(ACC0_HI,RL6_HI,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x01882B80,	//0x10fa		VoC_jal(CII_NORM_L_ACC0)
0x0B49F80A,	//0x10fc		VoC_sub16_dr(REG1,0xbaaa,REG1)(lo)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x408A3AAA,	//0x10fe		VoC_add16_rr(REG2,REG2,REG1,DEFAULT)	|	VoC_sub16_dr(REG1,0xbaaa,REG1)(hi)
0x0972FE8E,	//0x1100		VoC_add32_rd(REG45,RL6,0x828a)(lo)	|	VoC_shr32_rr(RL6,REG1,IN_PARALLEL)
0x0A84028A,	//0x1102		VoC_lw16i(REG4,0x5a82)(lo)	|	VoC_add32_rd(REG45,RL6,0x828a)(hi)
0x39DA5A82,	//0x1104		VoC_bgt16_rd(gainTweak_end,REG2,0xb82a)(lo)	|	VoC_lw16i(REG4,0x5a82)(hi)
0x386D382A,	//0x1106		VoC_bgt16_rd(gainTweak003,REG5,0x825a)(lo)	|	VoC_bgt16_rd(gainTweak_end,REG2,0xb82a)(hi)
0x485A025A,	//0x1108		VoC_blt16_rd(gainTweak003,REG2,0xb82a)(lo)	|	VoC_bgt16_rd(gainTweak003,REG5,0x825a)(hi)
0xE0A4382A,	//0x110a		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_blt16_rd(gainTweak003,REG2,0xb82a)(hi)
		//0x110c		gainTweak003
0xF030D610,	//0x110c		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x111F2C05,	//0x110e		VoC_loop_i(0x1,0x2)
0x9B03E003,	//0x1110		VoC_multf32inc_rp(REG67,REG4,REG0,DEFAULT)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xE0E9FF44,	//0x1112		VoC_movreg16(ACC0_HI,REG7,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x01882B80,	//0x1114		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B49,	//0x1116		VoC_sub16_dr(REG1,0xbaaa,REG1)
0x07D2B80A,	//0x1118		VoC_sub16_rd(REG2,REG2,0x8384)(lo)	|	VoC_sub16_pr(REG2,REG0,REG1,DEFAULT)
0xFE8B0384,	//0x111a		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x8384)(hi)
0x028A095B,	//0x111c		VoC_add32_rd(REG67,REG67,0x828a)
0xDC37DC82,	//0x111e		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
		//0x111f		VoC_endloop1
		//0x1120		gainTweak_end
0xDF87DF83,	//0x1120		VoC_pop16(REG7,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xDF025F86,	//0x1122		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x11283187,	//0x1124		VoC_bez16_r(CII_g_quant_vl_Lable20,REG7)
0xF6C560A4,	//0x1126		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x1128		CII_g_quant_vl_Lable20
0x7FFF0A80,	//0x1128		VoC_lw16i(REG0,0x7fff)
0x1500F006,	//0x112a		VoC_sw16_d(REG0,0xef9)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x2C0B0EF9,	//0x112c		VoC_loop_i(0x1,0x5)(lo)	|	VoC_sw16_d(REG0,0xef9)(hi)
0xDF421171,	//0x112e		VoC_push32(REG45,DEFAULT)	|	VoC_loop_i(0x1,0x5)(hi)
0x4066DF43,	//0x1130		VoC_be16_rd(CII_g_quant_vl_Lable21,REG6,0xbaaa)(lo)	|	VoC_push32(REG67,DEFAULT)
0x445E3AAA,	//0x1132		VoC_bne16_rd(CII_g_quant_vl_Lable23,REG6,0xbaaf)(lo)	|	VoC_be16_rd(CII_g_quant_vl_Lable21,REG6,0xbaaa)(hi)
0xE0A43AAF,	//0x1134		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_bne16_rd(CII_g_quant_vl_Lable23,REG6,0xbaaf)(hi)
		//0x1135		CII_g_quant_vl_Lable21
		//0x1136		CII_g_quant_vl_Lable23
0x3AB0445E,	//0x1136		VoC_bne16_rd(CII_g_quant_vl_Lable24,REG6,0xbab0)
0xFF44E085,	//0x1138		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg16(REG5,REG4,DEFAULT)
		//0x1139		CII_g_quant_vl_Lable24
0x03843DCE,	//0x113a		VoC_bngt16_rd(CII_g_quant_vl_Lable28,REG6,0x8384)
0x985ED851,	//0x113c		VoC_multf32_rp(RL6,REG1,REG3,DEFAULT)	|	VoC_lw16_p(REG1,REG5,DEFAULT)
0x0384076D,	//0x113e		VoC_add16_rd(REG5,REG5,0x8384)
0x2B80E1A9,	//0x1140		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,RL6_HI,DEFAULT)
0xFF440188,	//0x1142		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B49,	//0x1144		VoC_sub16_dr(REG1,0xbaaa,REG1)
0x0384075A,	//0x1146		VoC_add16_rd(REG2,REG3,0x8384)
0x3888FE8E,	//0x1148		VoC_sub16_pr(REG0,REG2,REG1,DEFAULT)	|	VoC_shr32_rr(RL6,REG1,DEFAULT)
0x0976F005,	//0x114a		VoC_add32_rd(RL6,RL6,0x828a)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE1A7028A,	//0x114c		VoC_movreg16(REG7,RL6_HI,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x828a)(hi)
0x07598028,	//0x114e		VoC_add16_rd(REG1,REG3,0x8384)(lo)	|	VoC_add16_rp(REG0,REG0,REG5,DEFAULT)
0xDC370384,	//0x1150		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG1,REG3,0x8384)(hi)
0xD841DC10,	//0x1152		VoC_lw16_p(REG1,REG4,DEFAULT)	|	VoC_sw16_p(REG0,REG1,DEFAULT)
		//0x1153		CII_g_quant_vl_Lable28
0x0764985E,	//0x1154		VoC_add16_rd(REG4,REG4,0x8384)(lo)	|	VoC_multf32_rp(RL6,REG1,REG3,DEFAULT)
0xE1A90384,	//0x1156		VoC_movreg16(ACC0_HI,RL6_HI,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x8384)(hi)
0x01882B80,	//0x1158		VoC_jal(CII_NORM_L_ACC0)
0x0B49F031,	//0x115a		VoC_sub16_dr(REG1,0xbaaa,REG1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x075A3AAA,	//0x115c		VoC_add16_rd(REG2,REG3,0x8384)(lo)	|	VoC_sub16_dr(REG1,0xbaaa,REG1)(hi)
0xFE8E0384,	//0x115e		VoC_shr32_rr(RL6,REG1,DEFAULT)	|	VoC_add16_rd(REG2,REG3,0x8384)(hi)
0x0976B888,	//0x1160		VoC_add32_rd(RL6,RL6,0x828a)(lo)	|	VoC_sub16_pr(REG0,REG2,REG1,DEFAULT)
0xE1A7028A,	//0x1162		VoC_movreg16(REG7,RL6_HI,DEFAULT)	|	VoC_add32_rd(RL6,RL6,0x828a)(hi)
0x3C668020,	//0x1164		VoC_bngt16_rd(CII_g_quant_vl_Lable29,REG6,0x8384)(lo)	|	VoC_add16_rp(REG0,REG0,REG4,DEFAULT)
0x07000384,	//0x1166		VoC_add16_rd(REG0,REG0,0xef8)(lo)	|	VoC_bngt16_rd(CII_g_quant_vl_Lable29,REG6,0x8384)(hi)
0xDCB70EF8,	//0x1168		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0xef8)(hi)
		//0x1169		CII_g_quant_vl_Lable29
0x3820DCB0,	//0x116a		VoC_bgt16_rd(CII_g_quant_vl_Lable30,REG0,0xef9)(lo)	|	VoC_sw16inc_p(REG0,REG3,DEFAULT)
0x15000EF9,	//0x116c		VoC_sw16_d(REG0,0xef9)(lo)	|	VoC_bgt16_rd(CII_g_quant_vl_Lable30,REG0,0xef9)(hi)
0xDF030EF9,	//0x116e		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG0,0xef9)(hi)
		//0x116f		CII_g_quant_vl_Lable30
0x0776DF02,	//0x1170		VoC_add16_rd(REG6,REG6,0x8384)(lo)	|	VoC_pop32(REG45,DEFAULT)
		//0x1171		VoC_endloop1
0x07DB0384,	//0x1172		VoC_sub16_rd(REG3,REG3,0xbab6)(lo)	|	VoC_add16_rd(REG6,REG6,0x8384)(hi)
0x14043AB6,	//0x1174		VoC_lw16_d(REG4,0xef9)(lo)	|	VoC_sub16_rd(REG3,REG3,0xbab6)(hi)
0xE8AD0EF9,	//0x1176		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_lw16_d(REG4,0xef9)(hi)
0xFF43E060,	//0x1178		VoC_lw32z(REG67,DEFAULT)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0xBAE2D8B7,	//0x117a		VoC_sub16inc_pr(REG2,REG3,REG4,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0x11803142,	//0x117c		VoC_bngtz16_r(g_quant_vl_111,REG2)
0xFFC0FE93,	//0x117e		VoC_NAD	|	VoC_shr32_rr(REG67,REG2,DEFAULT)
		//0x1180		g_quant_vl_111
0x028A095B,	//0x1180		VoC_add32_rd(REG67,REG67,0x828a)
0x000C14C7,	//0x1182		VoC_lw32_d(RL7,0x800c)
		//0x1184		VoC_endloop0
0xDF87DC07,	//0x1184		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16_p(REG7,REG0,DEFAULT)
0x54AA087A,	//0x1186		VoC_mult16_rd(REG2,REG7,0xd4aa)
0x3AF21844,	//0x1188		VoC_lw16i_set_inc(REG0,0xbaf2,0x1)
0xF00B4010,	//0x118a		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x3AB607DB,	//0x118c		VoC_sub16_rd(REG3,REG3,0xbab6)
0x2C41F001,	//0x118e		VoC_loop_i(0x1,0x20)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFF44119B,	//0x1190		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x20)(hi)
0xD8B6E8A2,	//0x1192		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1194		VoC_endloop0
0x07DBD130,	//0x1194		VoC_sub16_rd(REG3,REG3,0xbab6)(lo)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0x36A73AB6,	//0x1196		VoC_bngt32_rr(g_quant_vl_222,ACC0,RL7)(lo)	|	VoC_sub16_rd(REG3,REG3,0xbab6)(hi)
0x7F27119B,	//0x1198		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_bngt32_rr(g_quant_vl_222,ACC0,RL7)(hi)
0xDE08F625,	//0x119a		VoC_inc_p(REG1,DEFAULT)	|	VoC_movreg16(REG5,REG1,IN_PARALLEL)
		//0x119b		g_quant_vl_222
		//0x119b		VoC_endloop1
0x142ADB55,	//0x119c		VoC_lw16_d(SP16,0x441f)(lo)	|	VoC_sw16_sd(REG5,0x14,DEFAULT)
0x2B00441F,	//0x119e		VoC_jump_lg(sfrmAnalysis_midend)(lo)	|	VoC_lw16_d(SP16,0x441f)(hi)
0xF0E411CA,	//0x11a0		VoC_lw16i_short(REG4,0x7,DEFAULT)	|	VoC_jump_lg(sfrmAnalysis_midend)(hi)
		//0x11a1		sfrmAnalysis_mid
0xD685D610,	//0x11a2		VoC_lw16_sd(REG5,0x7,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x2B80DFC4,	//0x11a4		VoC_jal(CII_b_con_opt)(lo)	|	VoC_push16(REG4,DEFAULT)
0xD6410BE8,	//0x11a6		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_jal(CII_b_con_opt)(hi)
0x3D721960,	//0x11a8		VoC_lw16i_set_inc(REG0,0xbd72,0x28)
0xF0095622,	//0x11aa		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x2B80D614,	//0x11ac		VoC_jal(CII_v_con_opt)(lo)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xD6140BC9,	//0x11ae		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
0xF0045620,	//0x11b0		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0x2B80D685,	//0x11b2		VoC_jal(CII_b_con_opt)(lo)	|	VoC_lw16_sd(REG5,0x7,DEFAULT)
0xD6220BE8,	//0x11b4		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_jal(CII_b_con_opt)(hi)
0x3E8A1960,	//0x11b6		VoC_lw16i_set_inc(REG0,0xbe8a,0x28)
0x44481809,	//0x11b8		VoC_lw16i_set_inc(REG1,0x4448,0x2)
0x2B80DF84,	//0x11ba		VoC_jal(CII_v_con_opt)(lo)	|	VoC_pop16(REG4,DEFAULT)
0xD6B20BC9,	//0x11bc		VoC_lw16_sd(REG2,0xa,DEFAULT)	|	VoC_jal(CII_v_con_opt)(hi)
0x44201808,	//0x11be		VoC_lw16i_set_inc(REG0,0x4420,0x2)
0xF00656E3,	//0x11c0		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0xd,DEFAULT)
0x0C482B80,	//0x11c2		VoC_jal(CII_rs_rrNs_opt)
0xD6F3D6B2,	//0x11c4		VoC_lw16_sd(REG3,0xe,DEFAULT)	|	VoC_lw16_sd(REG2,0xa,DEFAULT)
0x44481808,	//0x11c6		VoC_lw16i_set_inc(REG0,0x4448,0x2)
0x0C482B80,	//0x11c8		VoC_jal(CII_rs_rrNs_opt)
		//0x11ca		sfrmAnalysis_midend
0xD691D6A6,	//0x11ca		VoC_lw16_sd(REG1,0x8,DEFAULT)	|	VoC_lw16_sd(REG6,0x9,DEFAULT)
0x54AA0870,	//0x11cc		VoC_mult16_rd(REG0,REG6,0xd4aa)
0x57560849,	//0x11ce		VoC_mult16_rd(REG1,REG1,0xd756)
0x3AF20AC4,	//0x11d0		VoC_lw16i(REG4,0xbaf2)
0xC10CC104,	//0x11d2		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0xDFC4D6E7,	//0x11d4		VoC_push16(REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0xd,DEFAULT)
0x5640D844,	//0x11d6		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x7030D641,	//0x11d8		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_sd(REG1,0x3,IN_PARALLEL)
0x31C6F005,	//0x11da		VoC_bnez16_r(sfrmAnalysis_0000,REG6)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x2B8011EE,	//0x11dc		VoC_jal(CII_scaleExcite_opt)(lo)	|	VoC_bnez16_r(sfrmAnalysis_0000,REG6)(hi)
0xD6140B32,	//0x11de		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_scaleExcite_opt)(hi)
0x03840764,	//0x11e0		VoC_add16_rd(REG4,REG4,0x8384)
0x44480A81,	//0x11e2		VoC_lw16i(REG1,0x4448)
0x5707D844,	//0x11e4		VoC_lw16_sd(REG7,0xf,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x2B80F620,	//0x11e6		VoC_jal(CII_scaleExcite_opt)(lo)	|	VoC_movreg16(REG0,REG1,IN_PARALLEL)
0xD6400B32,	//0x11e8		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_jal(CII_scaleExcite_opt)(hi)
0x1806D671,	//0x11ea		VoC_lw16i_set_inc(REG2,0x4448,0x1)(lo)	|	VoC_lw16_sd(REG1,0x6,DEFAULT)
0xE5D24448,	//0x11ec		VoC_jump(sfrmAnalysis_0001)	|	VoC_lw16i_set_inc(REG2,0x4448,0x1)(hi)
		//0x11ee		sfrmAnalysis_0000
0x5650D6E7,	//0x11ee		VoC_lw16_sd(REG0,0x4,DEFAULT)	|	VoC_lw16_sd(REG7,0xd,DEFAULT)
0x2B80D651,	//0x11f0		VoC_jal(CII_scaleExcite_opt)(lo)	|	VoC_lw16_sd(REG1,0x4,IN_PARALLEL)
0xD6140B32,	//0x11f2		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_scaleExcite_opt)(hi)
0x03840764,	//0x11f4		VoC_add16_rd(REG4,REG4,0x8384)
0xD6405641,	//0x11f6		VoC_lw16_sd(REG0,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x3,DEFAULT)
0xD844D6F7,	//0x11f8		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0xe,DEFAULT)
0x0B322B80,	//0x11fa		VoC_jal(CII_scaleExcite_opt)
0xD642D650,	//0x11fc		VoC_lw16_sd(REG2,0x3,DEFAULT)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0xD883D671,	//0x11fe		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16_sd(REG1,0x6,DEFAULT)
		//0x11ff		sfrmAnalysis_0001
0x82D4ED03,	//0x1200		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xDC94D883,	//0x1202		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x1203		VoC_endloop0
0x0B421805,	//0x1204		VoC_lw16i_set_inc(REG1,0xb42,0x1)
0x0B1A1804,	//0x1206		VoC_lw16i_set_inc(REG0,0xb1a,0x1)
0x2CD6D892,	//0x1208		VoC_loop_i(0x0,0x6b)(lo)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xD892120C,	//0x120a		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x6b)(hi)
		//0x120c		VoC_endloop0
0xD671DC82,	//0x120c		VoC_lw16_sd(REG1,0x6,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xD892ED04,	//0x120e		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0x0C081807,	//0x1210		VoC_lw16i_set_inc(REG3,0xc08,0x1)
		//0x1212		VoC_endloop0
0x1806DC82,	//0x1212		VoC_lw16i_set_inc(REG2,0xbe0,0x1)(lo)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0xD8B10BE0,	//0x1214		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xbe0,0x1)(hi)
0x12192CD2,	//0x1216		VoC_loop_i(0x0,0x69)
0xDCA1D8B1,	//0x1218		VoC_sw16inc_p(REG1,REG2,DEFAULT)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
		//0x1219		VoC_endloop0
0x1FBDD670,	//0x121a		VoC_lw16i_set_inc(REG1,0xc49,0xffffffff)(lo)	|	VoC_lw16_sd(REG0,0x6,DEFAULT)
0xD6620C49,	//0x121c		VoC_lw16_sd(REG2,0x5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xc49,0xffffffff)(hi)
0xD6A5D6D3,	//0x121e		VoC_lw16_sd(REG5,0x9,DEFAULT)	|	VoC_lw16_sd(REG3,0xc,DEFAULT)
0x44141404,	//0x1220		VoC_lw16_d(REG4,0x4414)
0xDC45D696,	//0x1222		VoC_sw16_p(REG5,REG4,DEFAULT)	|	VoC_lw16_sd(REG6,0x8,DEFAULT)
0x44121404,	//0x1224		VoC_lw16_d(REG4,0x4412)
0xDC46D687,	//0x1226		VoC_sw16_p(REG6,REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0x7,DEFAULT)
0x44131404,	//0x1228		VoC_lw16_d(REG4,0x4413)
0x441E142A,	//0x122a		VoC_lw16_d(SP16,0x441e)
0x2B80DC47,	//0x122c		VoC_jal(CII_lpcIir_opt_paris)(lo)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
0xDFA91232,	//0x122e		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_lpcIir_opt_paris)(hi)
0xE580FFC0,	//0x1230		VoC_return	|	VoC_NOP
		//0x1232		CII_lpcIir_opt_paris
0x449A0A82,	//0x1232		VoC_lw16i(REG2,0x449a)
0xD8B8DF41,	//0x1234		VoC_lw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xD8B8E942,	//0x1236		VoC_lw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1238		VoC_endloop0
0x5F01DCA8,	//0x1238		VoC_pop32(REG23,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0x14C4DE08,	//0x123a		VoC_lw32_d(ACC0,0x801e)(lo)	|	VoC_inc_p(REG1,IN_PARALLEL)
0x0A83001E,	//0x123c		VoC_lw16i(REG3,0x449a)(lo)	|	VoC_lw32_d(ACC0,0x801e)(hi)
0x5FC7449A,	//0x123e		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i(REG3,0x449a)(hi)
0x7005DF44,	//0x1240		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push32(ACC0,IN_PARALLEL)
0x0AC7E0A4,	//0x1242		VoC_lw16i(REG7,0x8000)(lo)	|	VoC_lw16i_short(REG4,0xa,IN_PARALLEL)
0x2C150000,	//0x1244		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i(REG7,0x8000)(hi)
0xC32C1256,	//0x1246		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x124D3185,	//0x1248		VoC_bez16_r(lpcIir_skip_1st,REG5)
0xD90C6742,	//0x124a		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x124c		VoC_endloop0
0xE701D48B,	//0x124c		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_msu32inc_pp(REG1,REG3,DEFAULT)
		//0x124d		lpcIir_skip_1st
		//0x124e		VoC_endloop0
0x076DD493,	//0x124e		VoC_add16_rd(REG5,REG5,0x8384)(lo)	|	VoC_msu32inc_pp(REG2,REG3,DEFAULT)
0x51B80384,	//0x1250		VoC_msu32inc_rp(REG7,REG0,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x8384)(hi)
0x42A2FBE4,	//0x1252		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0xF144C069,	//0x1254		VoC_lw16i_short(REG4,0xa,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
		//0x1256		VoC_endloop1
0xC2E35C19,	//0x1256		VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG1,DEFAULT)
0xDF475FC2,	//0x1258		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xF6227125,	//0x125a		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x9,DEFAULT)
0xF3FB7051,	//0x125c		VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xC0EB42A9,	//0x125e		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG2,REG5,DEFAULT)
0x2C3DD917,	//0x1260		VoC_loop_i(0x1,0x1e)(lo)	|	VoC_lw32_sd(RL7,0x1,DEFAULT)
0xDFC3126B,	//0x1262		VoC_push16(REG3,DEFAULT)	|	VoC_loop_i(0x1,0x1e)(hi)
0xFF3C620B,	//0x1264		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_aligninc_pp(REG1,REG3,DEFAULT)
0xDCA968A2,	//0x1266		VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1268		VoC_endloop0
0x42A9D58B,	//0x1268		VoC_sub16_rr(REG1,REG2,REG5,DEFAULT)	|	VoC_bimsu32inc_pp(REG1,REG3)
0x51B8DF83,	//0x126a		VoC_msu32inc_rp(REG7,REG0,DEFAULT)	|	VoC_pop16(REG3,IN_PARALLEL)
		//0x126b		VoC_endloop1
0x4069FBE4,	//0x126c		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0x5F82F3FD,	//0x126e		VoC_pop16(REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0x5C29F007,	//0x1270		VoC_sw16_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xD895DF07,	//0x1272		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_pop32(RL7,IN_PARALLEL)
0xD895E942,	//0x1274		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x1276		VoC_endloop0
0x5F87DCA5,	//0x1276		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xE580DF04,	//0x1278		VoC_return	|	VoC_pop32(ACC0,IN_PARALLEL)
		//0x127a		CII_decorr_opt
0xF050DFE9,	//0x127a		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0EF81500,	//0x127c		VoC_sw16_d(REG0,0xef8)
0x2B80F004,	//0x127e		VoC_jal(CII_g_corr1_opt_paris)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xE1260BDF,	//0x1280		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_jal(CII_g_corr1_opt_paris)(hi)
0x0384074F,	//0x1282		VoC_add16_rd(REG7,REG1,0x8384)
0x12C43186,	//0x1284		VoC_bez16_r(decorr_end,REG6)
0xF031F030,	//0x1286		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x12C22E29,	//0x1288		VoC_loop_r(1,REG5)
0x14C7E060,	//0x128a		VoC_lw32_d(RL7,0x828a)(lo)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x1401028A,	//0x128c		VoC_lw16_d(REG1,0xef8)(lo)	|	VoC_lw32_d(RL7,0x828a)(hi)
0x2B800EF8,	//0x128e		VoC_jal(CII_g_corr2_opt)(lo)	|	VoC_lw16_d(REG1,0xef8)(hi)
0xC27D12C7,	//0x1290		VoC_sub16_rr(REG5,REG1,REG7,DEFAULT)	|	VoC_jal(CII_g_corr2_opt)(hi)
0x129633C5,	//0x1292		VoC_bnltz32_r(decorr01,ACC1)
0x3AAA0BEC,	//0x1294		VoC_sub32_dr(ACC0,0xbaaa,ACC1)
		//0x1296		decorr01
0xC938FA0C,	//0x1296		VoC_add32_rr(REG01,ACC0,RL7,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xF6C16020,	//0x1298		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x019A2B80,	//0x129a		VoC_jal(CII_DIV_S)
0x129F32C5,	//0x129c		VoC_bngtz32_r(decorr02,ACC1)
0xFF44C312,	//0x129e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
		//0x129f		decorr02
0x2B80E049,	//0x12a0		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
0xC1480188,	//0x12a2		VoC_add16_rr(REG0,REG5,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B49,	//0x12a4		VoC_sub16_dr(REG1,0xbaaa,REG1)
0xE045FE0A,	//0x12a6		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_shr16_rr(REG2,REG1,DEFAULT)
0x12B13140,	//0x12a8		VoC_bngtz16_r(decorr04,REG0)
0x0952FE82,	//0x12aa		VoC_add32_rd(REG45,REG45,0x828a)(lo)	|	VoC_shr32_rr(REG45,REG0,DEFAULT)
0x3C58028A,	//0x12ac		VoC_bngt16_rd(decorr03,REG0,0xba6e)(lo)	|	VoC_add32_rd(REG45,REG45,0x828a)(hi)
0xF0053A6E,	//0x12ae		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bngt16_rd(decorr03,REG0,0xba6e)(hi)
		//0x12b0		decorr03
0xDF43F000,	//0x12b0		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x12b1		decorr04
0x0EF82005,	//0x12b2		VoC_lw16d_set_inc(REG1,0xef8,0x1)
0x028A14C3,	//0x12b4		VoC_lw32_d(REG67,0x828a)
0xD8947F1C,	//0x12b6		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0xFE047033,	//0x12b8		VoC_shr16_rr(REG4,REG0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xED05CE2C,	//0x12ba		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_mac32_rr(REG5,REG4,DEFAULT)
0xD894D0B3,	//0x12bc		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_msu32_rp(REG6,REG3,DEFAULT)
0xFE047F1C,	//0x12be		VoC_shr16_rr(REG4,REG0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
		//0x12c0		VoC_endloop0
0xDCB94E2C,	//0x12c0		VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG4,DEFAULT)
		//0x12c2		VoC_endloop1
0xDF037004,	//0x12c2		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x12c4		decorr_end
0xFFC0DFA9,	//0x12c4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x12c6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x12c7		CII_g_corr2_opt
0xED02FF44,	//0x12c8		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD111D882,	//0x12ca		VoC_mac32inc_rp(REG2,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
		//0x12cb		VoC_endloop0
0xFF25FFC0,	//0x12cc		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_NOP
0x01882B80,	//0x12ce		VoC_jal(CII_NORM_L_ACC0)
0x0B4ADFA9,	//0x12d0		VoC_sub16_dr(REG2,0xbaaa,REG1)(lo)	|	VoC_pop16(RA,DEFAULT)
0xFE953AAA,	//0x12d2		VoC_shr32_rr(ACC1,REG2,DEFAULT)	|	VoC_sub16_dr(REG2,0xbaaa,REG1)(hi)
0xD88CE580,	//0x12d4		VoC_lw16inc_p(RL6_LO,REG0,DEFAULT)	|	VoC_return
		//0x12d5		CII_iir_d_opt
0xD88ED88D,	//0x12d6		VoC_lw16inc_p(RL7_LO,REG0,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG0,DEFAULT)
0x5807D88F,	//0x12d8		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG0,DEFAULT)
0x1808F7E6,	//0x12da		VoC_lw16i_set_inc(REG0,0xcf0,0x2)(lo)	|	VoC_movreg16(REG6,RL7_HI,IN_PARALLEL)
0xDF410CF0,	//0x12dc		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xcf0,0x2)(hi)
0xDDC3DDC3,	//0x12de		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC6E1C6,	//0x12e0		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0xD8B6DC06,	//0x12e2		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0xD8B7D8BC,	//0x12e4		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(RL6_LO,REG3,DEFAULT)
0xD997D8BD,	//0x12e6		VoC_lw32_p(RL7,REG2,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG3,DEFAULT)
0x0CF00A80,	//0x12e8		VoC_lw16i(REG0,0xcf0)
0x5FC0D989,	//0x12ea		VoC_push16(REG0,DEFAULT)	|	VoC_lw32_p(REG23,REG1,DEFAULT)
0x2CA1FF44,	//0x12ec		VoC_loop_i(0x1,0x50)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xFE23130D,	//0x12ee		VoC_shr16_rr(REG3,REG4,DEFAULT)	|	VoC_loop_i(0x1,0x50)(hi)
0xE85AFE22,	//0x12f0		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_shr16_rr(REG2,REG4,DEFAULT)
0xFF32DF42,	//0x12f2		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7F3AD220,	//0x12f4		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG0)
0x7A74F7EE,	//0x12f6		VoC_shr32_ri(ACC0,0xe,DEFAULT)	|	VoC_movreg16(RL7_LO,RL7_HI,IN_PARALLEL)
0xD230F64F,	//0x12f8		VoC_bimac32inc_rp(REG67,REG0)	|	VoC_movreg16(RL7_HI,REG2,IN_PARALLEL)
0x5010D220,	//0x12fa		VoC_mac32_rp(REG2,REG0,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG0)
0x5610DF02,	//0x12fc		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x7BFCF6E6,	//0x12fe		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_movreg16(REG6,REG7,IN_PARALLEL)
0x6127F7AC,	//0x1300		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_movreg16(RL6_LO,RL6_HI,IN_PARALLEL)
0x7812F702,	//0x1302		VoC_shr16_ri(REG2,0x2,DEFAULT)	|	VoC_movreg16(REG2,ACC0_LO,IN_PARALLEL)
0x2842FEAC,	//0x1304		VoC_and16_rd(REG2,0x8002)(lo)	|	VoC_shr32_rr(ACC0,REG5,IN_PARALLEL)
0x09640002,	//0x1306		VoC_add32_rd(ACC0,ACC0,0x828a)(lo)	|	VoC_and16_rd(REG2,0x8002)(hi)
0x604D028A,	//0x1308		VoC_movreg16(RL6_HI,REG2,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x828a)(hi)
0x5C99F662,	//0x130a		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
		//0x130b		VoC_endloop0
0xD989FF44,	//0x130c		VoC_lw32_p(REG23,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x130d		VoC_endloop1
0xDF80DF01,	//0x130e		VoC_pop16(REG0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDCBCDCB6,	//0x1310		VoC_sw16inc_p(RL6_LO,REG3,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xDCBDDCB7,	//0x1312		VoC_sw16inc_p(RL6_HI,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0xE580DDD7,	//0x1314		VoC_return	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x1316		CII_rcToCorrDpL_opt
0x000A14C7,	//0x1316		VoC_lw32_d(RL7,0x800a)
0x5DCFDFE9,	//0x1318		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x180AF008,	//0x131a		VoC_lw16i_set_inc(REG2,0xd32,0x2)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xE0430D32,	//0x131c		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xd32,0x2)(hi)
0xDF41E040,	//0x131e		VoC_push32(REG23,DEFAULT)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0x0D461FBB,	//0x1320		VoC_lw16i_set_inc(REG3,0xd46,0xfffffffe)
0x1446E062,	//0x1322		VoC_lw16_d(REG6,0x8003)(lo)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x5F410003,	//0x1324		VoC_push32(REG23,DEFAULT)	|	VoC_lw16_d(REG6,0x8003)(hi)
0x2C15E007,	//0x1326		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xF0251350,	//0x1328		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0xC1655844,	//0x132a		VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xC0FB5E18,	//0x132c		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xDFC540FB,	//0x132e		VoC_push16(REG5,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x13393187,	//0x1330		VoC_bez16_r(rcToCorrDpL_opt_First_Loop,REG7)
0xD9DC67C6,	//0x1332		VoC_lw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x0B2B2B80,	//0x1334		VoC_jal(CII_L_mpy_ls_opt)
0xD9DC9314,	//0x1336		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)
		//0x1338		VoC_endloop0
0xCDA4DDC4,	//0x1338		VoC_multf32_rr(ACC0,REG6,REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x1339		rcToCorrDpL_opt_First_Loop
0x077FFF45,	//0x133a		VoC_add16_rd(REG7,REG7,0x8384)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0xDDC40384,	//0x133c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x8384)(hi)
0xD90CD911,	//0x133e		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xF6235D09,	//0x1340		VoC_movreg16(REG3,REG1,IN_PARALLEL)	|	VoC_sw32_sd(REG23,0x0,DEFAULT)
0xDE18DD14,	//0x1342		VoC_inc_p(REG3,DEFAULT)	|	VoC_sw32_sd(ACC0,0x1,DEFAULT)
0xDF4367C6,	//0x1344		VoC_push32(REG67,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD9DBD9D2,	//0x1346		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x0B1E2B80,	//0x1348		VoC_jal(CII_L_mpy_ll_opt)
		//0x134a		VoC_endloop0
0xFBE5CB65,	//0x134a		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xDF035F84,	//0x134c		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0xD911DDCD,	//0x134e		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x1350		VoC_endloop1
0xF6405909,	//0x1350		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xDF015FA9,	//0x1352		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE580DF01,	//0x1354		VoC_return	|	VoC_pop32(REG23,DEFAULT)
		//0x1356		CII_resetDec
0x1502DFE9,	//0x1356		VoC_sw16_d(REG2,0x487)(lo)	|	VoC_push16(RA,DEFAULT)
0x184A0487,	//0x1358		VoC_lw16i_set_inc(REG2,0xd7ca,0x2)(lo)	|	VoC_sw16_d(REG2,0x487)(hi)
0xF18457CA,	//0x135a		VoC_lw16i_short(REG4,0xc,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xd7ca,0x2)(hi)
0x13762B80,	//0x135c		VoC_jal(CII_reset_set_zeros)
0x57E21846,	//0x135e		VoC_lw16i_set_inc(REG2,0xd7e2,0x1)
0x2B80F104,	//0x1360		VoC_jal(CII_reset_set_values)(lo)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0xFF441382,	//0x1362		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_reset_set_values)(hi)
0x1584DFA9,	//0x1364		VoC_sw32_d(ACC0,0x556)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800556,	//0x1366		VoC_return	|	VoC_sw32_d(ACC0,0x556)(hi)
		//0x1368		CII_resetHREnc
0x184ADFE9,	//0x1368		VoC_lw16i_set_inc(REG2,0xd776,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0xF3C45776,	//0x136a		VoC_lw16i_short(REG4,0x1e,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xd776,0x2)(hi)
0x13762B80,	//0x136c		VoC_jal(CII_reset_set_zeros)
0x1846F104,	//0x136e		VoC_lw16i_set_inc(REG2,0xd7b2,0x1)(lo)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x2B8057B2,	//0x1370		VoC_jal(CII_reset_set_values)(lo)	|	VoC_lw16i_set_inc(REG2,0xd7b2,0x1)(hi)
0xDFA91382,	//0x1372		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_reset_set_values)(hi)
0xE580FFC0,	//0x1374		VoC_return	|	VoC_NOP
		//0x1376		CII_reset_set_zeros
0xF030F006,	//0x1376		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x13802E21,	//0x1378		VoC_loop_r(1,REG4)
0x0A84D9D0,	//0x137a		VoC_lw16i(REG4,0x330)(lo)	|	VoC_lw32inc_p(REG01,REG2,DEFAULT)
0xC0200330,	//0x137c		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x330)(hi)
0xDC86E641,	//0x137e		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_r_short(REG1,DEFAULT)
		//0x137f		VoC_endloop0
		//0x1380		VoC_endloop1
0xE580FFC0,	//0x1380		VoC_return	|	VoC_NOP
		//0x1382		CII_reset_set_values
0xF031F030,	//0x1382		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x13902E21,	//0x1384		VoC_loop_r(1,REG4)
0x0A84D8A1,	//0x1386		VoC_lw16i(REG4,0x330)(lo)	|	VoC_lw16inc_p(REG1,REG2,DEFAULT)
0xD8A50330,	//0x1388		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16i(REG4,0x330)(hi)
0xC061D8A0,	//0x138a		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_lw16inc_p(REG0,REG2,DEFAULT)
0xE742D886,	//0x138c		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xDC96D886,	//0x138e		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x138f		VoC_endloop0
		//0x1390		VoC_endloop1
0xE580FF44,	//0x1390		VoC_return	|	VoC_lw32z(ACC0,DEFAULT)
		//0x1392		CII_step_up_opt
0x1809F006,	//0x1392		VoC_lw16i_set_inc(REG1,0x43f8,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0A8743F8,	//0x1394		VoC_lw16i(REG7,0x2000)(lo)	|	VoC_lw16i_set_inc(REG1,0x43f8,0x2)(hi)
0xDFC12000,	//0x1396		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i(REG7,0x2000)(hi)
0x1808DDCB,	//0x1398		VoC_lw16i_set_inc(REG0,0x440c,0x2)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xFF05440C,	//0x139a		VoC_movreg32(ACC1,REG01,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x440c,0x2)(hi)
0x2E29F004,	//0x139c		VoC_loop_r(1,REG5)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xD8A613B8,	//0x139e		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_loop_r(1,REG5)(hi)
0x3184E023,	//0x13a0		VoC_bez16_r(VAD_STEP_UP_LABEL1,REG4)(lo)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xFF2813B1,	//0x13a2		VoC_movreg32(REG01,ACC1,DEFAULT)	|	VoC_bez16_r(VAD_STEP_UP_LABEL1,REG4)(hi)
0xE1E7D9DF,	//0x13a4		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xCDBCE705,	//0x13a6		VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x930CD9DF,	//0x13a8		VoC_add32inc_rp(ACC0,ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xDDC4E1E7,	//0x13aa		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_movreg16(REG7,RL7_HI,DEFAULT)
		//0x13ab		VoC_endloop0
0xE703FF28,	//0x13ac		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0xFFC0D9C7,	//0x13ae		VoC_NOP	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
		//0x13b0		VoC_endloop0
0xF007DDCF,	//0x13b0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x13b1		VAD_STEP_UP_LABEL1
0x13B53246,	//0x13b2		VoC_bnltz16_r(STEP_UP_01,REG6)
0xF020F7E7,	//0x13b4		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
		//0x13b5		STEP_UP_01
0xC104FB93,	//0x13b6		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
		//0x13b8		VoC_endloop1
0x4145DD8B,	//0x13b8		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_sw32_p(REG67,REG1,DEFAULT)
0xE1A2DF80,	//0x13ba		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0xD9C3E744,	//0x13bc		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0xFFC0FA1B,	//0x13be		VoC_NOP	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
		//0x13c0		VoC_endloop0
0xE580DCA7,	//0x13c0		VoC_return	|	VoC_sw16inc_p(REG7,REG2,DEFAULT)
		//0x13c2		CII_vad_algorithm
0x1808DFE9,	//0x13c2		VoC_lw16i_set_inc(REG0,0xcf0,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0x20070CF0,	//0x13c4		VoC_lw16d_set_inc(REG3,0xd28,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xcf0,0x2)(hi)
0x18060D28,	//0x13c6		VoC_lw16i_set_inc(REG2,0xa84,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0xd28,0x1)(hi)
0x140C0A84,	//0x13c8		VoC_lw16_d(RL6_LO,0xa8e)(lo)	|	VoC_lw16i_set_inc(REG2,0xa84,0x1)(hi)
0x14C20A8E,	//0x13ca		VoC_lw32_d(REG45,0x800c)(lo)	|	VoC_lw16_d(RL6_LO,0xa8e)(hi)
0xD984000C,	//0x13cc		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_lw32_d(REG45,0x800c)(hi)
0x3304FF17,	//0x13ce		VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(lo)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0x2B8013F2,	//0x13d0		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bez32_r(ENERGY_COMPUTATION_EXIT,ACC0)(hi)
0xF8FB0188,	//0x13d2		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x00200A84,	//0x13d4		VoC_lw16i(REG4,0x20)
0xC2CDC0E3,	//0x13d6		VoC_sub16_rr(REG5,REG3,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x3AAF0B49,	//0x13d8		VoC_sub16_dr(REG1,0xbaaf,REG1)
0xFF44692B,	//0x13da		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFE8BD9C3,	//0x13dc		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x4474D13A,	//0x13de		VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0xbefa)(lo)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
0xF8EF3EFA,	//0x13e0		VoC_shr16_ri(REG7,0xfffffffd,DEFAULT)	|	VoC_bne16_rd(ENERGY_COMPUTATION_First,REG4,0xbefa)(hi)
0xFA0CE0E4,	//0x13e2		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0xF1C4FF17,	//0x13e4		VoC_lw16i_short(REG4,0xe,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x13e5		ENERGY_COMPUTATION_First
		//0x13e5		VoC_endloop0
0xF7844165,	//0x13e6		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x3284C365,	//0x13e8		VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(lo)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0x14C413EE,	//0x13ea		VoC_lw32_d(ACC0,0x8384)(lo)	|	VoC_bgtz32_r(ENERGY_COMPUTATION_100,ACC0)(hi)
0xFFC00384,	//0x13ec		VoC_NAD	|	VoC_lw32_d(ACC0,0x8384)(hi)
		//0x13ee		ENERGY_COMPUTATION_100
0x01882B80,	//0x13ee		VoC_jal(CII_NORM_L_ACC0)
0xF724434D,	//0x13f0		VoC_movreg16(REG4,ACC0_HI,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
		//0x13f2		ENERGY_COMPUTATION_EXIT
0x43E41587,	//0x13f2		VoC_sw32_d(RL7,0x43e4)
0x43E21582,	//0x13f4		VoC_sw32_d(REG45,0x43e2)
0x0D281401,	//0x13f6		VoC_lw16_d(REG1,0xd28)
0x0CF01808,	//0x13f8		VoC_lw16i_set_inc(REG0,0xcf0,0x2)
0x43BE180A,	//0x13fa		VoC_lw16i_set_inc(REG2,0x43be,0x2)
0x43D0180B,	//0x13fc		VoC_lw16i_set_inc(REG3,0x43d0,0x2)
0x0B4DF8F9,	//0x13fe		VoC_sub16_dr(REG5,0xbab6,REG1)(lo)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xF0063AB6,	//0x1400		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_sub16_dr(REG5,0xbab6,REG1)(hi)
0x00220A87,	//0x1402		VoC_lw16i(REG7,0x22)
0xF044DF41,	//0x1404		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A8F0824,	//0x1406		VoC_mult16_rd(REG4,REG4,0xa8f)
0x0A9A188B,	//0x1408		VoC_lw16i_set_inc(REG3,0xa9a,0x12)
0xE92AC0E4,	//0x140a		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_add16_rr(REG4,REG3,REG4,DEFAULT)
0xFEAFD9C7,	//0x140c		VoC_shr32_rr(RL7,REG5,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0x93DFFF3E,	//0x140e		VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x91DF93DF,	//0x1410		VoC_add32_rp(RL7,RL7,REG3,DEFAULT)	|	VoC_add32inc_rp(RL7,RL7,REG3,DEFAULT)
0x0764DDA6,	//0x1412		VoC_add16_rd(REG4,REG4,0xbaae)(lo)	|	VoC_sw32_p(RL6,REG4,DEFAULT)
0x5DD73AAE,	//0x1414		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0xbaae)(hi)
		//0x1415		VoC_endloop0
0xF046CA59,	//0x1416		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_sub32_rr(REG23,REG23,REG67,IN_PARALLEL)
0x0A900830,	//0x1418		VoC_mult16_rd(REG0,REG6,0xa90)
0x0AD0180B,	//0x141a		VoC_lw16i_set_inc(REG3,0xad0,0x2)
0xDF01C018,	//0x141c		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD983E924,	//0x141e		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xDDDBD9D2,	//0x1420		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x1422		VoC_endloop0
0x7244DDC2,	//0x1422		VoC_lw16i_short(REG4,0x12,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x072EE095,	//0x1424		VoC_add16_rd(REG6,REG5,0xa8f)(lo)	|	VoC_lw16i_short(REG5,0x9,IN_PARALLEL)
0x441C0A8F,	//0x1426		VoC_bne16_rd(ACF_AVERAGING101,REG4,0xa8f)(lo)	|	VoC_add16_rd(REG6,REG5,0xa8f)(hi)
0xF0060A8F,	//0x1428		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING101,REG4,0xa8f)(hi)
		//0x142a		ACF_AVERAGING101
0x072FF364,	//0x142a		VoC_add16_rd(REG7,REG5,0xa90)(lo)	|	VoC_lw16i_short(REG4,0x1b,DEFAULT)
0x441C0A90,	//0x142c		VoC_bne16_rd(ACF_AVERAGING103,REG4,0xa90)(lo)	|	VoC_add16_rd(REG7,REG5,0xa90)(hi)
0xF0070A90,	//0x142e		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bne16_rd(ACF_AVERAGING103,REG4,0xa90)(hi)
		//0x1430		ACF_AVERAGING103
0x1506F033,	//0x1430		VoC_sw16_d(REG6,0xa8f)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x15070A8F,	//0x1432		VoC_sw16_d(REG7,0xa90)(lo)	|	VoC_sw16_d(REG6,0xa8f)(hi)
0x180A0A90,	//0x1434		VoC_lw16i_set_inc(REG2,0x43d0,0x2)(lo)	|	VoC_sw16_d(REG7,0xa90)(hi)
0x0A8043D0,	//0x1436		VoC_lw16i(REG0,0x43f0)(lo)	|	VoC_lw16i_set_inc(REG2,0x43d0,0x2)(hi)
0xD99443F0,	//0x1438		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_lw16i(REG0,0x43f0)(hi)
0xF00AE00B,	//0x143a		VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG0,DEFAULT)
0x14583304,	//0x143c		VoC_bez32_r(schur_recursion_End1,ACC0)
0x01882B80,	//0x143e		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B49,	//0x1440		VoC_sub16_dr(REG1,0xbaaa,REG1)
0x44451FBC,	//0x1442		VoC_lw16i_set_inc(REG0,0x4445,0xffffffff)
0x44321807,	//0x1444		VoC_lw16i_set_inc(REG3,0x4432,0x1)
0xD9D3E925,	//0x1446		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFFC0FE8B,	//0x1448		VoC_NOP	|	VoC_shr32_rr(REG67,REG1,DEFAULT)
0xDCB7DC87,	//0x144a		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x144b		VoC_endloop0
0x14862C11,	//0x144c		VoC_loop_i(0x1,0x8)
0x44321482,	//0x144e		VoC_lw32_d(REG45,0x4432)
0x3AAA0B6F,	//0x1450		VoC_sub16_dr(REG7,0xbaaa,REG5)
0x14553205,	//0x1452		VoC_bltz16_r(abs_end,REG5)
0xFF29E0A7,	//0x1454		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x1455		abs_end
0x146034BC,	//0x1456		VoC_bngt16_rr(SCHUR_RECURSION_130,REG7,REG4)
		//0x1458		schur_recursion_End1
0x0B52FF29,	//0x1458		VoC_sub16_dr(REG2,0xbab4,REG2)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xF0073AB4,	//0x145a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sub16_dr(REG2,0xbab4,REG2)(hi)
0xDCB7E681,	//0x145c		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x145d		VoC_endloop0
0x14872B00,	//0x145e		VoC_jump_lg(schur_recursion_End)
		//0x1460		SCHUR_RECURSION_130
0xE081E0E0,	//0x1460		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x019A2B80,	//0x1462		VoC_jal(CII_DIV_S)
0x14683145,	//0x1464		VoC_bngtz16_r(SCHUR_RECURSION_210,REG5)
0x3AAA0B52,	//0x1466		VoC_sub16_dr(REG2,0xbaaa,REG2)
		//0x1468		SCHUR_RECURSION_210
0x14C6CD54,	//0x1468		VoC_lw32_d(RL6,0x828a)(lo)	|	VoC_multf32_rr(ACC0,REG5,REG2,DEFAULT)
0xDCB2028A,	//0x146a		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw32_d(RL6,0x828a)(hi)
0xF6456142,	//0x146c		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,ACC1_LO,DEFAULT)
0x3AB341CA,	//0x146e		VoC_be16_rd(schur_recursion_End,REG2,0xbab3)
0x3AB30B56,	//0x1470		VoC_sub16_dr(REG6,0xbab3,REG2)
0xDE104930,	//0x1472		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)
0xFF0D4067,	//0x1474		VoC_movreg32(ACC1,REG23,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG1,REG4,DEFAULT)
0x44321805,	//0x1476		VoC_lw16i_set_inc(REG1,0x4432,0x1)
0x44441FBC,	//0x1478		VoC_lw16i_set_inc(REG0,0x4444,0xffffffff)
0x3AAE074A,	//0x147a		VoC_add16_rd(REG2,REG1,0xbaae)
0xE788DC97,	//0x147c		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x99549944,	//0x147e		VoC_multf32_rp(ACC0,REG5,REG2,DEFAULT)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0x83D4C933,	//0x1480		VoC_add16inc_rp(REG4,REG7,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0x81C7C933,	//0x1482		VoC_add16_rp(REG7,REG7,REG0,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xDC87DC94,	//0x1484		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1485		VoC_endloop0
		//0x1486		VoC_endloop1
0xF105FFC0,	//0x1486		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_NOP
		//0x1487		schur_recursion_End
0x43E61FBB,	//0x1488		VoC_lw16i_set_inc(REG3,0x43e6,0xfffffffe)
0x43F01806,	//0x148a		VoC_lw16i_set_inc(REG2,0x43f0,0x1)
0x2B80E06D,	//0x148c		VoC_jal(CII_step_up_opt)(lo)	|	VoC_movreg16(RL6_HI,REG3,DEFAULT)
0xF0311392,	//0x148e		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_jal(CII_step_up_opt)(hi)
0x43E61806,	//0x1490		VoC_lw16i_set_inc(REG2,0x43e6,0x1)
0x43B41807,	//0x1492		VoC_lw16i_set_inc(REG3,0x43b4,0x1)
0x440A1808,	//0x1494		VoC_lw16i_set_inc(REG0,0x440a,0x2)
0xDFC0F126,	//0x1496		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0x2C13E041,	//0x1498		VoC_loop_i(0x1,0x9)(lo)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0xFF4414A3,	//0x149a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_i(0x1,0x9)(hi)
0xD895E782,	//0x149c		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x149e		VoC_endloop0
0xC2B2D12A,	//0x149e		VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_mac32inc_rp(REG5,REG2,DEFAULT)
0x038407F6,	//0x14a0		VoC_sub16_rd(REG6,REG6,0x8384)
0xDDC4C271,	//0x14a2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG6,DEFAULT)
		//0x14a3		VoC_endloop1
0xF006DF80,	//0x14a4		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x2B80D984,	//0x14a6		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xC3890188,	//0x14a8		VoC_sub16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xD9C2E924,	//0x14aa		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x9,DEFAULT)
0xC38AFE8A,	//0x14ac		VoC_sub16_rr(REG2,REG6,REG1,DEFAULT)	|	VoC_shr32_rr(REG45,REG1,DEFAULT)
		//0x14ae		VoC_endloop0
0x1502DCB5,	//0x14ae		VoC_sw16_d(REG2,0x43f7)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x180843F7,	//0x14b0		VoC_lw16i_set_inc(REG0,0x43be,0x2)(lo)	|	VoC_sw16_d(REG2,0x43f7)(hi)
0xDFC243BE,	//0x14b2		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x43be,0x2)(hi)
0x43B51806,	//0x14b4		VoC_lw16i_set_inc(REG2,0x43b5,0x1)
0xFF22D9C4,	//0x14b6		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x01882B80,	//0x14b8		VoC_jal(CII_NORM_L_ACC0)
0x3AAF0B4B,	//0x14ba		VoC_sub16_dr(REG3,0xbaaf,REG1)
0xFF447E9A,	//0x14bc		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_rr(REG45,REG3,DEFAULT)
0xFF156909,	//0x14be		VoC_movreg32(ACC1,REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xFE9BD9C3,	//0x14c0		VoC_shr32_rr(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x14C73345,	//0x14c2		VoC_bnez32_r(SPECTRAL_COMPARISON1020,ACC1)
0x0FFF0A87,	//0x14c4		VoC_lw16i(REG7,0xfff)
0xD13AE0E5,	//0x14c6		VoC_mac32inc_rp(REG7,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x14c7		SPECTRAL_COMPARISON1020
		//0x14c7		VoC_endloop0
0xE0017F43,	//0x14c8		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x33C4FF25,	//0x14ca		VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xCAE414CE,	//0x14cc		VoC_sub32_rr(ACC0,REG67,ACC0,DEFAULT)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON104,ACC0)(hi)
		//0x14ce		SPECTRAL_COMPARISON104
0x14E63304,	//0x14ce		VoC_bez32_r(SPECTRAL_COMPARISON106,ACC0)
0x2B80F8ED,	//0x14d0		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_shr16_ri(REG5,0xfffffffd,DEFAULT)
0xC3C90188,	//0x14d2		VoC_sub16_rr(REG1,REG7,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xDF40E120,	//0x14d4		VoC_push32(REG01,DEFAULT)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0x14DB3485,	//0x14d6		VoC_bngt16_rr(SPECTRAL_COMPARISON109,REG0,REG5)
0x14C3C228,	//0x14d8		VoC_lw32_d(REG67,0x828a)(lo)	|	VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)
0xE0A1028A,	//0x14da		VoC_movreg16(REG1,REG5,DEFAULT)	|	VoC_lw32_d(REG67,0x828a)(hi)
		//0x14db		SPECTRAL_COMPARISON109
0x019A2B80,	//0x14dc		VoC_jal(CII_DIV_S)
0xE0035F00,	//0x14de		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xFBFBC8CB,	//0x14e0		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG23,DEFAULT)
0x14E633C5,	//0x14e2		VoC_bnltz32_r(SPECTRAL_COMPARISON106,ACC1)
0x3AAA0BDB,	//0x14e4		VoC_sub32_dr(REG67,0xbaaa,REG67)
		//0x14e6		SPECTRAL_COMPARISON106
0x0B49FB93,	//0x14e6		VoC_sub16_dr(REG1,0xbaaa,REG1)(lo)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
0xFE8B3AAA,	//0x14e8		VoC_shr32_rr(REG67,REG1,DEFAULT)	|	VoC_sub16_dr(REG1,0xbaaa,REG1)(hi)
0x43B41404,	//0x14ea		VoC_lw16_d(REG4,0x43b4)
0xFBAAF005,	//0x14ec		VoC_shr32_ri(REG45,0xfffffff5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDF84C8D3,	//0x14ee		VoC_pop16(REG4,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG45,DEFAULT)
0x099AFEA3,	//0x14f0		VoC_sub32_rd(REG45,REG67,0xb18)(lo)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0x15830B18,	//0x14f2		VoC_sw32_d(REG67,0xb18)(lo)	|	VoC_sub32_rd(REG45,REG67,0xb18)(hi)
0x33C20B18,	//0x14f4		VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)(lo)	|	VoC_sw32_d(REG67,0xb18)(hi)
0x0BD214F9,	//0x14f6		VoC_sub32_dr(REG45,0xbaaa,REG45)(lo)	|	VoC_bnltz32_r(SPECTRAL_COMPARISON113,REG45)(hi)
0xF0033AAA,	//0x14f8		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_sub32_dr(REG45,0xbaaa,REG45)(hi)
		//0x14f9		SPECTRAL_COMPARISON113
0x11680A82,	//0x14fa		VoC_lw16i(REG2,0x1168)
0x14FF368A,	//0x14fc		VoC_bngt32_rr(SPECTRAL_COMPARISON115,REG23,REG45)
0xF045F023,	//0x14fe		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x14ff		SPECTRAL_COMPARISON115
0x0D221806,	//0x1500		VoC_lw16i_set_inc(REG2,0xd22,0x1)
0x43B21503,	//0x1502		VoC_sw16_d(REG3,0x43b2)
0x442E1FBB,	//0x1504		VoC_lw16i_set_inc(REG3,0x442e,0xfffffffe)
0x2B80E06D,	//0x1506		VoC_jal(CII_step_up_opt)(lo)	|	VoC_movreg16(RL6_HI,REG3,DEFAULT)
0xF0061392,	//0x1508		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_jal(CII_step_up_opt)(hi)
0x442F1400,	//0x150a		VoC_lw16_d(REG0,0x442f)
0xCC02F8E8,	//0x150c		VoC_multf32_rr(REG45,REG0,REG0,DEFAULT)	|	VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)
0xCAD4FBEB,	//0x150e		VoC_sub32_rr(ACC0,REG67,REG45,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)
0x152732C4,	//0x1510		VoC_bngtz32_r(TONE_DETECTION_End,ACC0)
0x0C750A83,	//0x1512		VoC_lw16i(REG3,0xc75)
0x151A3240,	//0x1514		VoC_bnltz16_r(TONE_DETECTION_101,REG0)
0xFFC0CD5D,	//0x1516		VoC_NOP	|	VoC_multf32_rr(ACC1,REG5,REG3,DEFAULT)
0x1527362C,	//0x1518		VoC_bgt32_rr(TONE_DETECTION_End,ACC1,ACC0)
		//0x151a		TONE_DETECTION_101
0x02AC1447,	//0x151a		VoC_lw16_d(REG7,0x82ac)
0x0D221804,	//0x151c		VoC_lw16i_set_inc(REG0,0xd22,0x1)
0xAE05E885,	//0x151e		VoC_multf16inc_pp(REG5,REG0,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x0B6DFFC0,	//0x1520		VoC_sub16_dr(REG5,0x82ac,REG5)(lo)	|	VoC_NOP
0xC7EF02AC,	//0x1522		VoC_multf16_rr(REG7,REG7,REG5,DEFAULT)	|	VoC_sub16_dr(REG5,0x82ac,REG5)(hi)
		//0x1523		VoC_endloop0
0x485FF023,	//0x1524		VoC_blt16_rd(TONE_DETECTION_120,REG7,0xa64d)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xF003264D,	//0x1526		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_blt16_rd(TONE_DETECTION_120,REG7,0xa64d)(hi)
		//0x1527		TONE_DETECTION_End
		//0x1528		TONE_DETECTION_120
0x43B21400,	//0x1528		VoC_lw16_d(REG0,0x43b2)
0x0A4C1401,	//0x152a		VoC_lw16_d(REG1,0xa4c)
0x43E41482,	//0x152c		VoC_lw32_d(REG45,0x43e4)
0x43E21486,	//0x152e		VoC_lw32_d(RL6,0x43e2)
0x0A921406,	//0x1530		VoC_lw16_d(REG6,0xa92)
0x0A911407,	//0x1532		VoC_lw16_d(REG7,0xa91)
0x0A8EF28F,	//0x1534		VoC_lw16i(RL7_LO,0x445c)(lo)	|	VoC_lw16i_short(RL7_HI,0x14,DEFAULT)
0xF249445C,	//0x1536		VoC_lw16i_short(ACC0_HI,0x12,DEFAULT)	|	VoC_lw16i(RL7_LO,0x445c)(hi)
0x668A0A88,	//0x1538		VoC_lw16i(ACC0_LO,0x668a)
0x159D3622,	//0x153a		VoC_bgt32_rr(THRESHOLD_ADAPTATION_End,ACC0,REG45)
0xF024F005,	//0x153c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x03845CC0,	//0x153e		VoC_bne32_rd(THRESHOLD_ADAPTATION107,REG01,0x8384)
0x03844073,	//0x1540		VoC_be16_rd(THRESHOLD_ADAPTATION107,REG3,0x8384)
0x0A930725,	//0x1542		VoC_add16_rd(REG5,REG4,0xa93)
0x3AB4387D,	//0x1544		VoC_bgt16_rd(THRESHOLD_ADAPTATION108,REG5,0xbab4)
		//0x1546		THRESHOLD_ADAPTATION107
0x1505FF1F,	//0x1546		VoC_sw16_d(REG5,0xa93)(lo)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x2B000A93,	//0x1548		VoC_jump_lg(THRESHOLD_ADAPTATION_End)(lo)	|	VoC_sw16_d(REG5,0xa93)(hi)
0xE0C5159D,	//0x154a		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_jump_lg(THRESHOLD_ADAPTATION_End)(hi)
		//0x154b		THRESHOLD_ADAPTATION108
0xC376F82E,	//0x154c		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x5,DEFAULT)
0x02F24C6E,	//0x154e		VoC_bnlt16_rd(THRESHOLD_ADAPTATION109,REG6,0x82f2)
0x07FFF8FE,	//0x1550		VoC_sub16_rd(REG7,REG7,0x8384)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xFF300384,	//0x1552		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x8384)(hi)
		//0x1553		THRESHOLD_ADAPTATION109
0x51990A83,	//0x1554		VoC_lw16i(REG3,0x5199)
0xF020CC1A,	//0x1556		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)
0xC0417A7A,	//0x1558		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0x02AC5462,	//0x155a		VoC_bngt32_rd(THRESHOLD_ADAPTATION110,REG45,0x82ac)
0xC0417A0A,	//0x155c		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
		//0x155e		THRESHOLD_ADAPTATION110
0x3683E080,	//0x155e		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(lo)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xFF441570,	//0x1560		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG01,REG67)(hi)
0xE00360C2,	//0x1562		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xE0C8F822,	//0x1564		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_shr16_ri(REG2,0x4,DEFAULT)
0x5469C909,	//0x1566		VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x82ac)(lo)	|	VoC_add32_rr(REG23,ACC0,REG23,DEFAULT)
0xFA0902AC,	//0x1568		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_bngt32_rd(THRESHOLD_ADAPTATION113,REG23,0x82ac)(hi)
0x0384077F,	//0x156a		VoC_add16_rd(REG7,REG7,0x8384)
		//0x156c		THRESHOLD_ADAPTATION113
0x3698E046,	//0x156c		VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(lo)	|	VoC_movreg16(REG6,REG2,DEFAULT)
0xFF031570,	//0x156e		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_bngt32_rr(THRESHOLD_ADAPTATION117,REG67,REG01)(hi)
		//0x1570		THRESHOLD_ADAPTATION117
0x0A82F363,	//0x1570		VoC_lw16i(REG2,0x6acf)(lo)	|	VoC_lw16i_short(REG3,0x1b,DEFAULT)
0xFF1F6ACF,	//0x1572		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw16i(REG2,0x6acf)(hi)
0xFF45FF32,	//0x1574		VoC_lw32z(ACC1,DEFAULT)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x157E351D,	//0x1576		VoC_be16_rr(THRESHOLD_ADAPTATION120,REG3,REG5)
0x7FFF0A8A,	//0x1578		VoC_lw16i(ACC1_LO,0x7fff)
0x157E342B,	//0x157a		VoC_bgt16_rr(THRESHOLD_ADAPTATION120,REG5,REG3)
0xFF0A7F11,	//0x157c		VoC_movreg32(REG45,REG23,IN_PARALLEL)	|	VoC_movreg32(REG23,REG45,DEFAULT)
		//0x157e		THRESHOLD_ADAPTATION120
0x60A6C358,	//0x157e		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_sub16_rr(REG0,REG5,REG3,DEFAULT)
0x7005FE02,	//0x1580		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_shr16_rr(REG2,REG0,IN_PARALLEL)
0xC88AE003,	//0x1582		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x158A3695,	//0x1584		VoC_bngt32_rr(THRESHOLD_ADAPTATION121,REG45,ACC1)
0x0775FA0A,	//0x1586		VoC_add16_rd(REG5,REG6,0x8384)(lo)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
0xE5C30384,	//0x1588		VoC_jump(THRESHOLD_ADAPTATION124)	|	VoC_add16_rd(REG5,REG6,0x8384)(hi)
		//0x158a		THRESHOLD_ADAPTATION121
0xFFC0E0C5,	//0x158a		VoC_NAD	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x158c		THRESHOLD_ADAPTATION124
0x43F71401,	//0x158c		VoC_lw16_d(REG1,0x43f7)
0x0A841804,	//0x158e		VoC_lw16i_set_inc(REG0,0xa84,0x1)
0x0A8E1501,	//0x1590		VoC_sw16_d(REG1,0xa8e)
0x43B41806,	//0x1592		VoC_lw16i_set_inc(REG2,0x43b4,0x1)
0x159736BA,	//0x1594		VoC_bngt32_rr(THRESHOLD_ADAPTATION127,RL7,REG45)
0xE923FF17,	//0x1596		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x1597		THRESHOLD_ADAPTATION127
0xF125D8A3,	//0x1598		VoC_lw16i_short(REG5,0x9,DEFAULT)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
		//0x159a		VoC_endloop0
0x1505DC83,	//0x159a		VoC_sw16_d(REG5,0xa93)(lo)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0xF0000A93,	//0x159c		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_sw16_d(REG5,0xa93)(hi)
		//0x159d		THRESHOLD_ADAPTATION_End
0x0A92150E,	//0x159e		VoC_sw16_d(RL7_LO,0xa92)
0x0A91150F,	//0x15a0		VoC_sw16_d(RL7_HI,0xa91)
0x15A636B7,	//0x15a2		VoC_bngt32_rr(DECISION_PENG_101,RL6,RL7)
0xFFC0F020,	//0x15a4		VoC_NAD	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x15a6		DECISION_PENG_101
0x0A941483,	//0x15a6		VoC_lw32_d(REG67,0xa94)
0x03840776,	//0x15a8		VoC_add16_rd(REG6,REG6,0x8384)
0x03844058,	//0x15aa		VoC_be16_rd(VAD_HANDOVER101,REG0,0x8384)
0xDFA9F006,	//0x15ac		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x15ad		VAD_HANDOVER101
0x3AAF4866,	//0x15ae		VoC_blt16_rd(VAD_HANDOVER103,REG6,0xbaaf)
0xE03670A7,	//0x15b0		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x5,DEFAULT)
		//0x15b2		VAD_HANDOVER103
0x15B63207,	//0x15b2		VoC_bltz16_r(VAD_HANDOVER104,REG7)
0xC3C7F020,	//0x15b4		VoC_sub16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x15b6		VAD_HANDOVER104
0x42FB1500,	//0x15b6		VoC_sw16_d(REG0,0x42fb)
0x0A941583,	//0x15b8		VoC_sw32_d(REG67,0xa94)
0xDFE9E580,	//0x15ba		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x15bb		CII_aFlatRcDp_opt
0x44D80A8E,	//0x15bc		VoC_lw16i(RL7_LO,0x44d8)
0x45240A8F,	//0x15be		VoC_lw16i(RL7_HI,0x4524)
0x44C40A8A,	//0x15c0		VoC_lw16i(ACC1_LO,0x44c4)
0x44FE0A8B,	//0x15c2		VoC_lw16i(ACC1_HI,0x44fe)
0xFF307050,	//0x15c4		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD9C4F006,	//0x15c6		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xFFC0D9C2,	//0x15c8		VoC_NAD	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x16502C15,	//0x15ca		VoC_loop_i(0x1,0xa)
0x15D83186,	//0x15cc		VoC_bez16_r(CII_aFlatRcDp201,REG6)
0xFF3D7F29,	//0x15ce		VoC_movreg32(ACC1,RL7,IN_PARALLEL)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0xD994FF0F,	//0x15d0		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x01882B80,	//0x15d2		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B49,	//0x15d4		VoC_sub16_dr(REG1,0xbaaa,REG1)
0xFE8AD99A,	//0x15d6		VoC_shr32_rr(REG45,REG1,DEFAULT)	|	VoC_lw32_p(REG45,REG3,DEFAULT)
		//0x15d8		CII_aFlatRcDp201
0x0952F031,	//0x15d8		VoC_add32_rd(REG45,REG45,0x828a)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x0961028A,	//0x15da		VoC_add32_rd(REG23,ACC0,0x828a)(lo)	|	VoC_add32_rd(REG45,REG45,0x828a)(hi)
0x7007028A,	//0x15dc		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_add32_rd(REG23,ACC0,0x828a)(hi)
0x3105F6A4,	//0x15de		VoC_bgtz16_r(CII_aFlatRcDp100,REG5)(lo)	|	VoC_movreg16(REG4,REG5,IN_PARALLEL)
0xC3ED15E2,	//0x15e0		VoC_sub16_rr(REG5,REG7,REG5,DEFAULT)	|	VoC_bgtz16_r(CII_aFlatRcDp100,REG5)(hi)
		//0x15e2		CII_aFlatRcDp100
0x15E8341D,	//0x15e2		VoC_bgt16_rr(CII_aFlatRcDp101,REG3,REG5)
0xDC97E941,	//0x15e4		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x15e5		VoC_endloop0
0x16522B00,	//0x15e6		VoC_jump_lg(aFlatRcDp_end)
		//0x15e8		CII_aFlatRcDp101
0xDF476061,	//0x15e8		VoC_push32(RL7,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0xF6A05F46,	//0x15ea		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x019A2B80,	//0x15ec		VoC_jal(CII_DIV_S)
0xFF30DF06,	//0x15ee		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x35A5C189,	//0x15f0		VoC_bne16_rr(CII_aFlatRcDp102,REG4,REG5)(lo)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0xC3D215F4,	//0x15f2		VoC_sub16_rr(REG2,REG7,REG2,DEFAULT)	|	VoC_bne16_rr(CII_aFlatRcDp102,REG4,REG5)(hi)
		//0x15f4		CII_aFlatRcDp102
0x5C12DFC6,	//0x15f4		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x7051F00A,	//0x15f6		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xE044F3FB,	//0x15f8		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)
0x160931C6,	//0x15fa		VoC_bnez16_r(CII_aFlatRcDp202,REG6)
0xD983E964,	//0x15fc		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0xD909FA13,	//0x15fe		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
		//0x1600		VoC_endloop0
0x6061DDC3,	//0x1600		VoC_movreg16(REG1,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xE945F780,	//0x1602		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)
0xDDDBD9C3,	//0x1604		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xDDD3D984,	//0x1606		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
		//0x1608		VoC_endloop0
0xCD23DDCC,	//0x1608		VoC_multf32_rr(REG67,REG4,REG4,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x1609		CII_aFlatRcDp202
0xFF297050,	//0x160a		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x028A095B,	//0x160c		VoC_add32_rd(REG67,REG67,0x828a)
0xD9085616,	//0x160e		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xDFC46023,	//0x1610		VoC_push16(REG4,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x3AB50B75,	//0x1612		VoC_sub16_dr(REG5,0xbab5,REG6)
0x16273145,	//0x1614		VoC_bngtz16_r(CII_aFlatRcDp301,REG5)
0xD9CC6750,	//0x1616		VoC_lw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x0B2B2B80,	//0x1618		VoC_jal(CII_L_mpy_ls_opt)
0x60E49107,	//0x161a		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_add32_rp(RL7,ACC0,REG0,DEFAULT)
0x2B80D9C4,	//0x161c		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0xC9E70B2B,	//0x161e		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xD61459DC,	//0x1620		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x0B2B2B80,	//0x1622		VoC_jal(CII_L_mpy_ls_opt)
0xD9CCC9E7,	//0x1624		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
		//0x1626		VoC_endloop0
0xD908DDD7,	//0x1626		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x1627		CII_aFlatRcDp301
0xF3F878FE,	//0x1628		VoC_lw16i_short(INC0,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x3AB80B75,	//0x162a		VoC_sub16_dr(REG5,0xbab8,REG6)
0xF7626006,	//0x162c		VoC_movreg16(REG2,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,REG0,DEFAULT)
0xC269406B,	//0x162e		VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG1,REG5,DEFAULT)
0xC2AA4028,	//0x1630		VoC_sub16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x3AAE07D2,	//0x1632		VoC_sub16_rd(REG2,REG2,0xbaae)
0x3AAF076D,	//0x1634		VoC_add16_rd(REG5,REG5,0xbaaf)
0x164D3145,	//0x1636		VoC_bngtz16_r(CII_aFlatRcDp302,REG5)
0x03844465,	//0x1638		VoC_bne16_rd(CII_aFlatRcDp105,REG5,0x8384)
0x3AAE0770,	//0x163a		VoC_add16_rd(REG0,REG6,0xbaae)
		//0x163c		CII_aFlatRcDp105
0xF6E46750,	//0x163c		VoC_movreg16(REG4,REG7,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0x3586D9DC,	//0x163e		VoC_bne16_rr(CII_aFlatRcDp103,REG0,REG6)(lo)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0xF0501642,	//0x1640		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_bne16_rr(CII_aFlatRcDp103,REG0,REG6)(hi)
		//0x1642		CII_aFlatRcDp103
0x0B2B2B80,	//0x1642		VoC_jal(CII_L_mpy_ls_opt)
0x5614930F,	//0x1644		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_add32inc_rp(RL7,ACC0,REG1,DEFAULT)
0x2B80D9C4,	//0x1646		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
0xFBFC0B2B,	//0x1648		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xE0E4C9E7,	//0x164a		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
		//0x164c		VoC_endloop0
0xDF84DDD7,	//0x164c		VoC_pop16(REG4,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x164d		CII_aFlatRcDp302
0xDF865F07,	//0x164e		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
		//0x1650		VoC_endloop1
0x03840776,	//0x1650		VoC_add16_rd(REG6,REG6,0x8384)
		//0x1652		aFlatRcDp_end
0xF030DFA9,	//0x1652		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF007E580,	//0x1654		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x1655		CII_rcToADp_opt_new
0xF00B7052,	//0x1656		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x0D460A8C,	//0x1658		VoC_lw16i(RL6_LO,0xd46)
0xF62D7006,	//0x165a		VoC_movreg16(RL6_HI,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x16752C15,	//0x165c		VoC_loop_i(0x1,0xa)
0x3146FF31,	//0x165e		VoC_bngtz16_r(rcToADp100,REG6)(lo)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0x678B166E,	//0x1660		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_bngtz16_r(rcToADp100,REG6)(hi)
0xD9CCDFE9,	//0x1662		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_push16(RA,IN_PARALLEL)
0x0B2B2B80,	//0x1664		VoC_jal(CII_L_mpy_ls_opt)
0x58649314,	//0x1666		VoC_be32_rd(rcToADp_sat,ACC0,0x800a)(lo)	|	VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)
0x5C5C000A,	//0x1668		VoC_bne32_rd(rcToADp_nosat,ACC0,0x800c)(lo)	|	VoC_be32_rd(rcToADp_sat,ACC0,0x800a)(hi)
0xF027000C,	//0x166a		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bne32_rd(rcToADp_nosat,ACC0,0x800c)(hi)
		//0x166b		rcToADp_sat
		//0x166c		rcToADp_nosat
		//0x166c		VoC_endloop0
0xDFA9DDDC,	//0x166c		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x166e		rcToADp100
0x000306C5,	//0x166e		VoC_multf32inc_pd(ACC1,REG0,0x8003)
0xF78D61AC,	//0x1670		VoC_movreg16(RL6_HI,RL6_LO,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)
0x5D9DD804,	//0x1672		VoC_sw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0x0776F661,	//0x1674		VoC_add16_rd(REG6,REG6,0x8384)(lo)	|	VoC_movreg16(REG1,REG3,IN_PARALLEL)
		//0x1675		VoC_endloop1
0x7F310384,	//0x1676		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x8384)(hi)
0xE948F007,	//0x1678		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x028A04D2,	//0x167a		VoC_add32inc_pd(REG45,REG2,0x828a)
0x028A4065,	//0x167c		VoC_be16_rd(isSwLimit2,REG5,0x828a)
0x02AC445D,	//0x167e		VoC_bne16_rd(isSwLimit1,REG5,0x82ac)
		//0x1680		isSwLimit2
0xDCB5F027,	//0x1680		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1681		isSwLimit1
		//0x1681		VoC_endloop0
0xF005E580,	//0x1682		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_return
		//0x1683		CII_lpcFir_opt
0x14C4F144,	//0x1684		VoC_lw32_d(ACC0,0x801e)(lo)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x0AC7001E,	//0x1686		VoC_lw16i(REG7,0x8000)(lo)	|	VoC_lw32_d(ACC0,0x801e)(hi)
0xDFC70000,	//0x1688		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i(REG7,0x8000)(hi)
0xFFC0DF44,	//0x168a		VoC_NAD	|	VoC_push32(ACC0,DEFAULT)
0x16A02C15,	//0x168c		VoC_loop_i(0x1,0xa)
0x16973185,	//0x168e		VoC_bez16_r(lpcFir_skip_1st,REG5)
0xD90C6742,	//0x1690		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
		//0x1692		VoC_endloop0
0x432CD403,	//0x1692		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG3,DEFAULT)
0x0740C028,	//0x1694		VoC_add16_rd(REG0,REG0,0x8384)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)
0xE7010384,	//0x1696		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x8384)(hi)
		//0x1697		lpcFir_skip_1st
		//0x1698		VoC_endloop0
0x42A2D413,	//0x1698		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_mac32inc_pp(REG2,REG3,DEFAULT)
0x50B8E0A4,	//0x169a		VoC_msu32_rp(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0xa,IN_PARALLEL)
0x076DFBE4,	//0x169c		VoC_add16_rd(REG5,REG5,0x8384)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0xC2E30384,	//0x169e		VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x8384)(hi)
		//0x16a0		VoC_endloop1
0x5FC2DC99,	//0x16a0		VoC_push16(REG2,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x4022E014,	//0x16a2		VoC_add16_rr(REG2,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x77D0C261,	//0x16a4		VoC_lw16i_short(INC0,0xfffffffe,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x2C3DF00B,	//0x16a6		VoC_loop_i(0x1,0x1e)(lo)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xDFC316B1,	//0x16a8		VoC_push16(REG3,DEFAULT)	|	VoC_loop_i(0x1,0x1e)(hi)
0xD90C6200,	//0x16aa		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG0,DEFAULT)
0xDC9968A2,	//0x16ac		VoC_sw16inc_p(ACC0_HI,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x16ae		VoC_endloop0
0x5F83D503,	//0x16ae		VoC_pop16(REG3,DEFAULT)	|	VoC_bimac32inc_pp(REG0,REG3)
0x51BAF640,	//0x16b0		VoC_msu32inc_rp(REG7,REG2,DEFAULT)	|	VoC_movreg16(REG0,REG2,IN_PARALLEL)
		//0x16b1		VoC_endloop1
0xF7F0FBE4,	//0x16b2		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,IN_PARALLEL)
0x5C99DF82,	//0x16b4		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xD885F007,	//0x16b6		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0xD885E942,	//0x16b8		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
		//0x16ba		VoC_endloop0
0x5F87DCA5,	//0x16ba		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xE580DF04,	//0x16bc		VoC_return	|	VoC_pop32(ACC0,IN_PARALLEL)
		//0x16be		CII_res_eng_opt
0x14C6DFE9,	//0x16be		VoC_lw32_d(RL6,0x828a)(lo)	|	VoC_push16(RA,DEFAULT)
0x6183028A,	//0x16c0		VoC_movreg16(REG3,RL6_LO,DEFAULT)	|	VoC_lw32_d(RL6,0x828a)(hi)
0x2C15EFA4,	//0x16c2		VoC_loop_i(0x1,0xa)(lo)	|	VoC_lw16i_short(REG4,0xfffffffa,IN_PARALLEL)
0x9E0416D3,	//0x16c4		VoC_multf32inc_pp(ACC0,REG0,REG0,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0xC934FFC0,	//0x16c6		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_NOP
0x000C0963,	//0x16c8		VoC_add32_rd(REG67,ACC0,0x800c)
0xF008CCFD,	//0x16ca		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_multf32_rr(ACC1,REG3,REG7,DEFAULT)
0x2B80E169,	//0x16cc		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg16(ACC0_HI,ACC1_HI,DEFAULT)
0xC10C0188,	//0x16ce		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B49,	//0x16d0		VoC_sub16_dr(REG1,0xbaaa,REG1)
0xC971FE8D,	//0x16d2		VoC_add32_rr(REG23,ACC1,RL6,DEFAULT)	|	VoC_shr32_rr(ACC1,REG1,DEFAULT)
		//0x16d3		VoC_endloop1
0x3103F002,	//0x16d4		VoC_bgtz16_r(CII_abs_s_new,REG3)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xC29B16D8,	//0x16d6		VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_bgtz16_r(CII_abs_s_new,REG3)(hi)
		//0x16d8		CII_abs_s_new
0xFF0FDFC5,	//0x16d8		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0BFF2B80,	//0x16da		VoC_jal(CII_sqroot_opt)
0xE083DF85,	//0x16dc		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x3182FA09,	//0x16de		VoC_bez16_r(res_eng00,REG2)(lo)	|	VoC_shr32_ri(REG23,0x1,DEFAULT)
0x0A7B16E5,	//0x16e0		VoC_multf32_rd(REG67,REG7,0x825a)(lo)	|	VoC_bez16_r(res_eng00,REG2)(hi)
0xFFC0025A,	//0x16e2		VoC_NOP	|	VoC_multf32_rd(REG67,REG7,0x825a)(hi)
0xCDECC8F3,	//0x16e4		VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
		//0x16e5		res_eng00
0x01882B80,	//0x16e6		VoC_jal(CII_NORM_L_ACC0)
0xE162C935,	//0x16e8		VoC_movreg16(REG2,ACC1_HI,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,RL6,DEFAULT)
0xC0CBDFA9,	//0x16ea		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x16ec		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x16ed		CII_aToRc_opt2
0x1806F144,	//0x16ee		VoC_lw16i_set_inc(REG2,0xd22,0x1)(lo)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0x1FBF0D22,	//0x16f0		VoC_lw16i_set_inc(REG3,0x44c3,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG2,0xd22,0x1)(hi)
0x700744C3,	//0x16f2		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x44c3,0xffffffff)(hi)
0x6943DFC2,	//0x16f4		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0xD885D885,	//0x16f6		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
		//0x16f8		VoC_endloop0
0x2C13DCA5,	//0x16f8		VoC_loop_i(0x1,0x9)(lo)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0xF025173D,	//0x16fa		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_loop_i(0x1,0x9)(hi)
0xC0EA42AB,	//0x16fc		VoC_add16_rr(REG2,REG3,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG2,REG5,DEFAULT)
0xD8B5C32C,	//0x16fe		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0x4065F8E5,	//0x1700		VoC_be16_rd(isSwLimit_opt1a,REG5,0x828a)(lo)	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
0x445D028A,	//0x1702		VoC_bne16_rd(isSwLimit_opt1b,REG5,0x82ac)(lo)	|	VoC_be16_rd(isSwLimit_opt1a,REG5,0x828a)(hi)
0xF02702AC,	//0x1704		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bne16_rd(isSwLimit_opt1b,REG5,0x82ac)(hi)
		//0x1705		isSwLimit_opt1a
		//0x1706		isSwLimit_opt1b
0x5FC1DC95,	//0x1706		VoC_push16(REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDFC4DF41,	//0x1708		VoC_push16(REG4,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0x000A14C4,	//0x170a		VoC_lw32_d(ACC0,0x800a)
0x028A4478,	//0x170c		VoC_bne16_rd(aToRc_opt0,REG0,0x828a)
0xE0157027,	//0x170e		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xEFE67022,	//0x1710		VoC_lw16i_short(REG6,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xCEADE5D2,	//0x1712		VoC_msu32_rr(REG5,REG5,DEFAULT)	|	VoC_jump(aToRc_opt1)
		//0x1713		aToRc_opt0
0x01882B80,	//0x1714		VoC_jal(CII_NORM_L_ACC0)
0x0B49F7F1,	//0x1716		VoC_sub16_dr(REG1,0xbaaa,REG1)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
0x074E3AAA,	//0x1718		VoC_add16_rd(REG6,REG1,0xbb0a)(lo)	|	VoC_sub16_dr(REG1,0xbaaa,REG1)(hi)
0x0A803B0A,	//0x171a		VoC_lw16i(REG0,0x2000)(lo)	|	VoC_add16_rd(REG6,REG1,0xbb0a)(hi)
0xE1212000,	//0x171c		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_lw16i(REG0,0x2000)(hi)
0x019A2B80,	//0x171e		VoC_jal(CII_DIV_S)
0xFFC0CCAA,	//0x1720		VoC_NOP	|	VoC_multf32_rr(REG45,REG2,REG5,DEFAULT)
0x028A0952,	//0x1722		VoC_add32_rd(REG45,REG45,0x828a)
		//0x1724		aToRc_opt1
0x028A4065,	//0x1724		VoC_be16_rd(isSwLimit_opt2a,REG5,0x828a)
0x02AC445D,	//0x1726		VoC_bne16_rd(isSwLimit_opt2b,REG5,0x82ac)
		//0x1728		isSwLimit_opt2a
0xDF84F027,	//0x1728		VoC_pop16(REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1729		isSwLimit_opt2b
0xDF016041,	//0x172a		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0xDA22D620,	//0x172c		VoC_sw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xFF44E70E,	//0x172e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD1ABD108,	//0x1730		VoC_msu32inc_rp(REG5,REG3,DEFAULT)	|	VoC_mac32inc_rp(REG1,REG0,DEFAULT)
0xFEB4DF40,	//0x1732		VoC_shr32_rr(ACC0,REG6,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x028A0960,	//0x1734		VoC_add32_rd(REG01,ACC0,0x828a)
0x028A4061,	//0x1736		VoC_be16_rd(isSwLimit_opt3a,REG1,0x828a)
0x02AC4459,	//0x1738		VoC_bne16_rd(isSwLimit_opt3b,REG1,0x82ac)
		//0x173a		isSwLimit_opt3a
0xDF00F027,	//0x173a		VoC_pop32(REG01,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x173b		isSwLimit_opt3b
		//0x173c		VoC_endloop0
0xDF81DCA1,	//0x173c		VoC_pop16(REG1,DEFAULT)	|	VoC_sw16inc_p(REG1,REG2,DEFAULT)
		//0x173d		VoC_endloop1
0xDFA9DF82,	//0x173e		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xF8E4D824,	//0x1740		VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x028A4061,	//0x1742		VoC_be16_rd(isSwLimit_opt4a,REG1,0x828a)
0x02AC4459,	//0x1744		VoC_bne16_rd(isSwLimit_opt4b,REG1,0x82ac)
		//0x1746		isSwLimit_opt4a
0xDC14F027,	//0x1746		VoC_sw16_p(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1747		isSwLimit_opt4b
0xDFE9E580,	//0x1748		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1749		CII_HR_Decode
0x174E3182,	//0x174a		VoC_bez16_r(Decoder_101,REG2)
0x13562B80,	//0x174c		VoC_jal(CII_resetDec)
		//0x174e		Decoder_101
0x00001808,	//0x174e		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x3AB40740,	//0x1750		VoC_add16_rd(REG0,REG0,0xbab4)
0x0C721805,	//0x1752		VoC_lw16i_set_inc(REG1,0xc72,0x1)
0x175C2C09,	//0x1754		VoC_loop_i(0x1,0x4)
0xEC04D9C3,	//0x1756		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xE434F024,	//0x1758		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xDC94FA0B,	//0x175a		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
		//0x175b		VoC_endloop0
		//0x175c		VoC_endloop1
0x3AC00AC6,	//0x175c		VoC_lw16i(REG6,0xbac0)
0x1805F7F0,	//0x175e		VoC_lw16i_set_inc(REG1,0xc72,0x1)(lo)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0x18070C72,	//0x1760		VoC_lw16i_set_inc(REG3,0x4a0,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xc72,0x1)(hi)
0x184604A0,	//0x1762		VoC_lw16i_set_inc(REG2,0xbaba,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x4a0,0x1)(hi)
0xFFC03ABA,	//0x1764		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0xbaba,0x1)(hi)
0x17762C25,	//0x1766		VoC_loop_i(0x1,0x12)
0xE00558A4,	//0x1768		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xC061C060,	//0x176a		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG1,REG4,DEFAULT)
0xE702DE00,	//0x176c		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x8345F8FD,	//0x176e		VoC_add16inc_rp(REG5,REG5,REG0,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
		//0x176f		VoC_endloop0
0x17763596,	//0x1770		VoC_bne16_rr(Bits2prm_100,REG2,REG6)
0x17763185,	//0x1772		VoC_bez16_r(Bits2prm_100,REG5)
0x57601846,	//0x1774		VoC_lw16i_set_inc(REG2,0xd760,0x1)
		//0x1776		Bits2prm_100
		//0x1776		VoC_endloop1
0xF005DCB5,	//0x1776		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xDCB5E881,	//0x1778		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x1779		VoC_endloop0
0x04871400,	//0x177a		VoC_lw16_d(REG0,0x487)
0x3180F006,	//0x177c		VoC_bez16_r(Decoder_120,REG0)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xF1201782,	//0x177e		VoC_lw16i_short(REG0,0x9,DEFAULT)	|	VoC_bez16_r(Decoder_120,REG0)(hi)
0x18BC2B80,	//0x1780		VoC_jal(CII_decoderHomingFrameTest)
		//0x1782		Decoder_120
0x04331506,	//0x1782		VoC_sw16_d(REG6,0x433)
0x04876C0C,	//0x1784		VoC_bez16_d(Decoder_220,0x487)
0x04336C0A,	//0x1786		VoC_bez16_d(Decoder_220,0x433)
0x04B61808,	//0x1788		VoC_lw16i_set_inc(REG0,0x4b6,0x2)
0xE0837102,	//0x178a		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0x178E2CA0,	//0x178c		VoC_loop_i(0x0,0x50)
		//0x178e		VoC_endloop0
0xE5C5DDC1,	//0x178e		VoC_jump(Decoder_330)	|	VoC_sw32inc_p(REG23,REG0,DEFAULT)
		//0x1790		Decoder_220
0x04B61808,	//0x1790		VoC_lw16i_set_inc(REG0,0x4b6,0x2)
0x19832B80,	//0x1792		VoC_jal(CII_speechDecoder_opt)
		//0x1794		Decoder_330
0x42FF2005,	//0x1794		VoC_lw16d_set_inc(REG1,0x42ff,0x1)
0x04B61804,	//0x1796		VoC_lw16i_set_inc(REG0,0x4b6,0x1)
0x179E2D40,	//0x1798		VoC_loop_i(0x0,0xa0)
0x1646D886,	//0x179a		VoC_and16_ri(REG6,0xfff8)(lo)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xFFC07FF8,	//0x179c		VoC_NOP	|	VoC_and16_ri(REG6,0xfff8)(hi)
		//0x179e		VoC_endloop0
0x6E07DC96,	//0x179e		VoC_bnez16_d(Decoder_440,0x487)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xF2400487,	//0x17a0		VoC_lw16i_short(REG0,0x12,DEFAULT)	|	VoC_bnez16_d(Decoder_440,0x487)(hi)
0x18BC2B80,	//0x17a2		VoC_jal(CII_decoderHomingFrameTest)
0x04331506,	//0x17a4		VoC_sw16_d(REG6,0x433)
		//0x17a6		Decoder_440
0x04331406,	//0x17a6		VoC_lw16_d(REG6,0x433)
0x17AC3186,	//0x17a8		VoC_bez16_r(Decoder_550,REG6)
0x13562B80,	//0x17aa		VoC_jal(CII_resetDec)
		//0x17ac		Decoder_550
0x04331407,	//0x17ac		VoC_lw16_d(REG7,0x433)
0x1507DFA9,	//0x17ae		VoC_sw16_d(REG7,0x487)(lo)	|	VoC_pop16(RA,DEFAULT)
0xF0070487,	//0x17b0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_sw16_d(REG7,0x487)(hi)
0xDFE9E580,	//0x17b2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x17b3		CII_level_estimator_opt
0x17CF31C7,	//0x17b4		VoC_bnez16_r(level_estimator_opt0,REG7)
0x047A1809,	//0x17b6		VoC_lw16i_set_inc(REG1,0x47a,0x2)
0xD9CCF020,	//0x17b8		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x930CE861,	//0x17ba		VoC_add32inc_rp(ACC0,ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x17bb		VoC_endloop0
0x187F2B80,	//0x17bc		VoC_jal(CII_level_calc_opt)
0x7FB80AC6,	//0x17be		VoC_lw16i(REG6,0xffffffb8)
0x44971507,	//0x17c0		VoC_sw16_d(REG7,0x4497)
0x04821804,	//0x17c2		VoC_lw16i_set_inc(REG0,0x482,0x1)
0x44981506,	//0x17c4		VoC_sw16_d(REG6,0x4498)
0xD8816887,	//0x17c6		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x17CD348E,	//0x17c8		VoC_bngt16_rr(level_estimator_opt1,REG1,REG6)
0x44981501,	//0x17ca		VoC_sw16_d(REG1,0x4498)
0xD881E026,	//0x17cc		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_movreg16(REG6,REG1,DEFAULT)
		//0x17cd		level_estimator_opt1
		//0x17cd		VoC_endloop0
0xF021E5D8,	//0x17ce		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jump(level_estimator_opt_end)
		//0x17cf		level_estimator_opt0
0x0E46F678,	//0x17d0		VoC_multf16inc_rp(REG6,REG1,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xfffffff3,DEFAULT)
0xFF448E47,	//0x17d2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_multf16inc_rp(REG7,REG1,REG0,IN_PARALLEL)
0xEA83FFC0,	//0x17d4		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0x8E470E46,	//0x17d6		VoC_multf16inc_rp(REG7,REG1,REG0,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG1,REG0,DEFAULT)
		//0x17d8		VoC_endloop0
0xF000CF36,	//0x17d8		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x187F2B80,	//0x17da		VoC_jal(CII_level_calc_opt)
0x1FB8F7F8,	//0x17dc		VoC_lw16i_set_inc(REG0,0x480,0xfffffffe)(lo)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0x1FBD0480,	//0x17de		VoC_lw16i_set_inc(REG1,0x485,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x480,0xfffffffe)(hi)
0xE8840485,	//0x17e0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x485,0xffffffff)(hi)
0xDDC5D985,	//0x17e2		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32_p(ACC1,REG0,DEFAULT)
0xDC97D817,	//0x17e4		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
		//0x17e5		VoC_endloop0
		//0x17e6		level_estimator_opt_end
0xFFC0DFA9,	//0x17e6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF007E580,	//0x17e8		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x17e9		CII_para_conceal_speech_decoder_opt
0x04A01804,	//0x17ea		VoC_lw16i_set_inc(REG0,0x4a0,0x1)
0x3A6E1845,	//0x17ec		VoC_lw16i_set_inc(REG1,0xba6e,0x1)
0x04861406,	//0x17ee		VoC_lw16_d(REG6,0x486)
0xC0713836,	//0x17f0		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_sub16_pr(REG6,REG0,REG6,DEFAULT)
0x40801482,	//0x17f2		VoC_lw32_d(REG45,0x4080)
0x31C4858A,	//0x17f4		VoC_bnez16_r(PARA_CONC_opt_100,REG4)(lo)	|	VoC_sub16_rp(REG2,REG6,REG1,DEFAULT)
0x31451806,	//0x17f6		VoC_bngtz16_r(PARA_CONC_opt_100,REG5)(lo)	|	VoC_bnez16_r(PARA_CONC_opt_100,REG4)(hi)
0x32021806,	//0x17f8		VoC_bltz16_r(PARA_CONC_opt_101,REG2)(lo)	|	VoC_bngtz16_r(PARA_CONC_opt_100,REG5)(hi)
0xF02417FD,	//0x17fa		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bltz16_r(PARA_CONC_opt_101,REG2)(hi)
0xD803E5CA,	//0x17fc		VoC_lw16_p(REG3,REG0,DEFAULT)	|	VoC_jump(PARA_CONC_opt_100)
		//0x17fd		PARA_CONC_opt_101
0x3D804CC3,	//0x17fe		VoC_bnlt16_rd(PARA_CONC_opt_100,REG3,0xbd80)
0x18083145,	//0x1800		VoC_bngtz16_r(PARA_CONC1_opt_100,REG5)
0x180831C4,	//0x1802		VoC_bnez16_r(PARA_CONC1_opt_100,REG4)
0x18083202,	//0x1804		VoC_bltz16_r(PARA_CONC1_opt_100,REG2)
		//0x1806		PARA_CONC_opt_100
0xFFC0F027,	//0x1806		VoC_NAD	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1808		PARA_CONC1_opt_100
0x049A1401,	//0x1808		VoC_lw16_d(REG1,0x49a)
0x44961507,	//0x180a		VoC_sw16_d(REG7,0x4496)
0x18143104,	//0x180c		VoC_bgtz16_r(PARA_CONC2_opt_else,REG4)
0x3AB24861,	//0x180e		VoC_blt16_rd(PARA_CONC2_opt_104,REG1,0xbab2)
0x049B6E08,	//0x1810		VoC_bnez16_d(PARA_CONC2_opt_end,0x49b)
		//0x1812		PARA_CONC2_opt_104
0xE5C5F001,	//0x1812		VoC_jump(PARA_CONC2_opt_end)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
		//0x1814		PARA_CONC2_opt_else
0x3C59DE08,	//0x1814		VoC_bngt16_rd(PARA_CONC2_opt_end,REG1,0xbab2)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xF0C13AB2,	//0x1816		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_bngt16_rd(PARA_CONC2_opt_end,REG1,0xbab2)(hi)
		//0x1818		PARA_CONC2_opt_end
0x049B1504,	//0x1818		VoC_sw16_d(REG4,0x49b)
0x04881806,	//0x181a		VoC_lw16i_set_inc(REG2,0x488,0x1)
0x40801582,	//0x181c		VoC_sw32_d(REG45,0x4080)
0x049A1501,	//0x181e		VoC_sw16_d(REG1,0x49a)
0x182931C1,	//0x1820		VoC_bnez16_r(PARA_CONC3_opt_100,REG1)
0xD883D807,	//0x1822		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xD883EA42,	//0x1824		VoC_lw16inc_p(REG3,REG0,DEFAULT)	|	VoC_loop_i_short(0x12,DEFAULT)
		//0x1826		VoC_endloop0
0x2B00DCA3,	//0x1826		VoC_jump_lg(PARA_CONC3_opt_end)(lo)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0xD824187C,	//0x1828		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_jump_lg(PARA_CONC3_opt_end)(hi)
		//0x1829		PARA_CONC3_opt_100
0x3AAF48D1,	//0x182a		VoC_blt16_rd(PARA_CONC3_opt_101,REG1,0xbaaf)
0x575638C1,	//0x182c		VoC_bgt16_rd(PARA_CONC3_opt_101,REG1,0xd756)
0x3AAE0154,	//0x182e		VoC_sub16_pd(REG4,REG2,0xbaae)
0x18343204,	//0x1830		VoC_bltz16_r(PARA_CONC3_opt_101,REG4)
0x3AB24859,	//0x1832		VoC_blt16_rd(PARA_CONC3_opt_103,REG1,0xbab2)
		//0x1834		PARA_CONC3_opt_101
0xD807F004,	//0x1834		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x1835		PARA_CONC3_opt_103
0x04991406,	//0x1836		VoC_lw16_d(REG6,0x499)
0x04A8180F,	//0x1838		VoC_lw16i_set_inc(REG3,0x4a8,0x3)
0x6E14DC24,	//0x183a		VoC_bnez16_d(PARA_CONC3_opt_104,0x48d)(lo)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0x6E0A048D,	//0x183c		VoC_bnez16_d(PARA_CONC3_opt_105,0x4a5)(lo)	|	VoC_bnez16_d(PARA_CONC3_opt_104,0x48d)(hi)
0x68A304A5,	//0x183e		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_bnez16_d(PARA_CONC3_opt_105,0x4a5)(hi)
0xD8A5D8A5,	//0x1840		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,IN_PARALLEL)
		//0x1842		VoC_endloop0
0xE881DC85,	//0x1842		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x1844		VoC_endloop0
0x2B00DCB6,	//0x1844		VoC_jump_lg(PARA_CONC3_opt_end)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xD8A5187C,	//0x1846		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_jump_lg(PARA_CONC3_opt_end)(hi)
		//0x1847		PARA_CONC3_opt_105
0xD8A5EA42,	//0x1848		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_loop_i_short(0x12,DEFAULT)
		//0x184a		VoC_endloop0
0xE861DC85,	//0x184a		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x184c		VoC_endloop0
0x2B00DCB6,	//0x184c		VoC_jump_lg(PARA_CONC3_opt_end)(lo)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xF104187C,	//0x184e		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_jump_lg(PARA_CONC3_opt_end)(hi)
		//0x184f		PARA_CONC3_opt_104
0x048E1405,	//0x1850		VoC_lw16_d(REG5,0x48e)
0x0491180D,	//0x1852		VoC_lw16i_set_inc(REG1,0x491,0x3)
0xBA64E86D,	//0x1854		VoC_sub16inc_pr(REG4,REG1,REG4,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xC12D412C,	//0x1856		VoC_add16_rr(REG5,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x0C9A3C74,	//0x1858		VoC_bngt16_rd(PARA_CONC3_opt_LOOP1,REG4,0x8c9a)
0x00FF0A85,	//0x185a		VoC_lw16i(REG5,0xff)
0xFFC0E5C5,	//0x185c		VoC_NAD	|	VoC_jump(PARA_CONC3_opt_LOOP2)
		//0x185e		PARA_CONC3_opt_LOOP1
0x18613244,	//0x185e		VoC_bnltz16_r(PARA_CONC3_opt_LOOP2,REG4)
0xF104F005,	//0x1860		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x1861		PARA_CONC3_opt_LOOP2
		//0x1861		VoC_endloop0
0x04971FB5,	//0x1862		VoC_lw16i_set_inc(REG1,0x497,0xfffffffd)
0xDC94E861,	//0x1864		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x1865		VoC_endloop0
0xF00D5C15,	//0x1866		VoC_lw16i_short(INC1,0x3,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x04A56C0E,	//0x1868		VoC_bez16_d(PARA_CONC3_opt_106,0x4a5)
0xD8A468C3,	//0x186a		VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x6,DEFAULT)
0xDC84D8A4,	//0x186c		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x186d		VoC_endloop0
0x6883F070,	//0x186e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(INC0,0x3,DEFAULT)
0xD894D894,	//0x1870		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
		//0x1872		VoC_endloop0
0xE881DC84,	//0x1872		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x1874		VoC_endloop0
0xE5C7DCB6,	//0x1874		VoC_jump(PARA_CONC3_opt_end)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x1876		PARA_CONC3_opt_106
0xD8A46A43,	//0x1876		VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x12,DEFAULT)
0xDC84D8A4,	//0x1878		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x1879		VoC_endloop0
0xDCB6E861,	//0x187a		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x187b		VoC_endloop0
		//0x187c		PARA_CONC3_opt_end
0x04861507,	//0x187c		VoC_sw16_d(REG7,0x486)
0xDFE9E580,	//0x187e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x187f		CII_level_calc_opt
0xFF257F43,	//0x1880		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x188C3304,	//0x1882		VoC_bez32_r(level_calc_opt0,ACC0)
0x01882B80,	//0x1884		VoC_jal(CII_NORM_L_ACC0)
0x3AAA0B49,	//0x1886		VoC_sub16_dr(REG1,0xbaaa,REG1)
0x438EF466,	//0x1888		VoC_sub16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0xffffffe3,DEFAULT)
0xF8F7C277,	//0x188a		VoC_shr16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_sub16_rr(REG7,REG1,REG6,IN_PARALLEL)
		//0x188c		level_calc_opt0
0x038414C4,	//0x188c		VoC_lw32_d(ACC0,0x8384)
0xE4ECFEB4,	//0x188e		VoC_and32_rr(ACC0,ACC1,DEFAULT)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0x18963106,	//0x1890		VoC_bgtz16_r(level_calc_opt1,REG6)
0x18963304,	//0x1892		VoC_bez32_r(level_calc_opt1,ACC0)
0x3AAE077F,	//0x1894		VoC_add16_rd(REG7,REG7,0xbaae)
		//0x1896		level_calc_opt1
0x038414C4,	//0x1896		VoC_lw32_d(ACC0,0x8384)
0xFA0CFEB4,	//0x1898		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0x3876E4EC,	//0x189a		VoC_bgt16_rd(level_calc_opt2,REG6,0xbb04)(lo)	|	VoC_and32_rr(ACC0,ACC1,DEFAULT)
0x33043B04,	//0x189c		VoC_bez32_r(level_calc_opt2,ACC0)(lo)	|	VoC_bgt16_rd(level_calc_opt2,REG6,0xbb04)(hi)
0x077F18A1,	//0x189e		VoC_add16_rd(REG7,REG7,0x8384)(lo)	|	VoC_bez32_r(level_calc_opt2,ACC0)(hi)
0xDFA90384,	//0x18a0		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x8384)(hi)
		//0x18a1		level_calc_opt2
0xF8FF60E6,	//0x18a2		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x0A86C1F7,	//0x18a4		VoC_lw16i(REG6,0x161)(lo)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0x0A810161,	//0x18a6		VoC_lw16i(REG1,0x50)(lo)	|	VoC_lw16i(REG6,0x161)(hi)
0x31800050,	//0x18a8		VoC_bez16_r(level_calc_opt4,REG0)(lo)	|	VoC_lw16i(REG1,0x50)(hi)
0x0A8618AF,	//0x18aa		VoC_lw16i(REG6,0x179)(lo)	|	VoC_bez16_r(level_calc_opt4,REG0)(hi)
0x0A810179,	//0x18ac		VoC_lw16i(REG1,0x140)(lo)	|	VoC_lw16i(REG6,0x179)(hi)
0xC3F70140,	//0x18ae		VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x140)(hi)
		//0x18af		level_calc_opt4
0x03590A7B,	//0x18b0		VoC_multf32_rd(REG67,REG7,0x8359)
0x095BFFC0,	//0x18b2		VoC_add32_rd(REG67,REG67,0x828a)(lo)	|	VoC_NOP
0x3877028A,	//0x18b4		VoC_bgt16_rd(level_calc_opt5,REG7,0xbe65)(lo)	|	VoC_add32_rd(REG67,REG67,0x828a)(hi)
0x0AC73E65,	//0x18b6		VoC_lw16i(REG7,0xffffffb8)(lo)	|	VoC_bgt16_rd(level_calc_opt5,REG7,0xbe65)(hi)
0x700B7FB8,	//0x18b8		VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)	|	VoC_lw16i(REG7,0xffffffb8)(hi)
0xE580F62A,	//0x18ba		VoC_return	|	VoC_movreg16(ACC1_LO,REG1,IN_PARALLEL)
		//0x18bb		level_calc_opt5
		//0x18bc		CII_decoderHomingFrameTest
0x04A01805,	//0x18bc		VoC_lw16i_set_inc(REG1,0x4a0,0x1)
0x3ABA1846,	//0x18be		VoC_lw16i_set_inc(REG2,0xbaba,0x1)
0x3ACC1847,	//0x18c0		VoC_lw16i_set_inc(REG3,0xbacc,0x1)
0xE000660C,	//0x18c2		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x861477E5,	//0x18c4		VoC_sub16inc_rp(REG4,REG0,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0xD8967E25,	//0x18c6		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_shr16_rr(REG5,REG4,DEFAULT)
0xD8B76385,	//0x18c8		VoC_lw16inc_p(REG7,REG3,IN_PARALLEL)	|	VoC_not16_r(REG5,DEFAULT)
0xE4BEE42E,	//0x18ca		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_and16_rr(REG6,REG5,DEFAULT)
0x18D13106,	//0x18cc		VoC_bgtz16_r(CII_decoderHomingFrameTest_100,REG6)
		//0x18ce		VoC_endloop0
0xF026FFC0,	//0x18ce		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_NAD
0xF006E580,	//0x18d0		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_return
		//0x18d1		CII_decoderHomingFrameTest_100
0xFF47E580,	//0x18d2		VoC_lw32z(RL7,DEFAULT)	|	VoC_return
		//0x18d3		CII_lookupVq_opt
0x08121804,	//0x18d4		VoC_lw16i_set_inc(REG0,0x812,0x1)
0x53C21852,	//0x18d6		VoC_lw16i_set_inc(REG2,0xd3c2,0x4)
0x19162C06,	//0x18d8		VoC_loop_i(0x0,0x3)
0x407C5C77,	//0x18da		VoC_bne32_rd(LOOKUP_opt_100,RL7,0xc07c)
0x500A0AC6,	//0x18dc		VoC_lw16i(REG6,0xd00a)
0xE5C8F081,	//0x18de		VoC_jump(LOOKUP_opt_101)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
		//0x18e0		LOOKUP_opt_100
0x0AC6F061,	//0x18e0		VoC_lw16i(REG6,0xc10a)(lo)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x3307410A,	//0x18e2		VoC_bez32_r(LOOKUP_opt_101,RL7)(lo)	|	VoC_lw16i(REG6,0xc10a)(hi)
0x0AC618E7,	//0x18e4		VoC_lw16i(REG6,0xcd0a)(lo)	|	VoC_bez32_r(LOOKUP_opt_101,RL7)(hi)
0x88414D0A,	//0x18e6		VoC_mult16_rp(REG1,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG6,0xcd0a)(hi)
		//0x18e7		LOOKUP_opt_101
0xF809FFC0,	//0x18e8		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_NOP
0x0A81C18F,	//0x18ea		VoC_lw16i(REG1,0xff)(lo)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0x077F00FF,	//0x18ec		VoC_add16_rd(REG7,REG7,0x8384)(lo)	|	VoC_lw16i(REG1,0xff)(hi)
0xD8740384,	//0x18ee		VoC_lw16_p(REG4,REG7,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x8384)(hi)
0xFF13D875,	//0x18f0		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_lw16_p(REG5,REG7,DEFAULT)
0xF846640C,	//0x18f2		VoC_shr16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG1,DEFAULT)
0xF847640D,	//0x18f4		VoC_shr16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG1,DEFAULT)
0xE40FE40E,	//0x18f6		VoC_and16_rr(REG7,REG1,DEFAULT)	|	VoC_and16_rr(REG6,REG1,DEFAULT)
0x52C21845,	//0x18f8		VoC_lw16i_set_inc(REG1,0xd2c2,0x1)
0xC14D410C,	//0x18fa		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xC1CFC18E,	//0x18fc		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xD844D866,	//0x18fe		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xD855D877,	//0x1900		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x43891807,	//0x1902		VoC_lw16i_set_inc(REG3,0x4389,0x1)
0xD88182D3,	//0x1904		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG2,DEFAULT)
0x00011601,	//0x1906		VoC_and16_ri(REG1,0x1)
0x5867DC36,	//0x1908		VoC_be32_rd(LOOKUP_opt_103,RL7,0xc07c)(lo)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
0x31C1407C,	//0x190a		VoC_bnez16_r(LOOKUP_opt_102,REG1)(lo)	|	VoC_be32_rd(LOOKUP_opt_103,RL7,0xc07c)(hi)
0xDE18190E,	//0x190c		VoC_inc_p(REG3,DEFAULT)	|	VoC_bnez16_r(LOOKUP_opt_102,REG1)(hi)
		//0x190d		LOOKUP_opt_103
		//0x190e		LOOKUP_opt_102
0xDCB7DCB4,	//0x190e		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x407C5867,	//0x1910		VoC_be32_rd(LOOKUP_opt_END1,RL7,0xc07c)
0x19163181,	//0x1912		VoC_bez16_r(LOOKUP_opt_END,REG1)
		//0x1914		LOOKUP_opt_END1
0xFFC0DC35,	//0x1914		VoC_NAD	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x1916		LOOKUP_opt_END
		//0x1916		VoC_endloop0
0x0384097F,	//0x1916		VoC_add32_rd(RL7,RL7,0x8384)
0xDFE9E580,	//0x1918		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1919		CII_a_sst_opt
0x1FBDDFC4,	//0x191a		VoC_lw16i_set_inc(REG1,0x44c3,0xffffffff)(lo)	|	VoC_push16(REG4,DEFAULT)
0xFFC044C3,	//0x191c		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x44c3,0xffffffff)(hi)
0x16ED2B80,	//0x191e		VoC_jal(CII_aToRc_opt2)
0x449A1809,	//0x1920		VoC_lw16i_set_inc(REG1,0x449a,0x2)
0x44BA0A84,	//0x1922		VoC_lw16i(REG4,0x44ba)
0x13162B80,	//0x1924		VoC_jal(CII_rcToCorrDpL_opt)
0x3A9F1845,	//0x1926		VoC_lw16i_set_inc(REG1,0xba9f,0x1)
0x449C180A,	//0x1928		VoC_lw16i_set_inc(REG2,0x449c,0x2)
0xD8946946,	//0x192a		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0x2B80D994,	//0x192c		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0xD8940B2B,	//0x192e		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
		//0x1930		VoC_endloop0
0x0A8CDDD4,	//0x1930		VoC_lw16i(RL6_LO,0x449a)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x0A8D449A,	//0x1932		VoC_lw16i(RL6_HI,0x44b0)(lo)	|	VoC_lw16i(RL6_LO,0x449a)(hi)
0x2B8044B0,	//0x1934		VoC_jal(CII_aFlatRcDp_opt)(lo)	|	VoC_lw16i(RL6_HI,0x44b0)(hi)
0xDF8115BB,	//0x1936		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_aFlatRcDp_opt)(hi)
0x0A80F7D1,	//0x1938		VoC_lw16i(REG0,0x44b0)(lo)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0x2B8044B0,	//0x193a		VoC_jal(CII_rcToADp_opt_new)(lo)	|	VoC_lw16i(REG0,0x44b0)(hi)
0xDFA91655,	//0x193c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_rcToADp_opt_new)(hi)
0xE580FFC0,	//0x193e		VoC_return	|	VoC_NOP
		//0x1940		CII_linInterpSidLoop_opt
0x044E1809,	//0x1940		VoC_lw16i_set_inc(REG1,0x44e,0x2)
0x0438180A,	//0x1942		VoC_lw16i_set_inc(REG2,0x438,0x2)
0x0464180B,	//0x1944		VoC_lw16i_set_inc(REG3,0x464,0x2)
0xD9CCE975,	//0x1946		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0x39620AC4,	//0x1948		VoC_lw16i(REG4,0xb962)
0x07D10720,	//0x194a		VoC_add16_rd(REG0,REG4,0x7d1)
0xD804DFE9,	//0x194c		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0B2B2B80,	//0x194e		VoC_jal(CII_L_mpy_ls_opt)
0xD9D47F25,	//0x1950		VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x02AC1444,	//0x1952		VoC_lw16_d(REG4,0x82ac)
0x07648504,	//0x1954		VoC_add16_rd(REG4,REG4,0x8384)(lo)	|	VoC_sub16_rp(REG4,REG4,REG0,DEFAULT)
0x2B800384,	//0x1956		VoC_jal(CII_L_mpy_ls_opt)(lo)	|	VoC_add16_rd(REG4,REG4,0x8384)(hi)
0xC92C0B2B,	//0x1958		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_jal(CII_L_mpy_ls_opt)(hi)
0xDDDCDFA9,	//0x195a		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
		//0x195b		VoC_endloop0
0xFFC0E580,	//0x195c		VoC_NAD	|	VoC_return
		//0x195e		CII_linInterpSidShort_opt
0x39620AC1,	//0x195e		VoC_lw16i(REG1,0xb962)
0x0A81C008,	//0x1960		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0x84417FFF,	//0x1962		VoC_sub16_rp(REG1,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG1,0x7fff)(hi)
0x028A14C4,	//0x1964		VoC_lw32_d(ACC0,0x828a)
0xDE085018,	//0x1966		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_mac32_rp(REG3,REG0,DEFAULT)
0xE580CE21,	//0x1968		VoC_return	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
		//0x196a		CII_extra_HR_bfi_filter
0x40801408,	//0x196a		VoC_lw16_d(ACC0_LO,0x4080)
0x40816C14,	//0x196c		VoC_bez16_d(CII_extra_HR_bfi_filter_exit,0x4081)
0x04A01402,	//0x196e		VoC_lw16_d(REG2,0x4a0)
0x05570793,	//0x1970		VoC_sub16_rd(REG3,REG2,0x557)
0x3D954CE3,	//0x1972		VoC_bnlt16_rd(CII_extra_HR_bfi_filter_100,REG3,0xbd95)
0x05571502,	//0x1974		VoC_sw16_d(REG2,0x557)
0x3ECE44D1,	//0x1976		VoC_bne16_rd(CII_extra_HR_bfi_filter_exit,REG1,0xbece)
0x05566C08,	//0x1978		VoC_bez16_d(CII_extra_HR_bfi_filter_exit,0x556)
0x04A51404,	//0x197a		VoC_lw16_d(REG4,0x4a5)
0x3AAF4864,	//0x197c		VoC_blt16_rd(CII_extra_HR_bfi_filter_exit,REG4,0xbaaf)
		//0x197e		CII_extra_HR_bfi_filter_100
0x002C0A81,	//0x197e		VoC_lw16i(REG1,0x2c)
		//0x1980		CII_extra_HR_bfi_filter_exit
0x05561508,	//0x1980		VoC_sw16_d(ACC0_LO,0x556)
0xDFE9E580,	//0x1982		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1983		CII_speechDecoder_opt
0x1482F002,	//0x1984		VoC_lw32_d(REG45,0x4082)(lo)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x15024082,	//0x1986		VoC_sw16_d(REG2,0x4499)(lo)	|	VoC_lw32_d(REG45,0x4082)(hi)
0x15024499,	//0x1988		VoC_sw16_d(REG2,0x4496)(lo)	|	VoC_sw16_d(REG2,0x4499)(hi)
0xF2C14496,	//0x198a		VoC_lw16i_short(REG1,0x16,DEFAULT)	|	VoC_sw16_d(REG2,0x4496)(hi)
0x199631C4,	//0x198c		VoC_bnez16_r(DEC_FRAME_CLASS_100,REG4)
0x00210A81,	//0x198e		VoC_lw16i(REG1,0x21)
0x40806C06,	//0x1990		VoC_bez16_d(DEC_FRAME_CLASS_100,0x4080)
0x002C0A81,	//0x1992		VoC_lw16i(REG1,0x2c)
0xFFC0E5C8,	//0x1994		VoC_NAD	|	VoC_jump(DEC_FRAME_CLASS_101)
		//0x1996		DEC_FRAME_CLASS_100
0x3AAE4474,	//0x1996		VoC_bne16_rd(DEC_FRAME_CLASS_101,REG4,0xbaae)
0x40806E04,	//0x1998		VoC_bnez16_d(DEC_FRAME_CLASS_101,0x4080)
0xFFC0F161,	//0x199a		VoC_NAD	|	VoC_lw16i_short(REG1,0xb,DEFAULT)
		//0x199c		DEC_FRAME_CLASS_101
0x196A2B80,	//0x199c		VoC_jal(CII_extra_HR_bfi_filter)
0x443AF022,	//0x199e		VoC_bne16_rd(DEC_UPDATE_STATE_100,REG2,0x7d2)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF02307D2,	//0x19a0		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bne16_rd(DEC_UPDATE_STATE_100,REG2,0x7d2)(hi)
0x3D9F38D9,	//0x19a2		VoC_bgt16_rd(DEC_UPDATE_STATE_END,REG1,0xbd9f)
0xE5C8F043,	//0x19a4		VoC_jump(DEC_UPDATE_STATE_END)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
		//0x19a6		DEC_UPDATE_STATE_100
0x4071F023,	//0x19a6		VoC_be16_rd(DEC_UPDATE_STATE_END,REG1,0xbece)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xF0833ECE,	//0x19a8		VoC_lw16i_short(REG3,0x4,DEFAULT)	|	VoC_be16_rd(DEC_UPDATE_STATE_END,REG1,0xbece)(hi)
0x3E244059,	//0x19aa		VoC_be16_rd(DEC_UPDATE_STATE_END,REG1,0xbe24)
0xDFC0F063,	//0x19ac		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
		//0x19ad		DEC_UPDATE_STATE_END
0xDFC0DFC1,	//0x19ae		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x07D21503,	//0x19b0		VoC_sw16_d(REG3,0x7d2)
0x19F43593,	//0x19b2		VoC_bne16_rr(DEC_NOT_SPEECH_MODE100,REG2,REG3)
0x17E92B80,	//0x19b4		VoC_jal(CII_para_conceal_speech_decoder_opt)
0x04A01808,	//0x19b6		VoC_lw16i_set_inc(REG0,0x4a0,0x2)
0x08121805,	//0x19b8		VoC_lw16i_set_inc(REG1,0x812,0x1)
0xD9C2D9C1,	//0x19ba		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0xDC93D9C3,	//0x19bc		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xF8FA5A12,	//0x19be		VoC_shr16_ri(REG2,0xffffffff,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x0,DEFAULT)
0x558E0AC3,	//0x19c0		VoC_lw16i(REG3,0xd58e)
0xDC9440D3,	//0x19c2		VoC_sw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xD833DC95,	//0x19c4		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x08161506,	//0x19c6		VoC_sw16_d(REG6,0x816)
0x08111507,	//0x19c8		VoC_sw16_d(REG7,0x811)
0x08101503,	//0x19ca		VoC_sw16_d(REG3,0x810)
0x18D32B80,	//0x19cc		VoC_jal(CII_lookupVq_opt)
0x04A8180F,	//0x19ce		VoC_lw16i_set_inc(REG3,0x4a8,0x3)
0x396E1849,	//0x19d0		VoC_lw16i_set_inc(REG1,0xb96e,0x2)
0x08111404,	//0x19d2		VoC_lw16_d(REG4,0x811)
0x4064F8D4,	//0x19d4		VoC_add16_rr(REG4,REG1,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)
0x011DE0B6,	//0x19d6		VoC_add16_rp(REG5,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG6,0xb,IN_PARALLEL)
0x835DE007,	//0x19d8		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x07D81808,	//0x19da		VoC_lw16i_set_inc(REG0,0x7d8,0x2)
0x07D60701,	//0x19dc		VoC_add16_rd(REG1,REG0,0x7d6)
0x0810180A,	//0x19de		VoC_lw16i_set_inc(REG2,0x810,0x2)
0xD9AC6888,	//0x19e0		VoC_lw32_p(ACC0,REG5,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x835D811D,	//0x19e2		VoC_add16inc_rp(REG5,REG5,REG3,DEFAULT)	|	VoC_add16_rp(REG5,REG4,REG3,DEFAULT)
0x358ADDCC,	//0x19e4		VoC_bne16_rr(DEC_WRAP_GSHIST,REG1,REG2)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE00119E8,	//0x19e6		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_bne16_rr(DEC_WRAP_GSHIST,REG1,REG2)(hi)
		//0x19e8		DEC_WRAP_GSHIST
		//0x19e8		VoC_endloop0
0xC241D9AC,	//0x19e8		VoC_sub16_rr(REG1,REG1,REG0,DEFAULT)	|	VoC_lw32_p(ACC0,REG5,DEFAULT)
0x07D41507,	//0x19ea		VoC_sw16_d(REG7,0x7d4)
0x07D31507,	//0x19ec		VoC_sw16_d(REG7,0x7d3)
0x07D11506,	//0x19ee		VoC_sw16_d(REG6,0x7d1)
0x07D61501,	//0x19f0		VoC_sw16_d(REG1,0x7d6)
0x1ADA2B00,	//0x19f2		VoC_jump_lg(DEC_NOT_SPEECH_MODE_END)
		//0x19f4		DEC_NOT_SPEECH_MODE100
0x08121804,	//0x19f4		VoC_lw16i_set_inc(REG0,0x812,0x1)
0x04A01483,	//0x19f6		VoC_lw32_d(REG67,0x4a0)
0x04A21484,	//0x19f8		VoC_lw32_d(ACC0,0x4a2)
0xDC88DC87,	//0x19fa		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x5A16DC89,	//0x19fc		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0x0AC0F8FE,	//0x19fe		VoC_lw16i(REG0,0xd58e)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)
0x4030558E,	//0x1a00		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i(REG0,0xd58e)(hi)
0x1502E004,	//0x1a02		VoC_sw16_d(REG2,0x816)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x15040816,	//0x1a04		VoC_sw16_d(REG4,0x811)(lo)	|	VoC_sw16_d(REG2,0x816)(hi)
0xD8000811,	//0x1a06		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_sw16_d(REG4,0x811)(hi)
0x3AAE4063,	//0x1a08		VoC_be16_rd(DEC_NO_CNIFIRSTSID_100_10,REG3,0xbaae)
0x1A302B00,	//0x1a0a		VoC_jump_lg(DEC_NO_CNIFIRSTSID_100)
		//0x1a0c		DEC_NO_CNIFIRSTSID_100_10
0x1504F162,	//0x1a0c		VoC_sw16_d(REG4,0x7d4)(lo)	|	VoC_lw16i_short(REG2,0xb,DEFAULT)
0x150407D4,	//0x1a0e		VoC_sw16_d(REG4,0x7d3)(lo)	|	VoC_sw16_d(REG4,0x7d4)(hi)
0x150207D3,	//0x1a10		VoC_sw16_d(REG2,0x7d1)(lo)	|	VoC_sw16_d(REG4,0x7d3)(hi)
0x44C907D1,	//0x1a12		VoC_bne16_rd(DEC_NO_CNIFIRSTSID_101,REG1,0xba75)(lo)	|	VoC_sw16_d(REG2,0x7d1)(hi)
0x15003A75,	//0x1a14		VoC_sw16_d(REG0,0x818)(lo)	|	VoC_bne16_rd(DEC_NO_CNIFIRSTSID_101,REG1,0xba75)(hi)
0xFFC00818,	//0x1a16		VoC_NAD	|	VoC_sw16_d(REG0,0x818)(hi)
0x18D32B80,	//0x1a18		VoC_jal(CII_lookupVq_opt)
0x1A702B00,	//0x1a1a		VoC_jump_lg(DEC_NO_CNIFIRSTSID_END)
		//0x1a1c		DEC_NO_CNIFIRSTSID_101
0x07D51406,	//0x1a1c		VoC_lw16_d(REG6,0x7d5)
0x558E0AC0,	//0x1a1e		VoC_lw16i(REG0,0xd58e)
0xF8FE5A16,	//0x1a20		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0x180AC030,	//0x1a22		VoC_lw16i_set_inc(REG2,0x438a,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xD807438A,	//0x1a24		VoC_lw16_p(REG7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x438a,0x2)(hi)
0x06381808,	//0x1a26		VoC_lw16i_set_inc(REG0,0x638,0x2)
0x08181507,	//0x1a28		VoC_sw16_d(REG7,0x818)
0xD9C468A3,	//0x1a2a		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDD4D9C4,	//0x1a2c		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1a2d		VoC_endloop0
0x1A702B00,	//0x1a2e		VoC_jump_lg(DEC_NO_CNIFIRSTSID_END)
		//0x1a30		DEC_NO_CNIFIRSTSID_100
0x3AAF4543,	//0x1a30		VoC_bne16_rd(DEC_NO_CNICONT_200,REG3,0xbaaf)
0x07D41504,	//0x1a32		VoC_sw16_d(REG4,0x7d4)
0x07D31504,	//0x1a34		VoC_sw16_d(REG4,0x7d3)
0x3A7544D1,	//0x1a36		VoC_bne16_rd(DEC_NO_CNIFIRSTSID_201,REG1,0xba75)
0x07D11504,	//0x1a38		VoC_sw16_d(REG4,0x7d1)
0x08181500,	//0x1a3a		VoC_sw16_d(REG0,0x818)
0x18D32B80,	//0x1a3c		VoC_jal(CII_lookupVq_opt)
0x1A702B00,	//0x1a3e		VoC_jump_lg(DEC_NO_CNIFIRSTSID_END)
		//0x1a40		DEC_NO_CNIFIRSTSID_201
		//0x1a40		DEC_NO_CNICONT_200
0x1406F167,	//0x1a40		VoC_lw16_d(REG6,0x7d5)(lo)	|	VoC_lw16i_short(REG7,0xb,DEFAULT)
0x140007D5,	//0x1a42		VoC_lw16_d(REG0,0x7d1)(lo)	|	VoC_lw16_d(REG6,0x7d5)(hi)
0x34B807D1,	//0x1a44		VoC_bngt16_rr(DEC_NO_CNICONT_203,REG7,REG0)(lo)	|	VoC_lw16_d(REG0,0x7d1)(hi)
0xC0101A48,	//0x1a46		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_bngt16_rr(DEC_NO_CNICONT_203,REG7,REG0)(hi)
		//0x1a48		DEC_NO_CNICONT_203
0x1500DA16,	//0x1a48		VoC_sw16_d(REG0,0x7d1)(lo)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0x406B07D1,	//0x1a4a		VoC_be16_rd(DEC_NO_CNICONT_204,REG3,0xbab0)(lo)	|	VoC_sw16_d(REG0,0x7d1)(hi)
0x2B003AB0,	//0x1a4c		VoC_jump_lg(DEC_NO_CNICONT_END)(lo)	|	VoC_be16_rd(DEC_NO_CNICONT_204,REG3,0xbab0)(hi)
0xFFC01A70,	//0x1a4e		VoC_NAD	|	VoC_jump_lg(DEC_NO_CNICONT_END)(hi)
		//0x1a50		DEC_NO_CNICONT_204
0x07D34512,	//0x1a50		VoC_bne16_rd(DEC_NO_CNIFIRSTSID_302,REG2,0x7d3)
0x3AAE07F6,	//0x1a52		VoC_sub16_rd(REG6,REG6,0xbaae)
0x1A573246,	//0x1a54		VoC_bnltz16_r(DEC_NO_CNIFIRSTSID_303,REG6)
0xC1B7F006,	//0x1a56		VoC_add16_rr(REG7,REG6,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x1a57		DEC_NO_CNIFIRSTSID_303
0x558E0AC0,	//0x1a58		VoC_lw16i(REG0,0xd58e)
0x1506C038,	//0x1a5a		VoC_sw16_d(REG6,0x7d5)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD80007D5,	//0x1a5c		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_sw16_d(REG6,0x7d5)(hi)
0x1500DA16,	//0x1a5e		VoC_sw16_d(REG0,0x818)(lo)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0xFFC00818,	//0x1a60		VoC_NAD	|	VoC_sw16_d(REG0,0x818)(hi)
		//0x1a62		DEC_NO_CNIFIRSTSID_302
0x07D40710,	//0x1a62		VoC_add16_rd(REG0,REG2,0x7d4)
0x1A6A35AA,	//0x1a64		VoC_bne16_rr(DEC_NO_CNIFIRSTSID_304,REG5,REG2)
0x3D954860,	//0x1a66		VoC_blt16_rd(DEC_NO_CNIFIRSTSID_304,REG0,0xbd95)
0x07D31502,	//0x1a68		VoC_sw16_d(REG2,0x7d3)
		//0x1a6a		DEC_NO_CNIFIRSTSID_304
0x07D41500,	//0x1a6a		VoC_sw16_d(REG0,0x7d4)
0x437C1484,	//0x1a6c		VoC_lw32_d(ACC0,0x437c)
0xFFC0E5D2,	//0x1a6e		VoC_NAD	|	VoC_jump(DEC_NO_FIRST_SID)
		//0x1a70		DEC_NO_CNIFIRSTSID_END
		//0x1a70		DEC_NO_CNICONT_END
0x07D21406,	//0x1a70		VoC_lw16_d(REG6,0x7d2)
0x437C1484,	//0x1a72		VoC_lw32_d(ACC0,0x437c)
0x3AAE44E6,	//0x1a74		VoC_bne16_rd(DEC_NO_FIRST_SID,REG6,0xbaae)
0x07D81808,	//0x1a76		VoC_lw16i_set_inc(REG0,0x7d8,0x2)
0x02DB2B80,	//0x1a78		VoC_jal(CII_avgGsHistQntz_gsQuant_opt)
0x437E1502,	//0x1a7a		VoC_sw16_d(REG2,0x437e)
0x01090A89,	//0x1a7c		VoC_lw16i(ACC0_HI,0x109)
0x19880A88,	//0x1a7e		VoC_lw16i(ACC0_LO,0x1988)
		//0x1a80		DEC_NO_FIRST_SID
0x07D21406,	//0x1a80		VoC_lw16_d(REG6,0x7d2)
0x437E1407,	//0x1a82		VoC_lw16_d(REG7,0x437e)
0x04A61805,	//0x1a84		VoC_lw16i_set_inc(REG1,0x4a6,0x1)
0x1A8E2C09,	//0x1a86		VoC_loop_i(0x1,0x4)
0x03002B80,	//0x1a88		VoC_jal(CII_getPnBits_opt)
0x2B80DC92,	//0x1a8a		VoC_jal(CII_getPnBits_opt)(lo)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xDC920300,	//0x1a8c		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_jal(CII_getPnBits_opt)(hi)
		//0x1a8e		VoC_endloop1
0x1584DC97,	//0x1a8e		VoC_sw32_d(ACC0,0x437c)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0xD627437C,	//0x1a90		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_sw32_d(ACC0,0x437c)(hi)
0x06380A82,	//0x1a92		VoC_lw16i(REG2,0x638)
0x438A0A8D,	//0x1a94		VoC_lw16i(RL6_HI,0x438a)
0x04640A8C,	//0x1a96		VoC_lw16i(RL6_LO,0x464)
0x08181403,	//0x1a98		VoC_lw16_d(REG3,0x818)
0xF0085F46,	//0x1a9a		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x06561404,	//0x1a9c		VoC_lw16_d(REG4,0x656)
0x07D11400,	//0x1a9e		VoC_lw16_d(REG0,0x7d1)
0x3AAE44F6,	//0x1aa0		VoC_bne16_rd(RxInterpR0Lpc_opt_100,REG6,0xbaae)
0x04361504,	//0x1aa2		VoC_sw16_d(REG4,0x436)
0x195E2B80,	//0x1aa4		VoC_jal(CII_linInterpSidShort_opt)
0x1809E044,	//0x1aa6		VoC_lw16i_set_inc(REG1,0x438,0x2)(lo)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0x15090438,	//0x1aa8		VoC_sw16_d(ACC0_HI,0x810)(lo)	|	VoC_lw16i_set_inc(REG1,0x438,0x2)(hi)
0x2B800810,	//0x1aaa		VoC_jal(CII_rcToCorrDpL_opt)(lo)	|	VoC_sw16_d(ACC0_HI,0x810)(hi)
0xE5D31316,	//0x1aac		VoC_jump(RxInterpR0Lpc_opt_same)	|	VoC_jal(CII_rcToCorrDpL_opt)(hi)
		//0x1aae		RxInterpR0Lpc_opt_100
0x3AAF45F6,	//0x1aae		VoC_bne16_rd(RxInterpR0Lpc_opt_else,REG6,0xbaaf)
0x3A7545E7,	//0x1ab0		VoC_bne16_rd(RxInterpR0Lpc_opt_else,REG7,0xba75)
0x04361504,	//0x1ab2		VoC_sw16_d(REG4,0x436)
0x195E2B80,	//0x1ab4		VoC_jal(CII_linInterpSidShort_opt)
0x04641808,	//0x1ab6		VoC_lw16i_set_inc(REG0,0x464,0x2)
0x04381809,	//0x1ab8		VoC_lw16i_set_inc(REG1,0x438,0x2)
0x08101509,	//0x1aba		VoC_sw16_d(ACC0_HI,0x810)
0xD9C46963,	//0x1abc		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDDCCD9C4,	//0x1abe		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1abf		VoC_endloop0
		//0x1ac0		RxInterpR0Lpc_opt_same
0xE1A4D90E,	//0x1ac0		VoC_movreg16(REG4,RL6_HI,DEFAULT)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0x044E1809,	//0x1ac2		VoC_lw16i_set_inc(REG1,0x44e,0x2)
0x13162B80,	//0x1ac4		VoC_jal(CII_rcToCorrDpL_opt)
0x19402B80,	//0x1ac6		VoC_jal(CII_linInterpSidLoop_opt)
0x2B80D90E,	//0x1ac8		VoC_jal(CII_aFlatRcDp_opt)(lo)	|	VoC_lw32_sd(RL6,0x0,DEFAULT)
0xE5CD15BB,	//0x1aca		VoC_jump(RxInterpR0Lpc_opt_END)	|	VoC_jal(CII_aFlatRcDp_opt)(hi)
		//0x1acc		RxInterpR0Lpc_opt_else
0x04361404,	//0x1acc		VoC_lw16_d(REG4,0x436)
0x195E2B80,	//0x1ace		VoC_jal(CII_linInterpSidShort_opt)
0x1509FFC0,	//0x1ad0		VoC_sw16_d(ACC0_HI,0x810)(lo)	|	VoC_NOP
0xFFC00810,	//0x1ad2		VoC_NAD	|	VoC_sw16_d(ACC0_HI,0x810)(hi)
0x19402B80,	//0x1ad4		VoC_jal(CII_linInterpSidLoop_opt)
0x15BB2B80,	//0x1ad6		VoC_jal(CII_aFlatRcDp_opt)
		//0x1ad8		RxInterpR0Lpc_opt_END
0xFFC0DF06,	//0x1ad8		VoC_NAD	|	VoC_pop32(RL6,DEFAULT)
		//0x1ada		DEC_NOT_SPEECH_MODE_END
0x438A1804,	//0x1ada		VoC_lw16i_set_inc(REG0,0x438a,0x1)
0x43941FB9,	//0x1adc		VoC_lw16i_set_inc(REG1,0x4394,0xfffffffe)
0x16552B80,	//0x1ade		VoC_jal(CII_rcToADp_opt_new)
0x1AF631C7,	//0x1ae0		VoC_bnez16_r(DEC_PROCESS_100,REG7)
0x43941805,	//0x1ae2		VoC_lw16i_set_inc(REG1,0x4394,0x1)
0x3ADE1846,	//0x1ae4		VoC_lw16i_set_inc(REG2,0xbade,0x1)
0x43801807,	//0x1ae6		VoC_lw16i_set_inc(REG3,0x4380,0x1)
0x9E546060,	//0x1ae8		VoC_multf32inc_pp(ACC0,REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x028A14C5,	//0x1aea		VoC_lw32_d(ACC1,0x828a)
0xC92B6944,	//0x1aec		VoC_add32_rr(REG67,ACC0,ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDCB79E8C,	//0x1aee		VoC_sw16inc_p(REG7,REG3,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG2,REG1,DEFAULT)
		//0x1af0		VoC_endloop0
0x0A84C92B,	//0x1af0		VoC_lw16i(REG4,0x439e)(lo)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0x2B80439E,	//0x1af2		VoC_jal(CII_a_sst_opt)(lo)	|	VoC_lw16i(REG4,0x439e)(hi)
0xE5CD1919,	//0x1af4		VoC_jump(DEC_PROCESS_100_END)	|	VoC_jal(CII_a_sst_opt)(hi)
		//0x1af6		DEC_PROCESS_100
0x06381808,	//0x1af6		VoC_lw16i_set_inc(REG0,0x638,0x2)
0x438A1809,	//0x1af8		VoC_lw16i_set_inc(REG1,0x438a,0x2)
0xFFC0D9C4,	//0x1afa		VoC_NAD	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C56944,	//0x1afc		VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDDCC59C4,	//0x1afe		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1b00		VoC_endloop0
0xDDCD59C5,	//0x1b00		VoC_sw32inc_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
		//0x1b02		DEC_PROCESS_100_END
0x1804F005,	//0x1b02		VoC_lw16i_set_inc(REG0,0x4394,0x1)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x18054394,	//0x1b04		VoC_lw16i_set_inc(REG1,0x4488,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x4394,0x1)(hi)
0x18064488,	//0x1b06		VoC_lw16i_set_inc(REG2,0x4304,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x4488,0x1)(hi)
0x18074304,	//0x1b08		VoC_lw16i_set_inc(REG3,0x642,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x4304,0x1)(hi)
0x15050642,	//0x1b0a		VoC_sw16_d(REG5,0x43b3)(lo)	|	VoC_lw16i_set_inc(REG3,0x642,0x1)(hi)
0x0A8443B3,	//0x1b0c		VoC_lw16i(REG4,0x638)(lo)	|	VoC_sw16_d(REG5,0x43b3)(hi)
0x14050638,	//0x1b0e		VoC_lw16_d(REG5,0x656)(lo)	|	VoC_lw16i(REG4,0x638)(hi)
0x0A860656,	//0x1b10		VoC_lw16i(REG6,0x438a)(lo)	|	VoC_lw16_d(REG5,0x656)(hi)
0x1407438A,	//0x1b12		VoC_lw16_d(REG7,0x810)(lo)	|	VoC_lw16i(REG6,0x438a)(hi)
0x0A880810,	//0x1b14		VoC_lw16i(ACC0_LO,0x64c)(lo)	|	VoC_lw16_d(REG7,0x810)(hi)
0x0A89064C,	//0x1b16		VoC_lw16i(ACC0_HI,0x62e)(lo)	|	VoC_lw16i(ACC0_LO,0x64c)(hi)
0x0A8B062E,	//0x1b18		VoC_lw16i(ACC1_HI,0x4354)(lo)	|	VoC_lw16i(ACC0_HI,0x62e)(hi)
0x0A8A4354,	//0x1b1a		VoC_lw16i(ACC1_LO,0x4380)(lo)	|	VoC_lw16i(ACC1_HI,0x4354)(hi)
0x0A8C4380,	//0x1b1c		VoC_lw16i(RL6_LO,0x439e)(lo)	|	VoC_lw16i(ACC1_LO,0x4380)(hi)
0x0A8D439E,	//0x1b1e		VoC_lw16i(RL6_HI,0x432c)(lo)	|	VoC_lw16i(RL6_LO,0x439e)(hi)
0x0ACE432C,	//0x1b20		VoC_lw16i(RL7_LO,0xd604)(lo)	|	VoC_lw16i(RL6_HI,0x432c)(hi)
0x0ACF5604,	//0x1b22		VoC_lw16i(RL7_HI,0xd600)(lo)	|	VoC_lw16i(RL7_LO,0xd604)(hi)
0x2B805600,	//0x1b24		VoC_jal(CII_getSfrmLpcTx_opt)(lo)	|	VoC_lw16i(RL7_HI,0xd600)(hi)
0xD61422B5,	//0x1b26		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jal(CII_getSfrmLpcTx_opt)(hi)
0x1E032B80,	//0x1b28		VoC_jal(CII_r0BasedEnergyShft_new)
0xF066F007,	//0x1b2a		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x08171505,	//0x1b2c		VoC_sw16_d(REG5,0x817)
		//0x1b2e		DEC_giSfrmCnt_LOOP_BEGIN
0x1D8A343E,	//0x1b2e		VoC_bgt16_rr(DEC_giSfrmCnt_LOOP,REG7,REG6)
0x1806C5F5,	//0x1b30		VoC_lw16i_set_inc(REG2,0x4a6,0x1)(lo)	|	VoC_mult16_rr(REG5,REG7,REG6,DEFAULT)
0xC15204A6,	//0x1b32		VoC_add16_rr(REG2,REG5,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4a6,0x1)(hi)
0x049F1507,	//0x1b34		VoC_sw16_d(REG7,0x49f)
0xD8A1D8A0,	//0x1b36		VoC_lw16inc_p(REG1,REG2,DEFAULT)	|	VoC_lw16inc_p(REG0,REG2,DEFAULT)
0x6E05D8A3,	//0x1b38		VoC_bnez16_d(DEC_PROCESS_200,0x811)(lo)	|	VoC_lw16inc_p(REG3,REG2,DEFAULT)
0x15800811,	//0x1b3a		VoC_sw32_d(REG01,0x43b4)(lo)	|	VoC_bnez16_d(DEC_PROCESS_200,0x811)(hi)
0xE5C343B4,	//0x1b3c		VoC_jump(DEC_PROCESS_200_END)	|	VoC_sw32_d(REG01,0x43b4)(hi)
		//0x1b3e		DEC_PROCESS_200
0x43B41501,	//0x1b3e		VoC_sw16_d(REG1,0x43b4)
		//0x1b40		DEC_PROCESS_200_END
0x1503F005,	//0x1b40		VoC_sw16_d(REG3,0x43b2)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDFC543B2,	//0x1b42		VoC_push16(REG5,DEFAULT)	|	VoC_sw16_d(REG3,0x43b2)(hi)
0x08116C35,	//0x1b44		VoC_bez16_d(DEC_PROCESS_300,0x811)
0x049F6C0E,	//0x1b46		VoC_bez16_d(LagDecode_opt_END,0x49f)
0x3AB407C0,	//0x1b48		VoC_sub16_rd(REG0,REG0,0xbab4)
0x08190700,	//0x1b4a		VoC_add16_rd(REG0,REG0,0x819)
0x0C9A3C60,	//0x1b4c		VoC_bngt16_rd(LagDecode_opt_200,REG0,0x8c9a)
0x00FF0A80,	//0x1b4e		VoC_lw16i(REG0,0xff)
		//0x1b50		LagDecode_opt_200
0x1B543241,	//0x1b50		VoC_bnltz16_r(LagDecode_opt_201,REG1)
0xFFC0F000,	//0x1b52		VoC_NAD	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x1b54		LagDecode_opt_201
		//0x1b54		LagDecode_opt_END
0x548E0AC1,	//0x1b54		VoC_lw16i(REG1,0xd48e)
0x1500C041,	//0x1b56		VoC_sw16_d(REG0,0x819)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xD8160819,	//0x1b58		VoC_lw16_p(REG6,REG1,DEFAULT)	|	VoC_sw16_d(REG0,0x819)(hi)
0x06EB0A85,	//0x1b5a		VoC_lw16i(REG5,0x6eb)
0x0B762B80,	//0x1b5c		VoC_jal(CII_fp_ex_opt)
0x06EB1808,	//0x1b5e		VoC_lw16i_set_inc(REG0,0x6eb,0x2)
0x43B61809,	//0x1b60		VoC_lw16i_set_inc(REG1,0x43b6,0x2)
0x6A83E200,	//0x1b62		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_aligninc_pp(REG0,REG0,DEFAULT)
0xD9C4D9C4,	//0x1b64		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
		//0x1b66		VoC_endloop0
0xDA16DDCC,	//0x1b66		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x1405F124,	//0x1b68		VoC_lw16_d(REG5,0x43b4)(lo)	|	VoC_lw16i_short(REG4,0x9,DEFAULT)
0x180443B4,	//0x1b6a		VoC_lw16i_set_inc(REG0,0x447e,0x1)(lo)	|	VoC_lw16_d(REG5,0x43b4)(hi)
0xFFC0447E,	//0x1b6c		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x447e,0x1)(hi)
0x0BE82B80,	//0x1b6e		VoC_jal(CII_b_con_opt)
0x3FA21960,	//0x1b70		VoC_lw16i_set_inc(REG0,0xbfa2,0x28)
0x43DE1809,	//0x1b72		VoC_lw16i_set_inc(REG1,0x43de,0x2)
0x447E1806,	//0x1b74		VoC_lw16i_set_inc(REG2,0x447e,0x1)
0x0BC92B80,	//0x1b76		VoC_jal(CII_v_con_opt)
0xF0E4E5DE,	//0x1b78		VoC_lw16i_short(REG4,0x7,DEFAULT)	|	VoC_jump(DEC_PROCESS_400)
		//0x1b79		DEC_PROCESS_300
0x43B41405,	//0x1b7a		VoC_lw16_d(REG5,0x43b4)
0x447E1804,	//0x1b7c		VoC_lw16i_set_inc(REG0,0x447e,0x1)
0x0BE82B80,	//0x1b7e		VoC_jal(CII_b_con_opt)
0x3D721960,	//0x1b80		VoC_lw16i_set_inc(REG0,0xbd72,0x28)
0x43DE1809,	//0x1b82		VoC_lw16i_set_inc(REG1,0x43de,0x2)
0x447E1806,	//0x1b84		VoC_lw16i_set_inc(REG2,0x447e,0x1)
0x0BC92B80,	//0x1b86		VoC_jal(CII_v_con_opt)
0x43B51405,	//0x1b88		VoC_lw16_d(REG5,0x43b5)
0x447E1804,	//0x1b8a		VoC_lw16i_set_inc(REG0,0x447e,0x1)
0x0BE82B80,	//0x1b8c		VoC_jal(CII_b_con_opt)
0x3E8A1960,	//0x1b8e		VoC_lw16i_set_inc(REG0,0xbe8a,0x28)
0x44061809,	//0x1b90		VoC_lw16i_set_inc(REG1,0x4406,0x2)
0x447E1806,	//0x1b92		VoC_lw16i_set_inc(REG2,0x447e,0x1)
0x0BC92B80,	//0x1b94		VoC_jal(CII_v_con_opt)
		//0x1b96		DEC_PROCESS_400
0xF005D617,	//0x1b96		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x44881806,	//0x1b98		VoC_lw16i_set_inc(REG2,0x4488,0x1)
0x049F0712,	//0x1b9a		VoC_add16_rd(REG2,REG2,0x49f)
0x049F0712,	//0x1b9c		VoC_add16_rd(REG2,REG2,0x49f)
0x43B61808,	//0x1b9e		VoC_lw16i_set_inc(REG0,0x43b6,0x2)
0x44901807,	//0x1ba0		VoC_lw16i_set_inc(REG3,0x4490,0x1)
0xDFC2DFC5,	//0x1ba2		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x1BB63187,	//0x1ba4		VoC_bez16_r(DEC_PROCESS_500,REG7)
0xD991DF41,	//0x1ba6		VoC_lw32_p(REG23,REG2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0B5DF8FB,	//0x1ba8		VoC_sub16_dr(REG5,0xbaaf,REG3)(lo)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0x31453AAF,	//0x1baa		VoC_bngtz16_r(RS_RR_opt_100,REG5)(lo)	|	VoC_sub16_dr(REG5,0xbaaf,REG3)(hi)
0x2B801BB2,	//0x1bac		VoC_jal(CII_g_corr1s_new)(lo)	|	VoC_bngtz16_r(RS_RR_opt_100,REG5)(hi)
0xE0E11E1A,	//0x1bae		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_jal(CII_g_corr1s_new)(hi)
0xFFC0E5C4,	//0x1bb0		VoC_NAD	|	VoC_jump(RS_RR_opt_100_END)
		//0x1bb2		RS_RR_opt_100
0x0BDF2B80,	//0x1bb2		VoC_jal(CII_g_corr1_opt_paris)
		//0x1bb4		RS_RR_opt_100_END
0x0C1D2B80,	//0x1bb4		VoC_jal(CII_sub_rs_rrNs)
		//0x1bb6		DEC_PROCESS_500
0x1404F0A3,	//0x1bb6		VoC_lw16_d(REG4,0x811)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x18450811,	//0x1bb8		VoC_lw16i_set_inc(REG1,0xbaf2,0x1)(lo)	|	VoC_lw16_d(REG4,0x811)(hi)
0x081B3AF2,	//0x1bba		VoC_mult16_rd(REG3,REG3,0x43b2)(lo)	|	VoC_lw16i_set_inc(REG1,0xbaf2,0x1)(hi)
0x086543B2,	//0x1bbc		VoC_mult16_rd(REG5,REG4,0xd4aa)(lo)	|	VoC_mult16_rd(REG3,REG3,0x43b2)(hi)
0xC05954AA,	//0x1bbe		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_mult16_rd(REG5,REG4,0xd4aa)(hi)
0x1808C069,	//0x1bc0		VoC_lw16i_set_inc(REG0,0x43de,0x2)(lo)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD89843DE,	//0x1bc2		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x43de,0x2)(hi)
0x1807D899,	//0x1bc4		VoC_lw16i_set_inc(REG3,0x4492,0x1)(lo)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xD6124492,	//0x1bc6		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x4492,0x1)(hi)
0xDFC8DFC9,	//0x1bc8		VoC_push16(ACC0_LO,DEFAULT)	|	VoC_push16(ACC0_HI,DEFAULT)
0x0C482B80,	//0x1bca		VoC_jal(CII_rs_rrNs_opt)
0x08111404,	//0x1bcc		VoC_lw16_d(REG4,0x811)
0x1BED31C4,	//0x1bce		VoC_bnez16_r(DEC_PROCESS_600,REG4)
0x1808D632,	//0x1bd0		VoC_lw16i_set_inc(REG0,0x4406,0x2)(lo)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0x18074406,	//0x1bd2		VoC_lw16i_set_inc(REG3,0x4494,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x4406,0x2)(hi)
0x2B804494,	//0x1bd4		VoC_jal(CII_rs_rrNs_opt)(lo)	|	VoC_lw16i_set_inc(REG3,0x4494,0x1)(hi)
0xDF840C48,	//0x1bd6		VoC_pop16(REG4,DEFAULT)	|	VoC_jal(CII_rs_rrNs_opt)(hi)
0x1804F031,	//0x1bd8		VoC_lw16i_set_inc(REG0,0x43de,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE00143DE,	//0x1bda		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x43de,0x1)(hi)
0x44920A87,	//0x1bdc		VoC_lw16i(REG7,0x4492)
0x0B322B80,	//0x1bde		VoC_jal(CII_scaleExcite_opt)
0x1804DF84,	//0x1be0		VoC_lw16i_set_inc(REG0,0x4406,0x1)(lo)	|	VoC_pop16(REG4,DEFAULT)
0xE0014406,	//0x1be2		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x4406,0x1)(hi)
0x44940A87,	//0x1be4		VoC_lw16i(REG7,0x4494)
0x0B322B80,	//0x1be6		VoC_jal(CII_scaleExcite_opt)
0x44061808,	//0x1be8		VoC_lw16i_set_inc(REG0,0x4406,0x2)
0x43DE1809,	//0x1bea		VoC_lw16i_set_inc(REG1,0x43de,0x2)
0xDF84E5D8,	//0x1bec		VoC_pop16(REG4,DEFAULT)	|	VoC_jump(DEC_PROCESS_700)
		//0x1bed		DEC_PROCESS_600
0x1804F031,	//0x1bee		VoC_lw16i_set_inc(REG0,0x43b6,0x1)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE00143B6,	//0x1bf0		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x43b6,0x1)(hi)
0x44900A87,	//0x1bf2		VoC_lw16i(REG7,0x4490)
0x0B322B80,	//0x1bf4		VoC_jal(CII_scaleExcite_opt)
0xDA23DF84,	//0x1bf6		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x43DE1804,	//0x1bf8		VoC_lw16i_set_inc(REG0,0x43de,0x1)
0x0A87E001,	//0x1bfa		VoC_lw16i(REG7,0x4492)(lo)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xFFC04492,	//0x1bfc		VoC_NAD	|	VoC_lw16i(REG7,0x4492)(hi)
0x0B322B80,	//0x1bfe		VoC_jal(CII_scaleExcite_opt)
0x43B61808,	//0x1c00		VoC_lw16i_set_inc(REG0,0x43b6,0x2)
0x43DE1809,	//0x1c02		VoC_lw16i_set_inc(REG1,0x43de,0x2)
		//0x1c04		DEC_PROCESS_700
0x442E180A,	//0x1c04		VoC_lw16i_set_inc(REG2,0x442e,0x2)
0xD9C26A85,	//0x1c06		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0x834D030C,	//0x1c08		VoC_add16inc_rp(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)
0xDDD2D9C2,	//0x1c0a		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x1c0b		VoC_endloop0
0x06801808,	//0x1c0c		VoC_lw16i_set_inc(REG0,0x680,0x2)
0x06581809,	//0x1c0e		VoC_lw16i_set_inc(REG1,0x658,0x2)
0xEEA2D9C4,	//0x1c10		VoC_loop_i_short(0x35,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDDCCD9C4,	//0x1c12		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1c13		VoC_endloop0
0x1808F031,	//0x1c14		VoC_lw16i_set_inc(REG0,0x442e,0x2)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDC98442E,	//0x1c16		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x442e,0x2)(hi)
0xEA83D9C4,	//0x1c18		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xDC9859C4,	//0x1c1a		VoC_sw16inc_p(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1c1c		VoC_endloop0
0xDF87DC99,	//0x1c1c		VoC_pop16(REG7,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0xDF8BDF8A,	//0x1c1e		VoC_pop16(ACC1_HI,DEFAULT)	|	VoC_pop16(ACC1_LO,DEFAULT)
0x0384077F,	//0x1c20		VoC_add16_rd(REG7,REG7,0x8384)
0x07141806,	//0x1c22		VoC_lw16i_set_inc(REG2,0x714,0x1)
0x073C1807,	//0x1c24		VoC_lw16i_set_inc(REG3,0x73c,0x1)
0x1805D877,	//0x1c26		VoC_lw16i_set_inc(REG1,0x4456,0x1)(lo)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x18044456,	//0x1c28		VoC_lw16i_set_inc(REG0,0x442e,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x4456,0x1)(hi)
0x6E0F442E,	//0x1c2a		VoC_bnez16_d(pitchPreFilt_opt_00,0x811)(lo)	|	VoC_lw16i_set_inc(REG0,0x442e,0x1)(hi)
0xD8B60811,	//0x1c2c		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_bnez16_d(pitchPreFilt_opt_00,0x811)(hi)
0x1C312CD6,	//0x1c2e		VoC_loop_i(0x0,0x6b)
0xDCA6D8B6,	//0x1c30		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x1c31		VoC_endloop0
0xED04D886,	//0x1c32		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF6C55886,	//0x1c34		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xDC95DCA6,	//0x1c36		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x1c37		VoC_endloop0
0x1CA52B00,	//0x1c38		VoC_jump_lg(pitchPreFilt_opt_end)
		//0x1c3a		pitchPreFilt_opt_00
0x0B7DF8FF,	//0x1c3a		VoC_sub16_dr(REG5,0xbaaf,REG7)(lo)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x70503AAF,	//0x1c3c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_sub16_dr(REG5,0xbaaf,REG7)(hi)
0x3145DF40,	//0x1c3e		VoC_bngtz16_r(pitchPreFilt_opt_01,REG5)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0x2B801C44,	//0x1c40		VoC_jal(CII_g_corr1s_new)(lo)	|	VoC_bngtz16_r(pitchPreFilt_opt_01,REG5)(hi)
0xE5CB1E1A,	//0x1c42		VoC_jump(pitchPreFilt_opt_02)	|	VoC_jal(CII_g_corr1s_new)(hi)
		//0x1c44		pitchPreFilt_opt_01
0xE200F005,	//0x1c44		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFF446A82,	//0x1c46		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x1c48		VoC_endloop0
0x2B80D500,	//0x1c48		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0xE0270188,	//0x1c4a		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3AAA0B49,	//0x1c4c		VoC_sub16_dr(REG1,0xbaaa,REG1)
		//0x1c4e		pitchPreFilt_opt_02
0x028A14C6,	//0x1c4e		VoC_lw32_d(RL6,0x828a)
0x53AE1844,	//0x1c50		VoC_lw16i_set_inc(REG0,0xd3ae,0x1)
0x43B20700,	//0x1c52		VoC_add16_rd(REG0,REG0,0x43b2)
0x08111406,	//0x1c54		VoC_lw16_d(REG6,0x811)
0xC036F8DE,	//0x1c56		VoC_add16_rr(REG6,REG0,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xfffffffb,DEFAULT)
0x5860C930,	//0x1c58		VoC_lw16_p(REG0,REG6,DEFAULT)	|	VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)
0xE141F626,	//0x1c5a		VoC_movreg16(REG1,ACC1_LO,DEFAULT)	|	VoC_movreg16(REG6,REG1,IN_PARALLEL)
0x1C5F3481,	//0x1c5c		VoC_bngt16_rr(pitchPreFilt_opt_03,REG0,REG1)
0xFF1FE020,	//0x1c5e		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x1c5f		pitchPreFilt_opt_03
0x56040A43,	//0x1c60		VoC_multf32_rd(REG67,REG0,0xd604)
0xC8F3E164,	//0x1c62		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x0B662B80,	//0x1c64		VoC_jal(CII_get_ipjj_opt_paris)
0x5452185B,	//0x1c66		VoC_lw16i_set_inc(REG3,0xd452,0x6)
0x1804C0C3,	//0x1c68		VoC_lw16i_set_inc(REG0,0x449a,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG0,DEFAULT)
0x9BDD449A,	//0x1c6a		VoC_multf32inc_rp(ACC1,REG7,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x449a,0x1)(hi)
0xC975F024,	//0x1c6c		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x9BDDE943,	//0x1c6e		VoC_multf32inc_rp(ACC1,REG7,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC975DC8B,	//0x1c70		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)
		//0x1c71		VoC_endloop0
0x07A2180B,	//0x1c72		VoC_lw16i_set_inc(REG3,0x7a2,0x2)
0xD90842CB,	//0x1c74		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
0x449A180A,	//0x1c76		VoC_lw16i_set_inc(REG2,0x449a,0x2)
0x07A71805,	//0x1c78		VoC_lw16i_set_inc(REG1,0x7a7,0x1)
0x2C51D889,	//0x1c7a		VoC_loop_i(0x1,0x28)(lo)	|	VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)
0xFF0B1C86,	//0x1c7c		VoC_movreg32(REG67,REG23,DEFAULT)	|	VoC_loop_i(0x1,0x28)(hi)
0xE0086213,	//0x1c7e		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0xD51AE8A1,	//0x1c80		VoC_bimac32inc_pp(REG3,REG2)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x1c81		VoC_endloop0
0xC934FF19,	//0x1c82		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0xC0E35889,	//0x1c84		VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x1c86		VoC_endloop1
0x61CFDC99,	//0x1c86		VoC_movreg16(RL7_HI,RL7_LO,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x1808F7EE,	//0x1c88		VoC_lw16i_set_inc(REG0,0x7a7,0x2)(lo)	|	VoC_movreg16(RL7_LO,RL7_HI,IN_PARALLEL)
0x2B8007A7,	//0x1c8a		VoC_jal(CII_agcGain_opt)(lo)	|	VoC_lw16i_set_inc(REG0,0x7a7,0x2)(hi)
0xDF001DA5,	//0x1c8c		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_agcGain_opt)(hi)
0x07A71804,	//0x1c8e		VoC_lw16i_set_inc(REG0,0x7a7,0x1)
0xF031F7D9,	//0x1c90		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)
0x14C69BC4,	//0x1c92		VoC_lw32_d(RL6,0x828a)(lo)	|	VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)
0xC934028A,	//0x1c94		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_lw32_d(RL6,0x828a)(hi)
0x9BC4ED03,	//0x1c96		VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xC934DC99,	//0x1c98		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x1c99		VoC_endloop0
0x1809F7F9,	//0x1c9a		VoC_lw16i_set_inc(REG1,0x73c,0x2)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x1808073C,	//0x1c9c		VoC_lw16i_set_inc(REG0,0x714,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x73c,0x2)(hi)
0xD9CC0714,	//0x1c9e		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x714,0x2)(hi)
0x1CA32C92,	//0x1ca0		VoC_loop_i(0x0,0x49)
0xDDC4D9CC,	//0x1ca2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
		//0x1ca3		VoC_endloop0
0xD630DC08,	//0x1ca4		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
		//0x1ca5		pitchPreFilt_opt_end
0xF0087007,	//0x1ca6		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x17B32B80,	//0x1ca8		VoC_jal(CII_level_estimator_opt)
0x0800F140,	//0x1caa		VoC_mult16_rd(REG0,REG0,0x49f)(lo)	|	VoC_lw16i_short(REG0,0xa,DEFAULT)
0x1807049F,	//0x1cac		VoC_lw16i_set_inc(REG3,0x4304,0x1)(lo)	|	VoC_mult16_rd(REG0,REG0,0x49f)(hi)
0xC0C34304,	//0x1cae		VoC_add16_rr(REG3,REG3,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x4304,0x1)(hi)
0xDFC3DFC0,	//0x1cb0		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x06241808,	//0x1cb2		VoC_lw16i_set_inc(REG0,0x624,0x2)
0x0C9C180A,	//0x1cb4		VoC_lw16i_set_inc(REG2,0xc9c,0x2)
0xD9C468A3,	//0x1cb6		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDD4D9C4,	//0x1cb8		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1cb9		VoC_endloop0
0x44561804,	//0x1cba		VoC_lw16i_set_inc(REG0,0x4456,0x1)
0x0CA61FBD,	//0x1cbc		VoC_lw16i_set_inc(REG1,0xca6,0xffffffff)
0x0C9C1806,	//0x1cbe		VoC_lw16i_set_inc(REG2,0xc9c,0x1)
0x12322B80,	//0x1cc0		VoC_jal(CII_lpcIir_opt_paris)
0x180AF023,	//0x1cc2		VoC_lw16i_set_inc(REG2,0xca6,0x2)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xF6580CA6,	//0x1cc4		VoC_lw16i_short(FORMAT16,0xfffffff2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xca6,0x2)(hi)
0x8ED10ED0,	//0x1cc6		VoC_multf16inc_rp(REG1,REG3,REG2,IN_PARALLEL)	|	VoC_multf16inc_rp(REG0,REG3,REG2,DEFAULT)
0xFF446A84,	//0x1cc8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0x8ED10ED0,	//0x1cca		VoC_multf16inc_rp(REG1,REG3,REG2,IN_PARALLEL)	|	VoC_multf16inc_rp(REG0,REG3,REG2,DEFAULT)
		//0x1ccc		VoC_endloop0
0xF7F8CF00,	//0x1ccc		VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)	|	VoC_bimac32_rr(REG01,REG01)
0xFFC0F000,	//0x1cce		VoC_NAD	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x187F2B80,	//0x1cd0		VoC_jal(CII_level_calc_opt)
0x799A0AC1,	//0x1cd2		VoC_lw16i(REG1,0xfffff99a)
0x44970888,	//0x1cd4		VoC_multf16_rd(REG0,REG1,0x4497)
0x44961401,	//0x1cd6		VoC_lw16_d(REG1,0x4496)
0x3A6E3C60,	//0x1cd8		VoC_bngt16_rd(signal_conceal_opt00,REG0,0xba6e)
0xFFC0F1E0,	//0x1cda		VoC_NAD	|	VoC_lw16i_short(REG0,0xf,DEFAULT)
		//0x1cdc		signal_conceal_opt00
0x07D06A04,	//0x1cdc		VoC_bngtz16_d(signal_conceal_opt01,0x7d0)
0xFFC0F021,	//0x1cde		VoC_NAD	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x1ce0		signal_conceal_opt01
0x1CE43101,	//0x1ce0		VoC_bgtz16_r(signal_conceal_opt_go,REG1)
		//0x1ce2		signal_conceal_opt_exit2
0x1D1D2B00,	//0x1ce2		VoC_jump_lg(signal_conceal_opt_exit)
		//0x1ce4		signal_conceal_opt_go
0x3AAA0AC2,	//0x1ce4		VoC_lw16i(REG2,0xbaaa)
0x3FDAC082,	//0x1ce6		VoC_bngt16_rd(signal_conceal_opt_exit2,REG2,0xbc34)(lo)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x00123C34,	//0x1ce8		VoC_add16_pd(REG2,REG2,0x4498)(lo)	|	VoC_bngt16_rd(signal_conceal_opt_exit2,REG2,0xbc34)(hi)
0xC3D24498,	//0x1cea		VoC_sub16_rr(REG2,REG7,REG2,DEFAULT)	|	VoC_add16_pd(REG2,REG2,0x4498)(hi)
0x1D1D3142,	//0x1cec		VoC_bngtz16_r(signal_conceal_opt_exit,REG2)
0x3A6E3C5A,	//0x1cee		VoC_bngt16_rd(signal_conceal_opt04,REG2,0xba6e)
0xF027F1E2,	//0x1cf0		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0xf,DEFAULT)
		//0x1cf1		signal_conceal_opt04
0x3A8D1848,	//0x1cf2		VoC_lw16i_set_inc(REG0,0xba8d,0x2)
0x40816A04,	//0x1cf4		VoC_bngtz16_d(signal_conceal_opt05,0x4081)
0x44991507,	//0x1cf6		VoC_sw16_d(REG7,0x4499)
		//0x1cf8		signal_conceal_opt05
0x14C6C010,	//0x1cf8		VoC_lw32_d(RL6,0x828a)(lo)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x1809028A,	//0x1cfa		VoC_lw16i_set_inc(REG1,0x624,0x2)(lo)	|	VoC_lw32_d(RL6,0x828a)(hi)
0x58030624,	//0x1cfc		VoC_lw16_p(REG3,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x624,0x2)(hi)
0x1ACCF620,	//0x1cfe		VoC_multf32inc_rp(ACC0,REG3,REG1,DEFAULT)	|	VoC_movreg16(REG0,REG1,IN_PARALLEL)
0xFFC09ACD,	//0x1d00		VoC_NOP	|	VoC_multf32inc_rp(ACC1,REG3,REG1,IN_PARALLEL)
0xC9774934,	//0x1d02		VoC_add32_rr(RL7,ACC1,RL6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xE8A6FFC0,	//0x1d04		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0x9ACD1ACC,	//0x1d06		VoC_multf32inc_rp(ACC1,REG3,REG1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG3,REG1,DEFAULT)
0x4934E12E,	//0x1d08		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_movreg16(RL7_LO,ACC0_HI,DEFAULT)
0xDDC7C977,	//0x1d0a		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_add32_rr(RL7,ACC1,RL6,IN_PARALLEL)
		//0x1d0b		VoC_endloop0
0x077F1804,	//0x1d0c		VoC_lw16i_set_inc(REG0,0x77f,0x1)
0x44561805,	//0x1d0e		VoC_lw16i_set_inc(REG1,0x4456,0x1)
0x06C31806,	//0x1d10		VoC_lw16i_set_inc(REG2,0x6c3,0x1)
0xED08FFC0,	//0x1d12		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_NAD
0x98CD18C4,	//0x1d14		VoC_multf32_rp(ACC1,REG3,REG1,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG3,REG0,DEFAULT)
0x49349AD7,	//0x1d16		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_multf32inc_rp(RL7,REG3,REG2,DEFAULT)
0xC9F7C975,	//0x1d18		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)
0x5C9BDC89,	//0x1d1a		VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x1d1b		VoC_endloop0
0xDF83DCAF,	//0x1d1c		VoC_pop16(REG3,DEFAULT)	|	VoC_sw16inc_p(RL7_HI,REG2,IN_PARALLEL)
		//0x1d1d		signal_conceal_opt_exit
0x44561804,	//0x1d1e		VoC_lw16i_set_inc(REG0,0x4456,0x1)
0x06241806,	//0x1d20		VoC_lw16i_set_inc(REG2,0x624,0x1)
0x0C741FBD,	//0x1d22		VoC_lw16i_set_inc(REG1,0xc74,0xffffffff)
0x12322B80,	//0x1d24		VoC_jal(CII_lpcIir_opt_paris)
0x1808DF84,	//0x1d26		VoC_lw16i_set_inc(REG0,0xc74,0x2)(lo)	|	VoC_pop16(REG4,DEFAULT)
0x18060C74,	//0x1d28		VoC_lw16i_set_inc(REG2,0x4354,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xc74,0x2)(hi)
0x18074354,	//0x1d2a		VoC_lw16i_set_inc(REG3,0x432c,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x4354,0x1)(hi)
0x4112432C,	//0x1d2c		VoC_add16_rr(REG2,REG4,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x432c,0x1)(hi)
0xD631C11B,	//0x1d2e		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG3,IN_PARALLEL)
0xDFC1F031,	//0x1d30		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDF405FC2,	//0x1d32		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x08171405,	//0x1d34		VoC_lw16_d(REG5,0x817)
0x1E1A2B80,	//0x1d36		VoC_jal(CII_g_corr1s_new)
0x028A0967,	//0x1d38		VoC_add32_rd(RL7,ACC0,0x828a)
0xF00560EE,	//0x1d3a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG7,DEFAULT)
0xDF0077F0,	//0x1d3c		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0x060E1806,	//0x1d3e		VoC_lw16i_set_inc(REG2,0x60e,0x1)
0x16832B80,	//0x1d40		VoC_jal(CII_lpcFir_opt)
0x7030DF83,	//0x1d42		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x5610F3FD,	//0x1d44		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0x1806D611,	//0x1d46		VoC_lw16i_set_inc(REG2,0x618,0x1)(lo)	|	VoC_lw16_sd(REG1,0x0,IN_PARALLEL)
0x2B800618,	//0x1d48		VoC_jal(CII_lpcIir_opt_paris)(lo)	|	VoC_lw16i_set_inc(REG2,0x618,0x1)(hi)
0xD6101232,	//0x1d4a		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_jal(CII_lpcIir_opt_paris)(hi)
0x0AC1D612,	//0x1d4c		VoC_lw16i(REG1,0x8000)(lo)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x0A830000,	//0x1d4e		VoC_lw16i(REG3,0x199a)(lo)	|	VoC_lw16i(REG1,0x8000)(hi)
0x5889199A,	//0x1d50		VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_lw16i(REG3,0x199a)(hi)
0x0F18F628,	//0x1d52		VoC_msu32_rd(REG3,0x622)(lo)	|	VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)
0xECE50622,	//0x1d54		VoC_loop_i_short(0x27,DEFAULT)	|	VoC_msu32_rd(REG3,0x622)(hi)
0xF7245889,	//0x1d56		VoC_movreg16(REG4,ACC0_HI,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)
0xF628509A,	//0x1d58		VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_msu32_rp(REG3,REG2,DEFAULT)
		//0x1d5a		VoC_endloop0
0xD821DCA4,	//0x1d5a		VoC_lw16_p(REG1,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0x1501DC29,	//0x1d5c		VoC_sw16_d(REG1,0x622)(lo)	|	VoC_sw16_p(ACC0_HI,REG2,DEFAULT)
0x56100622,	//0x1d5e		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_d(REG1,0x622)(hi)
0x1405F008,	//0x1d60		VoC_lw16_d(REG5,0x817)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x2B800817,	//0x1d62		VoC_jal(CII_agcGain_opt)(lo)	|	VoC_lw16_d(REG5,0x817)(hi)
0xF0081DA5,	//0x1d64		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_jal(CII_agcGain_opt)(hi)
0x060C1406,	//0x1d66		VoC_lw16_d(REG6,0x60c)
0x0AC4E0C9,	//0x1d68		VoC_lw16i(REG4,0xfffffe66)(lo)	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0x0A857E66,	//0x1d6a		VoC_lw16i(REG5,0x19a)(lo)	|	VoC_lw16i(REG4,0xfffffe66)(hi)
0xF7B8019A,	//0x1d6c		VoC_lw16i_short(FORMAT16,0xfffffffd,DEFAULT)	|	VoC_lw16i(REG5,0x19a)(hi)
0xDF82CF34,	//0x1d6e		VoC_pop16(REG2,DEFAULT)	|	VoC_bimac32_rr(REG67,REG45)
0x8D93E126,	//0x1d70		VoC_multf16_rp(REG3,REG6,REG2,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xCF34ECE5,	//0x1d72		VoC_bimac32_rr(REG67,REG45)	|	VoC_loop_i_short(0x27,DEFAULT)
0xE126DCA3,	//0x1d74		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0xFFC08D93,	//0x1d76		VoC_NOP	|	VoC_multf16_rp(REG3,REG6,REG2,DEFAULT)
		//0x1d77		VoC_endloop0
0xDCA3F7F8,	//0x1d78		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)
0x060C1506,	//0x1d7a		VoC_sw16_d(REG6,0x60c)
0x0741D630,	//0x1d7c		VoC_add16_rd(REG1,REG0,0xbd92)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x70273D92,	//0x1d7e		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_add16_rd(REG1,REG0,0xbd92)(hi)
0xDA31F008,	//0x1d80		VoC_sw16_sd(REG1,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x17B32B80,	//0x1d82		VoC_jal(CII_level_estimator_opt)
0xF027F066,	//0x1d84		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0x049F073F,	//0x1d86		VoC_add16_rd(REG7,REG7,0x49f)
0x1B2E2B00,	//0x1d88		VoC_jump_lg(DEC_giSfrmCnt_LOOP_BEGIN)
		//0x1d8a		DEC_giSfrmCnt_LOOP
0x1401DF80,	//0x1d8a		VoC_lw16_d(REG1,0x4499)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x14024499,	//0x1d8c		VoC_lw16_d(REG2,0x810)(lo)	|	VoC_lw16_d(REG1,0x4499)(hi)
0x15000810,	//0x1d8e		VoC_sw16_d(REG0,0x7d5)(lo)	|	VoC_lw16_d(REG2,0x810)(hi)
0x150107D5,	//0x1d90		VoC_sw16_d(REG1,0x7d0)(lo)	|	VoC_sw16_d(REG0,0x7d5)(hi)
0x150207D0,	//0x1d92		VoC_sw16_d(REG2,0x656)(lo)	|	VoC_sw16_d(REG1,0x7d0)(hi)
0xDF800656,	//0x1d94		VoC_pop16(REG0,DEFAULT)	|	VoC_sw16_d(REG2,0x656)(hi)
0xDFA9DF80,	//0x1d96		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x43801808,	//0x1d98		VoC_lw16i_set_inc(REG0,0x4380,0x2)
0x062E1809,	//0x1d9a		VoC_lw16i_set_inc(REG1,0x62e,0x2)
0xFFC0D9C4,	//0x1d9c		VoC_NAD	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C56944,	//0x1d9e		VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDDCC59C4,	//0x1da0		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1da2		VoC_endloop0
0xDDCD59C5,	//0x1da2		VoC_sw32inc_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xDFE9E580,	//0x1da4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1da5		CII_agcGain_opt
0x1E1A2B80,	//0x1da6		VoC_jal(CII_g_corr1s_new)
0x3304F006,	//0x1da8		VoC_bez32_r(agcGain_opt_END,ACC0)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x077F1DCE,	//0x1daa		VoC_add16_rd(REG7,REG7,0x8384)(lo)	|	VoC_bez32_r(agcGain_opt_END,ACC0)(hi)
0x09600384,	//0x1dac		VoC_add32_rd(REG01,ACC0,0x828a)(lo)	|	VoC_add16_rd(REG7,REG7,0x8384)(hi)
0xE1E0028A,	//0x1dae		VoC_movreg16(REG0,RL7_HI,DEFAULT)	|	VoC_add32_rd(REG01,ACC0,0x828a)(hi)
0xF808E1C5,	//0x1db0		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x019A2B80,	//0x1db2		VoC_jal(CII_DIV_S)
0x0BF42B80,	//0x1db4		VoC_jal(CII_norm_s_opt)
0xC240C379,	//0x1db6		VoC_sub16_rr(REG0,REG1,REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG7,DEFAULT)
0xE00E604F,	//0x1db8		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0x0BFF2B80,	//0x1dba		VoC_jal(CII_sqroot_opt)
0x0A87E0E6,	//0x1dbc		VoC_lw16i(REG7,0x7fff)(lo)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x48F87FFF,	//0x1dbe		VoC_blt16_rd(agcGain_opt_END,REG0,0xbb0a)(lo)	|	VoC_lw16i(REG7,0x7fff)(hi)
0x70253B0A,	//0x1dc0		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_blt16_rd(agcGain_opt_END,REG0,0xbb0a)(hi)
0xE429F601,	//0x1dc2		VoC_and16_rr(REG1,REG5,DEFAULT)	|	VoC_movreg16(REG1,REG0,IN_PARALLEL)
0x1DC83181,	//0x1dc4		VoC_bez16_r(agcGain_opt_new_man1,REG1)
0x025A08F6,	//0x1dc6		VoC_multf16_rd(REG6,REG6,0x825a)
		//0x1dc8		agcGain_opt_new_man1
0xC028F808,	//0x1dc8		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x1DCD3140,	//0x1dca		VoC_bngtz16_r(agcGain_opt_new_man2,REG0)
0xE0C7FE06,	//0x1dcc		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_shr16_rr(REG6,REG0,DEFAULT)
		//0x1dcd		agcGain_opt_new_man2
		//0x1dce		agcGain_opt_END
0xFFC0DFA9,	//0x1dce		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF0C1E580,	//0x1dd0		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_return
		//0x1dd1		CII_compute_s2_s3_new
0xC28D408C,	//0x1dd2		VoC_sub16_rr(REG5,REG2,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG1,DEFAULT)
0xC17D413C,	//0x1dd4		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x54F33C64,	//0x1dd6		VoC_bngt16_rd(COMPUTES2S3_S2LIMIT,REG4,0xd4f3)
0x01000A84,	//0x1dd8		VoC_lw16i(REG4,0x100)
		//0x1dda		COMPUTES2S3_S2LIMIT
0x1DDD3105,	//0x1dda		VoC_bgtz16_r(OPENLOOP415,REG5)
0xC32FF005,	//0x1ddc		VoC_sub16_rr(REG7,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x1ddd		OPENLOOP415
0x548E1847,	//0x1dde		VoC_lw16i_set_inc(REG3,0xd48e,0x1)
0x1806C0EB,	//0x1de0		VoC_lw16i_set_inc(REG2,0xf44,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x67C30F44,	//0x1de2		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xf44,0x1)(hi)
0xD8B4D8B4,	//0x1de4		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)
		//0x1de6		VoC_endloop0
0xE580DCA4,	//0x1de6		VoC_return	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x1de8		CII_fnBest_CG_new
0xDF4577E3,	//0x1de8		VoC_push32(ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0xffffffff,DEFAULT)
0x00001806,	//0x1dea		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xD88667D4,	//0x1dec		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x3146D897,	//0x1dee		VoC_bngtz16_r(FNBEST100,REG6)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x31471DFF,	//0x1df0		VoC_bngtz16_r(FNBEST100,REG7)(lo)	|	VoC_bngtz16_r(FNBEST100,REG6)(hi)
0xCDB41DFF,	//0x1df2		VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)	|	VoC_bngtz16_r(FNBEST100,REG7)(hi)
0x0964FFC0,	//0x1df4		VoC_add32_rd(ACC0,ACC0,0x828a)(lo)	|	VoC_NOP
0xE126028A,	//0x1df6		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x828a)(hi)
0xCDE54DAC,	//0x1df8		VoC_multf32_rr(ACC1,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x36A5FFC0,	//0x1dfa		VoC_bngt32_rr(FNBEST100,ACC0,ACC1)(lo)	|	VoC_NOP
0x7F1A1DFF,	//0x1dfc		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_bngt32_rr(FNBEST100,ACC0,ACC1)(hi)
0xDE10F643,	//0x1dfe		VoC_inc_p(REG2,DEFAULT)	|	VoC_movreg16(REG3,REG2,IN_PARALLEL)
		//0x1dff		FNBEST100
		//0x1e00		VoC_endloop0
0xDF05D886,	//0x1e00		VoC_pop32(ACC1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xF005E580,	//0x1e02		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_return
		//0x1e03		CII_r0BasedEnergyShft_new
0x3EE03D6C,	//0x1e04		VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbee0)
0x3D54F045,	//0x1e06		VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbd96)(lo)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xF0653D96,	//0x1e08		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbd96)(hi)
0x3D903CFC,	//0x1e0a		VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbd90)
0x3CE4F085,	//0x1e0c		VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbd99)(lo)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0xF0A53D99,	//0x1e0e		VoC_lw16i_short(REG5,0x5,DEFAULT)	|	VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbd99)(hi)
0x3DD63CCC,	//0x1e10		VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbdd6)
0x3C74F0C5,	//0x1e12		VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbdeb)(lo)	|	VoC_lw16i_short(REG5,0x6,DEFAULT)
0xF0E53DEB,	//0x1e14		VoC_lw16i_short(REG5,0x7,DEFAULT)	|	VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbdeb)(hi)
0x3E1D3C5C,	//0x1e16		VoC_bngt16_rd(R0Based_END_CASE,REG4,0xbe1d)
0xE580F105,	//0x1e18		VoC_return	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
		//0x1e19		R0Based_END_CASE
		//0x1e1a		CII_g_corr1s_new
0x6200DF41,	//0x1e1a		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x38CDFF44,	//0x1e1c		VoC_bgt16_rd(CII_g_corr1s1,REG5,0x8384)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xEA850384,	//0x1e1e		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_bgt16_rd(CII_g_corr1s1,REG5,0x8384)(hi)
0xD9C15983,	//0x1e20		VoC_lw32inc_p(REG23,REG0,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xFE2F7E2E,	//0x1e22		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
		//0x1e24		VoC_endloop0
0xE5CBCF32,	//0x1e24		VoC_jump(CII_g_corr1s2)	|	VoC_bimac32_rr(REG67,REG23)
		//0x1e26		CII_g_corr1s1
0x642CF024,	//0x1e26		VoC_and16_rr(REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x6A85F80D,	//0x1e28		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0xD9C3C165,	//0x1e2a		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0xFE2F7E2E,	//0x1e2c		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
		//0x1e2e		VoC_endloop0
0xF8FDCF36,	//0x1e2e		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
		//0x1e30		CII_g_corr1s2
0x3304F007,	//0x1e30		VoC_bez32_r(CII_g_corr1s3,ACC0)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDFE91E39,	//0x1e32		VoC_push16(RA,DEFAULT)	|	VoC_bez32_r(CII_g_corr1s3,ACC0)(hi)
0x01882B80,	//0x1e34		VoC_jal(CII_NORM_L_ACC0)
0x426FC1C9,	//0x1e36		VoC_sub16_rr(REG7,REG1,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG7,REG1,DEFAULT)
0xDF01DFA9,	//0x1e38		VoC_pop32(REG23,DEFAULT)	|	VoC_pop16(RA,IN_PARALLEL)
		//0x1e39		CII_g_corr1s3
0xF082E580,	//0x1e3a		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_return
		//0x1e3b		CII_findPeak_new
0xC3D541D4,	//0x1e3c		VoC_sub16_rr(REG5,REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG7,REG2,DEFAULT)
0x54993C64,	//0x1e3e		VoC_bngt16_rd(FINDPEAK100,REG4,0xd499)
0x008F0A84,	//0x1e40		VoC_lw16i(REG4,0x8f)
		//0x1e42		FINDPEAK100
0x3DD94C5D,	//0x1e42		VoC_bnlt16_rd(FINDPEAK101,REG5,0xbdd9)
0xC32FF285,	//0x1e44		VoC_sub16_rr(REG7,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x14,DEFAULT)
		//0x1e45		FINDPEAK101
0x0384077F,	//0x1e46		VoC_add16_rd(REG7,REG7,0x8384)
0xDFE95F42,	//0x1e48		VoC_push16(RA,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x3EE007EE,	//0x1e4a		VoC_sub16_rd(REG6,REG5,0xbee0)
0xC0714030,	//0x1e4c		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x0A85F004,	//0x1e4e		VoC_lw16i(REG5,0x3f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x2B80003F,	//0x1e50		VoC_jal(CII_fnBest_CG_new)(lo)	|	VoC_lw16i(REG5,0x3f)(hi)
0xDF021DE8,	//0x1e52		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CII_fnBest_CG_new)(hi)
0xF006DFA9,	//0x1e54		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x3B0440DB,	//0x1e56		VoC_be16_rd(FINDPEAKRETURN,REG3,0xbb04)
0x351CC0EB,	//0x1e58		VoC_be16_rr(FINDPEAKRETURN,REG3,REG4)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x351D1E61,	//0x1e5a		VoC_be16_rr(FINDPEAKRETURN,REG3,REG5)(lo)	|	VoC_be16_rr(FINDPEAKRETURN,REG3,REG4)(hi)
0x0A5B1E61,	//0x1e5c		VoC_multf32_rd(REG67,REG3,0xbab2)(lo)	|	VoC_be16_rr(FINDPEAKRETURN,REG3,REG5)(hi)
0xFFC03AB2,	//0x1e5e		VoC_NOP	|	VoC_multf32_rd(REG67,REG3,0xbab2)(hi)
0xE580F80E,	//0x1e60		VoC_return	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x1e61		FINDPEAKRETURN
		//0x1e62		CII_CGInterp_new
0xDF41DF43,	//0x1e62		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x3AAE076D,	//0x1e64		VoC_add16_rd(REG5,REG5,0xbaae)
0x1E832E09,	//0x1e66		VoC_loop_r(1,REG1)
0x035706C3,	//0x1e68		VoC_multf32inc_pd(REG67,REG0,0x8357)
0x028A14C4,	//0x1e6a		VoC_lw32_d(ACC0,0x828a)
0xF90E43EC,	//0x1e6c		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG7,REG5,DEFAULT)
0xDFC07F25,	//0x1e6e		VoC_push16(REG0,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xCD83F0C0,	//0x1e70		VoC_multf32_rr(REG67,REG6,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x6,DEFAULT)
0x542E185B,	//0x1e72		VoC_lw16i_set_inc(REG3,0xd42e,0x6)
0xC23FC8E3,	//0x1e74		VoC_sub16_rr(REG7,REG0,REG7,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0x6062C0FB,	//0x1e76		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x4020D908,	//0x1e78		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0xE8C1C061,	//0x1e7a		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
		//0x1e7c		VoC_endloop0
0xD4195410,	//0x1e7c		VoC_mac32inc_pp(REG3,REG1,IN_PARALLEL)	|	VoC_mac32inc_pp(REG2,REG0,DEFAULT)
0xFFC0D910,	//0x1e7e		VoC_NOP	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0xDC9BDC89,	//0x1e80		VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0xDD10DF80,	//0x1e82		VoC_sw32_sd(REG01,0x1,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
		//0x1e83		VoC_endloop1
0xDF03DF01,	//0x1e84		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDFC0E580,	//0x1e86		VoC_push16(REG0,DEFAULT)	|	VoC_return
		//0x1e87		CII_CGInterpValid_new
0x5FE9DF42,	//0x1e88		VoC_push16(RA,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x07FEDF41,	//0x1e8a		VoC_sub16_rd(REG6,REG7,0xbab2)(lo)	|	VoC_push32(REG23,IN_PARALLEL)
0xFFC03AB2,	//0x1e8c		VoC_NAD	|	VoC_sub16_rd(REG6,REG7,0xbab2)(hi)
0x0B542B80,	//0x1e8e		VoC_jal(CII_quantLag_opt_paris)
0x1E94351F,	//0x1e90		VoC_be16_rr(CGINTERPVALID100,REG3,REG7)
0x03840752,	//0x1e92		VoC_add16_rd(REG2,REG2,0x8384)
		//0x1e94		CGINTERPVALID100
0x3AB2077E,	//0x1e94		VoC_add16_rd(REG6,REG7,0xbab2)
0x2B80DFC2,	//0x1e96		VoC_jal(CII_quantLag_opt_paris)(lo)	|	VoC_push16(REG2,DEFAULT)
0xDF860B54,	//0x1e98		VoC_pop16(REG6,DEFAULT)	|	VoC_jal(CII_quantLag_opt_paris)(hi)
0x1E9E351F,	//0x1e9a		VoC_be16_rr(CGINTERPVALID101,REG3,REG7)
0x038407D2,	//0x1e9c		VoC_sub16_rd(REG2,REG2,0x8384)
		//0x1e9e		CGINTERPVALID101
0x0749C2B1,	//0x1e9e		VoC_add16_rd(REG1,REG1,0x8384)(lo)	|	VoC_sub16_rr(REG1,REG2,REG6,DEFAULT)
0x18470384,	//0x1ea0		VoC_lw16i_set_inc(REG3,0xd48e,0x1)(lo)	|	VoC_add16_rd(REG1,REG1,0x8384)(hi)
0xC0F3548E,	//0x1ea2		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xd48e,0x1)(hi)
0x6643D620,	//0x1ea4		VoC_loop_r_short(REG1,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xD8B6D8B6,	//0x1ea6		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)
		//0x1ea8		VoC_endloop0
0xD620DC86,	//0x1ea8		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x5F01F031,	//0x1eaa		VoC_pop32(REG23,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x5F03DA21,	//0x1eac		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_sd(REG1,0x1,IN_PARALLEL)
0x2B80E125,	//0x1eae		VoC_jal(CII_CGInterp_new)(lo)	|	VoC_lw16i_short(REG5,0x12,IN_PARALLEL)
0xDFA91E62,	//0x1eb0		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_CGInterp_new)(hi)
0xE580DF87,	//0x1eb2		VoC_return	|	VoC_pop16(REG7,DEFAULT)
		//0x1eb4		CII_bestDelta_new
0xC1755FE9,	//0x1eb4		VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xC0F340B2,	//0x1eb6		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xE0165FC5,	//0x1eb8		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xDF415FC4,	//0x1eba		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xDF405FC7,	//0x1ebc		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x2B80D844,	//0x1ebe		VoC_jal(CII_get_ipjj_opt_paris)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xD6240B66,	//0x1ec0		VoC_lw16_sd(REG4,0x1,DEFAULT)	|	VoC_jal(CII_get_ipjj_opt_paris)(hi)
0xC13CC3F7,	//0x1ec2		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0xD844FF01,	//0x1ec4		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0B662B80,	//0x1ec6		VoC_jal(CII_get_ipjj_opt_paris)
0x42FDF047,	//0x1ec8		VoC_sub16_rr(REG5,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x3180C07C,	//0x1eca		VoC_bez16_r(BESTDELTA100,REG0)(lo)	|	VoC_add16_rr(REG4,REG1,REG7,IN_PARALLEL)
0xC1341ECE,	//0x1ecc		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_bez16_r(BESTDELTA100,REG0)(hi)
		//0x1ece		BESTDELTA100
0x0F541804,	//0x1ece		VoC_lw16i_set_inc(REG0,0xf54,0x1)
0x47521805,	//0x1ed0		VoC_lw16i_set_inc(REG1,0x4752,0x1)
0xE1277006,	//0x1ed2		VoC_lw16i_short(REG7,0x12,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1ED831C2,	//0x1ed4		VoC_bnez16_r(BESTDELTA101,REG2)
0xDC965C86,	//0x1ed6		VoC_sw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x1ed8		BESTDELTA101
0xC37F432E,	//0x1ed8		VoC_sub16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG5,DEFAULT)
0x1EDE31C2,	//0x1eda		VoC_bnez16_r(BESTDELTA102,REG2)
0x038407ED,	//0x1edc		VoC_sub16_rd(REG5,REG5,0x8384)
		//0x1ede		BESTDELTA102
0xC0FBDF01,	//0x1ede		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x0776C0BA,	//0x1ee0		VoC_add16_rd(REG6,REG6,0x8384)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xD8B70384,	//0x1ee2		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x8384)(hi)
0xD8A66784,	//0x1ee4		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD8B758A6,	//0x1ee6		VoC_lw16inc_p(REG7,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
		//0x1ee8		VoC_endloop0
0xDC975C86,	//0x1ee8		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x0F54181A,	//0x1eea		VoC_lw16i_set_inc(REG2,0xf54,0x6)
0x47521807,	//0x1eec		VoC_lw16i_set_inc(REG3,0x4752,0x1)
0x0F6C0A86,	//0x1eee		VoC_lw16i(REG6,0xf6c)
0x476A0A87,	//0x1ef0		VoC_lw16i(REG7,0x476a)
0x5611D620,	//0x1ef2		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0x2B80DF43,	//0x1ef4		VoC_jal(CII_CGInterp_new)(lo)	|	VoC_push32(REG67,IN_PARALLEL)
0xDF011E62,	//0x1ef6		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(CII_CGInterp_new)(hi)
0x7032F033,	//0x1ef8		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x2B80DF87,	//0x1efa		VoC_jal(CII_maxCCOverGWithSign_opt_paris)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0xDF800BAA,	//0x1efc		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CII_maxCCOverGWithSign_opt_paris)(hi)
0x5F84DF01,	//0x1efe		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDFA9C008,	//0x1f00		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG1,IN_PARALLEL)
0xDC36D801,	//0x1f02		VoC_sw16_p(REG6,REG3,DEFAULT)	|	VoC_lw16_p(REG1,REG0,DEFAULT)
0xDC41DC27,	//0x1f04		VoC_sw16_p(REG1,REG4,DEFAULT)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0xC11CE580,	//0x1f06		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_return
		//0x1f07		CII_siCPeakIndex_save_new
0xC19EC15D,	//0x1f08		VoC_add16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xD8555844,	//0x1f0a		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xDC84D866,	//0x1f0c		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xDCA6DC95,	//0x1f0e		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDFE9E580,	//0x1f10		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f11		CII_pitchLags_new
0x476C152B,	//0x1f12		VoC_sw16_d(SP32,0x476c)
0x476D152A,	//0x1f14		VoC_sw16_d(SP16,0x476d)
0xDF405FC6,	//0x1f16		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xDF415FC5,	//0x1f18		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0x3AB20A62,	//0x1f1a		VoC_multf32_rd(REG45,REG4,0xbab2)
0x0F541804,	//0x1f1c		VoC_lw16i_set_inc(REG0,0xf54,0x1)
0xE087F80C,	//0x1f1e		VoC_movreg16(REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x0F600A84,	//0x1f20		VoC_lw16i(REG4,0xf60)
0x47520A85,	//0x1f22		VoC_lw16i(REG5,0x4752)
0xDF42DFC0,	//0x1f24		VoC_push32(REG45,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x1E872B80,	//0x1f26		VoC_jal(CII_CGInterpValid_new)
0xF004D908,	//0x1f28		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x003F0A85,	//0x1f2a		VoC_lw16i(REG5,0x3f)
0x1DE82B80,	//0x1f2c		VoC_jal(CII_fnBest_CG_new)
0x3203F006,	//0x1f2e		VoC_bltz16_r(PITCHLAGEXIT,REG3)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18042036,	//0x1f30		VoC_lw16i_set_inc(REG0,0xf7a,0x1)(lo)	|	VoC_bltz16_r(PITCHLAGEXIT,REG3)(hi)
0x18050F7A,	//0x1f32		VoC_lw16i_set_inc(REG1,0x475e,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xf7a,0x1)(hi)
0x1806475E,	//0x1f34		VoC_lw16i_set_inc(REG2,0xf6c,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x475e,0x1)(hi)
0x56160F6C,	//0x1f36		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xf6c,0x1)(hi)
0x5FC2D90A,	//0x1f38		VoC_push16(REG2,DEFAULT)	|	VoC_lw32_sd(REG45,0x0,IN_PARALLEL)
0x2B80DF40,	//0x1f3a		VoC_jal(CII_siCPeakIndex_save_new)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0xDFC21F07,	//0x1f3c		VoC_push16(REG2,DEFAULT)	|	VoC_jal(CII_siCPeakIndex_save_new)(hi)
0x3AEC0A73,	//0x1f3e		VoC_multf32_rd(REG67,REG6,0xbaec)
0x095BDF40,	//0x1f40		VoC_add32_rd(REG67,REG67,0x828a)(lo)	|	VoC_push32(REG01,DEFAULT)
0xF026028A,	//0x1f42		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x828a)(hi)
		//0x1f44		PITCHLAGS300
0x3D964867,	//0x1f44		VoC_blt16_rd(PITCHLAGS200_go,REG7,0xbd96)
0x57563C66,	//0x1f46		VoC_bngt16_rd(PITCHLAGS200_no,REG6,0xd756)
		//0x1f48		PITCHLAGS200_go
0x1F782B00,	//0x1f48		VoC_jump_lg(PITCHLAGS200)
		//0x1f4a		PITCHLAGS200_no
0xDF43D920,	//0x1f4a		VoC_push32(REG67,DEFAULT)	|	VoC_lw32_sd(REG01,0x3,DEFAULT)
0x1E3B2B80,	//0x1f4c		VoC_jal(CII_findPeak_new)
0x1F683186,	//0x1f4e		VoC_bez16_r(PITCHLAGS400,REG6)
0xD92960C7,	//0x1f50		VoC_lw32_sd(REG23,0x4,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xD9225630,	//0x1f52		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x2B80F0D2,	//0x1f54		VoC_jal(CII_CGInterpValid_new)(lo)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0xD9201E87,	//0x1f56		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_jal(CII_CGInterpValid_new)(hi)
0xD6447032,	//0x1f58		VoC_lw16_sd(REG4,0x3,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x40000A85,	//0x1f5a		VoC_lw16i(REG5,0x4000)
0x1DE82B80,	//0x1f5c		VoC_jal(CII_fnBest_CG_new)
0x1F683203,	//0x1f5e		VoC_bltz16_r(PITCHLAGS400,REG3)
0xD9225636,	//0x1f60		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0xD9105612,	//0x1f62		VoC_lw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x1F072B80,	//0x1f64		VoC_jal(CII_siCPeakIndex_save_new)
0xDD105A12,	//0x1f66		VoC_sw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x0,DEFAULT)
		//0x1f68		PITCHLAGS400
0x0AC5DF01,	//0x1f68		VoC_lw16i(REG5,0xbaec)(lo)	|	VoC_pop32(REG23,DEFAULT)
0xC1553AEC,	//0x1f6a		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_lw16i(REG5,0xbaec)(hi)
0x57564CC2,	//0x1f6c		VoC_bnlt16_rd(PITCHLAGS500,REG2,0xd756)
0x0F6C062B,	//0x1f6e		VoC_multf32_pd(REG67,REG5,0xf6c)
0x095BFFC0,	//0x1f70		VoC_add32_rd(REG67,REG67,0x828a)(lo)	|	VoC_NOP
0xFFC0028A,	//0x1f72		VoC_NAD	|	VoC_add32_rd(REG67,REG67,0x828a)(hi)
		//0x1f74		PITCHLAGS500
0x03840756,	//0x1f74		VoC_add16_rd(REG6,REG2,0x8384)
0x1F442B00,	//0x1f76		VoC_jump_lg(PITCHLAGS300)
		//0x1f78		PITCHLAGS200
0xF0A5D612,	//0x1f78		VoC_lw16i_short(REG5,0x5,DEFAULT)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0x038407D2,	//0x1f7a		VoC_sub16_rd(REG2,REG2,0x8384)
0x007E0A84,	//0x1f7c		VoC_lw16i(REG4,0x7e)
0x03540A83,	//0x1f7e		VoC_lw16i(REG3,0x354)
0xDFC48156,	//0x1f80		VoC_push16(REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG5,REG2,DEFAULT)
0x1F8534B3,	//0x1f82		VoC_bngt16_rr(PITCHLAGS700,REG6,REG3)
0xB8AFE066,	//0x1f84		VoC_sub16_pr(REG7,REG2,REG5,DEFAULT)	|	VoC_movreg16(REG6,REG3,DEFAULT)
		//0x1f85		PITCHLAGS700
0x1F8934A7,	//0x1f86		VoC_bngt16_rr(PITCHLAGS800,REG4,REG7)
0xC3B9E087,	//0x1f88		VoC_sub16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_movreg16(REG7,REG4,DEFAULT)
		//0x1f89		PITCHLAGS800
0xD64060E2,	//0x1f8a		VoC_lw16_sd(REG0,0x3,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0xE641DE08,	//0x1f8c		VoC_loop_r_short(REG1,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
		//0x1f8e		VoC_endloop0
0xDE105C82,	//0x1f8e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0x5640F0D2,	//0x1f90		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x7245D921,	//0x1f92		VoC_lw16i_short(REG5,0x12,DEFAULT)	|	VoC_lw32_sd(REG23,0x3,IN_PARALLEL)
0xDFC1D91B,	//0x1f94		VoC_push16(REG1,DEFAULT)	|	VoC_lw32_sd(REG67,0x2,IN_PARALLEL)
0x1E622B80,	//0x1f96		VoC_jal(CII_CGInterp_new)
0xD9185F87,	//0x1f98		VoC_lw32_sd(REG01,0x2,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x0A85F004,	//0x1f9a		VoC_lw16i(REG5,0x3f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x2B80003F,	//0x1f9c		VoC_jal(CII_fnBest_CG_new)(lo)	|	VoC_lw16i(REG5,0x3f)(hi)
0xF0041DE8,	//0x1f9e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jal(CII_fnBest_CG_new)(hi)
0x003F0A85,	//0x1fa0		VoC_lw16i(REG5,0x3f)
0x1FAD3203,	//0x1fa2		VoC_bltz16_r(PITCHLAGSYOU,REG3)
0xD91A5646,	//0x1fa4		VoC_lw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x3,DEFAULT)
0xC15D411C,	//0x1fa6		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xD844C19E,	//0x1fa8		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0xD855D866,	//0x1faa		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xD610DA16,	//0x1fac		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
		//0x1fad		PITCHLAGSYOU
0x0A43F8F8,	//0x1fae		VoC_multf32_rd(REG67,REG0,0x8357)(lo)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xDF420357,	//0x1fb0		VoC_push32(REG45,DEFAULT)	|	VoC_multf32_rd(REG67,REG0,0x8357)(hi)
0x028A095B,	//0x1fb2		VoC_add32_rd(REG67,REG67,0x828a)
		//0x1fb4		PITCHLAGSSTART
0x54983C67,	//0x1fb4		VoC_bngt16_rd(PITCHLAGSYIYI_go,REG7,0xd498)
0x1FE02B00,	//0x1fb6		VoC_jump_lg(PITCHLAGSYIYI)
		//0x1fb8		PITCHLAGSYIYI_go
0xDFC05928,	//0x1fb8		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x4,DEFAULT)
0x1E3B2B80,	//0x1fba		VoC_jal(CII_findPeak_new)
0x1FD63186,	//0x1fbc		VoC_bez16_r(PITCHLAGSDA400,REG6)
0xD92960C7,	//0x1fbe		VoC_lw32_sd(REG23,0x4,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xD9225650,	//0x1fc0		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x2B80F0D2,	//0x1fc2		VoC_jal(CII_CGInterpValid_new)(lo)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0xD9201E87,	//0x1fc4		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_jal(CII_CGInterpValid_new)(hi)
0xD6647032,	//0x1fc6		VoC_lw16_sd(REG4,0x5,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x40000A85,	//0x1fc8		VoC_lw16i(REG5,0x4000)
0x1DE82B80,	//0x1fca		VoC_jal(CII_fnBest_CG_new)
0x1FD63203,	//0x1fcc		VoC_bltz16_r(PITCHLAGSDA400,REG3)
0xD9225656,	//0x1fce		VoC_lw32_sd(REG45,0x3,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x4,DEFAULT)
0xD9105632,	//0x1fd0		VoC_lw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0x1F072B80,	//0x1fd2		VoC_jal(CII_siCPeakIndex_save_new)
0xDD105A32,	//0x1fd4		VoC_sw32_sd(REG01,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x2,DEFAULT)
		//0x1fd6		PITCHLAGSDA400
0xD611DF80,	//0x1fd6		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x0A43C008,	//0x1fd8		VoC_multf32_rd(REG67,REG0,0x8357)(lo)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0xFFC00357,	//0x1fda		VoC_NOP	|	VoC_multf32_rd(REG67,REG0,0x8357)(hi)
0x028A095B,	//0x1fdc		VoC_add32_rd(REG67,REG67,0x828a)
0x1FB42B00,	//0x1fde		VoC_jump_lg(PITCHLAGSSTART)
		//0x1fe0		PITCHLAGSYIYI
0xE002DF00,	//0x1fe0		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x0BF42B80,	//0x1fe2		VoC_jal(CII_norm_s_opt)
0x0A54E003,	//0x1fe4		VoC_multf32_rd(ACC0,REG2,0x83ad)(lo)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xE02203AD,	//0x1fe6		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG2,0x83ad)(hi)
0x0BF42B80,	//0x1fe8		VoC_jal(CII_norm_s_opt)
0x0962FA0C,	//0x1fea		VoC_add32_rd(REG45,ACC0,0x828a)(lo)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xC21B028A,	//0x1fec		VoC_sub16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_add32_rd(REG45,ACC0,0x828a)(hi)
0xF64160A0,	//0x1fee		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x019A2B80,	//0x1ff0		VoC_jal(CII_DIV_S)
0x3243F006,	//0x1ff2		VoC_bnltz16_r(PITCHLAGSSUN,REG3)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xFE1A1FF6,	//0x1ff4		VoC_shr16_rr(REG2,REG3,DEFAULT)	|	VoC_bnltz16_r(PITCHLAGSSUN,REG3)(hi)
		//0x1ff6		PITCHLAGSSUN
0x3143F030,	//0x1ff6		VoC_bngtz16_r(PITCHLAGSDAO,REG3)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x70252000,	//0x1ff8		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bngtz16_r(PITCHLAGSDAO,REG3)(hi)
0xC2ECF641,	//0x1ffa		VoC_sub16_rr(REG4,REG3,REG5,DEFAULT)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0xFE1A7E21,	//0x1ffc		VoC_shr16_rr(REG2,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG4,DEFAULT)
0xC08AE429,	//0x1ffe		VoC_add16_rr(REG2,REG2,REG1,DEFAULT)	|	VoC_and16_rr(REG1,REG5,DEFAULT)
		//0x2000		PITCHLAGSDAO
0xD630D621,	//0x2000		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xDFC2C247,	//0x2002		VoC_push16(REG2,DEFAULT)	|	VoC_sub16_rr(REG7,REG1,REG0,DEFAULT)
0x2E39DF43,	//0x2004		VoC_loop_r(1,REG7)(lo)	|	VoC_push32(REG67,DEFAULT)
0xD9182031,	//0x2006		VoC_lw32_sd(REG01,0x2,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x0A85F004,	//0x2008		VoC_lw16i(REG5,0x3f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x2B80003F,	//0x200a		VoC_jal(CII_fnBest_CG_new)(lo)	|	VoC_lw16i(REG5,0x3f)(hi)
0xD6401DE8,	//0x200c		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_jal(CII_fnBest_CG_new)(hi)
0xF004C018,	//0x200e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0xD90B5805,	//0x2010		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0x4018D918,	//0x2012		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0xD670C059,	//0x2014		VoC_lw16_sd(REG0,0x6,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0xF003DF40,	//0x2016		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x20203146,	//0x2018		VoC_bngtz16_r(PITCHLAGSKIPLOOP,REG6)
0xD8816785,	//0x201a		VoC_lw16inc_p(REG1,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x201F358D,	//0x201c		VoC_bne16_rr(PITCHLAG_FLAG_TO_1,REG1,REG5)
0xD881F023,	//0x201e		VoC_lw16inc_p(REG1,REG0,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x201f		PITCHLAG_FLAG_TO_1
		//0x201f		VoC_endloop0
		//0x2020		PITCHLAGSKIPLOOP
0x31C3DF00,	//0x2020		VoC_bnez16_r(PITCHLAGNIU,REG3)(lo)	|	VoC_pop32(REG01,DEFAULT)
0xD674202F,	//0x2022		VoC_lw16_sd(REG4,0x6,DEFAULT)	|	VoC_bnez16_r(PITCHLAGNIU,REG3)(hi)
0xD931C134,	//0x2024		VoC_lw32_sd(REG23,0x5,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC0F340B2,	//0x2026		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xD804DC45,	//0x2028		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_sw16_p(REG5,REG4,DEFAULT)
0xDC24D815,	//0x202a		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x0776DC35,	//0x202c		VoC_add16_rd(REG6,REG6,0x8384)(lo)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
0xF0040384,	//0x202e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x8384)(hi)
		//0x202f		PITCHLAGNIU
0xDC04DD0B,	//0x2030		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_sw32_sd(REG67,0x0,DEFAULT)
		//0x2031		VoC_endloop1
0xDF025F87,	//0x2032		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xFFC0DF86,	//0x2034		VoC_NAD	|	VoC_pop16(REG6,DEFAULT)
		//0x2036		PITCHLAGEXIT
0x476D142A,	//0x2036		VoC_lw16_d(SP16,0x476d)
0x476C142B,	//0x2038		VoC_lw16_d(SP32,0x476c)
0xE085DFA9,	//0x203a		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x203c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x203d		CII_openLoopLagSearch_new
0x45BE152B,	//0x203e		VoC_sw16_d(SP32,0x45be)
0x45BF152A,	//0x2040		VoC_sw16_d(SP16,0x45bf)
0xDF415FC6,	//0x2042		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xDF425FC7,	//0x2044		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x2B80E024,	//0x2046		VoC_jal(CII_r0BasedEnergyShft_new)(lo)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0xE0041E03,	//0x2048		VoC_movreg16(REG4,REG0,DEFAULT)	|	VoC_jal(CII_r0BasedEnergyShft_new)(hi)
0xFFC0DFC5,	//0x204a		VoC_NAD	|	VoC_push16(REG5,DEFAULT)
0x1E032B80,	//0x204c		VoC_jal(CII_r0BasedEnergyShft_new)
0x08E71808,	//0x204e		VoC_lw16i_set_inc(REG0,0x8e7,0x2)
0x08241806,	//0x2050		VoC_lw16i_set_inc(REG2,0x824,0x1)
0x081C180B,	//0x2052		VoC_lw16i_set_inc(REG3,0x81c,0x2)
0x20612C09,	//0x2054		VoC_loop_i(0x1,0x4)
0x1E1A2B80,	//0x2056		VoC_jal(CII_g_corr1s_new)
0x3AAE07C0,	//0x2058		VoC_sub16_rd(REG0,REG0,0xbaae)
0x028A0962,	//0x205a		VoC_add32_rd(REG45,ACC0,0x828a)
0xDCA5D824,	//0x205c		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xDCA7D825,	//0x205e		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw16_p(REG5,REG2,DEFAULT)
0xD615DDDA,	//0x2060		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
		//0x2061		VoC_endloop1
0x081C1808,	//0x2062		VoC_lw16i_set_inc(REG0,0x81c,0x2)
0xD9C2FF43,	//0x2064		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32z(REG67,DEFAULT)
0xFF44690D,	//0x2066		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x20733144,	//0x2068		VoC_bngtz16_r(OPENLOOP_LOOP,REG4)
0x20723186,	//0x206a		VoC_bez16_r(OPENLOOP_MOVE,REG6)
0x2072343D,	//0x206c		VoC_bgt16_rr(OPENLOOP_MOVE,REG7,REG5)
0x207335BD,	//0x206e		VoC_bne16_rr(OPENLOOP_LOOP,REG7,REG5)
0x207334A6,	//0x2070		VoC_bngt16_rr(OPENLOOP_LOOP,REG4,REG6)
		//0x2072		OPENLOOP_MOVE
0xD9C2FF13,	//0x2072		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
		//0x2073		OPENLOOP_LOOP
		//0x2073		VoC_endloop0
0x0B7FF80F,	//0x2074		VoC_sub16_dr(REG7,0x8384,REG7)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0x18090384,	//0x2076		VoC_lw16i_set_inc(REG1,0xde8,0x2)(lo)	|	VoC_sub16_dr(REG7,0x8384,REG7)(hi)
0x18080DE8,	//0x2078		VoC_lw16i_set_inc(REG0,0x856,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0xde8,0x2)(hi)
0xDA110856,	//0x207a		VoC_sw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x856,0x2)(hi)
0xFF4559C2,	//0x207c		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x20832D32,	//0x207e		VoC_loop_i(0x0,0x99)
0xFE3D7E3C,	//0x2080		VoC_shr16_rr(REG5,REG7,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG7,DEFAULT)
0xDDCAD9C2,	//0x2082		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x2083		VoC_endloop0
0xEA81D610,	//0x2084		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
		//0x2086		VoC_endloop0
0x1FBED500,	//0x2086		VoC_lw16i_set_inc(REG2,0xde7,0xffffffff)(lo)	|	VoC_bimac32inc_pp(REG0,REG0)
0x18090DE7,	//0x2088		VoC_lw16i_set_inc(REG1,0xe10,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0xde7,0xffffffff)(hi)
0xD6100E10,	//0x208a		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xe10,0x2)(hi)
0x20952CF8,	//0x208c		VoC_loop_i(0x0,0x7c)
0xD5005480,	//0x208e		VoC_msu32inc_pp(REG0,REG0,IN_PARALLEL)	|	VoC_msu32inc_pp(REG0,REG0,DEFAULT)
0xD4095409,	//0x2090		VoC_mac32inc_pp(REG1,REG1,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG1,DEFAULT)
0x7F45DCA9,	//0x2092		VoC_lw32z(ACC1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0xDCA9C92C,	//0x2094		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
		//0x2095		VoC_endloop0
0x0D561EA0,	//0x2096		VoC_lw16i_set_inc(REG0,0xd56,0xffffffd8)
0x45B21805,	//0x2098		VoC_lw16i_set_inc(REG1,0x45b2,0x1)
0x0EF1180A,	//0x209a		VoC_lw16i_set_inc(REG2,0xef1,0x2)
0xDFC1DA11,	//0x209c		VoC_push16(REG1,DEFAULT)	|	VoC_sw16_sd(REG1,0x0,DEFAULT)
0xD8866863,	//0x209e		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC96D886,	//0x20a0		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x20a1		VoC_endloop0
0xFF446212,	//0x20a2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG2,DEFAULT)
0xD512EA81,	//0x20a4		VoC_bimac32inc_pp(REG2,REG2)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x20a5		VoC_endloop0
0x0DE8180A,	//0x20a6		VoC_lw16i_set_inc(REG2,0xde8,0x2)
0x4620180B,	//0x20a8		VoC_lw16i_set_inc(REG3,0x4620,0x2)
0x2D32D9D5,	//0x20aa		VoC_loop_i(0x0,0x99)(lo)	|	VoC_lw32inc_p(ACC1,REG2,DEFAULT)
0xD9D520AE,	//0x20ac		VoC_lw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x99)(hi)
		//0x20ae		VoC_endloop0
0x1806DDDD,	//0x20ae		VoC_lw16i_set_inc(REG2,0x43b2,0x1)(lo)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0xF02643B2,	//0x20b0		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x43b2,0x1)(hi)
0x00280A83,	//0x20b2		VoC_lw16i(REG3,0x28)
0x1808DC19,	//0x20b4		VoC_lw16i_set_inc(REG0,0xe79,0x2)(lo)	|	VoC_sw16_p(ACC0_HI,REG1,DEFAULT)
0x18090E79,	//0x20b6		VoC_lw16i_set_inc(REG1,0x469f,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xe79,0x2)(hi)
0xF007469F,	//0x20b8		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x469f,0x2)(hi)
		//0x20ba		OPENLOOP302
0xFFC0DF40,	//0x20ba		VoC_NAD	|	VoC_push32(REG01,DEFAULT)
0x20C62D01,	//0x20bc		VoC_loop_i(0x1,0x80)
0xF6044275,	//0x20be		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG1,REG6,DEFAULT)
0x6A82E201,	//0x20c0		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD501FF44,	//0x20c2		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x20c3		VoC_endloop0
0xFF10FFC0,	//0x20c4		VoC_movreg32(REG01,REG45,DEFAULT)	|	VoC_NOP
		//0x20c6		VoC_endloop1
0x5F00DCA9,	//0x20c6		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0x4018C1F7,	//0x20c8		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG6,IN_PARALLEL)
0x3EFFC059,	//0x20ca		VoC_bngt16_rd(OPENLOOP302,REG7,0xbaaf)(lo)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0x18063AAF,	//0x20cc		VoC_lw16i_set_inc(REG2,0x45b6,0x1)(lo)	|	VoC_bngt16_rd(OPENLOOP302,REG7,0xbaaf)(hi)
0x180745B6,	//0x20ce		VoC_lw16i_set_inc(REG3,0x45ba,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x45b6,0x1)(hi)
0x180445BA,	//0x20d0		VoC_lw16i_set_inc(REG0,0x43b5,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x45ba,0x1)(hi)
0x180543B5,	//0x20d2		VoC_lw16i_set_inc(REG1,0xd6b,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x43b5,0x1)(hi)
0x5FC30D6B,	//0x20d4		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xd6b,0x1)(hi)
0x7007DF41,	//0x20d6		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0xDF40D653,	//0x20d8		VoC_push32(REG01,DEFAULT)	|	VoC_lw16_sd(REG3,0x4,IN_PARALLEL)
0xDFC75F41,	//0x20da		VoC_push16(REG7,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x21512C09,	//0x20dc		VoC_loop_i(0x1,0x4)
0x0A85F004,	//0x20de		VoC_lw16i(REG5,0x3f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x0A87003F,	//0x20e0		VoC_lw16i(REG7,0x7a)(lo)	|	VoC_lw16i(REG5,0x3f)(hi)
0x2B80007A,	//0x20e2		VoC_jal(CII_fnBest_CG_new)(lo)	|	VoC_lw16i(REG7,0x7a)(hi)
0xDF001DE8,	//0x20e4		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_fnBest_CG_new)(hi)
0xE1577006,	//0x20e6		VoC_lw16i_short(REG7,0x15,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x20EC3203,	//0x20e8		VoC_bltz16_r(OPENLOOP303,REG3)
0xC0FFC0FE,	//0x20ea		VoC_add16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG7,DEFAULT)
		//0x20ec		OPENLOOP303
0xDC97DC86,	//0x20ec		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xE0035F40,	//0x20ee		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x21453186,	//0x20f0		VoC_bez16_r(OPENLOOP305_bis,REG6)
0x7FFF0A82,	//0x20f2		VoC_lw16i(REG2,0x7fff)
0x20FA34AC,	//0x20f4		VoC_bngt16_rr(OPENLOOP304,REG5,REG4)
0xD6137F10,	//0x20f6		VoC_lw16_sd(REG3,0x0,IN_PARALLEL)	|	VoC_movreg32(REG01,REG45,DEFAULT)
0x019A2B80,	//0x20f8		VoC_jal(CII_DIV_S)
		//0x20fa		OPENLOOP304
0xD633C0D3,	//0x20fa		VoC_lw16_sd(REG3,0x2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xE0065A13,	//0x20fc		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG3,0x0,DEFAULT)
0x99586087,	//0x20fe		VoC_multf32_rp(REG01,REG5,REG3,IN_PARALLEL)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0x00210A89,	//0x2100		VoC_lw16i(ACC0_HI,0x21)
0x32C3CA1B,	//0x2102		VoC_bngtz32_r(GETCCTHRESHOLD101,REG67)(lo)	|	VoC_sub32_rr(REG67,REG01,REG67,DEFAULT)
0xE0E0210B,	//0x2104		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_bngtz32_r(GETCCTHRESHOLD101,REG67)(hi)
0x019A2B80,	//0x2106		VoC_jal(CII_DIV_S)
0x3AF23C5A,	//0x2108		VoC_bngt16_rd(GETCCTHRESHOLD101,REG2,0xbaf2)
0xF008E049,	//0x210a		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
		//0x210b		GETCCTHRESHOLD101
0x01882B80,	//0x210c		VoC_jal(CII_NORM_L_ACC0)
0xCC93E122,	//0x210e		VoC_multf32_rr(REG67,REG2,REG2,DEFAULT)	|	VoC_movreg16(REG2,ACC0_HI,DEFAULT)
0x382A0B49,	//0x2110		VoC_sub16_dr(REG1,0xb82a,REG1)
0x028A095B,	//0x2112		VoC_add32_rd(REG67,REG67,0x828a)
0xE00E78B1,	//0x2114		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff6,DEFAULT)
0x2B300ACF,	//0x2116		VoC_lw16i(RL7_HI,0xffffab30)
0x54D60AC0,	//0x2118		VoC_lw16i(REG0,0xffffd4d6)
0x0E50CDC4,	//0x211a		VoC_mac32_rd(REG2,0x81f1)(lo)	|	VoC_multf32_rr(ACC0,REG7,REG0,DEFAULT)
0xF00001F1,	//0x211c		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_mac32_rd(REG2,0x81f1)(hi)
0x7A1CC93C,	//0x211e		VoC_shr32_ri(ACC0,0x3,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0x0A8FEFFE,	//0x2120		VoC_lw16i(RL7_HI,0x3ff)(lo)	|	VoC_lw16i_short(RL7_LO,0xffffffff,IN_PARALLEL)
0xE4FC03FF,	//0x2122		VoC_and32_rr(ACC0,RL7,DEFAULT)	|	VoC_lw16i(RL7_HI,0x3ff)(hi)
0x0960C904,	//0x2124		VoC_add32_rd(REG01,ACC0,0x828a)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x0A48028A,	//0x2126		VoC_multf32_rd(REG01,REG1,0x8365)(lo)	|	VoC_add32_rd(REG01,ACC0,0x828a)(hi)
0xFFC00365,	//0x2128		VoC_NOP	|	VoC_multf32_rd(REG01,REG1,0x8365)(hi)
0x3EFA0A48,	//0x212a		VoC_multf32_rd(REG01,REG1,0xbefa)
0x42CBF7E3,	//0x212c		VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0xffffffff,DEFAULT)
0xFA08EFF1,	//0x212e		VoC_shr32_ri(REG01,0x1,DEFAULT)	|	VoC_lw16i_short(REG1,0xffffffff,IN_PARALLEL)
0x1846CC02,	//0x2130		VoC_lw16i_set_inc(REG2,0xbae8,0x1)(lo)	|	VoC_multf32_rr(REG45,REG0,REG0,DEFAULT)
0x09523AE8,	//0x2132		VoC_add32_rd(REG45,REG45,0x828a)(lo)	|	VoC_lw16i_set_inc(REG2,0xbae8,0x1)(hi)
0x9B54028A,	//0x2134		VoC_multf32inc_rp(ACC0,REG5,REG2,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x828a)(hi)
0x58A5D102,	//0x2136		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG0,REG2,DEFAULT)
0xC910E004,	//0x2138		VoC_add32_rr(REG01,ACC0,REG45,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x3143D632,	//0x213a		VoC_bngtz16_r(FNEXP100,REG3)(lo)	|	VoC_lw16_sd(REG2,0x2,DEFAULT)
0xFE98213E,	//0x213c		VoC_shr32_rr(REG01,REG3,DEFAULT)	|	VoC_bngtz16_r(FNEXP100,REG3)(hi)
		//0x213e		FNEXP100
0xCD48D8A5,	//0x213e		VoC_multf32_rr(REG01,REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xCA80DA32,	//0x2140		VoC_sub32_rr(REG01,REG45,REG01,DEFAULT)	|	VoC_sw16_sd(REG2,0x2,DEFAULT)
0xE023FA08,	//0x2142		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
0xD631E5C5,	//0x2144		VoC_lw16_sd(REG1,0x2,DEFAULT)	|	VoC_jump(OPENLOOP305)
		//0x2145		OPENLOOP305_bis
0xDE08FFC0,	//0x2146		VoC_inc_p(REG1,DEFAULT)	|	VoC_NOP
0xD622DA31,	//0x2148		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_sw16_sd(REG1,0x2,DEFAULT)
		//0x2149		OPENLOOP305
0x0740D910,	//0x214a		VoC_add16_rd(REG0,REG0,0xd48f)(lo)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0x07C9548F,	//0x214c		VoC_sub16_rd(REG1,REG1,0xbd92)(lo)	|	VoC_add16_rd(REG0,REG0,0xd48f)(hi)
0x5CA33D92,	//0x214e		VoC_sw16inc_p(REG3,REG2,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0xbd92)(hi)
0x5A22F005,	//0x2150		VoC_sw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
		//0x2151		VoC_endloop1
0x5641DD10,	//0x2152		VoC_lw16_sd(REG1,0x3,DEFAULT)	|	VoC_sw32_sd(REG01,0x1,IN_PARALLEL)
0x0AC6FF44,	//0x2154		VoC_lw16i(REG6,0xffffd68a)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xE881568A,	//0x2156		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i(REG6,0xffffd68a)(hi)
		//0x2158		VoC_endloop0
0x7006D131,	//0x2158		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xC8E4DF87,	//0x215a		VoC_add32_rr(ACC0,REG67,ACC0,DEFAULT)	|	VoC_pop16(REG7,IN_PARALLEL)
0xDA56DA26,	//0x215c		VoC_sw16_sd(REG6,0x4,DEFAULT)	|	VoC_sw16_sd(REG6,0x1,DEFAULT)
0xDFC6DFC6,	//0x215e		VoC_push16(REG6,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x0F1A0A86,	//0x2160		VoC_lw16i(REG6,0xf1a)
0x0F281804,	//0x2162		VoC_lw16i_set_inc(REG0,0xf28,0x1)
0x0F361805,	//0x2164		VoC_lw16i_set_inc(REG1,0xf36,0x1)
0x43B2181A,	//0x2166		VoC_lw16i_set_inc(REG2,0x43b2,0x6)
0x0D681807,	//0x2168		VoC_lw16i_set_inc(REG3,0xd68,0x1)
0x00000AC7,	//0x216a		VoC_lw16i(REG7,0x8000)
0xDD085A36,	//0x216c		VoC_sw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x2,DEFAULT)
0xD6645D11,	//0x216e		VoC_lw16_sd(REG4,0x5,IN_PARALLEL)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
0x32C4DA67,	//0x2170		VoC_bngtz32_r(OPENLOOPUNVOICED,ACC0)(lo)	|	VoC_sw16_sd(REG7,0x5,DEFAULT)
0x318422A4,	//0x2172		VoC_bez16_r(OPENLOOPUNVOICED,REG4)(lo)	|	VoC_bngtz32_r(OPENLOOPUNVOICED,ACC0)(hi)
0xD91A22A4,	//0x2174		VoC_lw32_sd(REG45,0x2,DEFAULT)	|	VoC_bez16_r(OPENLOOPUNVOICED,REG4)(hi)
		//0x2175		OPENLOOPPITCHLAGLOOPSTART
0xD844F0D2,	//0x2176		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x3184D855,	//0x2178		VoC_bez16_r(OPENLOOP403,REG4)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x2B80217F,	//0x217a		VoC_jal(CII_pitchLags_new)(lo)	|	VoC_bez16_r(OPENLOOP403,REG4)(hi)
0xF0041F11,	//0x217c		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jal(CII_pitchLags_new)(hi)
0xF005E5C2,	//0x217e		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jump(OPENLOOP403BIS)
		//0x217f		OPENLOOP403
		//0x2180		OPENLOOP403BIS
0x5920DA14,	//0x2180		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_sw16_sd(REG4,0x0,DEFAULT)
0x4020D644,	//0x2182		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x3,IN_PARALLEL)
0x31C5C061,	//0x2184		VoC_bnez16_r(OPENLOOP404,REG5)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xF007218A,	//0x2186		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bnez16_r(OPENLOOP404,REG5)(hi)
0x007E0A86,	//0x2188		VoC_lw16i(REG6,0x7e)
		//0x218a		OPENLOOP404
0xDC06DC17,	//0x218a		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0x22473185,	//0x218c		VoC_bez16_r(OPENLOOPCONTINUE,REG5)
0x3AAE3C65,	//0x218e		VoC_bngt16_rd(OPENLOOPWHILESTART,REG5,0xbaae)
0xFFC0F045,	//0x2190		VoC_NAD	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
		//0x2192		OPENLOOPWHILESTART
0x22473185,	//0x2192		VoC_bez16_r(OPENLOOPWHILEEND,REG5)
0xD637F021,	//0x2194		VoC_lw16_sd(REG7,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x45C01812,	//0x2196		VoC_lw16i_set_inc(REG2,0x45c0,0x4)
0xD61640A2,	//0x2198		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xD62341BF,	//0x219a		VoC_lw16_sd(REG3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG6,REG7,DEFAULT)
0x21AE3143,	//0x219c		VoC_bngtz16_r(OPENLOOPNOTSI1,REG3)
0xD871E6C6,	//0x219e		VoC_lw16_p(REG1,REG7,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xE0110650,	//0x21a0		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_sub16inc_rp(REG0,REG1,REG2,DEFAULT)
0x21A73180,	//0x21a2		VoC_bez16_r(OPENLOOPSI1,REG0)
		//0x21a4		VoC_endloop0
0xF032FFC0,	//0x21a4		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_NAD
0xC34DE5C8,	//0x21a6		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_jump(OPENLOOPNOTSI1)
		//0x21a7		OPENLOOPSI1
0x3185C18E,	//0x21a8		VoC_bez16_r(OPENLOOPWHILEEND,REG5)(lo)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xDA162247,	//0x21aa		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_bez16_r(OPENLOOPWHILEEND,REG5)(hi)
0xFFC0E5E6,	//0x21ac		VoC_NAD	|	VoC_jump(OPENLOOPWHILESTART)
		//0x21ae		OPENLOOPNOTSI1
0xC2A15877,	//0x21ae		VoC_sub16_rr(REG1,REG2,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xDFC1D908,	//0x21b0		VoC_push16(REG1,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xC03078F3,	//0x21b2		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffe,DEFAULT)
0xDC274071,	//0x21b4		VoC_sw16_p(REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x45E00A86,	//0x21b6		VoC_lw16i(REG6,0x45e0)
0x46000A87,	//0x21b8		VoC_lw16i(REG7,0x4600)
0xC19E5811,	//0x21ba		VoC_add16_rr(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xC1DF1C05,	//0x21bc		VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_multf32_pp(ACC1,REG0,REG0,DEFAULT)
0xC1E741A6,	//0x21be		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xDFC5DF43,	//0x21c0		VoC_push16(REG5,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x028A096D,	//0x21c2		VoC_add32_rd(ACC1,ACC1,0x828a)
0xDC71D918,	//0x21c4		VoC_sw16_p(REG1,REG7,DEFAULT)	|	VoC_lw32_sd(REG01,0x2,DEFAULT)
0x5FC2DC6B,	//0x21c6		VoC_push16(REG2,DEFAULT)	|	VoC_sw16_p(ACC1_HI,REG6,DEFAULT)
0x7002DF40,	//0x21c8		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x2B80E007,	//0x21ca		VoC_jal(CII_compute_s2_s3_new)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xD6121DD1,	//0x21cc		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_jal(CII_compute_s2_s3_new)(hi)
0x4DF4D674,	//0x21ce		VoC_bnlt16_rd(OPENLOOP412,REG4,0xbaaf)(lo)	|	VoC_lw16_sd(REG4,0x6,DEFAULT)
0xD8A63AAF,	//0x21d0		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_bnlt16_rd(OPENLOOP412,REG4,0xbaaf)(hi)
		//0x21d1		OPENLOOP413
0xDFC4DFC2,	//0x21d2		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0B542B80,	//0x21d4		VoC_jal(CII_quantLag_opt_paris)
0x2B80F007,	//0x21d6		VoC_jal(CII_compute_s2_s3_new)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xD6161DD1,	//0x21d8		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_jal(CII_compute_s2_s3_new)(hi)
0x5655D911,	//0x21da		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0x0740D908,	//0x21dc		VoC_add16_rd(REG0,REG0,0xd48f)(lo)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0x07C9548F,	//0x21de		VoC_sub16_rd(REG1,REG1,0xbd92)(lo)	|	VoC_add16_rd(REG0,REG0,0xd48f)(hi)
0x07763D92,	//0x21e0		VoC_add16_rd(REG6,REG6,0x8384)(lo)	|	VoC_sub16_rd(REG1,REG1,0xbd92)(hi)
0x0A840384,	//0x21e2		VoC_lw16i(REG4,0xf44)(lo)	|	VoC_add16_rd(REG6,REG6,0x8384)(hi)
0x5A160F44,	//0x21e4		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16i(REG4,0xf44)(hi)
0x2B80DD08,	//0x21e6		VoC_jal(CII_bestDelta_new)(lo)	|	VoC_sw32_sd(REG01,0x0,IN_PARALLEL)
0xDF841EB4,	//0x21e8		VoC_pop16(REG4,DEFAULT)	|	VoC_jal(CII_bestDelta_new)(hi)
0x4A74DF82,	//0x21ea		VoC_blt16_rd(OPENLOOP413,REG4,0xbaaf)(lo)	|	VoC_pop16(REG2,DEFAULT)
0xD9203AAF,	//0x21ec		VoC_lw32_sd(REG01,0x3,DEFAULT)	|	VoC_blt16_rd(OPENLOOP413,REG4,0xbaaf)(hi)
		//0x21ed		OPENLOOP412
0x5664DF82,	//0x21ee		VoC_lw16_sd(REG4,0x5,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x3144DD08,	//0x21f0		VoC_bngtz16_r(OPENLOOP417,REG4)(lo)	|	VoC_sw32_sd(REG01,0x0,IN_PARALLEL)
0xF7F22210,	//0x21f2		VoC_lw16i_short(INC2,0xffffffff,DEFAULT)	|	VoC_bngtz16_r(OPENLOOP417,REG4)(hi)
		//0x21f3		OPENLOOP418
0xD8A6F027,	//0x21f4		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xDFC4DFC2,	//0x21f6		VoC_push16(REG4,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0B542B80,	//0x21f8		VoC_jal(CII_quantLag_opt_paris)
0x1DD12B80,	//0x21fa		VoC_jal(CII_compute_s2_s3_new)
0xD9115616,	//0x21fc		VoC_lw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0xD9085645,	//0x21fe		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x548F07C0,	//0x2200		VoC_sub16_rd(REG0,REG0,0xd48f)
0x3D920749,	//0x2202		VoC_add16_rd(REG1,REG1,0xbd92)
0x038407F6,	//0x2204		VoC_sub16_rd(REG6,REG6,0x8384)
0x0F440A84,	//0x2206		VoC_lw16i(REG4,0xf44)
0xDD085A16,	//0x2208		VoC_sw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG6,0x0,DEFAULT)
0x1EB42B80,	//0x220a		VoC_jal(CII_bestDelta_new)
0xDF82DF84,	//0x220c		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x21F33104,	//0x220e		VoC_bgtz16_r(OPENLOOP418,REG4)
		//0x2210		OPENLOOP417
0xD9117007,	//0x2210		VoC_lw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x22322C09,	//0x2212		VoC_loop_i(0x1,0x4)
0xD8B5D8A4,	//0x2214		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xF6835F41,	//0x2216		VoC_movreg16(REG3,REG4,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x221C3105,	//0x2218		VoC_bgtz16_r(OPENLOOP2001,REG5)
0xE5D5F002,	//0x221a		VoC_jump(OPENLOOP2002ADD)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x221c		OPENLOOP2001
0x22203104,	//0x221c		VoC_bgtz16_r(OPENLOOP2003,REG4)
0x3AAA0B64,	//0x221e		VoC_sub16_dr(REG4,0xbaaa,REG4)
		//0x2220		OPENLOOP2003
0x222934A5,	//0x2220		VoC_bngt16_rr(OPENLOOP2005,REG4,REG5)
0x7FFF0A82,	//0x2222		VoC_lw16i(REG2,0x7fff)
0x22283104,	//0x2224		VoC_bgtz16_r(OPENLOOP2004,REG4)
0x00000AC2,	//0x2226		VoC_lw16i(REG2,0x8000)
		//0x2228		OPENLOOP2004
0xFF10E5C8,	//0x2228		VoC_movreg32(REG01,REG45,DEFAULT)	|	VoC_jump(OPENLOOP2002ADD)
		//0x2229		OPENLOOP2005
0x019A2B80,	//0x222a		VoC_jal(CII_DIV_S)
0x22303103,	//0x222c		VoC_bgtz16_r(OPENLOOP2002ADD,REG3)
0x3AAA0B52,	//0x222e		VoC_sub16_dr(REG2,0xbaaa,REG2)
		//0x2230		OPENLOOP2002ADD
0xDF01C1D7,	//0x2230		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,DEFAULT)
		//0x2232		VoC_endloop1
0x5686FFC0,	//0x2232		VoC_lw16_sd(REG6,0x7,DEFAULT)	|	VoC_NOP
0xD633E011,	//0x2234		VoC_lw16_sd(REG3,0x2,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0xC0CB5645,	//0x2236		VoC_add16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x223C34BE,	//0x2238		VoC_bngt16_rr(OPENLOOP421,REG7,REG6)
0xDA95DA87,	//0x223a		VoC_sw16_sd(REG5,0x8,DEFAULT)	|	VoC_sw16_sd(REG7,0x7,DEFAULT)
		//0x223c		OPENLOOP421
0xDA33C14D,	//0x223c		VoC_sw16_sd(REG3,0x2,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0xDF85DA45,	//0x223e		VoC_pop16(REG5,DEFAULT)	|	VoC_sw16_sd(REG5,0x3,DEFAULT)
0xDF07434D,	//0x2240		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)
0xDF075F84,	//0x2242		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x2B00D644,	//0x2244		VoC_jump_lg(OPENLOOPWHILESTART)(lo)	|	VoC_lw16_sd(REG4,0x3,DEFAULT)
0xF0212192,	//0x2246		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jump_lg(OPENLOOPWHILESTART)(hi)
		//0x2247		OPENLOOPWHILEEND
		//0x2247		OPENLOOPCONTINUE
0xD91A410F,	//0x2248		VoC_lw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG4,REG1,DEFAULT)
0xC10C5911,	//0x224a		VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xD908414D,	//0x224c		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x548F0752,	//0x224e		VoC_add16_rd(REG2,REG2,0xd48f)
0x3D9207DB,	//0x2250		VoC_sub16_rd(REG3,REG3,0xbd92)
0xDD1A5636,	//0x2252		VoC_sw32_sd(REG45,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0xDD115A47,	//0x2254		VoC_sw32_sd(REG23,0x1,IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x3,DEFAULT)
0x3AB04067,	//0x2256		VoC_be16_rd(OPENLOOPPITCHLAGLOOPEND,REG7,0xbab0)
0x21752B00,	//0x2258		VoC_jump_lg(OPENLOOPPITCHLAGLOOPSTART)
		//0x225a		OPENLOOPPITCHLAGLOOPEND
0x3187D627,	//0x225a		VoC_bez16_r(OPENLOOPUNVOICED,REG7)(lo)	|	VoC_lw16_sd(REG7,0x1,DEFAULT)
0x567722A4,	//0x225c		VoC_lw16_sd(REG7,0x6,DEFAULT)	|	VoC_bez16_r(OPENLOOPUNVOICED,REG7)(hi)
0x78F7E03C,	//0x225e		VoC_shr16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x3,IN_PARALLEL)
0x1804E02D,	//0x2260		VoC_lw16i_set_inc(REG0,0x45e0,0x1)(lo)	|	VoC_lw16i_short(RL6_HI,0x2,IN_PARALLEL)
0x180545E0,	//0x2262		VoC_lw16i_set_inc(REG1,0x4600,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x45e0,0x1)(hi)
0x40384600,	//0x2264		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x4600,0x1)(hi)
0x5652C079,	//0x2266		VoC_lw16_sd(REG2,0x4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x6895FF45,	//0x2268		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD893F006,	//0x226a		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0xD88B9AD2,	//0x226c		VoC_lw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_multf32inc_rp(REG45,REG3,REG2,DEFAULT)
0x028A0952,	//0x226e		VoC_add32_rd(REG45,REG45,0x828a)
0x4F750A6C,	//0x2270		VoC_multf32_rd(ACC0,REG5,0xcf75)
0x392D0AC3,	//0x2272		VoC_lw16i(REG3,0xffffb92d)
0x33C4C92C,	//0x2274		VoC_bnltz32_r(OPENLOOP431,ACC0)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xCD5C227E,	//0x2276		VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)	|	VoC_bnltz32_r(OPENLOOP431,ACC0)(hi)
0xC92CFFC0,	//0x2278		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_NOP
0x227D33C4,	//0x227a		VoC_bnltz32_r(OPENLOOP432,ACC0)
0xE1ACF02D,	//0x227c		VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
		//0x227d		OPENLOOP432
		//0x227e		OPENLOOP431
		//0x227e		VoC_endloop0
0x1804FFC0,	//0x227e		VoC_lw16i_set_inc(REG0,0x45c0,0x1)(lo)	|	VoC_NOP
0x403845C0,	//0x2280		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x45c0,0x1)(hi)
0xF033D929,	//0x2282		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw32_sd(REG23,0x4,IN_PARALLEL)
0x22A22C09,	//0x2284		VoC_loop_i(0x1,0x4)
0x5F41D886,	//0x2286		VoC_push32(REG23,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x2B80DFC0,	//0x2288		VoC_jal(CII_quantLag_opt_paris)(lo)	|	VoC_push16(REG0,IN_PARALLEL)
0xF0230B54,	//0x228a		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_jal(CII_quantLag_opt_paris)(hi)
0xC29D409C,	//0x228c		VoC_sub16_rr(REG5,REG2,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG3,DEFAULT)
0x0C9A3C64,	//0x228e		VoC_bngt16_rd(OPENLOOP441,REG4,0x8c9a)
0x00FF0A84,	//0x2290		VoC_lw16i(REG4,0xff)
		//0x2292		OPENLOOP441
0x22953245,	//0x2292		VoC_bnltz16_r(OPENLOOP442,REG5)
0xC32EF005,	//0x2294		VoC_sub16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x2295		OPENLOOP442
0x1845DF80,	//0x2296		VoC_lw16i_set_inc(REG1,0xd48e,0x1)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x4069548E,	//0x2298		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xd48e,0x1)(hi)
0xDF01C19E,	//0x229a		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG3,IN_PARALLEL)
0x22A23146,	//0x229c		VoC_bngtz16_r(OPENLOOP443,REG6)
0xD8956783,	//0x229e		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xDCA5D895,	//0x22a0		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
		//0x22a1		VoC_endloop0
		//0x22a2		OPENLOOP443
		//0x22a2		VoC_endloop1
0xE5CBDCB6,	//0x22a2		VoC_jump(OPENLOOPFINISH)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x22a4		OPENLOOPUNVOICED
0xFF465928,	//0x22a4		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x4,DEFAULT)
0xD9217032,	//0x22a6		VoC_lw32_sd(REG23,0x3,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xF0076885,	//0x22a8		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC9CDC8C,	//0x22aa		VoC_sw16inc_p(RL6_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG0,DEFAULT)
0xDCBCDCAC,	//0x22ac		VoC_sw16inc_p(RL6_LO,REG3,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
		//0x22ad		VoC_endloop0
		//0x22ae		OPENLOOPFINISH
0x45BF142A,	//0x22ae		VoC_lw16_d(SP16,0x45bf)
0x45BE142B,	//0x22b0		VoC_lw16_d(SP32,0x45be)
0xE180DFA9,	//0x22b2		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x22b4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x22b5		CII_getSfrmLpcTx_opt
0x441E152A,	//0x22b6		VoC_sw16_d(SP16,0x441e)
0xDFC0DFC4,	//0x22b8		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0xDFCADFCB,	//0x22ba		VoC_push16(ACC1_LO,DEFAULT)	|	VoC_push16(ACC1_HI,DEFAULT)
0xDFC8DFC9,	//0x22bc		VoC_push16(ACC0_LO,DEFAULT)	|	VoC_push16(ACC0_HI,DEFAULT)
0xDFCCDFCD,	//0x22be		VoC_push16(RL6_LO,DEFAULT)	|	VoC_push16(RL6_HI,DEFAULT)
0xDFC2DFC5,	//0x22c0		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xDFC1DFC6,	//0x22c2		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xDF475FC3,	//0x22c4		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x6E06DFC7,	//0x22c6		VoC_bnez16_d(GETSFRMLPC_IEF2,0x43b3)(lo)	|	VoC_push16(REG7,DEFAULT)
0x6E0443B3,	//0x22c8		VoC_bnez16_d(GETSFRMLPC_IEF2,0x816)(lo)	|	VoC_bnez16_d(GETSFRMLPC_IEF2,0x43b3)(hi)
0x2B000816,	//0x22ca		VoC_jump_lg(GETSFRMLPC_IEF0)(lo)	|	VoC_bnez16_d(GETSFRMLPC_IEF2,0x816)(hi)
0xDF4623C6,	//0x22cc		VoC_push32(RL6,DEFAULT)	|	VoC_jump_lg(GETSFRMLPC_IEF0)(hi)
		//0x22cd		GETSFRMLPC_IEF2
0xF006DFC8,	//0x22ce		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_push16(ACC0_LO,DEFAULT)
		//0x22d0		GETSFRMLPCTX_LOOP_START
0x5FC0DFC2,	//0x22d0		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xDFC6D910,	//0x22d2		VoC_push16(REG6,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,IN_PARALLEL)
0xD897D886,	//0x22d4		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0xD6615D10,	//0x22d6		VoC_lw16_sd(REG1,0x5,IN_PARALLEL)	|	VoC_sw32_sd(REG01,0x1,DEFAULT)
0xDF435620,	//0x22d8		VoC_push32(REG67,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xFFC0DF41,	//0x22da		VoC_NAD	|	VoC_push32(REG23,DEFAULT)
0xDF426948,	//0x22dc		VoC_push32(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0x028A14C4,	//0x22de		VoC_lw32_d(ACC0,0x828a)
0xD139D130,	//0x22e0		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0xF143FFC0,	//0x22e2		VoC_lw16i_short(REG3,0xa,DEFAULT)	|	VoC_NOP
		//0x22e4		VoC_endloop0
0x1FBDDCA9,	//0x22e4		VoC_lw16i_set_inc(REG1,0xcf9,0xffffffff)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0xC29A0CF9,	//0x22e6		VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xcf9,0xffffffff)(hi)
0x2B80E040,	//0x22e8		VoC_jal(CII_aToRc_opt2)(lo)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0xDF0216ED,	//0x22ea		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CII_aToRc_opt2)(hi)
0x22F531C7,	//0x22ec		VoC_bnez16_r(interpolateCheck0,REG7)
0x0CF01804,	//0x22ee		VoC_lw16i_set_inc(REG0,0xcf0,0x1)
0x16BE2B80,	//0x22f0		VoC_jal(CII_res_eng_opt)
0xDF02F027,	//0x22f2		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE080E5CB,	//0x22f4		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_jump(interpolateCheck1)
		//0x22f5		interpolateCheck0
0x2B80F030,	//0x22f6		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDF0016BE,	//0x22f8		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0xE943F031,	//0x22fa		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xF007D894,	//0x22fc		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x22fe		VoC_endloop0
0xF033DC84,	//0x22fe		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x22ff		interpolateCheck1
0xD664DF86,	//0x2300		VoC_lw16_sd(REG4,0x5,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xC134C134,	//0x2302		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF0055910,	//0x2304		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0x5F02DDA1,	//0x2306		VoC_pop32(REG45,DEFAULT)	|	VoC_sw32_p(REG23,REG4,DEFAULT)
0x2C05D633,	//0x2308		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16_sd(REG3,0x2,IN_PARALLEL)
0xE062231D,	//0x230a		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0x230F3186,	//0x230c		VoC_bez16_r(getSfrmLpcTx0_JUMP,REG6)
0x9B04E002,	//0x230e		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_movreg16(REG2,REG0,DEFAULT)
		//0x230f		getSfrmLpcTx0_JUMP
0xD12BE948,	//0x2310		VoC_mac32inc_rp(REG5,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x3187D8AB,	//0x2312		VoC_bez16_r(getSfrmLpcTx0,REG7)(lo)	|	VoC_lw16inc_p(ACC1_HI,REG2,DEFAULT)
0x09652317,	//0x2314		VoC_add32_rd(ACC1,ACC0,0x828a)(lo)	|	VoC_bez16_r(getSfrmLpcTx0,REG7)(hi)
0x9B04028A,	//0x2316		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_add32_rd(ACC1,ACC0,0x828a)(hi)
		//0x2317		getSfrmLpcTx0
		//0x2318		VoC_endloop0
0x6E06DC9B,	//0x2318		VoC_bnez16_d(GETSFRMLPC_IEF3,0x43b3)(lo)	|	VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)
0xD6D343B3,	//0x231a		VoC_lw16_sd(REG3,0xc,DEFAULT)	|	VoC_bnez16_d(GETSFRMLPC_IEF3,0x43b3)(hi)
0xD6F1D6E0,	//0x231c		VoC_lw16_sd(REG1,0xe,DEFAULT)	|	VoC_lw16_sd(REG0,0xd,DEFAULT)
		//0x231d		VoC_endloop1
0xD908DAF1,	//0x231e		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw16_sd(REG1,0xe,DEFAULT)
		//0x231f		GETSFRMLPC_IEF3
0xC079F147,	//0x2320		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0xa,DEFAULT)
0x03840776,	//0x2322		VoC_add16_rd(REG6,REG6,0x8384)
0xD6745D08,	//0x2324		VoC_lw16_sd(REG4,0x6,IN_PARALLEL)	|	VoC_sw32_sd(REG01,0x0,DEFAULT)
0x6003DF80,	//0x2326		VoC_movreg16(REG3,REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x5625DF82,	//0x2328		VoC_lw16_sd(REG5,0x1,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x4066C0BA,	//0x232a		VoC_be16_rd(GETSFRMLPCTX_LOOP_END,REG6,0xbaaf)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)
0x2B003AAF,	//0x232c		VoC_jump_lg(GETSFRMLPCTX_LOOP_START)(lo)	|	VoC_be16_rd(GETSFRMLPCTX_LOOP_END,REG6,0xbaaf)(hi)
0xDF0622D0,	//0x232e		VoC_pop32(RL6,DEFAULT)	|	VoC_jump_lg(GETSFRMLPCTX_LOOP_START)(hi)
		//0x232f		GETSFRMLPCTX_LOOP_END
0xDFC0DF87,	//0x2330		VoC_push16(REG0,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0xE944E180,	//0x2332		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0xD8BAD888,	//0x2334		VoC_lw16inc_p(ACC1_LO,REG3,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG0,DEFAULT)
0xDCAADC98,	//0x2336		VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x2337		VoC_endloop0
0x43B36E08,	//0x2338		VoC_bnez16_d(GETSFRMLPC_IEF3_bis,0x43b3)
0xD6D1D6C0,	//0x233a		VoC_lw16_sd(REG1,0xc,DEFAULT)	|	VoC_lw16_sd(REG0,0xb,DEFAULT)
0xD8886943,	//0x233c		VoC_lw16inc_p(ACC0_LO,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xDC98D888,	//0x233e		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG0,DEFAULT)
		//0x233f		VoC_endloop0
		//0x2340		GETSFRMLPC_IEF3_bis
0xD615DF80,	//0x2340		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x2B80D640,	//0x2342		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16_sd(REG0,0x3,DEFAULT)
0xD63016BE,	//0x2344		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0x3AB20740,	//0x2346		VoC_add16_rd(REG0,REG0,0xbab2)
0xDD81FFC0,	//0x2348		VoC_sw32_p(REG23,REG0,DEFAULT)	|	VoC_NOP
0x43B36E04,	//0x234a		VoC_bnez16_d(GETSFRMLPC_IEF11111,0x43b3)
0x23F22B00,	//0x234c		VoC_jump_lg(GETSFRMLPC_IEF1)
		//0x234e		GETSFRMLPC_IEF11111
0x09880A87,	//0x234e		VoC_lw16i(REG7,0x988)
0xD622D651,	//0x2350		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_lw16_sd(REG1,0x4,DEFAULT)
0x43800A83,	//0x2352		VoC_lw16i(REG3,0x4380)
0xF0085630,	//0x2354		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0xDFC3DFC2,	//0x2356		VoC_push16(REG3,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xDFC1DFC7,	//0x2358		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x7FFF0A86,	//0x235a		VoC_lw16i(REG6,0x7fff)
0xD9C2E887,	//0x235c		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x3AAA3C6C,	//0x235e		VoC_bngt16_rd(compResidEnergy0,REG4,0xbaaa)
0x236334B5,	//0x2360		VoC_bngt16_rr(compResidEnergy0,REG6,REG5)
0xF007E0A6,	//0x2362		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x2363		compResidEnergy0
		//0x2363		VoC_endloop0
0xDFC7F025,	//0x2364		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x03844CCE,	//0x2366		VoC_bnlt16_rd(compResidEnergy3,REG6,0x8384)
0x4876F027,	//0x2368		VoC_blt16_rd(compResidEnergy3,REG6,0xb82a)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xF8FD382A,	//0x236a		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_blt16_rd(compResidEnergy3,REG6,0xb82a)(hi)
0x382A405E,	//0x236c		VoC_be16_rd(compResidEnergy3,REG6,0xb82a)
0xF8A5F8FD,	//0x236e		VoC_shr16_ri(REG5,0xfffffff4,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
		//0x236f		compResidEnergy3
0x0A601809,	//0x2370		VoC_lw16i_set_inc(REG1,0xa60,0x2)
0x0CF01808,	//0x2372		VoC_lw16i_set_inc(REG0,0xcf0,0x2)
0xD9CEE8A3,	//0x2374		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDC6FF46,	//0x2376		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
		//0x2377		VoC_endloop0
		//0x2378		LAP12
0xF033F006,	//0x2378		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x2379		LAP13
0xD610D653,	//0x237a		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw16_sd(REG3,0x4,DEFAULT)
0x237F3186,	//0x237c		VoC_bez16_r(LAP10_new,REG6)
0xF7F0D643,	//0x237e		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG3,0x3,DEFAULT)
		//0x237f		LAP10_new
0x0A601806,	//0x2380		VoC_lw16i_set_inc(REG2,0xa60,0x1)
0x238A31C0,	//0x2382		VoC_bnez16_r(LAP11,REG0)
0x0874D623,	//0x2384		VoC_mult16_rd(REG4,REG6,0xbab6)(lo)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0x18063AB6,	//0x2386		VoC_lw16i_set_inc(REG2,0xcf0,0x1)(lo)	|	VoC_mult16_rd(REG4,REG6,0xbab6)(hi)
0xC0E30CF0,	//0x2388		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xcf0,0x1)(hi)
		//0x238a		LAP11
0x0874D630,	//0x238a		VoC_mult16_rd(REG4,REG6,0xbd92)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x18053D92,	//0x238c		VoC_lw16i_set_inc(REG1,0xcfa,0x1)(lo)	|	VoC_mult16_rd(REG4,REG6,0xbd92)(hi)
0xC1000CFA,	//0x238e		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xcfa,0x1)(hi)
0xDFC5DFC7,	//0x2390		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xF6615F40,	//0x2392		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x449A1804,	//0x2394		VoC_lw16i_set_inc(REG0,0x449a,0x1)
0xD897E944,	//0x2396		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x449A0A83,	//0x2398		VoC_lw16i(REG3,0x449a)
		//0x239a		VoC_endloop0
0x5F00DC87,	//0x239a		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x2B80F3FC,	//0x239c		VoC_jal(CII_lpcFir_opt)(lo)	|	VoC_lw16i_short(INC0,0xffffffff,IN_PARALLEL)
0xDF851683,	//0x239e		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CII_lpcFir_opt)(hi)
0x1804DF87,	//0x23a0		VoC_lw16i_set_inc(REG0,0xcfa,0x1)(lo)	|	VoC_pop16(REG7,DEFAULT)
0xFF340CFA,	//0x23a2		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xcfa,0x1)(hi)
0xED0AFFC0,	//0x23a4		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_NAD
0x23AE3187,	//0x23a6		VoC_bez16_r(compResidEnergy40,REG7)
0xFFC09B41,	//0x23a8		VoC_NOP	|	VoC_multf32inc_rp(REG23,REG5,REG0,DEFAULT)
0x028A0949,	//0x23aa		VoC_add32_rd(REG23,REG23,0x828a)
0xE5C2CE1B,	//0x23ac		VoC_jump(compResidEnergy790)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
		//0x23ae		compResidEnergy40
0xF021D400,	//0x23ae		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG0,DEFAULT)
		//0x23af		compResidEnergy790
		//0x23af		VoC_endloop0
0xFF26C18E,	//0x23b0		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x3AB04066,	//0x23b2		VoC_be16_rd(LAP13_end,REG6,0xbab0)
0x23792B00,	//0x23b4		VoC_jump_lg(LAP13)
		//0x23b6		LAP13_end
0xC008DF80,	//0x23b6		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x3AAA0BF6,	//0x23b8		VoC_sub32_dr(RL6,0xbaaa,RL6)
0x3501DFC0,	//0x23ba		VoC_be16_rr(LAP12,REG0,REG1)(lo)	|	VoC_push16(REG0,DEFAULT)
0x33862378,	//0x23bc		VoC_bltz32_r(LAP20,RL6)(lo)	|	VoC_be16_rr(LAP12,REG0,REG1)(hi)
0xF00123C0,	//0x23be		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_bltz32_r(LAP20,RL6)(hi)
		//0x23c0		LAP20
0xDF87E8A1,	//0x23c0		VoC_pop16(REG7,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x23c1		VoC_endloop0
0x0CE41501,	//0x23c2		VoC_sw16_d(REG1,0xce4)
0x23F231C1,	//0x23c4		VoC_bnez16_r(GETSFRMLPC_IEF1,REG1)
		//0x23c6		GETSFRMLPC_IEF0
0x56E0D665,	//0x23c6		VoC_lw16_sd(REG0,0xd,DEFAULT)	|	VoC_lw16_sd(REG5,0x5,DEFAULT)
0x2B80F004,	//0x23c8		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xDF4116BE,	//0x23ca		VoC_push32(REG23,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0x5640D615,	//0x23cc		VoC_lw16_sd(REG0,0x3,DEFAULT)	|	VoC_lw16_sd(REG5,0x0,DEFAULT)
0x2B80F004,	//0x23ce		VoC_jal(CII_res_eng_opt)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xD63016BE,	//0x23d0		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_jal(CII_res_eng_opt)(hi)
0xDF04F050,	//0x23d2		VoC_pop32(ACC0,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xFF0C6882,	//0x23d4		VoC_movreg32(ACC0,REG23,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x23d6		VoC_endloop0
0xD680DDC4,	//0x23d6		VoC_lw16_sd(REG0,0x7,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xF0095691,	//0x23d8		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x8,DEFAULT)
0xD6527052,	//0x23da		VoC_lw16_sd(REG2,0x4,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xF00B5623,	//0x23dc		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0x23E62C09,	//0x23de		VoC_loop_i(0x1,0x4)
0xD9CCE8A4,	//0x23e0		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xDDC4D9DD,	//0x23e2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG3,DEFAULT)
		//0x23e4		VoC_endloop0
0xD671DDD5,	//0x23e4		VoC_lw16_sd(REG1,0x6,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x23e6		VoC_endloop1
0xD6C0D6D3,	//0x23e6		VoC_lw16_sd(REG0,0xb,DEFAULT)	|	VoC_lw16_sd(REG3,0xc,DEFAULT)
0x2C09D6A1,	//0x23e8		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16_sd(REG1,0x9,DEFAULT)
0xD9CC23F0,	//0x23ea		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0xD9CCE8A2,	//0x23ec		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x23ee		VoC_endloop0
0xD6B1DDC4,	//0x23ee		VoC_lw16_sd(REG1,0xa,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x23f0		VoC_endloop1
0xFFC0FFC0,	//0x23f0		VoC_NAD	|	VoC_NOP
		//0x23f2		GETSFRMLPC_IEF1
0x441E142A,	//0x23f2		VoC_lw16_d(SP16,0x441e)
0xDFA9FFC0,	//0x23f4		VoC_pop16(RA,DEFAULT)	|	VoC_NOP
0xE580DF07,	//0x23f6		VoC_return	|	VoC_pop32(RL7,DEFAULT)
