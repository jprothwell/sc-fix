		//0x0298		VoC_code_section_1
		//0x0298		CII_AMR_Encode
0x2882DFE9,	//0x0298		VoC_or16_rd(REG2,0x403d)(lo)	|	VoC_push16(RA,DEFAULT)
0x3182403D,	//0x029a		VoC_bez16_r(NO_RESET_ENC,REG2)(lo)	|	VoC_or16_rd(REG2,0x403d)(hi)
0x2B80029F,	//0x029c		VoC_jal(CII_encoder_reset)(lo)	|	VoC_bez16_r(NO_RESET_ENC,REG2)(hi)
0xF7060301,	//0x029e		VoC_lw16i_short(REG6,0xfff8,DEFAULT)	|	VoC_jal(CII_encoder_reset)(hi)
		//0x029f		NO_RESET_ENC
0x05081809,	//0x02a0		VoC_lw16i_set_inc(REG1,0x508,0x2)
0x2008E0C7,	//0x02a2		VoC_lw16d_set_inc(REG0,0x42fe,0x2)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x2CA042FE,	//0x02a4		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16d_set_inc(REG0,0x42fe,0x2)(hi)
0xD9C602AA,	//0x02a6		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0xFFC0E4DE,	//0x02a8		VoC_NOP	|	VoC_and32_rr(RL6,REG67,DEFAULT)
		//0x02aa		VoC_endloop0
0x1808DDCE,	//0x02aa		VoC_lw16i_set_inc(REG0,0x508,0x2)(lo)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
0xFFC00508,	//0x02ac		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x508,0x2)(hi)
0x01CE2B80,	//0x02ae		VoC_jal(CII_encoder_homing_frame_test)
0x403D1504,	//0x02b0		VoC_sw16_d(REG4,0x403d)
0x08EC2B80,	//0x02b2		VoC_jal(CII_Pre_Process)
0x40876E06,	//0x02b4		VoC_bnez16_d(no_vad_detection_needed,0x4087)
0x43026C04,	//0x02b6		VoC_bez16_d(no_vad_detection_needed,0x4302)
0x12F52B80,	//0x02b8		VoC_jal(CII_vad1)
		//0x02ba		no_vad_detection_needed
0x40876E0A,	//0x02ba		VoC_bnez16_d(cod_amr301,0x4087)
0x43026C08,	//0x02bc		VoC_bez16_d(cod_amr301,0x4302)
0x08F11407,	//0x02be		VoC_lw16_d(REG7,0x8f1)
0x153E2B80,	//0x02c0		VoC_jal(CII_tx_dtx_handler)
0x0D651505,	//0x02c2		VoC_sw16_d(REG5,0xd65)
		//0x02c4		cod_amr301
0x43EA0A87,	//0x02c4		VoC_lw16i(REG7,0x43ea)
0x19302B80,	//0x02c6		VoC_jal(CII_COD_AMR_122)
		//0x02c8		cod_amr_end
0xFFC0DFA9,	//0x02c8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xD9C4E580,	//0x02ca		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_return
		//0x02cb		CII_Copy_M
0xD9C4E8A2,	//0x02cc		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x02ce		VoC_endloop0
0xE580DDCC,	//0x02ce		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x02d0		CII_scale
0xF8FBD9C2,	//0x02d0		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xFE14E6C4,	//0x02d2		VoC_shr16_rr(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0xD9C2FE15,	//0x02d4		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_rr(REG5,REG2,DEFAULT)
		//0x02d6		VoC_endloop0
0xE580DDCA,	//0x02d6		VoC_return	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x02d8		CII_copy_xy
0xF8FE59C4,	//0x02d8		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C4E782,	//0x02da		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x02dc		VoC_endloop0
0xF80EDDCC,	//0x02dc		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xC490E580,	//0x02de		VoC_mult16_rr(REG0,REG2,REG2,DEFAULT)	|	VoC_return
		//0x02df		CII_SEARCH_COPY
0x7030F032,	//0x02e0		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xC210F641,	//0x02e2		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,IN_PARALLEL)
0x0900F808,	//0x02e4		VoC_add32_rd(REG01,REG01,0x47b6)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x318247B6,	//0x02e6		VoC_bez16_r(SEARCH_COPY_label_100,REG2)(lo)	|	VoC_add32_rd(REG01,REG01,0x47b6)(hi)
0xD88402F0,	//0x02e8		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_bez16_r(SEARCH_COPY_label_100,REG2)(hi)
0xD8846682,	//0x02ea		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x02ec		VoC_endloop0
0xDCB45884,	//0x02ec		VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0x3AAE07C0,	//0x02ee		VoC_sub16_rd(REG0,REG0,0xbaae)
		//0x02f0		SEARCH_COPY_label_100
0xC0105811,	//0x02f0		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x3DDE0B51,	//0x02f2		VoC_sub16_dr(REG1,0xbdde,REG2)
0xDE105CB1,	//0x02f4		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
0x03003181,	//0x02f6		VoC_bez16_r(SEARCH_COPY_label2_200,REG1)
0xC0105804,	//0x02f8		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xDE106644,	//0x02fa		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG1,DEFAULT)
0xC0105804,	//0x02fc		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
		//0x02fe		VoC_endloop0
0xDE105CB4,	//0x02fe		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0300		SEARCH_COPY_label2_200
0xDFE9E580,	//0x0300		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0301		CII_encoder_reset
0x7F46FF47,	//0x0302		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0xFF45FF44,	//0x0304		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x041C1808,	//0x0306		VoC_lw16i_set_inc(REG0,0x41c,0x2)
0x030D2D67,	//0x0308		VoC_loop_i(0x1,0xb3)
0xDDC6DDC7,	//0x030a		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xDDC5DDC4,	//0x030c		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x030d		VoC_endloop1
0x43041808,	//0x030e		VoC_lw16i_set_inc(REG0,0x4304,0x2)
0x03122CE1,	//0x0310		VoC_loop_i(0x1,0x70)
		//0x0312		VoC_endloop1
0x6C05DDC7,	//0x0312		VoC_bez16_d(RESET_EFR,0x4087)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x2B804087,	//0x0314		VoC_jal(CII_EFR_DTX_ENC_RESET)(lo)	|	VoC_bez16_d(RESET_EFR,0x4087)(hi)
0xE5C3189E,	//0x0316		VoC_jump(RESET_AMR)	|	VoC_jal(CII_EFR_DTX_ENC_RESET)(hi)
		//0x0318		RESET_EFR
0x18F42B80,	//0x0318		VoC_jal(CII_RESET_AMR_CONSTANT)
		//0x031a		RESET_AMR
0x00580A86,	//0x031a		VoC_lw16i(REG6,0x58)
0x38A2184C,	//0x031c		VoC_lw16i_set_inc(REG0,0xb8a2,0x3)
0x38A3184D,	//0x031e		VoC_lw16i_set_inc(REG1,0xb8a3,0x3)
0x38A40AC4,	//0x0320		VoC_lw16i(REG4,0xb8a4)
0xF032F033,	//0x0322		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x03302C31,	//0x0324		VoC_loop_i(0x1,0x18)
0xC0B2D882,	//0x0326		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xD843D895,	//0x0328		VoC_lw16_p(REG3,REG4,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x3AAF0764,	//0x032a		VoC_add16_rd(REG4,REG4,0xbaaf)
0xE742D8B7,	//0x032c		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xDCA7D8B7,	//0x032e		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
		//0x032f		VoC_endloop0
		//0x0330		VoC_endloop1
0xF104FFC0,	//0x0330		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_NOP
0x1504F066,	//0x0332		VoC_sw16_d(REG4,0x9aa)(lo)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0xDFA909AA,	//0x0334		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG4,0x9aa)(hi)
0x09AB1506,	//0x0336		VoC_sw16_d(REG6,0x9ab)
0xDFE9E580,	//0x0338		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0339		CII_dtx_com_s2
0x2B80C079,	//0x033a		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xFF4402CB,	//0x033c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
0x03402CA0,	//0x033e		VoC_loop_i(0x0,0x50)
		//0x0340		VoC_endloop0
0x0A86D512,	//0x0340		VoC_lw16i(REG6,0x2149)(lo)	|	VoC_bimac32inc_pp(REG2,REG2)
0x2B802149,	//0x0342		VoC_jal(CII_Log2)(lo)	|	VoC_lw16i(REG6,0x2149)(hi)
0xF8B40543,	//0x0344		VoC_shr16_ri(REG4,0xfffffff6,DEFAULT)	|	VoC_jal(CII_Log2)(hi)
0xC12CF82D,	//0x0346		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0x5,DEFAULT)
0xC334DFA9,	//0x0348		VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x034a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x034b		CII_DIV_32
0x33C2FF15,	//0x034c		VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)(lo)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x0BD20351,	//0x034e		VoC_sub32_dr(REG45,0xbaaa,REG45)(lo)	|	VoC_bnltz32_r(DIV_32_L_ABS_IN,REG45)(hi)
0xF0233AAA,	//0x0350		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_sub32_dr(REG45,0xbaaa,REG45)(hi)
		//0x0351		DIV_32_L_ABS_IN
0x3FFF0A80,	//0x0352		VoC_lw16i(REG0,0x3fff)
0x2B80E0E1,	//0x0354		VoC_jal(CII_DIV_S)(lo)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xC790019A,	//0x0356		VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)	|	VoC_jal(CII_DIV_S)(hi)
0xCE03CDD4,	//0x0358		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0x0BE3F90C,	//0x035a		VoC_sub32_dr(REG67,0x800a,ACC0)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF90E000A,	//0x035c		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_sub32_dr(REG67,0x800a,ACC0)(hi)
0xCDD4C790,	//0x035e		VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG2,DEFAULT)
0xFFC0CE03,	//0x0360		VoC_NOP	|	VoC_mac32_rr(REG0,REG3,DEFAULT)
0xF90EFF23,	//0x0362		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xC7704D7C,	//0x0364		VoC_multf16_rr(REG0,REG5,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0xCE03C73E,	//0x0366		VoC_mac32_rr(REG0,REG3,DEFAULT)	|	VoC_multf16_rr(REG6,REG4,REG7,DEFAULT)
0xDFA9CE33,	//0x0368		VoC_pop16(RA,DEFAULT)	|	VoC_mac32_rr(REG6,REG3,DEFAULT)
0xFF23FBF4,	//0x036a		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x037032C5,	//0x036c		VoC_bngtz32_r(DIV_32_L_ABS_OUT,ACC1)
0x3AAA0BDB,	//0x036e		VoC_sub32_dr(REG67,0xbaaa,REG67)
		//0x0370		DIV_32_L_ABS_OUT
0xF026E580,	//0x0370		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_return
		//0x0371		CII_Inv_sqrt
0x3AAA5070,	//0x0372		VoC_bgt32_rd(INV_SQRT101,REG01,0xbaaa)
0x0A81F7E0,	//0x0374		VoC_lw16i(REG1,0x3fff)(lo)	|	VoC_lw16i_short(REG0,0xffff,DEFAULT)
0xE5803FFF,	//0x0376		VoC_return	|	VoC_lw16i(REG1,0x3fff)(hi)
		//0x0378		INV_SQRT101
0x00001806,	//0x0378		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xEBE3FFC0,	//0x037a		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_NAD
0x00086460,	//0x037c		VoC_bnlt32_rd(NORM_L105,REG01,0x8008)
		//0x037e		VoC_endloop0
0xFBF85E10,	//0x037e		VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
		//0x0380		NORM_L105
0x3D800B52,	//0x0380		VoC_sub16_dr(REG2,0xbd80,REG2)
0xF80A6416,	//0x0382		VoC_shr16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG2,DEFAULT)
0x038731C6,	//0x0384		VoC_bnez16_r(INV_SQRT102,REG6)
0xFA48FA08,	//0x0386		VoC_shr32_ri(REG01,0x9,DEFAULT)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
		//0x0387		INV_SQRT102
0x3AB907CE,	//0x0388		VoC_sub16_rd(REG6,REG1,0xbab9)
0xFA085E10,	//0x038a		VoC_shr32_ri(REG01,0x1,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x02C21845,	//0x038c		VoC_lw16i_set_inc(REG1,0x82c2,0x1)
0xE0084189,	//0x038e		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x7FFF1600,	//0x0390		VoC_and16_ri(REG0,0x7fff)
0x60C9D896,	//0x0392		VoC_movreg16(ACC0_HI,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xCE888589,	//0x0394		VoC_msu32_rr(REG1,REG0,DEFAULT)	|	VoC_sub16_rp(REG1,REG6,REG1,IN_PARALLEL)
0xFF20FFC0,	//0x0396		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xE580FE90,	//0x0398		VoC_return	|	VoC_shr32_rr(REG01,REG2,DEFAULT)
		//0x039a		CII_Lag_window
0x0EE31804,	//0x039a		VoC_lw16i_set_inc(REG0,0xee3,0x1)
0x0EEF1805,	//0x039c		VoC_lw16i_set_inc(REG1,0xeef,0x1)
0x02AE1846,	//0x039e		VoC_lw16i_set_inc(REG2,0x82ae,0x1)
0x02B81847,	//0x03a0		VoC_lw16i_set_inc(REG3,0x82b8,0x1)
0x3AAC14C2,	//0x03a2		VoC_lw32_d(REG45,0xbaac)
0xAC56E949,	//0x03a4		VoC_multf16_pp(REG6,REG1,REG2,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x9C5CAC1F,	//0x03a6		VoC_multf32_pp(ACC0,REG1,REG3,DEFAULT)	|	VoC_multf16_pp(REG7,REG0,REG3,DEFAULT)
0xC851CF26,	//0x03a8		VoC_add32_rr(REG23,REG23,REG45,DEFAULT)	|	VoC_bimac32_rr(REG45,REG67)
0xF90EFF23,	//0x03aa		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xDC86DC97,	//0x03ac		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x03ad		VoC_endloop0
0xDFE9E580,	//0x03ae		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x03af		CII_Levinson
0x0EEE1805,	//0x03b0		VoC_lw16i_set_inc(REG1,0xeee,0x1)
0x0EE21804,	//0x03b2		VoC_lw16i_set_inc(REG0,0xee2,0x1)
0xDF40F023,	//0x03b4		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xD886D897,	//0x03b6		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDF4398C2,	//0x03b8		VoC_push32(REG67,DEFAULT)	|	VoC_multf32_rp(REG45,REG3,REG0,DEFAULT)
0x2B80D815,	//0x03ba		VoC_jal(CII_DIV_32)(lo)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0xFF1A034B,	//0x03bc		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_jal(CII_DIV_32)(hi)
0x000A14C1,	//0x03be		VoC_lw32_d(REG23,0x800a)
0x028A095C,	//0x03c0		VoC_add32_rd(ACC0,REG67,0x828a)
0xFA22790E,	//0x03c2		VoC_shr32_ri(REG45,0x4,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x4DFCF90C,	//0x03c4		VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x1509C7F0,	//0x03c6		VoC_sw16_d(ACC0_HI,0xf00)(lo)	|	VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)
0x0E400F00,	//0x03c8		VoC_mac32_rd(REG0,0x8384)(lo)	|	VoC_sw16_d(ACC0_HI,0xf00)(hi)
0x0E400384,	//0x03ca		VoC_mac32_rd(REG0,0x8384)(lo)	|	VoC_mac32_rd(REG0,0x8384)(hi)
0x15820384,	//0x03cc		VoC_sw32_d(REG45,0x4456)(lo)	|	VoC_mac32_rd(REG0,0x8384)(hi)
0x33C44456,	//0x03ce		VoC_bnltz32_r(LEVINSON_L_ABS_2,ACC0)(lo)	|	VoC_sw32_d(REG45,0x4456)(hi)
0x0BE403D3,	//0x03d0		VoC_sub32_dr(ACC0,0xbaaa,ACC0)(lo)	|	VoC_bnltz32_r(LEVINSON_L_ABS_2,ACC0)(hi)
0xCA623AAA,	//0x03d2		VoC_sub32_rr(REG45,REG23,ACC0,DEFAULT)	|	VoC_sub32_dr(ACC0,0xbaaa,ACC0)(hi)
		//0x03d3		LEVINSON_L_ABS_2
0xDF03790C,	//0x03d4		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC7E04DEC,	//0x03d6		VoC_multf16_rr(REG0,REG7,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0xCE82C7A8,	//0x03d8		VoC_msu32_rr(REG0,REG2,DEFAULT)	|	VoC_multf16_rr(REG0,REG6,REG5,DEFAULT)
0x2B80CE82,	//0x03da		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_msu32_rr(REG0,REG2,DEFAULT)
0xFF220188,	//0x03dc		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0xDFC1790C,	//0x03de		VoC_push16(REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xDF42F046,	//0x03e0		VoC_push32(REG45,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x2C13DFC6,	//0x03e2		VoC_loop_i(0x1,0x9)(lo)	|	VoC_push16(REG6,DEFAULT)
0xD910046D,	//0x03e4		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_loop_i(0x1,0x9)(hi)
0x1FBEF025,	//0x03e6		VoC_lw16i_set_inc(REG2,0x4453,0xffffffff)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x56164453,	//0x03e8		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4453,0xffffffff)(hi)
0x43A7E014,	//0x03ea		VoC_sub16_rr(REG7,REG6,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x40B2F8FE,	//0x03ec		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)
0x67C6C810,	//0x03ee		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add32_rr(REG01,REG01,REG45,IN_PARALLEL)
0xD30AFF44,	//0x03f0		VoC_mac32_pp(REG1,REG2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xAE57AE16,	//0x03f2		VoC_multf16inc_pp(REG7,REG1,REG2,DEFAULT)	|	VoC_multf16inc_pp(REG6,REG0,REG2,DEFAULT)
0xCF34FFC0,	//0x03f4		VoC_bimac32_rr(REG67,REG45)	|	VoC_NOP
		//0x03f5		VoC_endloop0
0xD6165910,	//0x03f6		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0xC0714030,	//0x03f8		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x9902FBE4,	//0x03fa		VoC_multf32_rp(REG45,REG4,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffc,DEFAULT)
0xD815D90B,	//0x03fc		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x2B80C8A2,	//0x03fe		VoC_jal(CII_DIV_32)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xD622034B,	//0x0400		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_jal(CII_DIV_32)(hi)
0x3AAA0B52,	//0x0402		VoC_sub16_dr(REG2,0xbaaa,REG2)
0x095CFE93,	//0x0404		VoC_add32_rd(ACC0,REG67,0x828a)(lo)	|	VoC_shr32_rr(REG67,REG2,DEFAULT)
0x7F1D028A,	//0x0406		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_add32_rd(ACC0,REG67,0x828a)(hi)
0x0A80F90E,	//0x0408		VoC_lw16i(REG0,0xeff)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0xD6140EFF,	//0x040a		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_lw16i(REG0,0xeff)(hi)
0x4C5CC020,	//0x040c		VoC_bnlt16_rd(LEVINSON_03,REG4,0xd756)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xDC095756,	//0x040e		VoC_sw16_p(ACC0_HI,REG0,DEFAULT)	|	VoC_bnlt16_rd(LEVINSON_03,REG4,0xd756)(hi)
		//0x0410		LEVINSON_03
0x3245E0E5,	//0x0410		VoC_bnltz16_r(LEVINSON_ABS_S_1,REG5)(lo)	|	VoC_movreg16(REG5,REG7,DEFAULT)
0x0B6D0416,	//0x0412		VoC_sub16_dr(REG5,0xbaaa,REG5)(lo)	|	VoC_bnltz16_r(LEVINSON_ABS_S_1,REG5)(hi)
0xFFC03AAA,	//0x0414		VoC_NAD	|	VoC_sub16_dr(REG5,0xbaaa,REG5)(hi)
		//0x0416		LEVINSON_ABS_S_1
0x7FEE0A84,	//0x0416		VoC_lw16i(REG4,0x7fee)
0x042934AC,	//0x0418		VoC_bngt16_rr(LEVINSON_04,REG5,REG4)
0x084F0A80,	//0x041a		VoC_lw16i(REG0,0x84f)
0x44531401,	//0x041c		VoC_lw16_d(REG1,0x4453)
0x6963FF46,	//0x041e		VoC_loop_i_short(0xb,DEFAULT)	|	VoC_lw32z(RL6,DEFAULT)
0xD886D886,	//0x0420		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
		//0x0422		VoC_endloop0
0x1586DC96,	//0x0422		VoC_sw32_d(RL6,0xf00)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x15860F00,	//0x0424		VoC_sw32_d(RL6,0xf02)(lo)	|	VoC_sw32_d(RL6,0xf00)(hi)
0x2B000F02,	//0x0426		VoC_jump_lg(LEVINSON_EXIT)(lo)	|	VoC_sw32_d(RL6,0xf02)(hi)
0xD6140482,	//0x0428		VoC_lw16_sd(REG4,0x0,DEFAULT)	|	VoC_jump_lg(LEVINSON_EXIT)(hi)
		//0x0429		LEVINSON_04
0x44531FBE,	//0x042a		VoC_lw16i_set_inc(REG2,0x4453,0xffffffff)
0x40876C05,	//0x042c		VoC_bez16_d(LEVINSON_100,0x4087)
0x18802B80,	//0x042e		VoC_jal(CII_EFR_LEVINSON_PART)
0xC0A2E5D6,	//0x0430		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_jump(LEVINSON_101)
		//0x0431		LEVINSON_100
0x0DF2180B,	//0x0432		VoC_lw16i_set_inc(REG3,0xdf2,0x2)
0x3AAC1841,	//0x0434		VoC_lw16i_set_inc(REG1,0xbaac,0x0)
0x44561804,	//0x0436		VoC_lw16i_set_inc(REG0,0x4456,0x1)
0x850C40A2,	//0x0438		VoC_sub16_rp(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xE70A9E0E,	//0x043a		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)
0x8F9519D4,	//0x043c		VoC_multf16inc_rp(REG5,REG6,REG2,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
0xFFC08FD4,	//0x043e		VoC_NOP	|	VoC_multf16inc_rp(REG4,REG7,REG2,DEFAULT)
0xD88DD221,	//0x0440		VoC_lw16inc_p(RL6_HI,REG0,DEFAULT)	|	VoC_bimac32inc_rp(REG45,REG1)
0xF90CC9A2,	//0x0442		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0xDDDA9E0E,	//0x0444		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_multf32inc_pp(RL6,REG0,REG1,DEFAULT)
		//0x0445		VoC_endloop0
		//0x0446		LEVINSON_101
0xC7F04DFC,	//0x0446		VoC_multf16_rr(REG0,REG7,REG6,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0xFA22FF2A,	//0x0448		VoC_shr32_ri(REG45,0x4,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0xD001F90C,	//0x044a		VoC_mac32_rp(REG0,REG1,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xDDDAD001,	//0x044c		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_mac32_rp(REG0,REG1,DEFAULT)
0x045233C4,	//0x044e		VoC_bnltz32_r(LEVINSON_L_ABS_4,ACC0)
0x3AAA0BE4,	//0x0450		VoC_sub32_dr(ACC0,0xbaaa,ACC0)
		//0x0452		LEVINSON_L_ABS_4
0x000A0BE1,	//0x0452		VoC_sub32_dr(REG23,0x800a,ACC0)
0xD90A790A,	//0x0454		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xC71BC752,	//0x0456		VoC_multf16_rr(REG3,REG4,REG3,DEFAULT)	|	VoC_multf16_rr(REG2,REG5,REG2,DEFAULT)
0xD211CD5C,	//0x0458		VoC_bimac32inc_rp(REG23,REG1)	|	VoC_multf32_rr(ACC0,REG5,REG3,DEFAULT)
0x01882B80,	//0x045a		VoC_jal(CII_NORM_L_ACC0)
0x790CFF22,	//0x045c		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xC0CBD623,	//0x045e		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,IN_PARALLEL)
0xDA23DD0A,	//0x0460		VoC_sw16_sd(REG3,0x1,DEFAULT)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
0x0DF2180A,	//0x0462		VoC_lw16i_set_inc(REG2,0xdf2,0x2)
0x4456180B,	//0x0464		VoC_lw16i_set_inc(REG3,0x4456,0x2)
0x0775D616,	//0x0466		VoC_add16_rd(REG5,REG6,0x8384)(lo)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x67830384,	//0x0468		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add16_rd(REG5,REG6,0x8384)(hi)
0xD9D4D9D4,	//0x046a		VoC_lw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
		//0x046c		VoC_endloop0
0xDA15DDDC,	//0x046c		VoC_sw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x046d		VoC_endloop1
0x10000A84,	//0x046e		VoC_lw16i(REG4,0x1000)
0x44532004,	//0x0470		VoC_lw16d_set_inc(REG0,0x4453,0x1)
0x08501805,	//0x0472		VoC_lw16i_set_inc(REG1,0x850,0x1)
0x44561806,	//0x0474		VoC_lw16i_set_inc(REG2,0x4456,0x1)
0x06D2DC84,	//0x0476		VoC_multf32inc_pd(REG45,REG2,0x8384)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE9480384,	//0x0478		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_multf32inc_pd(REG45,REG2,0x8384)(hi)
0xFBFAD8A5,	//0x047a		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x028A0953,	//0x047c		VoC_add32_rd(REG67,REG45,0x828a)
0x038406D2,	//0x047e		VoC_multf32inc_pd(REG45,REG2,0x8384)
0xDC97DC87,	//0x0480		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0481		VoC_endloop0
		//0x0482		LEVINSON_EXIT
0xDF86E842,	//0x0482		VoC_pop16(REG6,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x0484		VoC_endloop0
0xDFA9DF04,	//0x0484		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0xE580FFC0,	//0x0486		VoC_return	|	VoC_NOP
		//0x0488		CII_Get_lsp_pol
0xFF44F045,	//0x0488		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x01000A89,	//0x048a		VoC_lw16i(ACC0_HI,0x100)
0xE0477040,	//0x048c		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xFF445DD4,	//0x048e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x04AF2C0B,	//0x0490		VoC_loop_i(0x1,0x5)
0x3AAE41C0,	//0x0492		VoC_be16_rd(Get_lsp_pol_L1,REG0,0xbaae)
0xC22E59A4,	//0x0494		VoC_sub16_rr(REG6,REG0,REG5,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x6791F80E,	//0x0496		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xC2AEDD94,	//0x0498		VoC_sub16_rr(REG6,REG2,REG5,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,IN_PARALLEL)
0xD99442BC,	//0x049a		VoC_lw32_p(ACC0,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)
0x790ED9B3,	//0x049c		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw32_p(REG67,REG6,DEFAULT)
0x8D8E99CD,	//0x049e		VoC_multf16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG7,REG1,IN_PARALLEL)
0x1124F027,	//0x04a0		VoC_add32_rp(ACC0,ACC0,REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE046CE37,	//0x04a2		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_mac32_rr(REG6,REG7,IN_PARALLEL)
0x4B2CFBFD,	//0x04a4		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0xC2AAE047,	//0x04a6		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
		//0x04a8		VoC_endloop0
0xD994DDB4,	//0x04a8		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x04aa		Get_lsp_pol_L1
0x05B21348,	//0x04aa		VoC_msu32inc_pd(REG1,0x85b2)
0xC028E012,	//0x04ac		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_movreg16(INC2,REG0,DEFAULT)
0xC2BCDDD4,	//0x04ae		VoC_sub16_rr(REG4,REG2,REG7,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x04af		VoC_endloop1
0xDFE9E580,	//0x04b0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x04b1		CII_Lsp_Az
0x180ADF40,	//0x04b2		VoC_lw16i_set_inc(REG2,0x445a,0x2)(lo)	|	VoC_push32(REG01,DEFAULT)
0x2B80445A,	//0x04b4		VoC_jal(CII_Get_lsp_pol)(lo)	|	VoC_lw16i_set_inc(REG2,0x445a,0x2)(hi)
0xD9080488,	//0x04b6		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Get_lsp_pol)(hi)
0x4466180A,	//0x04b8		VoC_lw16i_set_inc(REG2,0x4466,0x2)
0x03840749,	//0x04ba		VoC_add16_rd(REG1,REG1,0x8384)
0x04882B80,	//0x04bc		VoC_jal(CII_Get_lsp_pol)
0x44641FB8,	//0x04be		VoC_lw16i_set_inc(REG0,0x4464,0xfffffffe)
0x44621FBA,	//0x04c0		VoC_lw16i_set_inc(REG2,0x4462,0xfffffffe)
0x44701FB9,	//0x04c2		VoC_lw16i_set_inc(REG1,0x4470,0xfffffffe)
0x446E1FBB,	//0x04c4		VoC_lw16i_set_inc(REG3,0x446e,0xfffffffe)
0xE0A768A7,	//0x04c6		VoC_lw16i_short(REG7,0xa,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x9314D984,	//0x04c8		VoC_add32inc_rp(ACC0,ACC0,REG2,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x975DD98D,	//0x04ca		VoC_sub32inc_rp(ACC1,ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xDDCDDDC4,	//0x04cc		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x04cd		VoC_endloop0
0x10000A84,	//0x04ce		VoC_lw16i(REG4,0x1000)
0xF3FF5F01,	//0x04d0		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xF00640BB,	//0x04d2		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG7,DEFAULT)
0x445C1808,	//0x04d4		VoC_lw16i_set_inc(REG0,0x445c,0x2)
0x44681809,	//0x04d6		VoC_lw16i_set_inc(REG1,0x4468,0x2)
0xDCA468B0,	//0x04d8		VoC_sw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xD9CED9C7,	//0x04da		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFA64C9F4,	//0x04dc		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,RL7,RL6,DEFAULT)
0x03840964,	//0x04de		VoC_add32_rd(ACC0,ACC0,0x8384)
0xCBF4FA0C,	//0x04e0		VoC_sub32_rr(ACC0,RL7,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFA64DCA8,	//0x04e2		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG2,DEFAULT)
0x03840964,	//0x04e4		VoC_add32_rd(ACC0,ACC0,0x8384)
0xFFC0FA0C,	//0x04e6		VoC_NOP	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
		//0x04e8		VoC_endloop0
0xDFA9DCB8,	//0x04e8		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)
0xE580F033,	//0x04ea		VoC_return	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
		//0x04ec		CII_Lsf_lsp
0xF0047033,	//0x04ec		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x024A1846,	//0x04ee		VoC_lw16i_set_inc(REG2,0x824a,0x1)
0xF0055883,	//0x04f0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
0xE067E94D,	//0x04f2		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC0D3F843,	//0x04f4		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG3,0x8,DEFAULT)
0x00FF1607,	//0x04f6		VoC_and16_ri(REG7,0xff)
0xB8EED8B5,	//0x04f8		VoC_sub16_pr(REG6,REG3,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xFFC0CDBB,	//0x04fa		VoC_NOP	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC176FA4B,	//0x04fc		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0x9,DEFAULT)
0xDC96D883,	//0x04fe		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG3,REG0,DEFAULT)
		//0x04ff		VoC_endloop0
0xF126E580,	//0x0500		VoC_lw16i_short(REG6,0x9,DEFAULT)	|	VoC_return
		//0x0501		CII_Lsp_lsf
0xC0714030,	//0x0502		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0x003F1FBE,	//0x0504		VoC_lw16i_set_inc(REG2,0x3f,0xffffffff)
0x02891FFF,	//0x0506		VoC_lw16i_set_inc(REG3,0x8289,0xffffffff)
0x02490AC4,	//0x0508		VoC_lw16i(REG4,0x8249)
0xD886E953,	//0x050a		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x05122C81,	//0x050c		VoC_loop_i(0x1,0x40)
0x3147879F,	//0x050e		VoC_bngtz16_r(LSP_LSF_02,REG7)(lo)	|	VoC_sub16inc_rp(REG7,REG6,REG3,DEFAULT)
0xDE100514,	//0x0510		VoC_inc_p(REG2,DEFAULT)	|	VoC_bngtz16_r(LSP_LSF_02,REG7)(hi)
		//0x0512		VoC_endloop1
0x038407E4,	//0x0512		VoC_sub16_rd(REG4,REG4,0x8384)
		//0x0514		LSP_LSF_02
0xE04599E3,	//0x0514		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_multf32_rp(REG67,REG7,REG4,DEFAULT)
0xF8C57BEB,	//0x0516		VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffd,DEFAULT)
0x028A095B,	//0x0518		VoC_add32_rd(REG67,REG67,0x828a)
0x075BC1EF,	//0x051a		VoC_add16_rd(REG3,REG3,0x8384)(lo)	|	VoC_add16_rr(REG7,REG7,REG5,DEFAULT)
0xDC970384,	//0x051c		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_add16_rd(REG3,REG3,0x8384)(hi)
		//0x051d		VoC_endloop0
0xFF03E580,	//0x051e		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_return
		//0x051f		CII_Convolve
0x00001806,	//0x0520		VoC_lw16i_set_inc(REG2,0x0,0x1)
0x038407DB,	//0x0522		VoC_sub16_rd(REG3,REG3,0x8384)
0xE00C702D,	//0x0524		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
0xE01E77EF,	//0x0526		VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0xffffffff,DEFAULT)
0xFFC09C0C,	//0x0528		VoC_NAD	|	VoC_multf32_pp(ACC0,REG0,REG1,DEFAULT)
0x05402C29,	//0x052a		VoC_loop_i(0x1,0x14)
0x05303142,	//0x052c		VoC_bngtz16_r(Convolve100,REG2)
0xD501E681,	//0x052e		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x052f		VoC_endloop0
		//0x0530		Convolve100
0xDCB548F0,	//0x0530		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG67,RL6,DEFAULT)
0xC8F37F22,	//0x0532		VoC_add32_rr(REG67,REG67,RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDE106201,	//0x0534		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xFF447BEA,	//0x0536		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0xD501E681,	//0x0538		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_loop_r_short(REG2,DEFAULT)
		//0x0539		VoC_endloop0
0xDCB548F3,	//0x053a		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xC8F87F22,	//0x053c		VoC_add32_rr(REG01,REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xE201FBEA,	//0x053e		VoC_aligninc_pp(REG0,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
		//0x0540		VoC_endloop1
0xDCB59DBC,	//0x0540		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_multf32_pp(ACC0,REG6,REG7,DEFAULT)
0xFF42E580,	//0x0542		VoC_lw32z(REG45,DEFAULT)	|	VoC_return
		//0x0543		CII_Log2
0x2B80DFE9,	//0x0544		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_push16(RA,DEFAULT)
0xDF400188,	//0x0546		VoC_push32(REG01,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x3284FF21,	//0x0548		VoC_bgtz32_r(LOG1001,ACC0)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0xFF42054D,	//0x054a		VoC_lw32z(REG45,DEFAULT)	|	VoC_bgtz32_r(LOG1001,ACC0)(hi)
0xFF25E5D5,	//0x054c		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_jump(LOG1002)
		//0x054d		LOG1001
0x3D800B49,	//0x054e		VoC_sub16_dr(REG1,0xbd80,REG1)
0x07D8FA49,	//0x0550		VoC_sub16_rd(REG0,REG3,0xbefa)(lo)	|	VoC_shr32_ri(REG23,0x9,DEFAULT)
0x7A093EFA,	//0x0552		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG3,0xbefa)(hi)
0x2842F004,	//0x0554		VoC_and16_rd(REG2,0x82ac)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x0AC402AC,	//0x0556		VoC_lw16i(REG4,0x828c)(lo)	|	VoC_and16_rd(REG2,0x82ac)(hi)
0xC100028C,	//0x0558		VoC_add16_rr(REG0,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x828c)(hi)
0xD885F004,	//0x055a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xCCD18543,	//0x055c		VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)	|	VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)
0xCA8AFFC0,	//0x055e		VoC_sub32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_NOP
0xDFA9E024,	//0x0560		VoC_pop16(RA,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
		//0x0561		LOG1002
0xE580DF00,	//0x0562		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0564		CII_Lsf_wt
0x7030FF01,	//0x0564		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x7032F007,	//0x0566		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x5E00F005,	//0x0568		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xE923E006,	//0x056a		VoC_loop_i_short(0x9,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0xD8A6BA37,	//0x056c		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sub16inc_pr(REG7,REG0,REG6,DEFAULT)
		//0x056e		VoC_endloop0
0x0B76DC97,	//0x056e		VoC_sub16_dr(REG6,0x83b1,REG6)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x0A8403B1,	//0x0570		VoC_lw16i(REG4,0x733)(lo)	|	VoC_sub16_dr(REG6,0x83b1,REG6)(hi)
0xDC160733,	//0x0572		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_lw16i(REG4,0x733)(hi)
0x0D630A85,	//0x0574		VoC_lw16i(REG5,0xd63)
0x6E000A86,	//0x0576		VoC_lw16i(REG6,0x6e00)
0x18620A87,	//0x0578		VoC_lw16i(REG7,0x1862)
0x8D98E94B,	//0x057a		VoC_multf16_rp(REG0,REG6,REG3,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0xC340B8E1,	//0x057c		VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)	|	VoC_sub16_pr(REG1,REG3,REG4,DEFAULT)
0x05833201,	//0x057e		VoC_bltz16_r(Lsf_wt101,REG1)
0xFFC0C678,	//0x0580		VoC_NOP	|	VoC_multf16_rr(REG0,REG1,REG7,DEFAULT)
0xF8E8C300,	//0x0582		VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG0,REG4,REG0,DEFAULT)
		//0x0583		Lsf_wt101
0xDCB0FFC0,	//0x0584		VoC_sw16inc_p(REG0,REG3,DEFAULT)	|	VoC_NOP
		//0x0585		VoC_endloop0
0xD886E580,	//0x0586		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_return
		//0x0587		CII_Residu_new
0xF3FD600E,	//0x0588		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0x05972C51,	//0x058a		VoC_loop_i(0x1,0x28)
0x07D99B9C,	//0x058c		VoC_sub16_rd(REG1,REG3,0xbaae)(lo)	|	VoC_multf32inc_rp(ACC0,REG6,REG3,DEFAULT)
0xE9423AAE,	//0x058e		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_sub16_rd(REG1,REG3,0xbaae)(hi)
0xD139D887,	//0x0590		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x0591		VoC_endloop0
0xFBECE1C0,	//0x0592		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x028A0962,	//0x0594		VoC_add32_rd(REG45,ACC0,0x828a)
0xDCA5FFC0,	//0x0596		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_NOP
		//0x0597		VoC_endloop1
0xDFE9E580,	//0x0598		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0599		CII_subframePostProc
0x0D5E1483,	//0x059a		VoC_lw32_d(REG67,0xd5e)
0x09A80A81,	//0x059c		VoC_lw16i(REG1,0x9a8)
0x05A43180,	//0x059e		VoC_bez16_r(subframePostProc103,REG0)
0x0DC80A81,	//0x05a0		VoC_lw16i(REG1,0xdc8)
0x43D21483,	//0x05a2		VoC_lw32_d(REG67,0x43d2)
		//0x05a4		subframePostProc103
0xDF43E0C3,	//0x05a4		VoC_push32(REG67,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x32D9180A,	//0x05a6		VoC_lw16i_set_inc(REG2,0x32d9,0x2)
0x05AB349A,	//0x05a8		VoC_bngt16_rr(subframePostProc102,REG3,REG2)
0xF7D9E043,	//0x05aa		VoC_lw16i_short(FORMAT32,0xfffffffe,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
		//0x05ab		subframePostProc102
0x5C13F7C5,	//0x05ac		VoC_sw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
0x4429E071,	//0x05ae		VoC_bne16_rd(subframePostProc101,REG1,0x4086)(lo)	|	VoC_lw16i_short(REG1,0x7,IN_PARALLEL)
0xF7B94086,	//0x05b0		VoC_lw16i_short(FORMAT32,0xfffffffd,DEFAULT)	|	VoC_bne16_rd(subframePostProc101,REG1,0x4086)(hi)
0xEFC5780E,	//0x05b2		VoC_lw16i_short(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
		//0x05b4		subframePostProc101
0x1804DFC0,	//0x05b4		VoC_lw16i_set_inc(REG0,0x77a,0x1)(lo)	|	VoC_push16(REG0,DEFAULT)
0xDFC5077A,	//0x05b6		VoC_push16(REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x77a,0x1)(hi)
0x028A14C6,	//0x05b8		VoC_lw32_d(RL6,0x828a)
0xFF345642,	//0x05ba		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x3,DEFAULT)
0x0DCA1805,	//0x05bc		VoC_lw16i_set_inc(REG1,0xdca,0x1)
0xFF355625,	//0x05be		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0x05C63185,	//0x05c0		VoC_bez16_r(subframePostProc105,REG5)
0x43D01402,	//0x05c2		VoC_lw16_d(REG2,0x43d0)
0x43541805,	//0x05c4		VoC_lw16i_set_inc(REG1,0x4354,0x1)
		//0x05c6		subframePostProc105
0xDFC24010,	//0x05c6		VoC_push16(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x40876C04,	//0x05c8		VoC_bez16_d(subframePostProc01,0x4087)
0xF80EF799,	//0x05ca		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,DEFAULT)
		//0x05cc		subframePostProc01
0xD030ED06,	//0x05cc		VoC_mac32_rp(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0x28,DEFAULT)
0xFFC09BCA,	//0x05ce		VoC_NOP	|	VoC_multf32inc_rp(REG45,REG7,REG1,DEFAULT)
0xFF34C8A2,	//0x05d0		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x05d2		VoC_endloop0
0xF7F9DC85,	//0x05d2		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0x077A1807,	//0x05d4		VoC_lw16i_set_inc(REG3,0x77a,0x1)
0xD675D652,	//0x05d6		VoC_lw16_sd(REG5,0x6,DEFAULT)	|	VoC_lw16_sd(REG2,0x4,DEFAULT)
0x3180D630,	//0x05d8		VoC_bez16_r(subframePostProc106,REG0)(lo)	|	VoC_lw16_sd(REG0,0x2,DEFAULT)
0x07ED05DF,	//0x05da		VoC_sub16_rd(REG5,REG5,0xba75)(lo)	|	VoC_bez16_r(subframePostProc106,REG0)(hi)
0x14023A75,	//0x05dc		VoC_lw16_d(REG2,0x43d0)(lo)	|	VoC_sub16_rd(REG5,REG5,0xba75)(hi)
0xC0D343D0,	//0x05de		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16_d(REG2,0x43d0)(hi)
		//0x05df		subframePostProc106
0x44500A87,	//0x05e0		VoC_lw16i(REG7,0x4450)
0x7020C1D7,	//0x05e2		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,DEFAULT)
0x61E1E286,	//0x05e4		VoC_movreg16(REG1,RL7_HI,DEFAULT)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x2B80F005,	//0x05e6		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF810A0F,	//0x05e8		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0x44501806,	//0x05ea		VoC_lw16i_set_inc(REG2,0x4450,0x1)
0x04E01807,	//0x05ec		VoC_lw16i_set_inc(REG3,0x4e0,0x1)
0x40876C04,	//0x05ee		VoC_bez16_d(subframePostProc121,0x4087)
0x05081807,	//0x05f0		VoC_lw16i_set_inc(REG3,0x508,0x1)
		//0x05f2		subframePostProc121
0x40876C08,	//0x05f2		VoC_bez16_d(subframePostProc301,0x4087)
0x42FC6E06,	//0x05f4		VoC_bnez16_d(subframePostProc301,0x42fc)
0x18EB2B80,	//0x05f6		VoC_jal(CII_SUBFRAME_EFR_PART)
0x06242B00,	//0x05f8		VoC_jump_lg(subframePostProc302)
		//0x05fa		subframePostProc301
0x3D800748,	//0x05fa		VoC_add16_rd(REG0,REG1,0xbd80)
0xC0C34082,	//0x05fc		VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x09761804,	//0x05fe		VoC_lw16i_set_inc(REG0,0x976,0x1)
0xD8B46944,	//0x0600		VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD8B48714,	//0x0602		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sub16inc_rp(REG4,REG4,REG2,DEFAULT)
		//0x0604		VoC_endloop0
0xDF8CDC84,	//0x0604		VoC_pop16(RL6_LO,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x1804DF81,	//0x0606		VoC_lw16i_set_inc(REG0,0xc8c,0x1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x18060C8C,	//0x0608		VoC_lw16i_set_inc(REG2,0xd04,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xc8c,0x1)(hi)
0x31810D04,	//0x060a		VoC_bez16_r(subframePostProc107,REG1)(lo)	|	VoC_lw16i_set_inc(REG2,0xd04,0x1)(hi)
0x18040611,	//0x060c		VoC_lw16i_set_inc(REG0,0x439c,0x1)(lo)	|	VoC_bez16_r(subframePostProc107,REG1)(hi)
0x1806439C,	//0x060e		VoC_lw16i_set_inc(REG2,0x43c4,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x439c,0x1)(hi)
0xE1C343C4,	//0x0610		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x43c4,0x1)(hi)
		//0x0611		subframePostProc107
0x0CDC1805,	//0x0612		VoC_lw16i_set_inc(REG1,0xcdc,0x1)
0x694EF033,	//0x0614		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x9B8AD90B,	//0x0616		VoC_multf32inc_rp(REG45,REG6,REG1,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,IN_PARALLEL)
0xFBFA9BD3,	//0x0618		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_multf32inc_rp(REG67,REG7,REG2,DEFAULT)
0x6C04E184,	//0x061a		VoC_bez16_d(subframePostProc02,0x4087)(lo)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0x07E44087,	//0x061c		VoC_sub16_rd(REG4,REG4,0x8384)(lo)	|	VoC_bez16_d(subframePostProc02,0x4087)(hi)
0xFEA30384,	//0x061e		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x8384)(hi)
		//0x061f		subframePostProc02
0xBA3CC17F,	//0x0620		VoC_sub16inc_pr(REG4,REG0,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG7,DEFAULT)
0xDCB4D90B,	//0x0622		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
		//0x0623		VoC_endloop0
		//0x0624		subframePostProc302
0xDF03DFA9,	//0x0624		VoC_pop32(REG67,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD885E580,	//0x0626		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_return
		//0x0627		CII_Weight_Ai
0x9E0AE963,	//0x0628		VoC_multf32inc_pp(REG45,REG0,REG1,DEFAULT)	|	VoC_loop_i_short(0xb,DEFAULT)
0x0952DCA5,	//0x062a		VoC_add32_rd(REG45,REG45,0x828a)(lo)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x062b		VoC_endloop0
0xE580028A,	//0x062c		VoC_return	|	VoC_add32_rd(REG45,REG45,0x828a)(hi)
		//0x062e		CII_Int_lpc_only
0xF052F053,	//0x062e		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9D2D9DB,	//0x0630		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xF80CE8A9,	//0x0632		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0x780EF80D,	//0x0634		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x4134F80F,	//0x0636		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0xD9DBC17D,	//0x0638		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xD9D2DDCA,	//0x063a		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x063b		VoC_endloop0
0xF004E580,	//0x063c		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_return
		//0x063d		CII_Pow2
0x3EFA0A41,	//0x063e		VoC_multf32_rd(REG23,REG0,0xbefa)
0x03321844,	//0x0640		VoC_lw16i_set_inc(REG0,0x8332,0x1)
0xF90AC018,	//0x0642		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x8543D885,	//0x0644		VoC_sub16_rp(REG3,REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0x0B48CCD1,	//0x0646		VoC_sub16_dr(REG0,0xbd80,REG1)(lo)	|	VoC_multf32_rr(REG23,REG3,REG2,DEFAULT)
0xCA893D80,	//0x0648		VoC_sub32_rr(REG23,REG45,REG23,DEFAULT)	|	VoC_sub16_dr(REG0,0xbd80,REG1)(hi)
0x3F8A3C60,	//0x064a		VoC_bngt16_rd(POW2101,REG0,0xbf8a)
0xE580FF41,	//0x064c		VoC_return	|	VoC_lw32z(REG23,DEFAULT)
		//0x064e		POW2101
0x038407C0,	//0x064e		VoC_sub16_rd(REG0,REG0,0x8384)
0x3C60FE81,	//0x0650		VoC_bngt16_rd(POW2102,REG0,0x8384)(lo)	|	VoC_shr32_rr(REG23,REG0,DEFAULT)
0x09490384,	//0x0652		VoC_add32_rd(REG23,REG23,0x8384)(lo)	|	VoC_bngt16_rd(POW2102,REG0,0x8384)(hi)
0xFA090384,	//0x0654		VoC_shr32_ri(REG23,0x1,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x8384)(hi)
		//0x0655		POW2102
0xF001E580,	//0x0656		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_return
		//0x0657		CII_sqrt_l_exp
0x065C3284,	//0x0658		VoC_bgtz32_r(sqrt_l_exp_go,ACC0)
0xE580FF44,	//0x065a		VoC_return	|	VoC_lw32z(ACC0,DEFAULT)
		//0x065c		sqrt_l_exp_go
0xFF235FE9,	//0x065c		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x01882B80,	//0x065e		VoC_jal(CII_NORM_L_ACC0)
0x7FFE1641,	//0x0660		VoC_and16_ri(REG1,0xfffe)
0x3AAA0B48,	//0x0662		VoC_sub16_dr(REG0,0xbaaa,REG1)
0xFA4BFE83,	//0x0664		VoC_shr32_ri(REG67,0x9,DEFAULT)	|	VoC_shr32_rr(REG67,REG0,DEFAULT)
0x37041844,	//0x0666		VoC_lw16i_set_inc(REG0,0xb704,0x1)
0x07C0C038,	//0x0668		VoC_sub16_rd(REG0,REG0,0xbab9)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xF90E3AB9,	//0x066a		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0xbab9)(hi)
0xD8877F44,	//0x066c		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x85C760E9,	//0x066e		VoC_sub16_rp(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG7,DEFAULT)
0xCEB7DFA9,	//0x0670		VoC_msu32_rr(REG6,REG7,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF043E580,	//0x0672		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_return
		//0x0673		CII_gc_pred_update
0xF023C158,	//0x0674		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_add16_rr(REG0,REG5,REG3,DEFAULT)
0x3AB2076A,	//0x0676		VoC_add16_rd(REG2,REG5,0xbab2)
0xC09BC019,	//0x0678		VoC_add16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG3,DEFAULT)
0xF3FD77F0,	//0x067a		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF3FF77F2,	//0x067c		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xffffffff,DEFAULT)
0xD884E864,	//0x067e		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDC94D8A5,	//0x0680		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x0682		VoC_endloop0
0xDC37DCB5,	//0x0682		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0xE580DC16,	//0x0684		VoC_return	|	VoC_sw16_p(REG6,REG1,DEFAULT)
		//0x0686		CII_gmed_n
0x44961805,	//0x0686		VoC_lw16i_set_inc(REG1,0x4496,0x1)
0xE744E024,	//0x0688		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0x1807D882,	//0x068a		VoC_lw16i_set_inc(REG3,0x44a0,0x1)(lo)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xDC9244A0,	//0x068c		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x44a0,0x1)(hi)
		//0x068d		VoC_endloop0
0x069E2E29,	//0x068e		VoC_loop_r(1,REG5)
0x00000AC2,	//0x0690		VoC_lw16i(REG2,0xffff8000)
0xE746E081,	//0x0692		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0x3417D817,	//0x0694		VoC_bgt16_rr(GMED001,REG2,REG7)(lo)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
0x60E20699,	//0x0696		VoC_movreg16(REG2,REG7,DEFAULT)	|	VoC_bgt16_rr(GMED001,REG2,REG7)(hi)
0xDE08F626,	//0x0698		VoC_inc_p(REG1,DEFAULT)	|	VoC_movreg16(REG6,REG1,IN_PARALLEL)
		//0x0699		GMED001
		//0x0699		VoC_endloop0
0x0AC7C3A2,	//0x069a		VoC_lw16i(REG7,0xffffc000)(lo)	|	VoC_sub16_rr(REG2,REG6,REG4,DEFAULT)
0xDCB24000,	//0x069c		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_lw16i(REG7,0xffffc000)(hi)
		//0x069e		VoC_endloop1
0x0AC3DC67,	//0x069e		VoC_lw16i(REG3,0x8940)(lo)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0xC0EB0940,	//0x06a0		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_lw16i(REG3,0x8940)(hi)
0xC228F90B,	//0x06a2		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0xFFC08018,	//0x06a4		VoC_NOP	|	VoC_add16_rp(REG0,REG0,REG3,DEFAULT)
0xE580D801,	//0x06a6		VoC_return	|	VoC_lw16_p(REG1,REG0,DEFAULT)
		//0x06a8		CII_Autocorr
0x1806DFE9,	//0x06a8		VoC_lw16i_set_inc(REG2,0xdf0,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x14C60DF0,	//0x06aa		VoC_lw32_d(RL6,0x828a)(lo)	|	VoC_lw16i_set_inc(REG2,0xdf0,0x1)(hi)
0xFFC0028A,	//0x06ac		VoC_NAD	|	VoC_lw32_d(RL6,0x828a)(hi)
0x06B52CF2,	//0x06ae		VoC_loop_i(0x0,0x79)
0x9E0C4932,	//0x06b0		VoC_multf32inc_pp(ACC0,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0x9E0D4973,	//0x06b2		VoC_multf32inc_pp(ACC1,REG0,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC1,RL6,DEFAULT)
0xDCA7DCA5,	//0x06b4		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x06b5		VoC_endloop0
0xE04E700C,	//0x06b6		VoC_lw16i_short(RL7_LO,0x4,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
		//0x06b8		AUTOCORR_01
0x1809FF44,	//0x06b8		VoC_lw16i_set_inc(REG1,0xdf2,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x2CF00DF2,	//0x06ba		VoC_loop_i(0x0,0x78)(lo)	|	VoC_lw16i_set_inc(REG1,0xdf2,0x2)(hi)
0xD50906BD,	//0x06bc		VoC_bimac32inc_pp(REG1,REG1)	|	VoC_loop_i(0x0,0x78)(hi)
		//0x06bd		VoC_endloop0
0x5CDCFFC0,	//0x06be		VoC_bne32_rd(AUTOCORR_01_END,ACC0,0x800a)(lo)	|	VoC_NOP
0xC9BE000A,	//0x06c0		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_bne32_rd(AUTOCORR_01_END,ACC0,0x800a)(hi)
0x0DF21808,	//0x06c2		VoC_lw16i_set_inc(REG0,0xdf2,0x2)
0x7042E001,	//0x06c4		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x2B80E3C3,	//0x06c6		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0x3c,IN_PARALLEL)
0xE5EF02D0,	//0x06c8		VoC_jump(AUTOCORR_01)	|	VoC_jal(CII_scale)(hi)
		//0x06ca		AUTOCORR_01_END
0x03840964,	//0x06ca		VoC_add32_rd(ACC0,ACC0,0x8384)
0x01882B80,	//0x06cc		VoC_jal(CII_NORM_L_ACC0)
0xFF236185,	//0x06ce		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0xF90E426D,	//0x06d0		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG1,REG5,DEFAULT)
0x0EEE1507,	//0x06d2		VoC_sw16_d(REG7,0xeee)
0x0EE21506,	//0x06d4		VoC_sw16_d(REG6,0xee2)
0x04541505,	//0x06d6		VoC_sw16_d(REG5,0x454)
0x3AAA0B4C,	//0x06d8		VoC_sub16_dr(REG4,0xbaaa,REG1)
0x0DF21808,	//0x06da		VoC_lw16i_set_inc(REG0,0xdf2,0x2)
0x44541809,	//0x06dc		VoC_lw16i_set_inc(REG1,0x4454,0x2)
0xE3C67F46,	//0x06de		VoC_lw16i_short(REG6,0x3c,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x02D82B80,	//0x06e0		VoC_jal(CII_copy_xy)
0x7052DD8E,	//0x06e2		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_sw32_p(RL6,REG1,DEFAULT)
0x1804F00B,	//0x06e4		VoC_lw16i_set_inc(REG0,0xee3,0x1)(lo)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0x18050EE3,	//0x06e6		VoC_lw16i_set_inc(REG1,0xeef,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xee3,0x1)(hi)
0x0A8D0EEF,	//0x06e8		VoC_lw16i(RL6_HI,0x4455)(lo)	|	VoC_lw16i_set_inc(REG1,0xeef,0x1)(hi)
0x0A8C4455,	//0x06ea		VoC_lw16i(RL6_LO,0xf0)(lo)	|	VoC_lw16i(RL6_HI,0x4455)(hi)
0x14C700F0,	//0x06ec		VoC_lw32_d(RL7,0xb82a)(lo)	|	VoC_lw16i(RL6_LO,0xf0)(hi)
0xDFA9382A,	//0x06ee		VoC_pop16(RA,DEFAULT)	|	VoC_lw32_d(RL7,0xb82a)(hi)
0xF7A37F44,	//0x06f0		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0DF20A82,	//0x06f2		VoC_lw16i(REG2,0xdf2)
0x6213E185,	//0x06f4		VoC_aligninc_pp(REG2,REG3,DEFAULT)	|	VoC_movreg16(REG5,RL6_LO,DEFAULT)
0x2C15F80D,	//0x06f6		VoC_loop_i(0x1,0xa)(lo)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0xE7410706,	//0x06f8		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
		//0x06fa		VoC_endloop0
0xC9BED513,	//0x06fa		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG3)
0x0DF20A82,	//0x06fc		VoC_lw16i(REG2,0xdf2)
0xF7A37EA4,	//0x06fe		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xFF447F23,	//0x0700		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xF90E6213,	//0x0702		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0xF7855C97,	//0x0704		VoC_movreg16(REG5,RL6_LO,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x0706		VoC_endloop1
0xF80D5C86,	//0x0706		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xFF45E580,	//0x0708		VoC_lw32z(ACC1,DEFAULT)	|	VoC_return
		//0x0709		CII_Chebps
0x03591441,	//0x070a		VoC_lw16_d(REG1,0x8359)
0x44500A86,	//0x070c		VoC_lw16i(REG6,0x4450)
0x000E0AC7,	//0x070e		VoC_lw16i(REG7,0x800e)
0x01000A8B,	//0x0710		VoC_lw16i(ACC1_HI,0x100)
0x05B20A5A,	//0x0712		VoC_multf32_rd(REG45,REG3,0x85b2)
0xDDB59A54,	//0x0714		VoC_sw32_p(ACC1,REG6,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)
0xF90CC8A2,	//0x0716		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xCD1DE86A,	//0x0718		VoC_multf32_rr(ACC1,REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xFA859A54,	//0x071a		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG1,REG2,DEFAULT)
0xCE2B7BFD,	//0x071c		VoC_mac32_rr(REG5,REG3,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)
0x5DB2D537,	//0x071e		VoC_sw32_p(REG45,REG6,DEFAULT)	|	VoC_bimac32inc_pp(REG6,REG7)
0xC962FBFD,	//0x0720		VoC_add32_rr(REG45,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
		//0x0722		VoC_endloop0
0xCD1CF90C,	//0x0722		VoC_multf32_rr(ACC0,REG4,REG3,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFA7CFFC0,	//0x0724		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_NOP
0x1050D537,	//0x0726		VoC_mac32_pd(REG2,0xd5c6)(lo)	|	VoC_bimac32inc_pp(REG6,REG7)
0xCD5B55C6,	//0x0728		VoC_multf32_rr(REG67,REG5,REG3,DEFAULT)	|	VoC_mac32_pd(REG2,0xd5c6)(hi)
0xC8E3FFC0,	//0x072a		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_NOP
0xE580FBD3,	//0x072c		VoC_return	|	VoC_shr32_ri(REG67,0xfffffffa,DEFAULT)
		//0x072e		CII_Az_lsp
0x1804DF40,	//0x072e		VoC_lw16i_set_inc(REG0,0xd72,0x1)(lo)	|	VoC_push32(REG01,DEFAULT)
0x40300D72,	//0x0730		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xd72,0x1)(hi)
0x4029E095,	//0x0732		VoC_add16_rr(REG1,REG0,REG5,DEFAULT)	|	VoC_lw16i_short(REG5,0x9,IN_PARALLEL)
0x0A86DFE9,	//0x0734		VoC_lw16i(REG6,0x400)(lo)	|	VoC_push16(RA,IN_PARALLEL)
0x18060400,	//0x0736		VoC_lw16i_set_inc(REG2,0xe1a,0x1)(lo)	|	VoC_lw16i(REG6,0x400)(hi)
0x18070E1A,	//0x0738		VoC_lw16i_set_inc(REG3,0xe24,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xe1a,0x1)(hi)
0x5C260E24,	//0x073a		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xe24,0x1)(hi)
0xDC36F3FD,	//0x073c		VoC_sw16_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0x20000A84,	//0x073e		VoC_lw16i(REG4,0x2000)
0x9B04E8AA,	//0x0740		VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x5,DEFAULT)
0xFFC09B0B,	//0x0742		VoC_NOP	|	VoC_multf32inc_rp(REG67,REG4,REG1,DEFAULT)
0xC91C4B1B,	//0x0744		VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0x83DF6125,	//0x0746		VoC_add16inc_rp(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_movreg16(REG5,ACC0_HI,DEFAULT)
0xDC378755,	//0x0748		VoC_sw16_p(REG7,REG3,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG5,REG2,DEFAULT)
		//0x074a		VoC_endloop0
0xF004DC25,	//0x074a		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_sw16_p(REG5,REG2,DEFAULT)
0x0E1B0A82,	//0x074c		VoC_lw16i(REG2,0xe1b)
0x0E101504,	//0x074e		VoC_sw16_d(REG4,0xe10)
0x02F40AC6,	//0x0750		VoC_lw16i(REG6,0x82f4)
0x03310AC7,	//0x0752		VoC_lw16i(REG7,0x8331)
0x5FC4D863,	//0x0754		VoC_push16(REG4,DEFAULT)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0x5FC4DF43,	//0x0756		VoC_push16(REG4,DEFAULT)	|	VoC_push32(REG67,IN_PARALLEL)
0x2B80DF41,	//0x0758		VoC_jal(CII_Chebps)(lo)	|	VoC_push32(REG23,IN_PARALLEL)
0xDA270709,	//0x075a		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_jal(CII_Chebps)(hi)
		//0x075c		AZ_LSP_LOOP
0xE0A05909,	//0x075c		VoC_lw16i_short(REG0,0xa,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xD6145913,	//0x075e		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x03840776,	//0x0760		VoC_add16_rd(REG6,REG6,0x8384)
0x07C334BE,	//0x0762		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG7,REG6)
0x07C33484,	//0x0764		VoC_bngt16_rr(AZ_LSP_LOOP_END,REG0,REG4)
0xF6645625,	//0x0766		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0xDD13D863,	//0x0768		VoC_sw32_sd(REG67,0x1,DEFAULT)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0xDF42DD09,	//0x076a		VoC_push32(REG45,DEFAULT)	|	VoC_sw32_sd(REG23,0x0,DEFAULT)
0x07092B80,	//0x076c		VoC_jal(CII_Chebps)
0xD90A5A27,	//0x076e		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG7,0x1,DEFAULT)
0xFFC0CDEC,	//0x0770		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG5,DEFAULT)
0x07C03284,	//0x0772		VoC_bgtz32_r(AZ_LSP_NOLOOP1,ACC0)
0x07872C09,	//0x0774		VoC_loop_i(0x1,0x4)
0x780BD911,	//0x0776		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC0E3F80C,	//0x0778		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0x07092B80,	//0x077a		VoC_jal(CII_Chebps)
0xCDE4D624,	//0x077c		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0x3284E066,	//0x077e		VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(lo)	|	VoC_movreg16(REG6,REG3,DEFAULT)
0xDD0B0783,	//0x0780		VoC_sw32_sd(REG67,0x0,DEFAULT)	|	VoC_bgtz32_r(AZ_LSP_03_01_ELSE,ACC0)(hi)
0xD911E5C5,	//0x0782		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_jump(AZ_LSP_03_01_END)
		//0x0783		AZ_LSP_03_01_ELSE
0xDA27E0C3,	//0x0784		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0xD90ADD11,	//0x0786		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
		//0x0787		AZ_LSP_03_01_END
		//0x0787		VoC_endloop1
0xD6275911,	//0x0788		VoC_lw16_sd(REG7,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC37F431E,	//0x078a		VoC_sub16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG3,DEFAULT)
0x07AC3187,	//0x078c		VoC_bez16_r(AZ_LSP_03_02_END,REG7)
0xE0065F43,	//0x078e		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x07933247,	//0x0790		VoC_bnltz16_r(AZ_LSP_ABS_S_1,REG7)
0xFF1CC3BF,	//0x0792		VoC_movreg32(ACC0,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
		//0x0793		AZ_LSP_ABS_S_1
0x01882B80,	//0x0794		VoC_jal(CII_NORM_L_ACC0)
0x3DD90B49,	//0x0796		VoC_sub16_dr(REG1,0xbdd9,REG1)
0x3FFF0A80,	//0x0798		VoC_lw16i(REG0,0x3fff)
0xF7215FC1,	//0x079a		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x019A2B80,	//0x079c		VoC_jal(CII_DIV_S)
0xCD94DF03,	//0x079e		VoC_multf32_rr(ACC0,REG6,REG2,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xFEACDF85,	//0x07a0		VoC_shr32_rr(ACC0,REG5,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0x3247E106,	//0x07a2		VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(lo)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x0B7607A7,	//0x07a4		VoC_sub16_dr(REG6,0xbaaa,REG6)(lo)	|	VoC_bnltz16_r(AZ_LSP_04_01_ELSE,REG7)(hi)
0xD6273AAA,	//0x07a6		VoC_lw16_sd(REG7,0x1,DEFAULT)	|	VoC_sub16_dr(REG6,0xbaaa,REG6)(hi)
		//0x07a7		AZ_LSP_04_01_ELSE
0xD911CDBB,	//0x07a8		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xC2F3FA5B,	//0x07aa		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
		//0x07ac		AZ_LSP_03_02_END
0xD610D923,	//0x07ac		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x3,DEFAULT)
0xDE00C03F,	//0x07ae		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG0,REG7,DEFAULT)
0xDA10DC73,	//0x07b0		VoC_sw16_sd(REG0,0x0,DEFAULT)	|	VoC_sw16_p(REG3,REG7,DEFAULT)
0x0A82F026,	//0x07b2		VoC_lw16i(REG2,0xe25)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x6C050E25,	//0x07b4		VoC_bez16_d(AZ_LSP_03_03_ELSE,0xe10)(lo)	|	VoC_lw16i(REG2,0xe25)(hi)
0xF0060E10,	//0x07b6		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bez16_d(AZ_LSP_03_03_ELSE,0xe10)(hi)
0x0E1B0A82,	//0x07b8		VoC_lw16i(REG2,0xe1b)
		//0x07ba		AZ_LSP_03_03_ELSE
0x0E101506,	//0x07ba		VoC_sw16_d(REG6,0xe10)
0x2B80DD11,	//0x07bc		VoC_jal(CII_Chebps)(lo)	|	VoC_sw32_sd(REG23,0x1,DEFAULT)
0xDA270709,	//0x07be		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_jal(CII_Chebps)(hi)
		//0x07c0		AZ_LSP_NOLOOP1
0x2B00DF02,	//0x07c0		VoC_jump_lg(AZ_LSP_LOOP)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xDF84075C,	//0x07c2		VoC_pop16(REG4,DEFAULT)	|	VoC_jump_lg(AZ_LSP_LOOP)(hi)
		//0x07c3		AZ_LSP_LOOP_END
0x5F85DF01,	//0x07c4		VoC_pop16(REG5,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xD908DF03,	//0x07c6		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0x3AB64C74,	//0x07c8		VoC_bnlt16_rd(AZ_LSP_01_02,REG4,0xbab6)
0xF0097050,	//0x07ca		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0x02CB2B80,	//0x07cc		VoC_jal(CII_Copy_M)
		//0x07ce		AZ_LSP_01_02
0xDF00DFA9,	//0x07ce		VoC_pop32(REG01,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xF8FBE580,	//0x07d0		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_return
		//0x07d1		CII_cbseach_subr1
0x0D5C1404,	//0x07d2		VoC_lw16_d(REG4,0xd5c)
0x3D920B65,	//0x07d4		VoC_sub16_dr(REG5,0xbd92,REG4)
0xF0054021,	//0x07d6		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
0x07DF3145,	//0x07d8		VoC_bngtz16_r(cbsearch_10000,REG5)
0xE7438EC4,	//0x07da		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)
0x8EC4810C,	//0x07dc		VoC_multf16inc_rp(REG4,REG3,REG0,DEFAULT)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
		//0x07de		VoC_endloop0
0xE580DC94,	//0x07de		VoC_return	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x07df		cbsearch_10000
		//0x07e0		CII_cor_h_x
0xE2805FE9,	//0x07e0		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4456AB,	//0x07e2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16_sd(ACC1_HI,0x9,DEFAULT)
0xF00756B6,	//0x07e4		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0xa,DEFAULT)
0xFF417F47,	//0x07e6		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xF69270AE,	//0x07e8		VoC_movreg16(INC2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x5,DEFAULT)
		//0x07ea		cor_h_x_loop_begin
0xC2177F46,	//0x07ea		VoC_sub16_rr(REG7,REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x08022E29,	//0x07ec		VoC_loop_r(1,REG5)
0xF76140B0,	//0x07ee		VoC_movreg16(REG1,ACC1_HI,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG2,REG6,DEFAULT)
0xC09767C2,	//0x07f0		VoC_add16_rr(REG7,REG2,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x07f2		VoC_endloop0
0x0A80D401,	//0x07f2		VoC_lw16i(REG0,0xdf2)(lo)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0x5E100DF2,	//0x07f4		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i(REG0,0xdf2)(hi)
0x0A80C1C7,	//0x07f6		VoC_lw16i(REG0,0x28)(lo)	|	VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)
0xDDBC0028,	//0x07f8		VoC_sw32_p(ACC0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x28)(hi)
0x07FE33C4,	//0x07fa		VoC_bnltz32_r(cor_h_x_250,ACC0)
0x3AAA0BE4,	//0x07fc		VoC_sub32_dr(ACC0,0xbaaa,ACC0)
		//0x07fe		cor_h_x_250
0x36A6C217,	//0x07fe		VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(lo)	|	VoC_sub16_rr(REG7,REG0,REG2,DEFAULT)
0xFF260802,	//0x0800		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_bngt32_rr(cor_h_x_200,ACC0,RL6)(hi)
		//0x0802		cor_h_x_200
		//0x0802		VoC_endloop1
0x7A0EFF44,	//0x0802		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x49BFDE18,	//0x0804		VoC_add32_rr(RL7,RL6,RL7,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x3423F662,	//0x0806		VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(lo)	|	VoC_movreg16(REG2,REG3,IN_PARALLEL)
0x614707EA,	//0x0808		VoC_movreg16(REG7,ACC1_LO,DEFAULT)	|	VoC_bgt16_rr(cor_h_x_loop_begin,REG4,REG3)(hi)
0x2B80FF3C,	//0x080a		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xDFA90188,	//0x080c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
0x1808C3CA,	//0x080e		VoC_lw16i_set_inc(REG0,0xdf2,0x2)(lo)	|	VoC_sub16_rr(REG2,REG7,REG1,DEFAULT)
0x18050DF2,	//0x0810		VoC_lw16i_set_inc(REG1,0x4450,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xdf2,0x2)(hi)
0x14C54450,	//0x0812		VoC_lw32_d(ACC1,0x828a)(lo)	|	VoC_lw16i_set_inc(REG1,0x4450,0x1)(hi)
0xD9C2028A,	//0x0814		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32_d(ACC1,0x828a)(hi)
0xFE926D05,	//0x0816		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD9C248AC,	//0x0818		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG45,ACC1,DEFAULT)
0xDC99FE92,	//0x081a		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
		//0x081b		VoC_endloop0
0xDFE9E580,	//0x081c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x081d		CII_cor_h
0x56A2F048,	//0x081e		VoC_lw16_sd(REG2,0x9,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
0x6A82F00A,	//0x0820		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xD512E009,	//0x0822		VoC_bimac32inc_pp(REG2,REG2)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
		//0x0823		VoC_endloop0
0x028A14C6,	//0x0824		VoC_lw32_d(RL6,0x828a)
0xF0087F20,	//0x0826		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x02AC44D1,	//0x0828		VoC_bne16_rd(COR_H101,REG1,0x82ac)
0x1809D6A0,	//0x082a		VoC_lw16i_set_inc(REG1,0xdf2,0x2)(lo)	|	VoC_lw16_sd(REG0,0x9,DEFAULT)
0x70220DF2,	//0x082c		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xdf2,0x2)(hi)
0x2B80E0A3,	//0x082e		VoC_jal(CII_scale)(lo)	|	VoC_lw16i_short(REG3,0xa,IN_PARALLEL)
0xE5DB02D0,	//0x0830		VoC_jump(COR_H102)	|	VoC_jal(CII_scale)(hi)
		//0x0832		COR_H101
0x2B80FA08,	//0x0832		VoC_jal(CII_Inv_sqrt)(lo)	|	VoC_shr32_ri(REG01,0x1,DEFAULT)
0xFBC80371,	//0x0834		VoC_shr32_ri(REG01,0xfffffff9,DEFAULT)	|	VoC_jal(CII_Inv_sqrt)(hi)
0x0A80F030,	//0x0836		VoC_lw16i(REG0,0x7eb8)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x46457EB8,	//0x0838		VoC_multf16_rr(REG5,REG1,REG0,DEFAULT)	|	VoC_lw16i(REG0,0x7eb8)(hi)
0x1809D6A0,	//0x083a		VoC_lw16i_set_inc(REG1,0xdf2,0x2)(lo)	|	VoC_lw16_sd(REG0,0x9,IN_PARALLEL)
0xF6D90DF2,	//0x083c		VoC_lw16i_short(FORMAT32,0xfffffff6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xdf2,0x2)(hi)
0x9B459B44,	//0x083e		VoC_multf32inc_rp(ACC1,REG5,REG0,DEFAULT)	|	VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)
0xFFC0C934,	//0x0840		VoC_NAD	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xC9756A88,	//0x0842		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF72A1B44,	//0x0844		VoC_movreg16(ACC1_LO,ACC0_HI,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG5,REG0,DEFAULT)
0x4934FFC0,	//0x0846		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_NOP
0xDDCD9B45,	//0x0848		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)
		//0x084a		VoC_endloop0
0xF7F9C975,	//0x084a		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)
		//0x084c		COR_H102
0x1808F146,	//0x084c		VoC_lw16i_set_inc(REG0,0xdf2,0x2)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0x18090DF2,	//0x084e		VoC_lw16i_set_inc(REG1,0x47ac,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xdf2,0x2)(hi)
0xFFC047AC,	//0x0850		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x47ac,0x2)(hi)
0x02D82B80,	//0x0852		VoC_jal(CII_copy_xy)
0x0DF21804,	//0x0854		VoC_lw16i_set_inc(REG0,0xdf2,0x1)
0x47AC1805,	//0x0856		VoC_lw16i_set_inc(REG1,0x47ac,0x1)
0x449F1FBE,	//0x0858		VoC_lw16i_set_inc(REG2,0x449f,0xffffffff)
0xDFA99E0C,	//0x085a		VoC_pop16(RA,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG0,REG1,DEFAULT)
0xD401C933,	//0x085c		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
0xEA86FFC0,	//0x085e		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_NAD
0xDCA74932,	//0x0860		VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,RL6,DEFAULT)
0xD401D401,	//0x0862		VoC_mac32inc_pp(REG0,REG1,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xDCA5C933,	//0x0864		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_add32_rr(REG67,ACC0,RL6,DEFAULT)
		//0x0865		VoC_endloop0
0x0DF20A8A,	//0x0866		VoC_lw16i(ACC1_LO,0xdf2)
0x47AC0A8B,	//0x0868		VoC_lw16i(ACC1_HI,0x47ac)
0x47851FBF,	//0x086a		VoC_lw16i_set_inc(REG3,0x4785,0xffffffff)
0xE26E702F,	//0x086c		VoC_lw16i_short(RL7_LO,0x26,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x1,DEFAULT)
0xDFC35F45,	//0x086e		VoC_push16(REG3,IN_PARALLEL)	|	VoC_push32(ACC1,DEFAULT)
0x0FA10A8A,	//0x0870		VoC_lw16i(ACC1_LO,0xfa1)
0x0F7A0A8B,	//0x0872		VoC_lw16i(ACC1_HI,0xf7a)
0x088E2C4F,	//0x0874		VoC_loop_i(0x1,0x27)
0xD9087F3A,	//0x0876		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xFF294069,	//0x0878		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xD61640E3,	//0x087a		VoC_lw16_sd(REG6,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x3D920B6F,	//0x087c		VoC_sub16_dr(REG7,0xbd92,REG5)
0xE2754134,	//0x087e		VoC_lw16i_short(REG5,0x27,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFF345401,	//0x0880		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
0xDF46702D,	//0x0882		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x1,DEFAULT)
0xD8A7E7C8,	//0x0884		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xF6AC0FDE,	//0x0886		VoC_movreg16(RL6_LO,REG5,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG7,REG3,DEFAULT)
0xC7F7E127,	//0x0888		VoC_multf16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC0_HI,DEFAULT)
0xCAB2D401,	//0x088a		VoC_sub32_rr(REG45,REG45,RL6,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG1,DEFAULT)
		//0x088c		VoC_endloop0
0xDF06DC47,	//0x088c		VoC_pop32(RL6,DEFAULT)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
		//0x088e		VoC_endloop1
0x382A097F,	//0x088e		VoC_add32_rd(RL7,RL7,0xb82a)
0xDF835F05,	//0x0890		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
0xDFE9E580,	//0x0892		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0893		CII_G_pitch
0x44781808,	//0x0894		VoC_lw16i_set_inc(REG0,0x4478,0x2)
0x44501809,	//0x0896		VoC_lw16i_set_inc(REG1,0x4450,0x2)
0x0CBE180A,	//0x0898		VoC_lw16i_set_inc(REG2,0xcbe,0x2)
0x038414C5,	//0x089a		VoC_lw32_d(ACC1,0x8384)
0xF62F600D,	//0x089c		VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG0,DEFAULT)
0xF62E600C,	//0x089e		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG0,DEFAULT)
0xD9D26A85,	//0x08a0		VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
0xF8157814,	//0x08a2		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x5DCADDC2,	//0x08a4		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x08a5		VoC_endloop0
0x7F30D9D2,	//0x08a6		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,IN_PARALLEL)
0xFFC0E047,	//0x08a8		VoC_NAD	|	VoC_lw16i_short(REG7,0x4,IN_PARALLEL)
0x08C62C05,	//0x08aa		VoC_loop_i(0x1,0x2)
0x00010A96,	//0x08ac		VoC_lw16i(STATUS,0x1)
0xFF2C6A82,	//0x08ae		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x08b0		VoC_endloop0
0xFFC0D501,	//0x08b0		VoC_NOP	|	VoC_bimac32inc_pp(REG0,REG1)
0x08B72F00,	//0x08b2		VoC_bnoe0z16_r(G_PITCH_01_ELSE)
0x01882B80,	//0x08b4		VoC_jal(CII_NORM_L_ACC0)
0xFF38E5C8,	//0x08b6		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_jump(G_PITCH_01_END)
		//0x08b7		G_PITCH_01_ELSE
0xEA81FF2C,	//0x08b8		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x08ba		VoC_endloop0
0x2B80D501,	//0x08ba		VoC_jal(CII_NORM_L_ACC0)(lo)	|	VoC_bimac32inc_pp(REG0,REG1)
0xC2790188,	//0x08bc		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_jal(CII_NORM_L_ACC0)(hi)
		//0x08be		G_PITCH_01_END
0x028A0964,	//0x08be		VoC_add32_rd(ACC0,ACC0,0x828a)
0xF6287047,	//0x08c0		VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0xFF217F0A,	//0x08c2		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_movreg32(REG45,REG23,DEFAULT)
0x0C6E1809,	//0x08c4		VoC_lw16i_set_inc(REG1,0xc6e,0x2)
		//0x08c6		VoC_endloop1
0xF62F61A0,	//0x08c6		VoC_movreg16(RL7_HI,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x1804F1E1,	//0x08c8		VoC_lw16i_set_inc(REG0,0xd54,0x1)(lo)	|	VoC_lw16i_short(REG1,0xf,DEFAULT)
0xC2660D54,	//0x08ca		VoC_sub16_rr(REG6,REG1,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xd54,0x1)(hi)
0xC2575C85,	//0x08cc		VoC_sub16_rr(REG7,REG1,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xC2A65C86,	//0x08ce		VoC_sub16_rr(REG6,REG2,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xE0025C83,	//0x08d0		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0x3AB007D9,	//0x08d2		VoC_sub16_rd(REG1,REG3,0xbab0)
0xF80B5C87,	//0x08d4		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x08E83201,	//0x08d6		VoC_bltz16_r(G_PITCH_03_END1,REG1)
0xF6A16060,	//0x08d8		VoC_movreg16(REG1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0x019A2B80,	//0x08da		VoC_jal(CII_DIV_S)
0xE0737E32,	//0x08dc		VoC_lw16i_short(REG3,0x7,IN_PARALLEL)	|	VoC_shr16_rr(REG2,REG6,DEFAULT)
0x4CCD0A81,	//0x08de		VoC_lw16i(REG1,0x4ccd)
0x08E43491,	//0x08e0		VoC_bngt16_rr(G_PITCH_03_END,REG2,REG1)
0xFFC0E022,	//0x08e2		VoC_NAD	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x08e4		G_PITCH_03_END
0x40864423,	//0x08e4		VoC_bne16_rd(G_PITCH_03_END1,REG3,0x4086)
0x7FFC1642,	//0x08e6		VoC_and16_ri(REG2,0xfffc)
		//0x08e8		G_PITCH_03_END1
0x1502DFA9,	//0x08e8		VoC_sw16_d(REG2,0xd5e)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800D5E,	//0x08ea		VoC_return	|	VoC_sw16_d(REG2,0xd5e)(hi)
		//0x08ec		CII_Pre_Process
0x05081807,	//0x08ec		VoC_lw16i_set_inc(REG3,0x508,0x1)
0x04661480,	//0x08ee		VoC_lw32_d(REG01,0x466)
0x04641806,	//0x08f0		VoC_lw16i_set_inc(REG2,0x464,0x1)
0x04621483,	//0x08f2		VoC_lw32_d(REG67,0x462)
0xFFC0D992,	//0x08f4		VoC_NAD	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0x09152D40,	//0x08f6		VoC_loop_i(0x0,0xa0)
0x716B0AC2,	//0x08f8		VoC_lw16i(REG2,0xf16b)
0xC796CDD4,	//0x08fa		VoC_multf16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG7,REG2,DEFAULT)
0x0E70E022,	//0x08fc		VoC_mac32_rd(REG6,0x8384)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x0A810384,	//0x08fe		VoC_lw16i(REG1,0x1e7f)(lo)	|	VoC_mac32_rd(REG6,0x8384)(hi)
0xCE291E7F,	//0x0900		VoC_mac32_rr(REG5,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x1e7f)(hi)
0x6001C70E,	//0x0902		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_multf16_rr(REG6,REG4,REG1,DEFAULT)
0x0E70D830,	//0x0904		VoC_mac32_rd(REG6,0x8384)(lo)	|	VoC_lw16_p(REG0,REG3,IN_PARALLEL)
0x0A860384,	//0x0906		VoC_lw16i(REG6,0x76b)(lo)	|	VoC_mac32_rd(REG6,0x8384)(hi)
0x0AC7076B,	//0x0908		VoC_lw16i(REG7,0xf12a)(lo)	|	VoC_lw16i(REG6,0x76b)(hi)
0xCE06712A,	//0x090a		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_lw16i(REG7,0xf12a)(hi)
0xCE16CE0F,	//0x090c		VoC_mac32_rr(REG2,REG6,DEFAULT)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0xFBECFF13,	//0x090e		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x028A0962,	//0x0910		VoC_add32_rd(REG45,ACC0,0x828a)
0x5CB5E104,	//0x0912		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xE125F90C,	//0x0914		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
		//0x0915		VoC_endloop0
0x04661580,	//0x0916		VoC_sw32_d(REG01,0x466)
0x04621583,	//0x0918		VoC_sw32_d(REG67,0x462)
0x04641582,	//0x091a		VoC_sw32_d(REG45,0x464)
0xDFE9E580,	//0x091c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x091d		CII_subframePreProc
0x40851406,	//0x091e		VoC_lw16_d(REG6,0x4085)
0xF0045FCF,	//0x0920		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push16(RL7_HI,DEFAULT)
0x04A41845,	//0x0922		VoC_lw16i_set_inc(REG1,0x84a4,0x1)
0x57563866,	//0x0924		VoC_bgt16_rd(cod_amr114,REG6,0xd756)
0x383A1845,	//0x0926		VoC_lw16i_set_inc(REG1,0xb83a,0x1)
		//0x0928		cod_amr114
0x0DF21806,	//0x0928		VoC_lw16i_set_inc(REG2,0xdf2,0x1)
0x09322C05,	//0x092a		VoC_loop_i(0x1,0x2)
0xFFC0D660,	//0x092c		VoC_NAD	|	VoC_lw16_sd(REG0,0x5,DEFAULT)
0x06272B80,	//0x092e		VoC_jal(CII_Weight_Ai)
0x049A1845,	//0x0930		VoC_lw16i_set_inc(REG1,0x849a,0x1)
		//0x0932		VoC_endloop1
0x0E061806,	//0x0932		VoC_lw16i_set_inc(REG2,0xe06,0x1)
0x0DF21804,	//0x0934		VoC_lw16i_set_inc(REG0,0xdf2,0x1)
0x081B1805,	//0x0936		VoC_lw16i_set_inc(REG1,0x81b,0x1)
0xD8866963,	//0x0938		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDC96D886,	//0x093a		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x093b		VoC_endloop0
0xE2865655,	//0x093c		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x081B1807,	//0x093e		VoC_lw16i_set_inc(REG3,0x81b,0x1)
0x432C0A87,	//0x0940		VoC_lw16i(REG7,0x432c)
0x1805F000,	//0x0942		VoC_lw16i_set_inc(REG1,0x826,0x1)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xFFC00826,	//0x0944		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x826,0x1)(hi)
0x0A0F2B80,	//0x0946		VoC_jal(CII_Syn_filt)
0x0E060A85,	//0x0948		VoC_lw16i(REG5,0xe06)
0x432C1807,	//0x094a		VoC_lw16i_set_inc(REG3,0x432c,0x1)
0x7000E067,	//0x094c		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0x1805E286,	//0x094e		VoC_lw16i_set_inc(REG1,0x826,0x1)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0xFFC00826,	//0x0950		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x826,0x1)(hi)
0x0A0F2B80,	//0x0952		VoC_jal(CII_Syn_filt)
0xF0045650,	//0x0954		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x4,DEFAULT)
0x0D0E1806,	//0x0956		VoC_lw16i_set_inc(REG2,0xd0e,0x1)
0x1807D636,	//0x0958		VoC_lw16i_set_inc(REG3,0x4e0,0x1)(lo)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x6C0404E0,	//0x095a		VoC_bez16_d(subframePreProc500,0x4087)(lo)	|	VoC_lw16i_set_inc(REG3,0x4e0,0x1)(hi)
0x18074087,	//0x095c		VoC_lw16i_set_inc(REG3,0x508,0x1)(lo)	|	VoC_bez16_d(subframePreProc500,0x4087)(hi)
0xC19B0508,	//0x095e		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x508,0x1)(hi)
		//0x095f		subframePreProc500
0x05872B80,	//0x0960		VoC_jal(CII_Residu_new)
0x0D0E1808,	//0x0962		VoC_lw16i_set_inc(REG0,0xd0e,0x2)
0x077A1809,	//0x0964		VoC_lw16i_set_inc(REG1,0x77a,0x2)
0xC189D636,	//0x0966		VoC_add16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x2B80F146,	//0x0968		VoC_jal(CII_copy_xy)(lo)	|	VoC_lw16i_short(REG6,0xa,DEFAULT)
0xD65502D8,	//0x096a		VoC_lw16_sd(REG5,0x4,DEFAULT)	|	VoC_jal(CII_copy_xy)(hi)
0x077A1807,	//0x096c		VoC_lw16i_set_inc(REG3,0x77a,0x1)
0xC19BD636,	//0x096e		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16_sd(REG6,0x2,DEFAULT)
0x09800A87,	//0x0970		VoC_lw16i(REG7,0x980)
0xE2867000,	//0x0972		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x09761805,	//0x0974		VoC_lw16i_set_inc(REG1,0x976,0x1)
0x0A0F2B80,	//0x0976		VoC_jal(CII_Syn_filt)
0x0DF21804,	//0x0978		VoC_lw16i_set_inc(REG0,0xdf2,0x1)
0x0C6E1806,	//0x097a		VoC_lw16i_set_inc(REG2,0xc6e,0x1)
0x09801807,	//0x097c		VoC_lw16i_set_inc(REG3,0x980,0x1)
0x05872B80,	//0x097e		VoC_jal(CII_Residu_new)
0x0E060A85,	//0x0980		VoC_lw16i(REG5,0xe06)
0x0C6E1807,	//0x0982		VoC_lw16i_set_inc(REG3,0xc6e,0x1)
0xE2866067,	//0x0984		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0xDF817000,	//0x0986		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x2B80F031,	//0x0988		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDFA90A0F,	//0x098a		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0xE580FFC0,	//0x098c		VoC_return	|	VoC_NOP
		//0x098e		CII_Int_lpc_only_2
0xF053F052,	//0x098e		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xD99BD9D2,	//0x0990		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xE8ABFFC0,	//0x0992		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_NAD
0xF8157814,	//0x0994		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xF8177816,	//0x0996		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xBAFF3AF6,	//0x0998		VoC_sub16inc_pr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_sub16inc_pr(REG6,REG3,REG6,DEFAULT)
0xC17D4134,	//0x099a		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xDDCAD99B,	//0x099c		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
		//0x099e		VoC_endloop0
0xE580D9D2,	//0x099e		VoC_return	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
		//0x09a0		CII_Int_lpc_1to3
0xE064DFE9,	//0x09a0		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x44501809,	//0x09a2		VoC_lw16i_set_inc(REG1,0x4450,0x2)
0xDF415FC6,	//0x09a4		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xF6455F40,	//0x09a6		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x2B80FF11,	//0x09a8		VoC_jal(CII_Int_lpc_only_2)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0xD908098E,	//0x09aa		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Int_lpc_only_2)(hi)
0x04B12B80,	//0x09ac		VoC_jal(CII_Lsp_Az)
0xD911D908,	//0x09ae		VoC_lw32_sd(REG23,0x1,DEFAULT)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x062E2B80,	//0x09b0		VoC_jal(CII_Int_lpc_only)
0x0740D908,	//0x09b2		VoC_add16_rd(REG0,REG0,0xba75)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x2B803A75,	//0x09b4		VoC_jal(CII_Lsp_Az)(lo)	|	VoC_add16_rd(REG0,REG0,0xba75)(hi)
0xD90804B1,	//0x09b6		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Lsp_Az)(hi)
0x2B80D911,	//0x09b8		VoC_jal(CII_Int_lpc_only_2)(lo)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xD908098E,	//0x09ba		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_jal(CII_Int_lpc_only_2)(hi)
0x3D9F0740,	//0x09bc		VoC_add16_rd(REG0,REG0,0xbd9f)
0x04B12B80,	//0x09be		VoC_jal(CII_Lsp_Az)
0xDF005F86,	//0x09c0		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x09CA3186,	//0x09c2		VoC_bez16_r(Int_lpc_1to3_L,REG6)
0xE2175909,	//0x09c4		VoC_lw16i_short(REG7,0x21,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xC0386061,	//0x09c6		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x04B12B80,	//0x09c8		VoC_jal(CII_Lsp_Az)
		//0x09ca		Int_lpc_1to3_L
0xDF01DFA9,	//0x09ca		VoC_pop32(REG23,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x09cc		VoC_NAD	|	VoC_return
		//0x09ce		CII_build_code_com2
0x0F701805,	//0x09ce		VoC_lw16i_set_inc(REG1,0xf70,0x1)
0x47AC1807,	//0x09d0		VoC_lw16i_set_inc(REG3,0x47ac,0x1)
0x0DF21806,	//0x09d2		VoC_lw16i_set_inc(REG2,0xdf2,0x1)
0xFF0E6785,	//0x09d4		VoC_movreg32(RL6,REG23,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0x14C487CD,	//0x09d6		VoC_lw32_d(ACC0,0x828a)(lo)	|	VoC_sub16inc_rp(REG5,REG7,REG1,DEFAULT)
0xDCB5028A,	//0x09d8		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw32_d(ACC0,0x828a)(hi)
		//0x09d9		VoC_endloop0
0xFF317F27,	//0x09da		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x09E52C51,	//0x09dc		VoC_loop_i(0x1,0x28)
0xD831E784,	//0x09de		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD129D8A5,	//0x09e0		VoC_mac32inc_rp(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x09e2		VoC_endloop0
0x7F3CDCB1,	//0x09e2		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_sw16inc_p(REG1,REG3,DEFAULT)
0xDC89FF31,	//0x09e4		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_movreg32(REG23,RL6,IN_PARALLEL)
		//0x09e5		VoC_endloop1
0xC376E580,	//0x09e6		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_return
		//0x09e7		CII_Pred_lt_3or6
0xF00577F0,	//0x09e8		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0xffffffff,DEFAULT)
0xF01B70D2,	//0x09ea		VoC_lw16i_short(INC3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x6,DEFAULT)
0x3AAA0B79,	//0x09ec		VoC_sub16_dr(REG1,0xbaaa,REG7)
0x09F23182,	//0x09ee		VoC_bez16_r(PRED_IT_3OR6_001,REG2)
0xFFC0F8F9,	//0x09f0		VoC_NAD	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
		//0x09f2		PRED_IT_3OR6_001
0xE0637024,	//0x09f2		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x09F83241,	//0x09f4		VoC_bnltz16_r(PRED_IT6_003,REG1)
0xC3A64059,	//0x09f6		VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x09f8		PRED_IT6_003
0x03CA0AC7,	//0x09f8		VoC_lw16i(REG7,0x83ca)
0xC2CB41CA,	//0x09fa		VoC_sub16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG7,REG1,DEFAULT)
0x14C4C0FB,	//0x09fc		VoC_lw32_d(ACC0,0x828a)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x7F0F028A,	//0x09fe		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_lw32_d(ACC0,0x828a)(hi)
0xFFC0FF26,	//0x0a00		VoC_NAD	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0x0A0C2C51,	//0x0a02		VoC_loop_i(0x1,0x28)
0xC1A660C0,	//0x0a04		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
0xF6C16943,	//0x0a06		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD40BD402,	//0x0a08		VoC_mac32inc_pp(REG1,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG2,DEFAULT)
		//0x0a09		VoC_endloop0
0xC165FF39,	//0x0a0a		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_movreg32(REG23,RL7,DEFAULT)
		//0x0a0c		VoC_endloop1
0xFF345C59,	//0x0a0c		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG5,DEFAULT)
0xDF40E580,	//0x0a0e		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x0a0f		CII_Syn_filt
0x44F01806,	//0x0a10		VoC_lw16i_set_inc(REG2,0x44f0,0x1)
0xD8946944,	//0x0a12		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xE0105894,	//0x0a14		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
		//0x0a16		VoC_endloop0
0xF0085CA4,	//0x0a16		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xC1455854,	//0x0a18		VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG5,DEFAULT)
0xDFE960A0,	//0x0a1a		VoC_push16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x44F91FB9,	//0x0a1c		VoC_lw16i_set_inc(REG1,0x44f9,0xfffffffe)
0x0A292E31,	//0x0a1e		VoC_loop_r(1,REG6)
0x68A2E201,	//0x0a20		VoC_loop_i_short(0x5,DEFAULT)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0xD5819B1C,	//0x0a22		VoC_bimsu32inc_pp(REG0,REG1)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,IN_PARALLEL)
		//0x0a23		VoC_endloop0
0xFBECE0A0,	//0x0a24		VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG0,REG5,DEFAULT)
0x028A0964,	//0x0a26		VoC_add32_rd(ACC0,ACC0,0x828a)
0xDCA9E041,	//0x0a28		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x0a29		VoC_endloop1
0x44FA1808,	//0x0a2a		VoC_lw16i_set_inc(REG0,0x44fa,0x2)
0xF00960C5,	//0x0a2c		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF6E17816,	//0x0a2e		VoC_movreg16(REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x02D82B80,	//0x0a30		VoC_jal(CII_copy_xy)
0x5756445E,	//0x0a32		VoC_bne16_rd(SYN_FILT_01,REG6,0xd756)
0xD908DD8C,	//0x0a34		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x0a35		SYN_FILT_01
0x0A3D3180,	//0x0a36		VoC_bez16_r(Syn_filt103,REG0)
0x44F00A80,	//0x0a38		VoC_lw16i(REG0,0x44f0)
0x2B80C028,	//0x0a3a		VoC_jal(CII_Copy_M)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xDFA902CB,	//0x0a3c		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_Copy_M)(hi)
		//0x0a3d		Syn_filt103
0xE580DF00,	//0x0a3e		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0a40		CII_amr_dec_com_sub1
0xF030F8FD,	//0x0a40		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xE2865F80,	//0x0a42		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x0D122006,	//0x0a44		VoC_lw16d_set_inc(REG2,0xd12,0x1)
0x40876C04,	//0x0a46		VoC_bez16_d(amr_dec_com_sub1_L1,0x4087)
0xFFC0F8F5,	//0x0a48		VoC_NAD	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
		//0x0a4a		amr_dec_com_sub1_L1
0x3D924CCA,	//0x0a4a		VoC_bnlt16_rd(Dec_amr_L32A,REG2,0xbd92)
0xC0824394,	//0x0a4c		VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG6,REG2,DEFAULT)
0xE7038F46,	//0x0a4e		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_multf16inc_rp(REG6,REG5,REG0,DEFAULT)
0x8F468196,	//0x0a50		VoC_multf16inc_rp(REG6,REG5,REG0,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
		//0x0a52		VoC_endloop0
0xD632DCA6,	//0x0a52		VoC_lw16_sd(REG2,0x2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x0a53		Dec_amr_L32A
0x0D191505,	//0x0a54		VoC_sw16_d(REG5,0xd19)
0xDA32D8A6,	//0x0a56		VoC_sw16_sd(REG2,0x2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xF004E580,	//0x0a58		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_return
		//0x0a59		CII_amr_dec_com_sub3
0x1804DF43,	//0x0a5a		VoC_lw16i_set_inc(REG0,0xce6,0x1)(lo)	|	VoC_push32(REG67,DEFAULT)
0x18050CE6,	//0x0a5c		VoC_lw16i_set_inc(REG1,0xa48,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xce6,0x1)(hi)
0x18060A48,	//0x0a5e		VoC_lw16i_set_inc(REG2,0xdca,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xa48,0x1)(hi)
0x6D0A0DCA,	//0x0a60		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xdca,0x1)(hi)
0xD813C33F,	//0x0a62		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_sub16_rr(REG7,REG4,REG7,IN_PARALLEL)
0xD12ACCF4,	//0x0a64		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0xFEBCDC83,	//0x0a66		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_sw16inc_p(REG3,REG0,DEFAULT)
0x028A0964,	//0x0a68		VoC_add32_rd(ACC0,ACC0,0x828a)
0xDC99F044,	//0x0a6a		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x0a6b		VoC_endloop0
0x489CF005,	//0x0a6c		VoC_blt16_rd(Dec_amr_L64,REG4,0x4084)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x6C094084,	//0x0a6e		VoC_bez16_d(Dec_amr_L64,0xd2a)(lo)	|	VoC_blt16_rd(Dec_amr_L64,REG4,0x4084)(hi)
0xD9130D2A,	//0x0a70		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_bez16_d(Dec_amr_L64,0xd2a)(hi)
0x0A783186,	//0x0a72		VoC_bez16_r(Dec_amr_L64,REG6)
0x3AAF3C67,	//0x0a74		VoC_bngt16_rd(Dec_amr_L64,REG7,0xbaaf)
0xFFC0F025,	//0x0a76		VoC_NAD	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x0a78		Dec_amr_L64
0x0B1E1807,	//0x0a78		VoC_lw16i_set_inc(REG3,0xb1e,0x1)
0x0B261505,	//0x0a7a		VoC_sw16_d(REG5,0xb26)
0x0CE61806,	//0x0a7c		VoC_lw16i_set_inc(REG2,0xce6,0x1)
0x0D161407,	//0x0a7e		VoC_lw16_d(REG7,0xd16)
0x0DCA1804,	//0x0a80		VoC_lw16i_set_inc(REG0,0xdca,0x1)
0xDFC2DFC3,	//0x0a82		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xD91EDFC0,	//0x0a84		VoC_lw32_sd(RL6,0x2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x0B24180A,	//0x0a86		VoC_lw16i_set_inc(REG2,0xb24,0x2)
0x0B211FBF,	//0x0a88		VoC_lw16i_set_inc(REG3,0xb21,0xffffffff)
0xD9D2DFC2,	//0x0a8a		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0xE0245990,	//0x0a8c		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x0B221FBE,	//0x0a8e		VoC_lw16i_set_inc(REG2,0xb22,0xffffffff)
0xD8B66883,	//0x0a90		VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCA6D8B6,	//0x0a92		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x0a93		VoC_endloop0
0xE0135C27,	//0x0a94		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0x03AF4C77,	//0x0a96		VoC_bnlt16_rd(Phdisp_L1,REG7,0x83af)
0x3C5FF004,	//0x0a98		VoC_bngt16_rd(Phdisp_L1,REG7,0x83aa)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF02403AA,	//0x0a9a		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt16_rd(Phdisp_L1,REG7,0x83aa)(hi)
		//0x0a9c		Phdisp_L1
0x02F20A6B,	//0x0a9c		VoC_multf32_rd(REG67,REG5,0x82f2)
0xFBF3FFC0,	//0x0a9e		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_NOP
0x4C2FC8F3,	//0x0aa0		VoC_bnlt16_rd(Phdisp_L4,REG7,0xd18)(lo)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xF0410D18,	//0x0aa2		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_bnlt16_rd(Phdisp_L4,REG7,0xd18)(hi)
0xFFC0E5C5,	//0x0aa4		VoC_NAD	|	VoC_jump(Phdisp_L5)
		//0x0aa6		Phdisp_L4
0x0AA93141,	//0x0aa6		VoC_bngtz16_r(Phdisp_L5,REG1)
0xF032C259,	//0x0aa8		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
		//0x0aa9		Phdisp_L5
0x0AB831C1,	//0x0aaa		VoC_bnez16_r(Phdisp_L6,REG1)
0xE00668A7,	//0x0aac		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x03AA0CD7,	//0x0aae		VoC_sub16inc_dp(REG7,0x83aa,REG2)
0x0AB33147,	//0x0ab0		VoC_bngtz16_r(Phdisp_L7,REG7)
0xFFC0C19E,	//0x0ab2		VoC_NOP	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
		//0x0ab3		Phdisp_L7
		//0x0ab3		VoC_endloop0
0x3AAE3C66,	//0x0ab4		VoC_bngt16_rd(Phdisp_L6,REG6,0xbaae)
0xFFC0F004,	//0x0ab6		VoC_NAD	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0ab8		Phdisp_L6
0x0ABE31C1,	//0x0ab8		VoC_bnez16_r(Phdisp_L8,REG1)
0x3C1AC31A,	//0x0aba		VoC_bngt16_rd(Phdisp_L8,REG2,0xb24)(lo)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0xE0440B24,	//0x0abc		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_bngt16_rd(Phdisp_L8,REG2,0xb24)(hi)
		//0x0abe		Phdisp_L8
0x0AC33141,	//0x0abe		VoC_bngtz16_r(Phdisp_L9,REG1)
0x3AAE4C5C,	//0x0ac0		VoC_bnlt16_rd(Phdisp_L9,REG4,0xbaae)
0xF053C11C,	//0x0ac2		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
		//0x0ac3		Phdisp_L9
0x0D181405,	//0x0ac4		VoC_lw16_d(REG5,0xd18)
0x3AB64C5D,	//0x0ac6		VoC_bnlt16_rd(Phdisp_L10,REG5,0xbab6)
0xDF83F044,	//0x0ac8		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
		//0x0ac9		Phdisp_L10
0x03844458,	//0x0aca		VoC_bne16_rd(Phdisp_L11,REG0,0x8384)
0xD612F004,	//0x0acc		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0acd		Phdisp_L11
0xDD98DDDA,	//0x0ace		VoC_sw32_p(REG01,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG3,DEFAULT)
0xDFE9E580,	//0x0ad0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ad1		CII_amr_dec_com_sub4
0xD90B5631,	//0x0ad2		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG1,0x2,DEFAULT)
0x3AAA0B7F,	//0x0ad4		VoC_sub16_dr(REG7,0xbaaa,REG7)
0xD6226D08,	//0x0ad6		VoC_lw16_sd(REG2,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD12A998C,	//0x0ad8		VoC_mac32inc_rp(REG5,REG2,DEFAULT)	|	VoC_multf32_rp(ACC0,REG6,REG1,DEFAULT)
0xFEBCF030,	//0x0ada		VoC_shr32_rr(ACC0,REG7,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF033C934,	//0x0adc		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x0ade		VoC_endloop0
0x5F05DC99,	//0x0ade		VoC_pop32(ACC1,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0x5632FF44,	//0x0ae0		VoC_lw16_sd(REG2,0x2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xEA81F00A,	//0x0ae2		VoC_loop_i_short(0x14,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
		//0x0ae4		VoC_endloop0
0xF225D512,	//0x0ae4		VoC_lw16i_short(REG5,0x11,DEFAULT)	|	VoC_bimac32inc_pp(REG2,REG2)
0x2B80FA0C,	//0x0ae6		VoC_jal(CII_sqrt_l_exp)(lo)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xF8090657,	//0x0ae8		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_jal(CII_sqrt_l_exp)(hi)
0xC0695FA9,	//0x0aea		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xFE8C590B,	//0x0aec		VoC_shr32_rr(ACC0,REG1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF7055F80,	//0x0aee		VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xDFE9E580,	//0x0af0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0af1		CII_amr_dec_com_sub5
0x1FBCF083,	//0x0af2		VoC_lw16i_set_inc(REG0,0xa92,0xffffffff)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0x6C090A92,	//0x0af4		VoC_bez16_d(Dec_amr_L67A,0xa94)(lo)	|	VoC_lw16i_set_inc(REG0,0xa92,0xffffffff)(hi)
0x3C3B0A94,	//0x0af6		VoC_bngt16_rd(Dec_amr_L67A,REG3,0xa88)(lo)	|	VoC_bez16_d(Dec_amr_L67A,0xa94)(hi)
0x6E090A88,	//0x0af8		VoC_bnez16_d(Dec_amr_L68,0xd2a)(lo)	|	VoC_bngt16_rd(Dec_amr_L67A,REG3,0xa88)(hi)
0x6E070D2A,	//0x0afa		VoC_bnez16_d(Dec_amr_L68,0xa86)(lo)	|	VoC_bnez16_d(Dec_amr_L68,0xd2a)(hi)
0xFFC00A86,	//0x0afc		VoC_NAD	|	VoC_bnez16_d(Dec_amr_L68,0xa86)(hi)
		//0x0afe		Dec_amr_L67A
0xD8056923,	//0x0afe		VoC_lw16_p(REG5,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xD805DC85,	//0x0b00		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x0b01		VoC_endloop0
		//0x0b02		Dec_amr_L68
0x1804D621,	//0x0b02		VoC_lw16i_set_inc(REG0,0xcbe,0x1)(lo)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0x14040CBE,	//0x0b04		VoC_lw16_d(REG4,0xd19)(lo)	|	VoC_lw16i_set_inc(REG0,0xcbe,0x1)(hi)
0x7F010D19,	//0x0b06		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_lw16_d(REG4,0xd19)(hi)
0x3D4CF005,	//0x0b08		VoC_bngt16_rd(Dec_amr_L69,REG4,0x82f2)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDF4002F2,	//0x0b0a		VoC_push32(REG01,DEFAULT)	|	VoC_bngt16_rd(Dec_amr_L69,REG4,0x82f2)(hi)
0x6D04E003,	//0x0b0c		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0x838ED886,	//0x0b0e		VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)
0xDCB6D886,	//0x0b10		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x0b11		VoC_endloop0
0xE0145908,	//0x0b12		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xD9175622,	//0x0b14		VoC_lw32_sd(RL7,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x0DBD2B80,	//0x0b16		VoC_jal(CII_agc)
0xE043DF01,	//0x0b18		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x0b1a		Dec_amr_L69
0x00010A96,	//0x0b1a		VoC_lw16i(STATUS,0x1)
0xD644D655,	//0x0b1c		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x41E7D697,	//0x0b1e		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16_sd(REG7,0x8,DEFAULT)
0x6E03E286,	//0x0b20		VoC_bnez16_d(Dec_amr_L69new,0x4087)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0xF0004087,	//0x0b22		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez16_d(Dec_amr_L69new,0x4087)(hi)
		//0x0b24		Dec_amr_L69new
0x0A7A1805,	//0x0b24		VoC_lw16i_set_inc(REG1,0xa7a,0x1)
0xFFC0DF43,	//0x0b26		VoC_NAD	|	VoC_push32(REG67,DEFAULT)
0x0A0F2B80,	//0x0b28		VoC_jal(CII_Syn_filt)
0x40876E24,	//0x0b2a		VoC_bnez16_d(Dec_amr_L76,0x4087)
0x0B482E80,	//0x0b2c		VoC_boe0z16_r(Dec_amr_L75)
0x09AE1808,	//0x0b2e		VoC_lw16i_set_inc(REG0,0x9ae,0x2)
0x00610A85,	//0x0b30		VoC_lw16i(REG5,0x61)
0xE001E84C,	//0x0b32		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xFFC0D9C3,	//0x0b34		VoC_NAD	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0x0B3B2E29,	//0x0b36		VoC_loop_r(1,REG5)
0xF8177816,	//0x0b38		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xDDCBD9C3,	//0x0b3a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0b3b		VoC_endloop1
0x0CE61808,	//0x0b3c		VoC_lw16i_set_inc(REG0,0xce6,0x2)
		//0x0b3e		VoC_endloop0
0xE1456003,	//0x0b3e		VoC_lw16i_short(REG5,0x14,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xD90BD655,	//0x0b40		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_lw16_sd(REG5,0x4,DEFAULT)
0x0A7A1805,	//0x0b42		VoC_lw16i_set_inc(REG1,0xa7a,0x1)
0x2B80F020,	//0x0b44		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE5C70A0F,	//0x0b46		VoC_jump(Dec_amr_L76)	|	VoC_jal(CII_Syn_filt)(hi)
		//0x0b48		Dec_amr_L75
0x0A7A1809,	//0x0b48		VoC_lw16i_set_inc(REG1,0xa7a,0x2)
0x3D800778,	//0x0b4a		VoC_add16_rd(REG0,REG7,0xbd80)
0x02CB2B80,	//0x0b4c		VoC_jal(CII_Copy_M)
		//0x0b4e		Dec_amr_L76
0xDFA9DF06,	//0x0b4e		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x09D61808,	//0x0b50		VoC_lw16i_set_inc(REG0,0x9d6,0x2)
0x09AE180B,	//0x0b52		VoC_lw16i_set_inc(REG3,0x9ae,0x2)
0x2C9AD9C4,	//0x0b54		VoC_loop_i(0x0,0x4d)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C40B58,	//0x0b56		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x4d)(hi)
		//0x0b58		VoC_endloop0
0x1404DDDC,	//0x0b58		VoC_lw16_d(REG4,0xd12)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xF0300D12,	//0x0b5a		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16_d(REG4,0xd12)(hi)
0xF0075645,	//0x0b5c		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x3,DEFAULT)
0x3A75076E,	//0x0b5e		VoC_add16_rd(REG6,REG5,0xba75)
0x0A851504,	//0x0b60		VoC_sw16_d(REG4,0xa85)
0xE2806862,	//0x0b62		VoC_lw16i_short(REG0,0x28,IN_PARALLEL)	|	VoC_loop_i_short(0x3,DEFAULT)
		//0x0b64		VoC_endloop0
0x5A16DF85,	//0x0b64		VoC_sw16_sd(REG6,0x0,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xE580C145,	//0x0b66		VoC_return	|	VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)
		//0x0b68		CII_AMR_Decode
0xF005DFE9,	//0x0b68		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x55224867,	//0x0b6a		VoC_blt16_rd(DEC_MODE_IS_AMR,REG7,0xd522)
0x42FD1505,	//0x0b6c		VoC_sw16_d(REG5,0x42fd)
		//0x0b6e		DEC_MODE_IS_AMR
0x0B7E3182,	//0x0b6e		VoC_bez16_r(amr_dec_main_L117,REG2)
0x40891502,	//0x0b70		VoC_sw16_d(REG2,0x4089)
0xFFC0FF46,	//0x0b72		VoC_NAD	|	VoC_lw32z(RL6,DEFAULT)
0x0D522B80,	//0x0b74		VoC_jal(CII_dec_reset)
0x0DA12B80,	//0x0b76		VoC_jal(CII_Post_Filter_reset)
0x40876C06,	//0x0b78		VoC_bez16_d(amr_dec_main_L117,0x4087)
0x10182B80,	//0x0b7a		VoC_jal(CII_dtx_efr_dec_reset)
0x11072B80,	//0x0b7c		VoC_jal(CII_reset_rx_dtx)
		//0x0b7e		amr_dec_main_L117
0x04141406,	//0x0b7e		VoC_lw16_d(REG6,0x414)
0x40841407,	//0x0b80		VoC_lw16_d(REG7,0x4084)
0x4425F0E5,	//0x0b82		VoC_bne16_rd(amr_dec_main_L1,REG5,0x42fd)(lo)	|	VoC_lw16i_short(REG5,0x7,DEFAULT)
0xE0C742FD,	//0x0b84		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_bne16_rd(amr_dec_main_L1,REG5,0x42fd)(hi)
0xE0E6E5C2,	//0x0b86		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_jump(amr_dec_main_L2)
		//0x0b87		amr_dec_main_L1
		//0x0b88		amr_dec_main_L2
0x1506DFC7,	//0x0b88		VoC_sw16_d(REG6,0x414)(lo)	|	VoC_push16(REG7,DEFAULT)
0x15070414,	//0x0b8a		VoC_sw16_d(REG7,0x4084)(lo)	|	VoC_sw16_d(REG6,0x414)(hi)
0xFFC04084,	//0x0b8c		VoC_NAD	|	VoC_sw16_d(REG7,0x4084)(hi)
0x0DFC2B80,	//0x0b8e		VoC_jal(CII_bits2prm_amr_efr)
0x40891403,	//0x0b90		VoC_lw16_d(REG3,0x4089)
0x13D40AC6,	//0x0b92		VoC_lw16i(REG6,0x93d4)
0x03844463,	//0x0b94		VoC_bne16_rd(amr_dec_main_L3,REG3,0x8384)
0x13DE0AC6,	//0x0b96		VoC_lw16i(REG6,0x93de)
		//0x0b98		amr_dec_main_L3
0xC1BED617,	//0x0b98		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x15B61846,	//0x0b9a		VoC_lw16i_set_inc(REG2,0x95b6,0x1)
0xC0BA5866,	//0x0b9c		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x0D581805,	//0x0b9e		VoC_lw16i_set_inc(REG1,0xd58,0x1)
0x6C04D822,	//0x0ba0		VoC_bez16_d(efr_label6,0x4087)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x0AC24087,	//0x0ba2		VoC_lw16i(REG2,0x836c)(lo)	|	VoC_bez16_d(efr_label6,0x4087)(hi)
0xE786036C,	//0x0ba4		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i(REG2,0x836c)(hi)
		//0x0ba5		efr_label6
0xD8A35896,	//0x0ba6		VoC_lw16inc_p(REG3,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x31C6E49E,	//0x0ba8		VoC_bnez16_r(Dhf_test_L2,REG6)(lo)	|	VoC_xor16_rr(REG6,REG3,DEFAULT)
0xFFC00BAC,	//0x0baa		VoC_NAD	|	VoC_bnez16_r(Dhf_test_L2,REG6)(hi)
		//0x0bab		VoC_endloop0
		//0x0bac		Dhf_test_L2
0x31C6F005,	//0x0bac		VoC_bnez16_r(Dhf_test_L3,REG6)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF0250BB0,	//0x0bae		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bnez16_r(Dhf_test_L3,REG6)(hi)
		//0x0bb0		Dhf_test_L3
0x40881483,	//0x0bb0		VoC_lw32_d(REG67,0x4088)
0x0BB63187,	//0x0bb2		VoC_bez16_r(amr_dec_main_L3B,REG7)
0xE5C3E0A6,	//0x0bb4		VoC_jump(amr_dec_main_L3A)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0bb6		amr_dec_main_L3B
0x40891505,	//0x0bb6		VoC_sw16_d(REG5,0x4089)
		//0x0bb8		amr_dec_main_L3A
0x3186DF43,	//0x0bb8		VoC_bez16_r(amr_dec_main_L4,REG6)(lo)	|	VoC_push32(REG67,DEFAULT)
0x31870BC6,	//0x0bba		VoC_bez16_r(amr_dec_main_L4,REG7)(lo)	|	VoC_bez16_r(amr_dec_main_L4,REG6)(hi)
0x18080BC6,	//0x0bbc		VoC_lw16i_set_inc(REG0,0x43ea,0x2)(lo)	|	VoC_bez16_r(amr_dec_main_L4,REG7)(hi)
0x14C443EA,	//0x0bbe		VoC_lw32_d(ACC0,0xba7c)(lo)	|	VoC_lw16i_set_inc(REG0,0x43ea,0x2)(hi)
0x2CA03A7C,	//0x0bc0		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw32_d(ACC0,0xba7c)(hi)
0xDDC40BC3,	//0x0bc2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x0bc3		VoC_endloop0
0xFFC0E5C4,	//0x0bc4		VoC_NAD	|	VoC_jump(amr_dec_main_L5)
		//0x0bc6		amr_dec_main_L4
0x0BEB2B80,	//0x0bc6		VoC_jal(CII_Speech_Decode_Frame)
		//0x0bc8		amr_dec_main_L5
0x31C3DF01,	//0x0bc8		VoC_bnez16_r(amr_dec_main_L6,REG3)(lo)	|	VoC_pop32(REG23,DEFAULT)
0x14020BCE,	//0x0bca		VoC_lw16_d(REG2,0x4089)(lo)	|	VoC_bnez16_r(amr_dec_main_L6,REG3)(hi)
0xFFC04089,	//0x0bcc		VoC_NAD	|	VoC_lw16_d(REG2,0x4089)(hi)
		//0x0bce		amr_dec_main_L6
0xF6435F87,	//0x0bce		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x6E0FFF46,	//0x0bd0		VoC_bnez16_d(amr_dec_main_L7,0xd2a)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0x15810D2A,	//0x0bd2		VoC_sw32_d(REG23,0x4088)(lo)	|	VoC_bnez16_d(amr_dec_main_L7,0xd2a)(hi)
0x31824088,	//0x0bd4		VoC_bez16_r(amr_dec_main_L7,REG2)(lo)	|	VoC_sw32_d(REG23,0x4088)(hi)
0xFFC00BE0,	//0x0bd6		VoC_NAD	|	VoC_bez16_r(amr_dec_main_L7,REG2)(hi)
0x0D522B80,	//0x0bd8		VoC_jal(CII_dec_reset)
0x0DA12B80,	//0x0bda		VoC_jal(CII_Post_Filter_reset)
0x40876C04,	//0x0bdc		VoC_bez16_d(amr_dec_main_L7,0x4087)
0x11072B80,	//0x0bde		VoC_jal(CII_reset_rx_dtx)
		//0x0be0		amr_dec_main_L7
0x43EA1808,	//0x0be0		VoC_lw16i_set_inc(REG0,0x43ea,0x2)
0x42FF2009,	//0x0be2		VoC_lw16d_set_inc(REG1,0x42ff,0x2)
0x00280A86,	//0x0be4		VoC_lw16i(REG6,0x28)
0x02D82B80,	//0x0be6		VoC_jal(CII_copy_xy)
0xFFC0DFA9,	//0x0be8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0bea		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0beb		CII_Speech_Decode_Frame
0x028A14C6,	//0x0bec		VoC_lw32_d(RL6,0x828a)
0x1406D627,	//0x0bee		VoC_lw16_d(REG6,0x42fd)(lo)	|	VoC_lw16_sd(REG7,0x1,DEFAULT)
0xDF4642FD,	//0x0bf0		VoC_push32(RL6,DEFAULT)	|	VoC_lw16_d(REG6,0x42fd)(hi)
0x57564066,	//0x0bf2		VoC_be16_rd(SpDec_Fr_L1,REG6,0xd756)
0x3AB24476,	//0x0bf4		VoC_bne16_rd(SpDec_Fr_L2,REG6,0xbab2)
		//0x0bf6		SpDec_Fr_L1
0xFFC0F107,	//0x0bf6		VoC_NAD	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x0DFC2B80,	//0x0bf8		VoC_jal(CII_bits2prm_amr_efr)
		//0x0bfa		SpDec_Fr_L2
0x43EA1804,	//0x0bfa		VoC_lw16i_set_inc(REG0,0x43ea,0x1)
0xDFC0E0C7,	//0x0bfc		VoC_push16(REG0,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x0C9F2B80,	//0x0bfe		VoC_jal(CII_Decoder_amr)
0x0D2C1806,	//0x0c00		VoC_lw16i_set_inc(REG2,0xd2c,0x1)
0xE2865610,	//0x0c02		VoC_lw16i_short(REG6,0x28,IN_PARALLEL)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0xF0085FC2,	//0x0c04		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x036E1809,	//0x0c06		VoC_lw16i_set_inc(REG1,0x36e,0x2)
0x02D82B80,	//0x0c08		VoC_jal(CII_copy_xy)
0xD646F006,	//0x0c0a		VoC_lw16_sd(REG6,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0c0b		Post_Filter_L1
0x7140DFC6,	//0x0c0c		VoC_lw16i_short(REG0,0xa,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x1845F004,	//0x0c0e		VoC_lw16i_set_inc(REG1,0x83c0,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xC24703C0,	//0x0c10		VoC_sub16_rr(REG7,REG1,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x83c0,0x1)(hi)
0x57563876,	//0x0c12		VoC_bgt16_rd(Post_Filter_L4,REG6,0xd756)
0x38681845,	//0x0c14		VoC_lw16i_set_inc(REG1,0xb868,0x1)
0x03C00AC7,	//0x0c16		VoC_lw16i(REG7,0x83c0)
		//0x0c18		Post_Filter_L4
0x0DFC1806,	//0x0c18		VoC_lw16i_set_inc(REG2,0xdfc,0x1)
0x0C1F2C05,	//0x0c1a		VoC_loop_i(0x1,0x2)
0x2B80D620,	//0x0c1c		VoC_jal(CII_Weight_Ai)(lo)	|	VoC_lw16_sd(REG0,0x1,DEFAULT)
0xE0E10627,	//0x0c1e		VoC_movreg16(REG1,REG7,DEFAULT)	|	VoC_jal(CII_Weight_Ai)(hi)
		//0x0c1f		VoC_endloop1
0x038407C0,	//0x0c20		VoC_sub16_rd(REG0,REG0,0x8384)
0xDA20D616,	//0x0c22		VoC_sw16_sd(REG0,0x1,DEFAULT)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x036E1807,	//0x0c24		VoC_lw16i_set_inc(REG3,0x36e,0x1)
0x03301806,	//0x0c26		VoC_lw16i_set_inc(REG2,0x330,0x1)
0x1804C0F3,	//0x0c28		VoC_lw16i_set_inc(REG0,0xdfc,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xDFC30DFC,	//0x0c2a		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xdfc,0x1)(hi)
0x05872B80,	//0x0c2c		VoC_jal(CII_Residu_new)
0x1807F2C6,	//0x0c2e		VoC_lw16i_set_inc(REG3,0xdfc,0x1)(lo)	|	VoC_lw16i_short(REG6,0x16,DEFAULT)
0x18050DFC,	//0x0c30		VoC_lw16i_set_inc(REG1,0xe12,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0xdfc,0x1)(hi)
0xE0270E12,	//0x0c32		VoC_movreg16(REG7,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0xe12,0x1)(hi)
0x3A75074A,	//0x0c34		VoC_add16_rd(REG2,REG1,0xba75)
0xE0006964,	//0x0c36		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xb,DEFAULT)
0xDCA0D8B5,	//0x0c38		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
		//0x0c3a		VoC_endloop0
0x60E3DC95,	//0x0c3a		VoC_movreg16(REG3,REG7,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xFFC0F665,	//0x0c3c		VoC_NAD	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0x0A0F2B80,	//0x0c3e		VoC_jal(CII_Syn_filt)
0xFF4560E3,	//0x0c40		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0xFF446AC3,	//0x0c42		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_loop_i_short(0x16,DEFAULT)
0x4E36D8B6,	//0x0c44		VoC_mac32_rr(REG6,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
		//0x0c45		VoC_endloop0
0xE160D033,	//0x0c46		VoC_movreg16(REG0,ACC1_HI,DEFAULT)	|	VoC_mac32_rp(REG6,REG3,IN_PARALLEL)
0xF7217002,	//0x0c48		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x0C503140,	//0x0c4a		VoC_bngtz16_r(Post_Filter_L6,REG0)
0x048D08C0,	//0x0c4c		VoC_multf16_rd(REG0,REG0,0x848d)
0x019A2B80,	//0x0c4e		VoC_jal(CII_DIV_S)
		//0x0c50		Post_Filter_L6
0x03621804,	//0x0c50		VoC_lw16i_set_inc(REG0,0x362,0x1)
0x03571FBD,	//0x0c52		VoC_lw16i_set_inc(REG1,0x357,0xffffffff)
0x03561FBF,	//0x0c54		VoC_lw16i_set_inc(REG3,0x356,0xffffffff)
0x8E9DD816,	//0x0c56		VoC_multf16inc_rp(REG5,REG2,REG3,DEFAULT)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xB86DECE3,	//0x0c58		VoC_sub16_pr(REG5,REG1,REG5,DEFAULT)	|	VoC_loop_i_short(0x27,DEFAULT)
0xDC958E9D,	//0x0c5a		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_multf16inc_rp(REG5,REG2,REG3,DEFAULT)
		//0x0c5b		VoC_endloop0
0xD6478C85,	//0x0c5c		VoC_lw16_sd(REG7,0x3,DEFAULT)	|	VoC_multf16_rp(REG5,REG2,REG0,DEFAULT)
0xDC06B86D,	//0x0c5e		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_sub16_pr(REG5,REG1,REG5,DEFAULT)
0x5620DC15,	//0x0c60		VoC_lw16_sd(REG0,0x1,DEFAULT)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x0A85E286,	//0x0c62		VoC_lw16i(REG5,0xe07)(lo)	|	VoC_lw16i_short(REG6,0x28,IN_PARALLEL)
0x18070E07,	//0x0c64		VoC_lw16i_set_inc(REG3,0x330,0x1)(lo)	|	VoC_lw16i(REG5,0xe07)(hi)
0xC1C70330,	//0x0c66		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x330,0x1)(hi)
0x03581805,	//0x0c68		VoC_lw16i_set_inc(REG1,0x358,0x1)
0x2B80F020,	//0x0c6a		VoC_jal(CII_Syn_filt)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE0E00A0F,	//0x0c6c		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jal(CII_Syn_filt)(hi)
0x1805DF82,	//0x0c6e		VoC_lw16i_set_inc(REG1,0x363,0x1)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x70040363,	//0x0c70		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x363,0x1)(hi)
0xDFC1F004,	//0x0c72		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x2B80D90F,	//0x0c74		VoC_jal(CII_agc)(lo)	|	VoC_lw32_sd(RL7,0x0,DEFAULT)
0xDF810DBD,	//0x0c76		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CII_agc)(hi)
0x0776DF86,	//0x0c78		VoC_add16_rd(REG6,REG6,0xbd92)(lo)	|	VoC_pop16(REG6,DEFAULT)
0x406E3D92,	//0x0c7a		VoC_be16_rd(not_Post_Filter_L1,REG6,0xd4aa)(lo)	|	VoC_add16_rd(REG6,REG6,0xbd92)(hi)
0x2B0054AA,	//0x0c7c		VoC_jump_lg(Post_Filter_L1)(lo)	|	VoC_be16_rd(not_Post_Filter_L1,REG6,0xd4aa)(hi)
0xFFC00C0B,	//0x0c7e		VoC_NAD	|	VoC_jump_lg(Post_Filter_L1)(hi)
		//0x0c80		not_Post_Filter_L1
0x03641809,	//0x0c80		VoC_lw16i_set_inc(REG1,0x364,0x2)
0x04041808,	//0x0c82		VoC_lw16i_set_inc(REG0,0x404,0x2)
0x02CB2B80,	//0x0c84		VoC_jal(CII_Copy_M)
0x1808DF82,	//0x0c86		VoC_lw16i_set_inc(REG0,0x40e,0x2)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x5611040E,	//0x0c88		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x40e,0x2)(hi)
0x6E04F005,	//0x0c8a		VoC_bnez16_d(efr_label1,0x4087)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x2B804087,	//0x0c8c		VoC_jal(CII_Post_Process)(lo)	|	VoC_bnez16_d(efr_label1,0x4087)(hi)
0xDF061905,	//0x0c8e		VoC_pop32(RL6,DEFAULT)	|	VoC_jal(CII_Post_Process)(hi)
		//0x0c8f		efr_label1
0xEF825F80,	//0x0c90		VoC_lw16i_short(REG2,0xfff8,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xF030E001,	//0x0c92		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD886DFA9,	//0x0c94		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x0C9D2D40,	//0x0c96		VoC_loop_i(0x0,0xa0)
0x40876C03,	//0x0c98		VoC_bez16_d(efr_label2,0x4087)
0xE416F8FE,	//0x0c9a		VoC_and16_rr(REG6,REG2,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
		//0x0c9b		efr_label2
0xDC96D886,	//0x0c9c		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
		//0x0c9d		VoC_endloop0
0xDFE9E580,	//0x0c9e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c9f		CII_Decoder_amr
0x40876C06,	//0x0ca0		VoC_bez16_d(Label_rx_dtx_neglate,0x4087)
0x10612B80,	//0x0ca2		VoC_jal(CII_rx_dtx)
0x0CF82B00,	//0x0ca4		VoC_jump_lg(Dec_amr_L4)
		//0x0ca6		Label_rx_dtx_neglate
0x10182B80,	//0x0ca6		VoC_jal(CII_rx_dtx_handler)
0x1504FF41,	//0x0ca8		VoC_sw16_d(REG4,0xd29)(lo)	|	VoC_lw32z(REG23,DEFAULT)
0x15020D29,	//0x0caa		VoC_sw16_d(REG2,0xd15)(lo)	|	VoC_sw16_d(REG4,0xd29)(hi)
0x15810D15,	//0x0cac		VoC_sw32_d(REG23,0xd2a)(lo)	|	VoC_sw16_d(REG2,0xd15)(hi)
0x31840D2A,	//0x0cae		VoC_bez16_r(Dec_amr_L1,REG4)(lo)	|	VoC_sw32_d(REG23,0xd2a)(hi)
0xF02C0CBE,	//0x0cb0		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_bez16_r(Dec_amr_L1,REG4)(hi)
0x0D522B80,	//0x0cb2		VoC_jal(CII_dec_reset)
0x106D2B80,	//0x0cb4		VoC_jal(CII_dtx_dec)
0x0AF21804,	//0x0cb6		VoC_lw16i_set_inc(REG0,0xaf2,0x1)
0x0A701805,	//0x0cb8		VoC_lw16i_set_inc(REG1,0xa70,0x1)
0x04EC2B80,	//0x0cba		VoC_jal(CII_Lsf_lsp)
0x0D3F2B00,	//0x0cbc		VoC_jump_lg(Dec_amr_LEnd)
		//0x0cbe		Dec_amr_L1
0x03844467,	//0x0cbe		VoC_bne16_rd(Dec_amr_L3,REG7,0x8384)
0x0D2B1507,	//0x0cc0		VoC_sw16_d(REG7,0xd2b)
		//0x0cc2		Dec_amr_L3
0x3AAF40C7,	//0x0cc2		VoC_be16_rd(Dec_amr_L2,REG7,0xbaaf)
0x3AB34077,	//0x0cc4		VoC_be16_rd(Dec_amr_L2,REG7,0xbab3)
0x3AAE4067,	//0x0cc6		VoC_be16_rd(Dec_amr_L2,REG7,0xbaae)
0x0CF82B00,	//0x0cc8		VoC_jump_lg(Dec_amr_L4)
		//0x0cca		Dec_amr_L2
0xD645F026,	//0x0cca		VoC_lw16_sd(REG5,0x3,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x0D2A1506,	//0x0ccc		VoC_sw16_d(REG6,0xd2a)
0x3AAF4467,	//0x0cce		VoC_bne16_rd(Dec_amr_L4_go,REG7,0xbaaf)
0x0CF82B00,	//0x0cd0		VoC_jump_lg(Dec_amr_L4)
		//0x0cd2		Dec_amr_L4_go
0x0A9F1404,	//0x0cd2		VoC_lw16_d(REG4,0xa9f)
0x13D41844,	//0x0cd4		VoC_lw16i_set_inc(REG0,0x93d4,0x1)
0x143A1845,	//0x0cd6		VoC_lw16i_set_inc(REG1,0x943a,0x1)
0xC069402F,	//0x0cd8		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG0,REG5,DEFAULT)
0x0D581804,	//0x0cda		VoC_lw16i_set_inc(REG0,0xd58,0x1)
0xD811D877,	//0x0cdc		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x43E50A64,	//0x0cde		VoC_multf32_rd(ACC0,REG4,0xc3e5)
0x36190A82,	//0x0ce0		VoC_lw16i(REG2,0x3619)
0xE0037A0C,	//0x0ce2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x0A86C90A,	//0x0ce4		VoC_lw16i(REG6,0x7f)(lo)	|	VoC_add32_rr(REG45,ACC0,REG23,DEFAULT)
0x1504007F,	//0x0ce6		VoC_sw16_d(REG4,0xa9f)(lo)	|	VoC_lw16i(REG6,0x7f)(hi)
0x18470A9F,	//0x0ce8		VoC_lw16i_set_inc(REG3,0xb736,0x1)(lo)	|	VoC_sw16_d(REG4,0xa9f)(hi)
0x64263736,	//0x0cea		VoC_and16_rr(REG6,REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xb736,0x1)(hi)
0xC19BE002,	//0x0cec		VoC_add16_rr(REG3,REG6,REG3,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xEFF567C8,	//0x0cee		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0x868ED8B7,	//0x0cf0		VoC_sub16inc_rp(REG6,REG2,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xE385FE35,	//0x0cf2		VoC_not16_r(REG5,DEFAULT)	|	VoC_shr16_rr(REG5,REG6,DEFAULT)
0xF7E5E42F,	//0x0cf4		VoC_lw16i_short(REG5,0xffffffff,DEFAULT)	|	VoC_and16_rr(REG7,REG5,DEFAULT)
		//0x0cf6		VoC_endloop0
0xFFC0DC87,	//0x0cf6		VoC_NAD	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
		//0x0cf8		Dec_amr_L4
0x0A881404,	//0x0cf8		VoC_lw16_d(REG4,0xa88)
0x03840763,	//0x0cfa		VoC_add16_rd(REG3,REG4,0x8384)
0x0D2A6E06,	//0x0cfc		VoC_bnez16_d(Dec_amr_L7,0xd2a)
0x405CF0A3,	//0x0cfe		VoC_be16_rd(Dec_amr_L7,REG4,0xbab2)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0xF0033AB2,	//0x0d00		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_be16_rd(Dec_amr_L7,REG4,0xbab2)(hi)
		//0x0d02		Dec_amr_L7
0x3AB23C63,	//0x0d02		VoC_bngt16_rd(Dec_amr_L9,REG3,0xbab2)
0xFFC0F0C3,	//0x0d04		VoC_NAD	|	VoC_lw16i_short(REG3,0x6,DEFAULT)
		//0x0d06		Dec_amr_L9
0x40876C06,	//0x0d06		VoC_bez16_d(Dec_amr_L9_EFR,0x4087)
0x12BE2B80,	//0x0d08		VoC_jal(CII_efr_dtx_func9)
0xFFC0E5D0,	//0x0d0a		VoC_NAD	|	VoC_jump(Dec_amr_L11_EFR)
		//0x0d0c		Dec_amr_L9_EFR
0x0BF31404,	//0x0d0c		VoC_lw16_d(REG4,0xbf3)
0x0A861405,	//0x0d0e		VoC_lw16_d(REG5,0xa86)
0x03844464,	//0x0d10		VoC_bne16_rd(Dec_amr_L11_1,REG4,0x8384)
0xF0A3F005,	//0x0d12		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x0d14		Dec_amr_L11_1
0x3AAE4464,	//0x0d14		VoC_bne16_rd(Dec_amr_L11,REG4,0xbaae)
0xF0A3F025,	//0x0d16		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x0d18		Dec_amr_L11
0x0A861505,	//0x0d18		VoC_sw16_d(REG5,0xa86)
		//0x0d1a		Dec_amr_L11_EFR
0x0A881503,	//0x0d1a		VoC_sw16_d(REG3,0xa88)
0x0AF21808,	//0x0d1c		VoC_lw16i_set_inc(REG0,0xaf2,0x2)
0x0C821809,	//0x0d1e		VoC_lw16i_set_inc(REG1,0xc82,0x2)
0x02CB2B80,	//0x0d20		VoC_jal(CII_Copy_M)
0x0AF21804,	//0x0d22		VoC_lw16i_set_inc(REG0,0xaf2,0x1)
0x0D581805,	//0x0d24		VoC_lw16i_set_inc(REG1,0xd58,0x1)
0x1406D647,	//0x0d26		VoC_lw16_d(REG6,0xd2a)(lo)	|	VoC_lw16_sd(REG7,0x3,DEFAULT)
0x0A820D2A,	//0x0d28		VoC_lw16i(REG2,0xa70)(lo)	|	VoC_lw16_d(REG6,0xd2a)(hi)
0x0A830A70,	//0x0d2a		VoC_lw16i(REG3,0xc6e)(lo)	|	VoC_lw16i(REG2,0xa70)(hi)
0x0A840C6E,	//0x0d2c		VoC_lw16i(REG4,0xc78)(lo)	|	VoC_lw16i(REG3,0xc6e)(hi)
0x0A850C78,	//0x0d2e		VoC_lw16i(REG5,0xd2c)(lo)	|	VoC_lw16i(REG4,0xc78)(hi)
0xDF410D2C,	//0x0d30		VoC_push32(REG23,DEFAULT)	|	VoC_lw16i(REG5,0xd2c)(hi)
0xFFC0DF42,	//0x0d32		VoC_NAD	|	VoC_push32(REG45,DEFAULT)
0x21702B80,	//0x0d34		VoC_jal(CII_amr_dec_122)
		//0x0d36		Dec_amr_end
0x40876E04,	//0x0d36		VoC_bnez16_d(Dec_amr_LEnd_fake,0x4087)
0x17CD2B80,	//0x0d38		VoC_jal(CII_AMR_subfunc0)
		//0x0d3a		Dec_amr_LEnd_fake
0x0D2A1483,	//0x0d3a		VoC_lw32_d(REG67,0xd2a)
0x1583FFC0,	//0x0d3c		VoC_sw32_d(REG67,0xa86)(lo)	|	VoC_NOP
0xDFA90A86,	//0x0d3e		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_d(REG67,0xa86)(hi)
		//0x0d3f		Dec_amr_LEnd
0x0AE81804,	//0x0d40		VoC_lw16i_set_inc(REG0,0xae8,0x1)
0x0AF21805,	//0x0d42		VoC_lw16i_set_inc(REG1,0xaf2,0x1)
0x147B0A85,	//0x0d44		VoC_lw16i(REG5,0x147b)
0xD90C6948,	//0x0d46		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD0A8D809,	//0x0d48		VoC_msu32_rp(REG5,REG0,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG0,DEFAULT)
0x1404D129,	//0x0d4a		VoC_lw16_d(REG4,0xd29)(lo)	|	VoC_mac32inc_rp(REG5,REG1,DEFAULT)
0xD90C0D29,	//0x0d4c		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_lw16_d(REG4,0xd29)(hi)
		//0x0d4e		VoC_endloop0
0x1504DC89,	//0x0d4e		VoC_sw16_d(REG4,0xbf3)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0xE5800BF3,	//0x0d50		VoC_return	|	VoC_sw16_d(REG4,0xbf3)(hi)
		//0x0d52		CII_dec_reset
0x7267F032,	//0x0d52		VoC_lw16i_short(REG7,0x13,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x3306E1B5,	//0x0d54		VoC_bez32_r(dec_reset_L0,RL6)(lo)	|	VoC_lw16i_short(REG5,0x1b,IN_PARALLEL)
0x71670D5A,	//0x0d56		VoC_lw16i_short(REG7,0xb,DEFAULT)	|	VoC_bez32_r(dec_reset_L0,RL6)(hi)
0xFFC0E075,	//0x0d58		VoC_NAD	|	VoC_lw16i_short(REG5,0x7,IN_PARALLEL)
		//0x0d5a		dec_reset_L0
0x00001805,	//0x0d5a		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x00580A86,	//0x0d5c		VoC_lw16i(REG6,0x58)
0x38EA1848,	//0x0d5e		VoC_lw16i_set_inc(REG0,0xb8ea,0x2)
0x0D712E39,	//0x0d60		VoC_loop_r(1,REG7)
0x40B2D9C1,	//0x0d62		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0xFFC0E004,	//0x0d64		VoC_NOP	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xDCA4E6C1,	//0x0d66		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
		//0x0d67		VoC_endloop0
0x0D713306,	//0x0d68		VoC_bez32_r(dec_reset_L2,RL6)
0x0D6E31C1,	//0x0d6a		VoC_bnez16_r(dec_reset_L1,REG1)
0xFFC0DE00,	//0x0d6c		VoC_NAD	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d6e		dec_reset_L1
0x3AAF4459,	//0x0d6e		VoC_bne16_rd(dec_reset_L2,REG1,0xbaaf)
0xDE08DE00,	//0x0d70		VoC_inc_p(REG1,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d71		dec_reset_L2
		//0x0d71		VoC_endloop1
0x184CF006,	//0x0d72		VoC_lw16i_set_inc(REG0,0xb910,0x3)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x184D3910,	//0x0d74		VoC_lw16i_set_inc(REG1,0xb911,0x3)(lo)	|	VoC_lw16i_set_inc(REG0,0xb910,0x3)(hi)
0x0AC43911,	//0x0d76		VoC_lw16i(REG4,0xb912)(lo)	|	VoC_lw16i_set_inc(REG1,0xb911,0x3)(hi)
0x7F473912,	//0x0d78		VoC_lw32z(RL7,DEFAULT)	|	VoC_lw16i(REG4,0xb912)(hi)
0xFFC0F007,	//0x0d7a		VoC_NAD	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x0D922E29,	//0x0d7c		VoC_loop_r(1,REG5)
0x00580A85,	//0x0d7e		VoC_lw16i(REG5,0x58)
0xC0AAD882,	//0x0d80		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xD843D895,	//0x0d82		VoC_lw16_p(REG3,REG4,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x3AAF0764,	//0x0d84		VoC_add16_rd(REG4,REG4,0xbaaf)
0xE742D8B7,	//0x0d86		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xDCA7D8B7,	//0x0d88		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
		//0x0d89		VoC_endloop0
0x0D923306,	//0x0d8a		VoC_bez32_r(dec_reset_L3,RL6)
0x03843876,	//0x0d8c		VoC_bgt16_rd(dec_reset_L3,REG6,0x8384)
0xDE08DE00,	//0x0d8e		VoC_inc_p(REG1,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x3AAF0764,	//0x0d90		VoC_add16_rd(REG4,REG4,0xbaaf)
		//0x0d92		dec_reset_L3
		//0x0d92		VoC_endloop1
0x03840776,	//0x0d92		VoC_add16_rd(REG6,REG6,0x8384)
0x0D983346,	//0x0d94		VoC_bnez32_r(dec_reset_L4,RL6)
0x0BEC1587,	//0x0d96		VoC_sw32_d(RL7,0xbec)
		//0x0d98		dec_reset_L4
0x55550A86,	//0x0d98		VoC_lw16i(REG6,0x5555)
0x0B241587,	//0x0d9a		VoC_sw32_d(RL7,0xb24)
0x0B261587,	//0x0d9c		VoC_sw32_d(RL7,0xb26)
0x0A9F1506,	//0x0d9e		VoC_sw16_d(REG6,0xa9f)
0xFF45E580,	//0x0da0		VoC_lw32z(ACC1,DEFAULT)	|	VoC_return
		//0x0da1		CII_Post_Filter_reset
0x03301808,	//0x0da2		VoC_lw16i_set_inc(REG0,0x330,0x2)
0x0DA62CE4,	//0x0da4		VoC_loop_i(0x0,0x72)
		//0x0da6		VoC_endloop0
0x0A8BDDC5,	//0x0da6		VoC_lw16i(ACC1_HI,0x1000)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x150A1000,	//0x0da8		VoC_sw16_d(ACC1_LO,0x414)(lo)	|	VoC_lw16i(ACC1_HI,0x1000)(hi)
0x15850414,	//0x0daa		VoC_sw32_d(ACC1,0x362)(lo)	|	VoC_sw16_d(ACC1_LO,0x414)(hi)
0xE5800362,	//0x0dac		VoC_return	|	VoC_sw32_d(ACC1,0x362)(hi)
		//0x0dae		CII_energy_new
0xFF45FF44,	//0x0dae		VoC_lw32z(ACC1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD8076D04,	//0x0db0		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x28,DEFAULT)
0xD4007817,	//0x0db2		VoC_mac32inc_pp(REG0,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
		//0x0db4		VoC_endloop0
0xD8074E3F,	//0x0db4		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG7,DEFAULT)
0x000A5875,	//0x0db6		VoC_be32_rd(Energy_L0,ACC1,0x800a)
0x40876E04,	//0x0db8		VoC_bnez16_d(Energy_L0,0x4087)
0xFF2CFA25,	//0x0dba		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,DEFAULT)
		//0x0dbc		Energy_L0
0xDFE9E580,	//0x0dbc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0dbd		CII_agc
0x2B80DFC0,	//0x0dbe		VoC_jal(CII_energy_new)(lo)	|	VoC_push16(REG0,DEFAULT)
0xF0050DAE,	//0x0dc0		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_jal(CII_energy_new)(hi)
0x0DF53304,	//0x0dc2		VoC_bez32_r(AGC_LEnd,ACC0)
0x01882B80,	//0x0dc4		VoC_jal(CII_NORM_L_ACC0)
0xFA0C6025,	//0x0dc6		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG1,DEFAULT)
0xF640493E,	//0x0dc8		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL7,DEFAULT)
0x0DAE2B80,	//0x0dca		VoC_jal(CII_energy_new)
0x3304F003,	//0x0dcc		VoC_bez32_r(AGC_LA5,ACC0)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xFFC00DE1,	//0x0dce		VoC_NAD	|	VoC_bez32_r(AGC_LA5,ACC0)(hi)
0x01882B80,	//0x0dd0		VoC_jal(CII_NORM_L_ACC0)
0xC34D4938,	//0x0dd2		VoC_sub16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL7,DEFAULT)
0xFFC0E1A0,	//0x0dd4		VoC_NAD	|	VoC_movreg16(REG0,RL6_HI,DEFAULT)
0x019A2B80,	//0x0dd6		VoC_jal(CII_DIV_S)
0xF6407001,	//0x0dd8		VoC_movreg16(REG0,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFEA8FBC0,	//0x0dda		VoC_shr32_rr(REG01,REG5,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffff8,DEFAULT)
0x03712B80,	//0x0ddc		VoC_jal(CII_Inv_sqrt)
0x0941FBB8,	//0x0dde		VoC_add32_rd(REG23,REG01,0x828a)(lo)	|	VoC_shr32_ri(REG01,0xfffffff7,DEFAULT)
0xE065028A,	//0x0de0		VoC_movreg16(REG5,REG3,DEFAULT)	|	VoC_add32_rd(REG23,REG01,0x828a)(hi)
		//0x0de1		AGC_LA5
0x0DE831C4,	//0x0de2		VoC_bnez16_r(AGC_LA4,REG4)
0x08DBD637,	//0x0de4		VoC_multf16_rd(REG3,REG3,0xccb0)(lo)	|	VoC_lw16_sd(REG7,0x2,DEFAULT)
0xD8754CB0,	//0x0de6		VoC_lw16_p(REG5,REG7,DEFAULT)	|	VoC_multf16_rd(REG3,REG3,0xccb0)(hi)
		//0x0de8		AGC_LA4
0xED0BD610,	//0x0de8		VoC_loop_i_short(0x28,DEFAULT)	|	VoC_lw16_sd(REG0,0x0,DEFAULT)
0x0DF031C4,	//0x0dea		VoC_bnez16_r(AGC_LA6,REG4)
0x04A408ED,	//0x0dec		VoC_multf16_rd(REG5,REG5,0x84a4)
0xC15DFFC0,	//0x0dee		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_NOP
		//0x0df0		AGC_LA6
0xFFC09944,	//0x0df0		VoC_NOP	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0xFFC0FBEC,	//0x0df2		VoC_NOP	|	VoC_shr32_ri(ACC0,0xfffffffd,DEFAULT)
		//0x0df4		VoC_endloop0
0xDF80DC89,	//0x0df4		VoC_pop16(REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x0df5		AGC_LEnd
0xD616DFA9,	//0x0df6		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0x0DFB31C4,	//0x0df8		VoC_bnez16_r(AGC_LA7,REG4)
0xE580DC65,	//0x0dfa		VoC_return	|	VoC_sw16_p(REG5,REG6,DEFAULT)
		//0x0dfb		AGC_LA7
		//0x0dfc		CII_bits2prm_amr_efr
0x40EFF105,	//0x0dfc		VoC_be16_rd(word32_needed,REG7,0xbab3)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0xF0E53AB3,	//0x0dfe		VoC_lw16i_short(REG5,0x7,DEFAULT)	|	VoC_be16_rd(word32_needed,REG7,0xbab3)(hi)
0x3AB240D7,	//0x0e00		VoC_be16_rd(word32_needed,REG7,0xbab2)
0x387FF0A5,	//0x0e02		VoC_bgt16_rd(word32_needed,REG7,0xbaae)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0xF0853AAE,	//0x0e04		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_bgt16_rd(word32_needed,REG7,0xbaae)(hi)
0x3AAA3867,	//0x0e06		VoC_bgt16_rd(word32_needed,REG7,0xbaaa)
0xFFC0F065,	//0x0e08		VoC_NAD	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
		//0x0e0a		word32_needed
0x00001808,	//0x0e0a		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x3AB40740,	//0x0e0c		VoC_add16_rd(REG0,REG0,0xbab4)
0x0D921805,	//0x0e0e		VoC_lw16i_set_inc(REG1,0xd92,0x1)
0x0E182E29,	//0x0e10		VoC_loop_r(1,REG5)
0xEC04D9C2,	//0x0e12		VoC_loop_i_short(0x20,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xE422F022,	//0x0e14		VoC_and16_rr(REG2,REG4,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xDC92FA0A,	//0x0e16		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0x1,DEFAULT)
		//0x0e17		VoC_endloop0
		//0x0e18		VoC_endloop1
0x0D581807,	//0x0e18		VoC_lw16i_set_inc(REG3,0xd58,0x1)
0x13D40AC5,	//0x0e1a		VoC_lw16i(REG5,0x93d4)
0x143A1846,	//0x0e1c		VoC_lw16i_set_inc(REG2,0x943a,0x1)
0xC1D241ED,	//0x0e1e		VoC_add16_rr(REG2,REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG7,REG5,DEFAULT)
0x0D921805,	//0x0e20		VoC_lw16i_set_inc(REG1,0xd92,0x1)
0x5822D855,	//0x0e22		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x2E29E007,	//0x0e24		VoC_loop_r(1,REG5)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xD8240E35,	//0x0e26		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_loop_r(1,REG5)(hi)
0x00FF1604,	//0x0e28		VoC_and16_ri(REG4,0xff)
0x00011607,	//0x0e2a		VoC_and16_ri(REG7,0x1)
0x0E303187,	//0x0e2c		VoC_bez16_r(BITNO_AMR_even,REG7)
0xF944D8A4,	//0x0e2e		VoC_shru16_ri(REG4,0x8,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x0e30		BITNO_AMR_even
0xE0056703,	//0x0e30		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xF8FD834D,	//0x0e32		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
		//0x0e33		VoC_endloop0
0x077FDCB5,	//0x0e34		VoC_add16_rd(REG7,REG7,0x8384)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
		//0x0e35		VoC_endloop1
0xE5800384,	//0x0e36		VoC_return	|	VoC_add16_rd(REG7,REG7,0x8384)(hi)
		//0x0e38		CII_R02R3_p_R6
0xE782D885,	//0x0e38		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xDCB5D885,	//0x0e3a		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x0e3b		VoC_endloop0
0xDFE9E580,	//0x0e3c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0e3d		CII_ec_gain_code
0x2B80F0A5,	//0x0e3e		VoC_jal(CII_gmed_n)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0xD6440686,	//0x0e40		VoC_lw16_sd(REG4,0x3,DEFAULT)	|	VoC_jal(CII_gmed_n)(hi)
0x3AB20764,	//0x0e42		VoC_add16_rd(REG4,REG4,0xbab2)
0x04820AC5,	//0x0e44		VoC_lw16i(REG5,0x8482)
0x348CD844,	//0x0e46		VoC_bngt16_rr(Ecgains_L12,REG1,REG4)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xE0810E4A,	//0x0e48		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_bngt16_rr(Ecgains_L12,REG1,REG4)(hi)
		//0x0e4a		Ecgains_L12
0xD630D624,	//0x0e4a		VoC_lw16_sd(REG0,0x2,DEFAULT)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0x8C61C164,	//0x0e4c		VoC_multf16_rp(REG1,REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0x0741FF43,	//0x0e4e		VoC_add16_rd(REG1,REG0,0xbab0)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0x15013AB0,	//0x0e50		VoC_sw16_d(REG1,0xd17)(lo)	|	VoC_add16_rd(REG1,REG0,0xbab0)(hi)
0xE8820D17,	//0x0e52		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16_d(REG1,0xd17)(hi)
0x838683CF,	//0x0e54		VoC_add16inc_rp(REG6,REG6,REG0,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
		//0x0e55		VoC_endloop0
0xF8167817,	//0x0e56		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0x76B30AC5,	//0x0e58		VoC_lw16i(REG5,0xfffff6b3)
0x0E5E34AF,	//0x0e5a		VoC_bngt16_rr(Gcpred_L1,REG5,REG7)
0xFFC0E0A7,	//0x0e5c		VoC_NAD	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0e5e		Gcpred_L1
0x40876E08,	//0x0e5e		VoC_bnez16_d(Gcpred_L2,0x4087)
0x48000AC5,	//0x0e60		VoC_lw16i(REG5,0xffffc800)
0x0E6634AE,	//0x0e62		VoC_bngt16_rr(Gcpred_L2,REG5,REG6)
0xFFC0E0A6,	//0x0e64		VoC_NAD	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0e66		Gcpred_L2
0x0B160A85,	//0x0e66		VoC_lw16i(REG5,0xb16)
0x06732B80,	//0x0e68		VoC_jal(CII_gc_pred_update)
0xF031DFA9,	//0x0e6a		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xD610E580,	//0x0e6c		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_return
		//0x0e6d		CII_ec_gain_code_update
0x3AB30742,	//0x0e6e		VoC_add16_rd(REG2,REG0,0xbab3)
0x0D2A6E0D,	//0x0e70		VoC_bnez16_d(Ecgains_L10,0xd2a)
0x40876E0A,	//0x0e72		VoC_bnez16_d(Ecgains_L11,0x4087)
0x0A866C08,	//0x0e74		VoC_bez16_d(Ecgains_L11,0xa86)
0x34B7D827,	//0x0e76		VoC_bngt16_rr(Ecgains_L11,REG6,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xE0E60E7C,	//0x0e78		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bngt16_rr(Ecgains_L11,REG6,REG7)(hi)
0x0D171507,	//0x0e7a		VoC_sw16_d(REG7,0xd17)
		//0x0e7c		Ecgains_L11
0xF027DC26,	//0x0e7c		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
		//0x0e7d		Ecgains_L10
0xC039C2BA,	//0x0e7e		VoC_add16_rr(REG1,REG0,REG7,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0xF0045C26,	//0x0e80		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
0xD8976883,	//0x0e82		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC87D897,	//0x0e84		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
		//0x0e85		VoC_endloop0
0xE580DC06,	//0x0e86		VoC_return	|	VoC_sw16_p(REG6,REG0,DEFAULT)
		//0x0e88		CII_ec_gain_pitch
0x40876C09,	//0x0e88		VoC_bez16_d(ec_gain_pitch_EFR,0x4087)
0x2805F025,	//0x0e8a		VoC_and16_rd(REG5,0x40e)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x31C5040E,	//0x0e8c		VoC_bnez16_r(ec_gain_pitch_EFR,REG5)(lo)	|	VoC_and16_rd(REG5,0x40e)(hi)
0xF0060E91,	//0x0e8e		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bnez16_r(ec_gain_pitch_EFR,REG5)(hi)
0xDFE9E5D0,	//0x0e90		VoC_push16(RA,DEFAULT)	|	VoC_jump(ec_gain_pitch_EFR1)
		//0x0e91		ec_gain_pitch_EFR
0x2B80F0A5,	//0x0e92		VoC_jal(CII_gmed_n)(lo)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0xD6260686,	//0x0e94		VoC_lw16_sd(REG6,0x1,DEFAULT)	|	VoC_jal(CII_gmed_n)(hi)
0x048A0AC5,	//0x0e96		VoC_lw16i(REG5,0x848a)
0x3C21C176,	//0x0e98		VoC_bngt16_rd(Ecgains_L1,REG1,0xb0c)(lo)	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0x14010B0C,	//0x0e9a		VoC_lw16_d(REG1,0xb0c)(lo)	|	VoC_bngt16_rd(Ecgains_L1,REG1,0xb0c)(hi)
0x8C760B0C,	//0x0e9c		VoC_multf16_rp(REG6,REG1,REG6,DEFAULT)	|	VoC_lw16_d(REG1,0xb0c)(hi)
		//0x0e9d		Ecgains_L1
0xFFC0DFA9,	//0x0e9e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
		//0x0ea0		ec_gain_pitch_EFR1
0x0D161506,	//0x0ea0		VoC_sw16_d(REG6,0xd16)
0xD610E580,	//0x0ea2		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_return
		//0x0ea3		CII_ec_gain_pitch_update
0x3AB30742,	//0x0ea4		VoC_add16_rd(REG2,REG0,0xbab3)
0x0D2A6E13,	//0x0ea6		VoC_bnez16_d(Ecgains_L2,0xd2a)
0x40876C08,	//0x0ea8		VoC_bez16_d(Ecgains_L3,0x4087)
0x2B80DFE9,	//0x0eaa		VoC_jal(CII_efr_dtx_func11)(lo)	|	VoC_push16(RA,DEFAULT)
0xDFA918DC,	//0x0eac		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_efr_dtx_func11)(hi)
0xFFC0E5CA,	//0x0eae		VoC_NAD	|	VoC_jump(Ecgains_L33)
		//0x0eb0		Ecgains_L3
0x0A866C08,	//0x0eb0		VoC_bez16_d(Ecgains_L33,0xa86)
0x34B7D827,	//0x0eb2		VoC_bngt16_rr(Ecgains_L33,REG6,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xE0E60EB8,	//0x0eb4		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bngt16_rr(Ecgains_L33,REG6,REG7)(hi)
0x0D161507,	//0x0eb6		VoC_sw16_d(REG7,0xd16)
		//0x0eb8		Ecgains_L33
0xE0C7DC26,	//0x0eb8		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
		//0x0eb9		Ecgains_L2
0xC2B2F026,	//0x0eba		VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x10000A81,	//0x0ebc		VoC_lw16i(REG1,0x1000)
0x40876E04,	//0x0ebe		VoC_bnez16_d(Ecgains_Lnew2,0x4087)
0x40000A81,	//0x0ec0		VoC_lw16i(REG1,0x4000)
		//0x0ec2		Ecgains_Lnew2
0x0EC534B9,	//0x0ec2		VoC_bngt16_rr(Ecgains_L4,REG7,REG1)
0xD610E027,	//0x0ec4		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_movreg16(REG7,REG1,DEFAULT)
		//0x0ec5		Ecgains_L4
0xDC27C031,	//0x0ec6		VoC_sw16_p(REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG6,DEFAULT)
0xD8966883,	//0x0ec8		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDC86D896,	//0x0eca		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
		//0x0ecb		VoC_endloop0
0xE580DC07,	//0x0ecc		VoC_return	|	VoC_sw16_p(REG7,REG0,DEFAULT)
		//0x0ece		CII_Int_lsf
0xD647DFE9,	//0x0ece		VoC_lw16_sd(REG7,0x3,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0C8C1804,	//0x0ed0		VoC_lw16i_set_inc(REG0,0xc8c,0x1)
0x0C821805,	//0x0ed2		VoC_lw16i_set_inc(REG1,0xc82,0x1)
0x0AF21806,	//0x0ed4		VoC_lw16i_set_inc(REG2,0xaf2,0x1)
0x05F24077,	//0x0ed6		VoC_be16_rd(Lspavg_lab1,REG7,0x85f2)
0x0EE731C7,	//0x0ed8		VoC_bnez16_r(Lspavg_lab3,REG7)
0xF6416022,	//0x0eda		VoC_movreg16(REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x0edc		Lspavg_lab1
0x20000A86,	//0x0edc		VoC_lw16i(REG6,0x2000)
0x8F8C6947,	//0x0ede		VoC_multf16inc_rp(REG4,REG6,REG1,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xFFC08D95,	//0x0ee0		VoC_NOP	|	VoC_multf16_rp(REG5,REG6,REG2,DEFAULT)
0xC165BAAD,	//0x0ee2		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_sub16inc_pr(REG5,REG2,REG5,DEFAULT)
0xDC858F8C,	//0x0ee4		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_multf16inc_rp(REG4,REG6,REG1,DEFAULT)
		//0x0ee5		VoC_endloop0
0xFFC0E5CC,	//0x0ee6		VoC_NOP	|	VoC_jump(Lspavg_lab4)
		//0x0ee7		Lspavg_lab3
0xE948D8A5,	//0x0ee8		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x086E4077,	//0x0eea		VoC_be16_rd(Lspavg_lab2,REG7,0x886e)
0xD894780D,	//0x0eec		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0xC12DF80C,	//0x0eee		VoC_add16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x0ef0		Lspavg_lab2
0xDC85D8A5,	//0x0ef0		VoC_sw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x0ef1		VoC_endloop0
		//0x0ef2		Lspavg_lab4
0x0ADE1805,	//0x0ef2		VoC_lw16i_set_inc(REG1,0xade,0x1)
0x0D171407,	//0x0ef4		VoC_lw16_d(REG7,0xd17)
0x0AE81806,	//0x0ef6		VoC_lw16i_set_inc(REG2,0xae8,0x1)
0x0A941485,	//0x0ef8		VoC_lw32_d(ACC1,0xa94)
0x5A27DA31,	//0x0efa		VoC_sw16_sd(REG7,0x1,DEFAULT)	|	VoC_sw16_sd(REG1,0x2,DEFAULT)
0x1804DF45,	//0x0efc		VoC_lw16i_set_inc(REG0,0xadf,0x1)(lo)	|	VoC_push32(ACC1,IN_PARALLEL)
0x18070ADF,	//0x0efe		VoC_lw16i_set_inc(REG3,0xe06,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xadf,0x1)(hi)
0x68C30E06,	//0x0f00		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xe06,0x1)(hi)
0xD885D885,	//0x0f02		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)
		//0x0f04		VoC_endloop0
0xDC17DC95,	//0x0f04		VoC_sw16_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x0C8C1804,	//0x0f06		VoC_lw16i_set_inc(REG0,0xc8c,0x1)
0xE0076041,	//0x0f08		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG2,DEFAULT)
0x0F252C15,	//0x0f0a		VoC_loop_i(0x1,0xa)
0x8706D894,	//0x0f0c		VoC_sub16inc_rp(REG6,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xE0085F40,	//0x0f0e		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0F143246,	//0x0f10		VoC_bnltz16_r(CII_Cb_gain_La2,REG6)
0x3AAA0B76,	//0x0f12		VoC_sub16_dr(REG6,0xbaaa,REG6)
		//0x0f14		CII_Cb_gain_La2
0xFFC0E0C9,	//0x0f14		VoC_NAD	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0x01882B80,	//0x0f16		VoC_jal(CII_NORM_L_ACC0)
0xF6257A0C,	//0x0f18		VoC_movreg16(REG5,REG1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xF6896120,	//0x0f1a		VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0x01882B80,	//0x0f1c		VoC_jal(CII_NORM_L_ACC0)
0xC34D6121,	//0x0f1e		VoC_sub16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0x019A2B80,	//0x0f20		VoC_jal(CII_DIV_S)
0xFE2AF80A,	//0x0f22		VoC_shr16_rr(REG2,REG5,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x5CB2DF00,	//0x0f24		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x0f25		VoC_endloop1
0xDFA9C1D7,	//0x0f26		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,IN_PARALLEL)
0xE580E0E5,	//0x0f28		VoC_return	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x0f2a		CII_Reorder_lsf
0x00CD0A85,	//0x0f2a		VoC_lw16i(REG5,0xcd)
0xD804E946,	//0x0f2c		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0xa,DEFAULT)
0x0F3234AC,	//0x0f2e		VoC_bngt16_rr(Reord_L,REG5,REG4)
0xFFC0DC05,	//0x0f30		VoC_NAD	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x0f32		Reord_L
		//0x0f32		VoC_endloop0
0x047200C5,	//0x0f32		VoC_add16inc_pd(REG5,REG0,0x8472)
0xF007E580,	//0x0f34		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_return
		//0x0f35		CII_pseudonoise
0xFF25661D,	//0x0f36		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x038429C5,	//0x0f38		VoC_and32_rd(ACC1,0x8384)
0x3345F020,	//0x0f3a		VoC_bnez32_r(PSEUDONOISE102,ACC1)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF0000F3E,	//0x0f3c		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez32_r(PSEUDONOISE102,ACC1)(hi)
		//0x0f3e		PSEUDONOISE102
0x0A8BFF45,	//0x0f3e		VoC_lw16i(ACC1_HI,0x1000)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x64E51000,	//0x0f40		VoC_and32_rr(ACC1,ACC0,DEFAULT)	|	VoC_lw16i(ACC1_HI,0x1000)(hi)
0x3305E004,	//0x0f42		VoC_bez32_r(PSEUDONOISE103,ACC1)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xF0240F46,	//0x0f44		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez32_r(PSEUDONOISE103,ACC1)(hi)
		//0x0f46		PSEUDONOISE103
0xF8FF64A0,	//0x0f46		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_xor16_rr(REG0,REG4,DEFAULT)
0x29C2FF22,	//0x0f48		VoC_and32_rd(REG45,0x8384)(lo)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xE4670384,	//0x0f4a		VoC_or16_rr(REG7,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x8384)(hi)
0xE0147A0C,	//0x0f4c		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x3184E404,	//0x0f4e		VoC_bez16_r(PSEUDONOISE105,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0x2A440F53,	//0x0f50		VoC_or32_rd(ACC0,0x8008)(lo)	|	VoC_bez16_r(PSEUDONOISE105,REG4)(hi)
0xFF250008,	//0x0f52		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_or32_rd(ACC0,0x8008)(hi)
		//0x0f53		PSEUDONOISE105
		//0x0f53		VoC_endloop0
0xDFC0E580,	//0x0f54		VoC_push16(REG0,DEFAULT)	|	VoC_return
		//0x0f55		CII_build_CN_code
0xFF455FE9,	//0x0f56		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0016A82,	//0x0f58		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x0f5a		VoC_endloop0
0x2C15DDC5,	//0x0f5a		VoC_loop_i(0x1,0xa)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xF0400F72,	//0x0f5c		VoC_lw16i_short(REG0,0x2,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x0F352B80,	//0x0f5e		VoC_jal(CII_pseudonoise)
0x3AB60A7A,	//0x0f60		VoC_multf32_rd(REG45,REG7,0xbab6)
0xF80CF020,	//0x0f62		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x2B80C066,	//0x0f64		VoC_jal(CII_pseudonoise)(lo)	|	VoC_add16_rr(REG6,REG1,REG4,DEFAULT)
0xD6220F35,	//0x0f66		VoC_lw16_sd(REG2,0x1,DEFAULT)	|	VoC_jal(CII_pseudonoise)(hi)
0x1804C0B2,	//0x0f68		VoC_lw16i_set_inc(REG0,0x1000,0x1)(lo)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0x31071000,	//0x0f6a		VoC_bgtz16_r(build_CN_code_101,REG7)(lo)	|	VoC_lw16i_set_inc(REG0,0x1000,0x1)(hi)
0x18440F70,	//0x0f6c		VoC_lw16i_set_inc(REG0,0xfffff000,0x1)(lo)	|	VoC_bgtz16_r(build_CN_code_101,REG7)(hi)
0xFFC07000,	//0x0f6e		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xfffff000,0x1)(hi)
		//0x0f70		build_CN_code_101
0x03840749,	//0x0f70		VoC_add16_rd(REG1,REG1,0x8384)
		//0x0f72		VoC_endloop1
0xDFA9DC20,	//0x0f72		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(REG0,REG2,DEFAULT)
0xE580DF80,	//0x0f74		VoC_return	|	VoC_pop16(REG0,DEFAULT)
		//0x0f76		CII_Vq_subvec
0x14C6FF42,	//0x0f76		VoC_lw32_d(RL6,0x800a)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0x5FC3000A,	//0x0f78		VoC_push16(REG3,DEFAULT)	|	VoC_lw32_d(RL6,0x800a)(hi)
0x7002D910,	//0x0f7a		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_lw32_sd(REG01,0x1,IN_PARALLEL)
0x7050FF44,	//0x0f7c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xFFC0F009,	//0x0f7e		VoC_NAD	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x0FB02E31,	//0x0f80		VoC_loop_r(1,REG6)
0x0FAE2C40,	//0x0f82		VoC_loop_i(0x0,0x20)
0xA61F261E,	//0x0f84		VoC_sub16inc_pp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG3,DEFAULT)
0x8FCF0F8E,	//0x0f86		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36D908,	//0x0f88		VoC_bimac32_rr(REG67,REG67)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xA61F261E,	//0x0f8a		VoC_sub16inc_pp(REG7,REG0,REG3,IN_PARALLEL)	|	VoC_sub16inc_pp(REG6,REG0,REG3,DEFAULT)
0x8FCF0F8E,	//0x0f8c		VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)
0xCF36FFC0,	//0x0f8e		VoC_bimac32_rr(REG67,REG67)	|	VoC_NOP
0x36B4D910,	//0x0f90		VoC_bngt32_rr(Vq_subvec_s_new_01,RL6,ACC0)(lo)	|	VoC_lw32_sd(REG01,0x1,DEFAULT)
0xF0050F96,	//0x0f92		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_bngt32_rr(Vq_subvec_s_new_01,RL6,ACC0)(hi)
0xF6447F26,	//0x0f94		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
		//0x0f96		Vq_subvec_s_new_01
0x0FAE3307,	//0x0f96		VoC_bez32_r(Vq_subvec_s_new_02,RL7)
0x3AB007DB,	//0x0f98		VoC_sub16_rd(REG3,REG3,0xbab0)
0x221EFF44,	//0x0f9a		VoC_add16inc_pp(REG6,REG0,REG3,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x0F8EA21F,	//0x0f9c		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_pp(REG7,REG0,REG3,IN_PARALLEL)
0xD9088FCF,	//0x0f9e		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0x221ECF36,	//0x0fa0		VoC_add16inc_pp(REG6,REG0,REG3,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x0F8EA21F,	//0x0fa2		VoC_multf16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_pp(REG7,REG0,REG3,IN_PARALLEL)
0xFFC08FCF,	//0x0fa4		VoC_NOP	|	VoC_multf16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0xD910CF36,	//0x0fa6		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_bimac32_rr(REG67,REG67)
0x0FAE36B4,	//0x0fa8		VoC_bngt32_rr(Vq_subvec_s_new_02,RL6,ACC0)
0x7F26F025,	//0x0faa		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xFFC0F644,	//0x0fac		VoC_NAD	|	VoC_movreg16(REG4,REG2,IN_PARALLEL)
		//0x0fae		Vq_subvec_s_new_02
		//0x0fae		VoC_endloop0
0xDE107F44,	//0x0fae		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0fb0		VoC_endloop1
0x5F83FFC0,	//0x0fb0		VoC_pop16(REG3,DEFAULT)	|	VoC_NOP
0x5612F686,	//0x0fb2		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0x3307F8F4,	//0x0fb4		VoC_bez32_r(Vq_subvec_LEnd,RL7)(lo)	|	VoC_shr16_ri(REG4,0xfffffffe,IN_PARALLEL)
0xF8FE0FB9,	//0x0fb6		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_bez32_r(Vq_subvec_LEnd,RL7)(hi)
0xD914C1AE,	//0x0fb8		VoC_lw32_sd(ACC0,0x1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
		//0x0fb9		Vq_subvec_LEnd
0xDCA640E3,	//0x0fba		VoC_sw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x3A8814C6,	//0x0fbc		VoC_lw32_d(RL6,0xba88)
0xD90D59DB,	//0x0fbe		VoC_lw32_sd(ACC1,0x0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xF7416100,	//0x0fc0		VoC_movreg16(REG1,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_LO,DEFAULT)
0xC9754934,	//0x0fc2		VoC_add32_rr(ACC1,ACC1,RL6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0x5D14DA12,	//0x0fc4		VoC_sw32_sd(ACC0,0x1,DEFAULT)	|	VoC_sw16_sd(REG2,0x0,DEFAULT)
0xDD0DE002,	//0x0fc6		VoC_sw32_sd(ACC1,0x0,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0x0FCE31C5,	//0x0fc8		VoC_bnez16_r(Vq_subvec_s_new_05,REG5)
0xDD83D9DA,	//0x0fca		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xE580DD8A,	//0x0fcc		VoC_return	|	VoC_sw32_p(REG45,REG1,DEFAULT)
		//0x0fce		Vq_subvec_s_new_05
0x59DAC2B6,	//0x0fce		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG2,REG6,DEFAULT)
0x42A4C2BF,	//0x0fd0		VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_sub16_rr(REG7,REG2,REG7,IN_PARALLEL)
0xDD83C2AD,	//0x0fd2		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_sub16_rr(REG5,REG2,REG5,IN_PARALLEL)
0xE580DD8A,	//0x0fd4		VoC_return	|	VoC_sw32_p(REG45,REG1,DEFAULT)
		//0x0fd6		CII_prm2bits_amr_efr
0x0DF20A81,	//0x0fd6		VoC_lw16i(REG1,0xdf2)
0x43EA1806,	//0x0fd8		VoC_lw16i_set_inc(REG2,0x43ea,0x1)
0xE00477F3,	//0x0fda		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x0FF02E29,	//0x0fdc		VoC_loop_r(1,REG5)
0x1606D806,	//0x0fde		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x160400FF,	//0x0fe0		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_and16_ri(REG6,0xff)(hi)
0x31840001,	//0x0fe2		VoC_bez16_r(prm2bits_amr_efr_even,REG4)(lo)	|	VoC_and16_ri(REG4,0x1)(hi)
0xD8860FE7,	//0x0fe4		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_bez16_r(prm2bits_amr_efr_even,REG4)(hi)
0xD8A7F946,	//0x0fe6		VoC_lw16inc_p(REG7,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
		//0x0fe7		prm2bits_amr_efr_even
0x07CBC071,	//0x0fe8		VoC_sub16_rd(REG3,REG1,0x8384)(lo)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE7840384,	//0x0fea		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG3,REG1,0x8384)(hi)
0xE43DF025,	//0x0fec		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xDCB5F80F,	//0x0fee		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
		//0x0fef		VoC_endloop0
		//0x0ff0		VoC_endloop1
0x03840764,	//0x0ff0		VoC_add16_rd(REG4,REG4,0x8384)
0x40876C08,	//0x0ff2		VoC_bez16_d(COD12D2_NO_SID_ENCODING,0x4087)
0x42FC6E06,	//0x0ff4		VoC_bnez16_d(COD12D2_NO_SID_ENCODING,0x42fc)
0x2B80DFE9,	//0x0ff6		VoC_jal(CII_sid_codeword_encoding)(lo)	|	VoC_push16(RA,DEFAULT)
0xDFA91756,	//0x0ff8		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CII_sid_codeword_encoding)(hi)
		//0x0ffa		COD12D2_NO_SID_ENCODING
0x0DF21804,	//0x0ffa		VoC_lw16i_set_inc(REG0,0xdf2,0x1)
0x001A1805,	//0x0ffc		VoC_lw16i_set_inc(REG1,0x1a,0x1)
0x3AB00749,	//0x0ffe		VoC_add16_rd(REG1,REG1,0xbab0)
0xFFC0F1E2,	//0x1000		VoC_NAD	|	VoC_lw16i_short(REG2,0xf,DEFAULT)
0x100F2C21,	//0x1002		VoC_loop_i(0x1,0x10)
0xC0137F42,	//0x1004		VoC_add16_rr(REG3,REG0,REG2,IN_PARALLEL)	|	VoC_lw32z(REG45,DEFAULT)
0xEA05FFC0,	//0x1006		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_NAD
0xD8B67BFA,	//0x1008		VoC_lw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x00011606,	//0x100a		VoC_and16_ri(REG6,0x1)
		//0x100c		VoC_endloop0
0x0740E474,	//0x100c		VoC_add16_rd(REG0,REG0,0xbab9)(lo)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xDC943AB9,	//0x100e		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0xbab9)(hi)
		//0x100f		VoC_endloop1
0xFFC0E580,	//0x1010		VoC_NAD	|	VoC_return
