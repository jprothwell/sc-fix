		//0x0200		VoC_code_section_1
		//0x0200		CII_smbPitchShift
0xFFC05FE9,	//0x0200		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x047A2B80,	//0x0202		VoC_jal(Coolsand_MorphVoiceReset)
0xE5057004,	//0x0204		VoC_lw16i_short(REG5,0x50,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x0128180A,	//0x0206		VoC_lw16i_set_inc(REG2,0x128,0x2)
0x06AA1808,	//0x0208		VoC_lw16i_set_inc(REG0,0x6aa,0x2)
0x0228180B,	//0x020a		VoC_lw16i_set_inc(REG3,0x228,0x2)
0x01271406,	//0x020c		VoC_lw16_d(REG6,0x127)
0x00C00A87,	//0x020e		VoC_lw16i(REG7,0xc0)
0xC3BF40B2,	//0x0210		VoC_sub16_rr(REG7,REG6,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xF47140FB,	//0x0212		VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x05AA1809,	//0x0214		VoC_lw16i_set_inc(REG1,0x5aa,0x2)
0x11B41581,	//0x0216		VoC_sw32_d(REG23,0x11b4)
		//0x0218		CII_smbPitchShift102
0x03CD34AC,	//0x0218		VoC_bngt16_rr(CII_smbPitchShift101,REG5,REG4)
0xF0097052,	//0x021a		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xE02759DD,	//0x021c		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG3,DEFAULT)
0xC1BE59CC,	//0x021e		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xDDD4DDC5,	//0x0220		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x01000A87,	//0x0222		VoC_lw16i(REG7,0x100)
0x03C9343E,	//0x0224		VoC_bgt16_rr(CII_smbPitchShift103,REG7,REG6)
0x5F40F047,	//0x0226		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0x5F42F471,	//0x0228		VoC_push32(REG45,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)
0x1808FF46,	//0x022a		VoC_lw16i_set_inc(REG0,0x7aa,0x2)(lo)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x180507AA,	//0x022c		VoC_lw16i_set_inc(REG1,0x4,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x7aa,0x2)(hi)
0x18060004,	//0x022e		VoC_lw16i_set_inc(REG2,0x128,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x4,0x1)(hi)
0x0A870128,	//0x0230		VoC_lw16i(REG7,0x84)(lo)	|	VoC_lw16i_set_inc(REG2,0x128,0x1)(hi)
0x0A860084,	//0x0232		VoC_lw16i(REG6,0x2000)(lo)	|	VoC_lw16i(REG7,0x84)(hi)
0xD8942000,	//0x0234		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16i(REG6,0x2000)(hi)
0xF80C58A5,	//0x0236		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xCD2FC3A4,	//0x0238		VoC_multf32_rr(RL7,REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
0x02462DFF,	//0x023a		VoC_loop_i(0x1,0xff)
0xDDC7D894,	//0x023c		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x0242358F,	//0x023e		VoC_bne16_rr(CII_smbPitchShift120,REG1,REG7)
0xFFC077F1,	//0x0240		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
		//0x0242		CII_smbPitchShift120
0xF80C58A5,	//0x0242		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xCD2FC3A4,	//0x0244		VoC_multf32_rr(RL7,REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)
		//0x0246		VoC_endloop1
0xF7E4DDC6,	//0x0246		VoC_lw16i_short(REG4,0xffffffff,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDC6DDC7,	//0x0248		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0BAA1504,	//0x024a		VoC_sw16_d(REG4,0xbaa)
0x03D22B80,	//0x024c		VoC_jal(CS_intsmbFft)
0x07AA1808,	//0x024e		VoC_lw16i_set_inc(REG0,0x7aa,0x2)
0x0BB41809,	//0x0250		VoC_lw16i_set_inc(REG1,0xbb4,0x2)
0x03281806,	//0x0252		VoC_lw16i_set_inc(REG2,0x328,0x1)
0x0DB41807,	//0x0254		VoC_lw16i_set_inc(REG3,0xdb4,0x1)
0xFFC07007,	//0x0256		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x02C82D03,	//0x0258		VoC_loop_i(0x1,0x81)
0xDF4359C2,	//0x025a		VoC_push32(REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF4015F41,	//0x025c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xFA1A59C3,	//0x025e		VoC_shr32_ri(REG45,0x3,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xCD267A1B,	//0x0260		VoC_multf32_rr(RL6,REG4,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0xE0254DB7,	//0x0262		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG6,REG6,DEFAULT)
0x40000A83,	//0x0264		VoC_lw16i(REG3,0x4000)
0x69E8F002,	//0x0266		VoC_loop_i_short(0xf,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0xC09DC9BE,	//0x0268		VoC_add16_rr(REG5,REG2,REG3,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,IN_PARALLEL)
0xFFC0CD6F,	//0x026a		VoC_NOP	|	VoC_multf32_rr(RL7,REG5,REG5,DEFAULT)
0x026F363E,	//0x026c		VoC_bgt32_rr(CII_smbPitchShift104,RL7,RL6)
0xF80BE0A2,	//0x026e		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_movreg16(REG2,REG5,DEFAULT)
		//0x026f		CII_smbPitchShift104
		//0x026f		VoC_endloop0
0xE0077BE1,	//0x0270		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffffc,DEFAULT)
0x02763246,	//0x0272		VoC_bnltz16_r(CII_smbPitchShift105,REG6)
0xF027C3F6,	//0x0274		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)
		//0x0276		CII_smbPitchShift105
0xF4715DC9,	//0x0276		VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xE0055F40,	//0x0278		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x027E3244,	//0x027a		VoC_bnltz16_r(CII_smbPitchShift106,REG4)
0xF025C364,	//0x027c		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)
		//0x027e		CII_smbPitchShift106
0x34B4F000,	//0x027e		VoC_bngt16_rr(CII_smbPitchShift107,REG6,REG4)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xE0820286,	//0x0280		VoC_movreg16(REG2,REG4,DEFAULT)	|	VoC_bngt16_rr(CII_smbPitchShift107,REG6,REG4)(hi)
0x6046E0C4,	//0x0282		VoC_movreg16(REG6,REG2,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0xFFC0E010,	//0x0284		VoC_NAD	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
		//0x0286		CII_smbPitchShift107
0x00001806,	//0x0286		VoC_lw16i_set_inc(REG2,0x0,0x1)
0x00851807,	//0x0288		VoC_lw16i_set_inc(REG3,0x85,0x1)
0x9B1DEC26,	//0x028a		VoC_multf32inc_rp(ACC1,REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x21,DEFAULT)
0xE141FFC0,	//0x028c		VoC_movreg16(REG1,ACC1_LO,DEFAULT)	|	VoC_NOP
0x029234B1,	//0x028e		VoC_bngt16_rr(CII_smbPitchShift108,REG6,REG1)
		//0x0290		VoC_endloop0
0xFFC05E10,	//0x0290		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
		//0x0292		CII_smbPitchShift108
0x00400A84,	//0x0292		VoC_lw16i(REG4,0x40)
0x02983180,	//0x0294		VoC_bez16_r(CII_smbPitchShift109,REG0)
0xFFC04312,	//0x0296		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
		//0x0298		CII_smbPitchShift109
0xE00678FC,	//0x0298		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x029E3185,	//0x029a		VoC_bez16_r(CII_smbPitchShift110,REG5)
0xFFC04312,	//0x029c		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
		//0x029e		CII_smbPitchShift110
0x02A23187,	//0x029e		VoC_bez16_r(CII_smbPitchShift111,REG7)
0xFFC04392,	//0x02a0		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG6,REG2,DEFAULT)
		//0x02a2		CII_smbPitchShift111
0xDF006044,	//0x02a2		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg16(REG4,REG2,DEFAULT)
0xDF03DF01,	//0x02a4		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x5CA48515,	//0x02a6		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub16_rp(REG5,REG4,REG2,DEFAULT)
0xF8D6F6E6,	//0x02a8		VoC_shr16_ri(REG6,0xfffffffa,DEFAULT)	|	VoC_movreg16(REG6,REG7,IN_PARALLEL)
0xE0A4C375,	//0x02aa		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG6,DEFAULT)
0x3245F834,	//0x02ac		VoC_bnltz16_r(CII_smbPitchShift118,REG5)(lo)	|	VoC_shr16_ri(REG4,0x6,DEFAULT)
0xE0A602B6,	//0x02ae		VoC_movreg16(REG6,REG5,DEFAULT)	|	VoC_bnltz16_r(CII_smbPitchShift118,REG5)(hi)
0x003F1606,	//0x02b0		VoC_and16_ri(REG6,0x3f)
0x02B63186,	//0x02b2		VoC_bez16_r(CII_smbPitchShift118,REG6)
0xC134F026,	//0x02b4		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x02b6		CII_smbPitchShift118
0x1606E086,	//0x02b6		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0x31860001,	//0x02b8		VoC_bez16_r(CII_smbPitchShift113,REG6)(lo)	|	VoC_and16_ri(REG6,0x1)(hi)
0x320402C0,	//0x02ba		VoC_bltz16_r(CII_smbPitchShift112,REG4)(lo)	|	VoC_bez16_r(CII_smbPitchShift113,REG6)(hi)
0xC13402BF,	//0x02bc		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_bltz16_r(CII_smbPitchShift112,REG4)(hi)
0xC334E5C2,	//0x02be		VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_jump(CII_smbPitchShift113)
		//0x02bf		CII_smbPitchShift112
		//0x02c0		CII_smbPitchShift113
0xC365F8D4,	//0x02c0		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)
0xF6E678F5,	//0x02c2		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
0xE01478CE,	//0x02c4		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffff9,DEFAULT)
0xC1E7C175,	//0x02c6		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
		//0x02c8		VoC_endloop1
0x1808DCB5,	//0x02c8		VoC_lw16i_set_inc(REG0,0xfb4,0x2)(lo)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x18050FB4,	//0x02ca		VoC_lw16i_set_inc(REG1,0xeb4,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xfb4,0x2)(hi)
0x180A0EB4,	//0x02cc		VoC_lw16i_set_inc(REG2,0xbb4,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0xeb4,0x1)(hi)
0x18070BB4,	//0x02ce		VoC_lw16i_set_inc(REG3,0xdb4,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xbb4,0x2)(hi)
0x15800DB4,	//0x02d0		VoC_sw32_d(REG01,0xbb2)(lo)	|	VoC_lw16i_set_inc(REG3,0xdb4,0x1)(hi)
0xFF440BB2,	//0x02d2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw32_d(REG01,0xbb2)(hi)
0x02D72D03,	//0x02d4		VoC_loop_i(0x1,0x81)
0xDDC4DC99,	//0x02d6		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x02d7		VoC_endloop1
0x0A86F007,	//0x02d8		VoC_lw16i(REG6,0x80)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFFC00080,	//0x02da		VoC_NAD	|	VoC_lw16i(REG6,0x80)(hi)
0x02EF2D03,	//0x02dc		VoC_loop_i(0x1,0x81)
0x40020A3A,	//0x02de		VoC_multf32_rd(REG45,REG7,0x4002)
0x6085D8B0,	//0x02e0		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,DEFAULT)
0x3426D9D4,	//0x02e2		VoC_bgt16_rr(CII_smbPitchShift114,REG4,REG6)(lo)	|	VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)
0xF8FD02EE,	//0x02e4		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_bgt16_rr(CII_smbPitchShift114,REG4,REG6)(hi)
0x0BB2072D,	//0x02e6		VoC_add16_rd(REG5,REG5,0xbb2)
0x40020A00,	//0x02e8		VoC_multf32_rd(REG01,REG0,0x4002)
0x0BB30724,	//0x02ea		VoC_add16_rd(REG4,REG4,0xbb3)
0xDC40DDAC,	//0x02ec		VoC_sw16_p(REG0,REG4,DEFAULT)	|	VoC_sw32_p(ACC0,REG5,DEFAULT)
		//0x02ee		CII_smbPitchShift114
0xC1CFF021,	//0x02ee		VoC_add16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
		//0x02ef		VoC_endloop1
0x0FB41808,	//0x02f0		VoC_lw16i_set_inc(REG0,0xfb4,0x2)
0x07AA1809,	//0x02f2		VoC_lw16i_set_inc(REG1,0x7aa,0x2)
0x0EB41806,	//0x02f4		VoC_lw16i_set_inc(REG2,0xeb4,0x1)
0x00A61807,	//0x02f6		VoC_lw16i_set_inc(REG3,0xa6,0x1)
0xFFC07007,	//0x02f8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x03412D03,	//0x02fa		VoC_loop_i(0x1,0x81)
0xF6E658A5,	//0x02fc		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xC376F8CE,	//0x02fe		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xfffffff9,DEFAULT)
0xF6E57816,	//0x0300		VoC_movreg16(REG5,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xC1AEF8D5,	//0x0302		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffffa,DEFAULT)
0x1606819E,	//0x0304		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_add16_rp(REG6,REG6,REG3,DEFAULT)
0x700500FF,	//0x0306		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xDCB6F401,	//0x0308		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x0A84DFC6,	//0x030a		VoC_lw16i(REG4,0x80)(lo)	|	VoC_push16(REG6,DEFAULT)
0x32460080,	//0x030c		VoC_bnltz16_r(CII_smbPitchShift115,REG6)(lo)	|	VoC_lw16i(REG4,0x80)(hi)
0xC3760310,	//0x030e		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_bnltz16_r(CII_smbPitchShift115,REG6)(hi)
		//0x0310		CII_smbPitchShift115
0x031434B4,	//0x0310		VoC_bngt16_rr(CII_smbPitchShift121,REG6,REG4)
0xC336F8FC,	//0x0312		VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
		//0x0314		CII_smbPitchShift121
0x00040A85,	//0x0314		VoC_lw16i(REG5,0x4)
0xD9C14174,	//0x0316		VoC_lw32inc_p(REG23,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG5,REG6,DEFAULT)
0xFBF15F41,	//0x0318		VoC_shr32_ri(REG23,0xfffffffe,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x98E4F912,	//0x031a		VoC_multf32_rp(ACC0,REG3,REG4,DEFAULT)	|	VoC_shru16_ri(REG2,0x2,DEFAULT)
0xFBA498A5,	//0x031c		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_multf32_rp(ACC1,REG2,REG4,DEFAULT)
0xC92CFA15,	//0x031e		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x2,DEFAULT)
0xDF867A64,	//0x0320		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xE4057004,	//0x0322		VoC_lw16i_short(REG5,0x40,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDDCC4376,	//0x0324		VoC_sw32inc_p(ACC0,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
0x3246F8F5,	//0x0326		VoC_bnltz16_r(CII_smbPitchShift116,REG6)(lo)	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
0xC336032A,	//0x0328		VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_bnltz16_r(CII_smbPitchShift116,REG6)(hi)
		//0x032a		CII_smbPitchShift116
0x032E34B5,	//0x032a		VoC_bngt16_rr(CII_smbPitchShift117,REG6,REG5)
0xFFC043AE,	//0x032c		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
		//0x032e		CII_smbPitchShift117
0x00800A84,	//0x032e		VoC_lw16i(REG4,0x80)
0x033434B4,	//0x0330		VoC_bngt16_rr(CII_smbPitchShift122,REG6,REG4)
0xFFC04376,	//0x0332		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)
		//0x0334		CII_smbPitchShift122
0x00040A85,	//0x0334		VoC_lw16i(REG5,0x4)
0xFFC0C174,	//0x0336		VoC_NOP	|	VoC_add16_rr(REG4,REG5,REG6,DEFAULT)
0x98A598E4,	//0x0338		VoC_multf32_rp(ACC1,REG2,REG4,DEFAULT)	|	VoC_multf32_rp(ACC0,REG3,REG4,DEFAULT)
0xFA15FBA4,	//0x033a		VoC_shr32_ri(ACC1,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0x7A64C92C,	//0x033c		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x41D7E012,	//0x033e		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0xDDCCDF01,	//0x0340		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
		//0x0341		VoC_endloop1
0x07AA1809,	//0x0342		VoC_lw16i_set_inc(REG1,0x7aa,0x2)
0x07AA1808,	//0x0344		VoC_lw16i_set_inc(REG0,0x7aa,0x2)
0x03502CAD,	//0x0346		VoC_loop_i(0x1,0x56)
0x59CAD9C9,	//0x0348		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x59CBFA11,	//0x034a		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_shr32_ri(REG23,0x2,IN_PARALLEL)
0x5DC1FA12,	//0x034c		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,IN_PARALLEL)
0xDDC2FA13,	//0x034e		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0x2,IN_PARALLEL)
		//0x0350		VoC_endloop1
0x7F42DDC3,	//0x0350		VoC_lw32z(REG45,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x2DFDE011,	//0x0352		VoC_loop_i(0x1,0xfe)(lo)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0xDDC20355,	//0x0354		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i(0x1,0xfe)(hi)
		//0x0355		VoC_endloop1
0x0BAA1501,	//0x0356		VoC_sw16_d(REG1,0xbaa)
0x03D22B80,	//0x0358		VoC_jal(CS_intsmbFft)
0x07AA180B,	//0x035a		VoC_lw16i_set_inc(REG3,0x7aa,0x2)
0x07AA180A,	//0x035c		VoC_lw16i_set_inc(REG2,0x7aa,0x2)
0x036E2C05,	//0x035e		VoC_loop_i(0x1,0x2)
0x036D2D00,	//0x0360		VoC_loop_i(0x0,0x80)
0x59D8D9DA,	//0x0362		VoC_lw32inc_p(REG01,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x59DCFBF2,	//0x0364		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffe,IN_PARALLEL)
0x59DDFBF0,	//0x0366		VoC_lw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffffe,IN_PARALLEL)
0x5DD2FBF4,	//0x0368		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,IN_PARALLEL)
0xDDD0FBF5,	//0x036a		VoC_sw32inc_p(REG01,REG2,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffffe,IN_PARALLEL)
0xDDD5DDD4,	//0x036c		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x036d		VoC_endloop0
		//0x036e		VoC_endloop1
0x1808F019,	//0x036e		VoC_lw16i_set_inc(REG0,0x3aa,0x2)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x180503AA,	//0x0370		VoC_lw16i_set_inc(REG1,0x4,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x3aa,0x2)(hi)
0x18120004,	//0x0372		VoC_lw16i_set_inc(REG2,0x7aa,0x4)(lo)	|	VoC_lw16i_set_inc(REG1,0x4,0x1)(hi)
0x0A8607AA,	//0x0374		VoC_lw16i(REG6,0x84)(lo)	|	VoC_lw16i_set_inc(REG2,0x7aa,0x4)(hi)
0x0A870084,	//0x0376		VoC_lw16i(REG7,0x800)(lo)	|	VoC_lw16i(REG6,0x84)(hi)
0x2DFF0800,	//0x0378		VoC_loop_i(0x1,0xff)(lo)	|	VoC_lw16i(REG7,0x800)(hi)
0xD893038B,	//0x037a		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i(0x1,0xff)(hi)
0xF81B59D2,	//0x037c		VoC_shr16_ri(REG3,0x3,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xFBF243DB,	//0x037e		VoC_shr32_ri(REG45,0xfffffffe,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG7,REG3,DEFAULT)
0xCCECF914,	//0x0380		VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xFBA4CCE5,	//0x0382		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_multf32_rr(ACC1,REG3,REG4,DEFAULT)
0xC92CFA15,	//0x0384		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x2,DEFAULT)
0x9104FA44,	//0x0386		VoC_add32_rp(ACC0,ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x038B358E,	//0x0388		VoC_bne16_rr(CII_smbPitchShift123,REG1,REG6)
0xDDC4F7F1,	//0x038a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
		//0x038b		CII_smbPitchShift123
		//0x038b		VoC_endloop1
0x59D2D893,	//0x038c		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x43DBF81B,	//0x038e		VoC_sub16_rr(REG3,REG7,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0x3,IN_PARALLEL)
0xF914FBF2,	//0x0390		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffe,IN_PARALLEL)
0xCCE5CCEC,	//0x0392		VoC_multf32_rr(ACC1,REG3,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)
0xFA15FBA4,	//0x0394		VoC_shr32_ri(ACC1,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xFA44C92C,	//0x0396		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x358E9104,	//0x0398		VoC_bne16_rr(CII_smbPitchShift123_lastone,REG1,REG6)(lo)	|	VoC_add32_rp(ACC0,ACC0,REG0,DEFAULT)
0xF7F1039C,	//0x039a		VoC_lw16i_short(INC1,0xffffffff,DEFAULT)	|	VoC_bne16_rr(CII_smbPitchShift123_lastone,REG1,REG6)(hi)
		//0x039c		CII_smbPitchShift123_lastone
0x1808DDC4,	//0x039c		VoC_lw16i_set_inc(REG0,0x3aa,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x180503AA,	//0x039e		VoC_lw16i_set_inc(REG1,0x228,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x3aa,0x2)(hi)
0xD9C20228,	//0x03a0		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x228,0x1)(hi)
0x03A62C81,	//0x03a2		VoC_loop_i(0x1,0x40)
0xD9C2FA52,	//0x03a4		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
		//0x03a6		VoC_endloop1
0x1808DC94,	//0x03a6		VoC_lw16i_set_inc(REG0,0x3aa,0x2)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x0A8703AA,	//0x03a8		VoC_lw16i(REG7,0x80)(lo)	|	VoC_lw16i_set_inc(REG0,0x3aa,0x2)(hi)
0x41C30080,	//0x03aa		VoC_add16_rr(REG3,REG7,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x80)(hi)
0x2CC1FF45,	//0x03ac		VoC_loop_i(0x1,0x60)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xD9DA03B2,	//0x03ae		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i(0x1,0x60)(hi)
0xDDC2D9DC,	//0x03b0		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
		//0x03b2		VoC_endloop1
0x2C81DDC4,	//0x03b2		VoC_loop_i(0x1,0x40)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC503B5,	//0x03b4		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x40)(hi)
		//0x03b5		VoC_endloop1
0x01281808,	//0x03b6		VoC_lw16i_set_inc(REG0,0x128,0x2)
0x00400A87,	//0x03b8		VoC_lw16i(REG7,0x40)
0xEE04C1C3,	//0x03ba		VoC_loop_i_short(0x30,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG0,DEFAULT)
0xD9DCD9DA,	//0x03bc		VoC_lw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xDDC4DDC2,	//0x03be		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x03bf		VoC_endloop0
0x180ADF02,	//0x03c0		VoC_lw16i_set_inc(REG2,0x128,0x2)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x180B0128,	//0x03c2		VoC_lw16i_set_inc(REG3,0x228,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x128,0x2)(hi)
0x0A860228,	//0x03c4		VoC_lw16i(REG6,0xc0)(lo)	|	VoC_lw16i_set_inc(REG3,0x228,0x2)(hi)
0x40B200C0,	//0x03c6		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i(REG6,0xc0)(hi)
0xF027DF00,	//0x03c8		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
		//0x03c9		CII_smbPitchShift103
0x2B00C13C,	//0x03ca		VoC_jump_lg(CII_smbPitchShift102)(lo)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xDFA90218,	//0x03cc		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(CII_smbPitchShift102)(hi)
		//0x03cd		CII_smbPitchShift101
0x01271506,	//0x03ce		VoC_sw16_d(REG6,0x127)
0xFFC06580,	//0x03d0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x03d2		CS_intsmbFft
0xF4115FE9,	//0x03d2		VoC_lw16i_short(FORMAT32,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0002180A,	//0x03d4		VoC_lw16i_set_inc(REG2,0x2,0x2)
0x01FE180B,	//0x03d6		VoC_lw16i_set_inc(REG3,0x1fe,0x2)
0x07AA0A87,	//0x03d8		VoC_lw16i(REG7,0x7aa)
		//0x03da		CS_intsmbFft102
0x03FA349A,	//0x03da		VoC_bngt16_rr(CS_intsmbFft101,REG3,REG2)
0xF040DF41,	//0x03dc		VoC_lw16i_short(REG0,0x2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x00001805,	//0x03de		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xE044E907,	//0x03e0		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x3184E404,	//0x03e2		VoC_bez16_r(CS_intsmbFft103,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xDE0803E6,	//0x03e4		VoC_inc_p(REG1,DEFAULT)	|	VoC_bez16_r(CS_intsmbFft103,REG4)(hi)
		//0x03e6		CS_intsmbFft103
0xF8F8F8F9,	//0x03e6		VoC_shr16_ri(REG0,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
		//0x03e7		VoC_endloop0
0x03F6348A,	//0x03e8		VoC_bngt16_rr(CS_intsmbFft104,REG1,REG2)
0xF8FA78F9,	//0x03ea		VoC_shr16_ri(REG2,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xC1CBC1D2,	//0x03ec		VoC_add16_rr(REG3,REG7,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG7,REG2,DEFAULT)
0xD99FD996,	//0x03ee		VoC_lw32_p(RL7,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xDDD7DDDE,	//0x03f0		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG3,DEFAULT)
0xD99FD996,	//0x03f2		VoC_lw32_p(RL7,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xDD97DD9E,	//0x03f4		VoC_sw32_p(RL7,REG2,DEFAULT)	|	VoC_sw32_p(RL6,REG3,DEFAULT)
		//0x03f6		CS_intsmbFft104
0xFFC0DF01,	//0x03f6		VoC_NOP	|	VoC_pop32(REG23,DEFAULT)
0xE5E1DE10,	//0x03f8		VoC_jump(CS_intsmbFft102)	|	VoC_inc_p(REG2,DEFAULT)
		//0x03fa		CS_intsmbFft101
0xFFC07045,	//0x03fa		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x04742C11,	//0x03fc		VoC_loop_i(0x1,0x8)
0xF8FD60A4,	//0x03fe		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x40000A82,	//0x0400		VoC_lw16i(REG2,0x4000)
0xF6867003,	//0x0402		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x1582F80E,	//0x0404		VoC_sw32_d(REG45,0xbae)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x18080BAE,	//0x0406		VoC_lw16i_set_inc(REG0,0x80,0x2)(lo)	|	VoC_sw32_d(REG45,0xbae)(hi)
0xE9440080,	//0x0408		VoC_loop_i_short(0xa,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x80,0x2)(hi)
0x3186F80E,	//0x040a		VoC_bez16_r(CS_intsmbFft105,REG6)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF808040E,	//0x040c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_bez16_r(CS_intsmbFft105,REG6)(hi)
		//0x040d		VoC_endloop0
		//0x040e		CS_intsmbFft105
0x00040A86,	//0x040e		VoC_lw16i(REG6,0x4)
0x1581C181,	//0x0410		VoC_sw32_d(REG23,0xbac)(lo)	|	VoC_add16_rr(REG1,REG6,REG0,DEFAULT)
0xD8120BAC,	//0x0412		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_sw32_d(REG23,0xbac)(hi)
0x00401809,	//0x0414		VoC_lw16i_set_inc(REG1,0x40,0x2)
0xE0054241,	//0x0416		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG0,DEFAULT)
0x041B3241,	//0x0418		VoC_bnltz16_r(CS_intsmbFft106,REG1)
0xC189C349,	//0x041a		VoC_add16_rr(REG1,REG6,REG1,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG1,DEFAULT)
		//0x041b		CS_intsmbFft106
0xD813F006,	//0x041c		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0BAA7203,	//0x041e		VoC_bnltz16_d(CS_intsmbFft107,0xbaa)
0xFFC0C39B,	//0x0420		VoC_NOP	|	VoC_sub16_rr(REG3,REG6,REG3,DEFAULT)
		//0x0421		CS_intsmbFft107
0x0BB01581,	//0x0422		VoC_sw32_d(REG23,0xbb0)
		//0x0424		CS_intsmbFft111
0x047434A6,	//0x0424		VoC_bngt16_rr(CS_intsmbFft108,REG4,REG6)
0xDF4360C5,	//0x0426		VoC_push32(REG67,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF8FC78FE,	//0x0428		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xF5A141F0,	//0x042a		VoC_lw16i_short(FORMAT32,0xfffffff4,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG7,REG6,DEFAULT)
0xF4124021,	//0x042c		VoC_lw16i_short(FORMATX,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG4,DEFAULT)
		//0x042e		CS_intsmbFft110
0x02000A87,	//0x042e		VoC_lw16i(REG7,0x200)
0x045F34BD,	//0x0430		VoC_bngt16_rr(CS_intsmbFft109,REG7,REG5)
0x5FC5D9C9,	//0x0432		VoC_push16(REG5,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x1406FBF1,	//0x0434		VoC_lw16_d(REG6,0xbac)(lo)	|	VoC_shr32_ri(REG23,0xfffffffe,IN_PARALLEL)
0x4CF50BAC,	//0x0436		VoC_multf32_rr(ACC1,REG3,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0xbac)(hi)
0x598AF912,	//0x0438		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_shru16_ri(REG2,0x2,IN_PARALLEL)
0x1407CE96,	//0x043a		VoC_lw16_d(REG7,0xbad)(lo)	|	VoC_macX_rr(REG2,REG6,IN_PARALLEL)
0xFBF20BAD,	//0x043c		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG7,0xbad)(hi)
0xCF2F7914,	//0x043e		VoC_msu32_rr(REG5,REG7,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xCFA74CFC,	//0x0440		VoC_msuX_rr(REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG7,DEFAULT)
0xD9864E57,	//0x0442		VoC_lw32_p(RL6,REG0,IN_PARALLEL)	|	VoC_macX_rr(REG2,REG7,DEFAULT)
0xFA654E2E,	//0x0444		VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0xC9774E66,	//0x0446		VoC_add32_rr(RL7,ACC1,RL6,IN_PARALLEL)	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xCBAEF042,	//0x0448		VoC_sub32_rr(RL6,RL6,ACC1,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0xDDC77A64,	//0x044a		VoC_sw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xC2515987,	//0x044c		VoC_sub16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG0,DEFAULT)
0x1403C9E5,	//0x044e		VoC_lw16_d(REG3,0xbaf)(lo)	|	VoC_add32_rr(ACC1,RL7,ACC0,DEFAULT)
0x5F850BAF,	//0x0450		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16_d(REG3,0xbaf)(hi)
0x415DE022,	//0x0452		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,IN_PARALLEL)
0x5D85F8FB,	//0x0454		VoC_sw32_p(ACC1,REG0,DEFAULT)	|	VoC_shr16_ri(REG3,0xffffffff,IN_PARALLEL)
0x5DCECBE7,	//0x0456		VoC_sw32inc_p(RL6,REG1,DEFAULT)	|	VoC_sub32_rr(RL7,RL7,ACC0,IN_PARALLEL)
0x5D8FC018,	//0x0458		VoC_sw32_p(RL7,REG1,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)
0x4210C059,	//0x045a		VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0x2B00C251,	//0x045c		VoC_jump_lg(CS_intsmbFft110)(lo)	|	VoC_sub16_rr(REG1,REG1,REG2,IN_PARALLEL)
0xF059042E,	//0x045e		VoC_lw16i_short(FORMAT32,0x2,DEFAULT)	|	VoC_jump_lg(CS_intsmbFft110)(hi)
		//0x045f		CS_intsmbFft109
0x0BB01481,	//0x0460		VoC_lw32_d(REG23,0xbb0)
0x0BAC1482,	//0x0462		VoC_lw32_d(REG45,0xbac)
0xCCE54CA4,	//0x0464		VoC_multf32_rr(ACC1,REG3,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG4,DEFAULT)
0xCE154E9D,	//0x0466		VoC_mac32_rr(REG2,REG5,IN_PARALLEL)	|	VoC_msu32_rr(REG3,REG5,DEFAULT)
0xDF037045,	//0x0468		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xFA657A64,	//0x046a		VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xC1AE6149,	//0x046c		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,ACC1_LO,DEFAULT)
0x0BAE1404,	//0x046e		VoC_lw16_d(REG4,0xbae)
0x0BAC1584,	//0x0470		VoC_sw32_d(ACC0,0xbac)
0x04242B00,	//0x0472		VoC_jump_lg(CS_intsmbFft111)
		//0x0474		CS_intsmbFft108
		//0x0474		VoC_endloop1
0x0BAF1405,	//0x0474		VoC_lw16_d(REG5,0xbaf)
0xFFC0DFA9,	//0x0476		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0478		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x047a		Coolsand_MorphVoiceReset
0x40016C24,	//0x047a		VoC_bez16_d(HELLO_LABEL_MAIN_RESET,0x4001)
0x1808FF44,	//0x047c		VoC_lw16i_set_inc(REG0,0x128,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x18090128,	//0x047e		VoC_lw16i_set_inc(REG1,0x228,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x128,0x2)(hi)
0x180A0228,	//0x0480		VoC_lw16i_set_inc(REG2,0x3aa,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x228,0x2)(hi)
0x180B03AA,	//0x0482		VoC_lw16i_set_inc(REG3,0x7aa,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x3aa,0x2)(hi)
0x2D0007AA,	//0x0484		VoC_loop_i(0x0,0x80)(lo)	|	VoC_lw16i_set_inc(REG3,0x7aa,0x2)(hi)
0xDDC4048E,	//0x0486		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x80)(hi)
0xDDD4DDCC,	//0x0488		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDDDCDDD4,	//0x048a		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDDDCDDDC,	//0x048c		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x048e		VoC_endloop0
0x1804DDDC,	//0x048e		VoC_lw16i_set_inc(REG0,0x328,0x1)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x2D040328,	//0x0490		VoC_loop_i(0x0,0x82)(lo)	|	VoC_lw16i_set_inc(REG0,0x328,0x1)(hi)
0xDC890493,	//0x0492		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x82)(hi)
		//0x0493		VoC_endloop0
0x00A61805,	//0x0494		VoC_lw16i_set_inc(REG1,0xa6,0x1)
0x04982D02,	//0x0496		VoC_loop_i(0x0,0x81)
		//0x0498		VoC_endloop0
0x0A85DC99,	//0x0498		VoC_lw16i(REG5,0xc0)(lo)	|	VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFFC000C0,	//0x049a		VoC_NOP	|	VoC_lw16i(REG5,0xc0)(hi)
0x01271505,	//0x049c		VoC_sw16_d(REG5,0x127)
		//0x049e		HELLO_LABEL_MAIN_RESET
0xFFC0E580,	//0x049e		VoC_NAD	|	VoC_return
