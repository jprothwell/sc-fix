// Here is where all the model specific defines should be


#include "hal_i2c.h"
#include "hal_camera.h"
#include "camera_m.h"

typedef struct
{
    UINT8 Addr;            // Register Address
    UINT8 Data;             // Register Data
    UINT8 Wait;            // Time to wait after write
} CAM_REG_T;

typedef struct
{
    UINT16 Len;             // Size of array
    CAM_REG_T *RegVal;      // Array of registers
} CAM_REG_GROUP_T;

typedef enum
{
    CAM_MODE_IDLE,
    CAM_MODE_VIEWFINDER,
    CAM_MODE_PREP_IMG_CAPTURE,
    CAM_MODE_IMG_CAPTURE,
    CAM_MODE_PREP_VID_CAPTURE,
    CAM_MODE_VID_CAPTURE
} CAM_MODE_T;


#define CAM_CLK_CFG 0x81

// use this for 320x240 (QVGA) capture
const CAM_REG_T RG_InitPowerOnQvga[] = 
{
   {0x01, 0xc1,3},
{0x01, 0xc3,3},
{0x01, 0xc1,3},

{0x03, 0x00,3},
{0x12, 0x00,3},  ////[B:2] pclk inversion(0x04)

{0x03, 0x00,3},//page 0
{0x10, 0x10,3},//window :320*240

{0x03, 0x20,3},//page 3
{0x10, 0x0c,3},//ae off
{0x03, 0x22,3},//page 4
{0x10, 0x69,3},//awb off 

{0x03, 0x00,3},
{0x11, 0x95,3}, //fixed frame

{0x80, 0x0e,3},
{0x90, 0x0a,3},
{0x91, 0x0a,3},
{0x92, 0x60,3},

{0xa0, 0x06,3}, 
{0xa1, 0x06,3}, 
{0xa2, 0x05,3}, 
{0xa3, 0x05,3}, 
{0xa4, 0x08,3}, 
{0xa5, 0x08,3}, 
{0xa6, 0x04,3}, 
{0xa7, 0x04,3}, 
{0xa8, 0x45,3},
{0xa9, 0x45,3},
{0xaa, 0x45,3},
{0xab, 0x45,3},
{0xac, 0x45,3},
{0xad, 0x45,3},
{0xae, 0x45,3},
{0xaf, 0x45,3},

{0x03, 0x02,3},
{0x1a, 0x31,3},

{0x1c, 0x00,3},
{0x1d, 0x03,3},

{0x20, 0x33,3},
{0x21, 0x77,3},
{0x22, 0xad,3},
{0x34, 0xff,3},

{0x62, 0x78,3},
{0x63, 0x7a,3},
{0x64, 0x7d,3},
{0x65, 0x88,3},

{0x72, 0x78,3},
{0x73, 0x8b,3},
{0x74, 0x78,3},
{0x75, 0x8b,3},

{0xa0, 0x03,3},
{0xa8, 0x03,3},
{0xaa, 0x03,3},

{0x03, 0x10,3},
{0x10, 0x03,3}, ////OutputFormat data (0x00:VYUY or 0x03:YUYV)
{0x12, 0x30,3},
{0x40, 0x82,3},
{0x41, 0x02,3},
{0x50, 0x80,3},

{0x60, 0x1f,3},
{0x61, 0x98,3},
{0x62, 0x98,3},
{0x63, 0x40,3},
{0x64, 0xa0,3},

{0x03, 0x11,3},
{0x10, 0x1d,3},
{0x11, 0x0a,3},
{0x60, 0x08,3},
{0x61, 0x98,3},
{0x62, 0x98,3},
{0x63, 0x63,3},

{0x03, 0x12,3},
{0x40, 0x21,3},
{0x41, 0x07,3},
{0x50, 0x03,3}, 
{0x70, 0x1d,3}, 
{0x74, 0x04,3},
{0x75, 0x06,3},
{0x90, 0x01,3},
{0x91, 0x10,3},

{0x03, 0x13,3},
{0x10, 0x29,3},

{0x11, 0x07,3},
{0x12, 0x01,3},
{0x13, 0x02,3},

{0x20, 0x04,3},
{0x21, 0x04,3}, //edge
{0x23, 0x18,3},
{0x24, 0x03,3},

{0x80, 0x0d,3}, 
{0x81, 0x01,3},

{0x83, 0x51,3},
{0x83, 0x55,3},
{0x83, 0x5d,3},

{0x90, 0x03,3},
{0x91, 0x02,3},
{0x93, 0x19,3},
{0x94, 0x03,3},
{0x95, 0x00,3}, 

{0x03, 0x14,3},
{0x10, 0x07,3},
{0x22, 0x80,3},
{0x23, 0x62,3},
{0x24, 0x52,3},

{0x03, 0x15,3},
{0x10, 0x0f,3},
{0x14, 0x36,3},
{0x16, 0x28,3},
{0x17, 0x3f,3},

{0x30, 0x73,3},
{0x31, 0x36,3},
{0x32, 0x02,3},
{0x33, 0x12,3},
{0x34, 0x6d,3},
{0x35, 0x1a,3},
{0x36, 0x0c,3},
{0x37, 0x27,3},
{0x38, 0x73,3},

{0x40, 0x00,3},
{0x41, 0x00,3},
{0x42, 0x00,3},
{0x43, 0x8b,3},
{0x44, 0x07,3},
{0x45, 0x04,3},
{0x46, 0x84,3},
{0x47, 0xa1,3},
{0x48, 0x25,3},

{0x80, 0x00,3},
{0x84, 0x80,3},
{0x85, 0x80,3},
{0x86, 0x80,3},

{0x03, 0x16,3},
{0x10, 0x01,3},
{0x30, 0x00,3},
{0x31, 0x0b,3},
{0x32, 0x20,3},
{0x33, 0x36,3},
{0x34, 0x5b,3},
{0x35, 0x75,3},
{0x36, 0x8c,3},
{0x37, 0x9f,3},
{0x38, 0xaf,3},
{0x39, 0xbd,3},
{0x3a, 0xca,3},
{0x3b, 0xdd,3},
{0x3c, 0xec,3},
{0x3d, 0xf7,3},
{0x3e, 0xff,3},

{0x60, 0x01,3},
{0x61, 0x03,3},
{0x62, 0x08,3},
{0x63, 0x17,3},
{0x64, 0x2c,3},
{0x65, 0x59,3},
{0x66, 0x74,3},
{0x67, 0x8c,3},
{0x68, 0xa0,3},
{0x69, 0xb1,3},
{0x6A, 0xc0,3},
{0x6B, 0xcd,3},
{0x6C, 0xe1,3},
{0x6D, 0xf1,3},
{0x6E, 0xfc,3},
{0x6F, 0xff,3},

{0x03, 0x20,3},
{0x11, 0x00,3},
{0x15, 0xd1,3},
{0x1c, 0x50,3},
{0x1d, 0x24,3},
{0x1e, 0x28,3},
{0x20, 0x00,3}, 
{0x28, 0x0b,3},
{0x29, 0xaa,3},
{0x2a, 0xf0,3}, 
{0x2b, 0x34,3},
{0x2d, 0x07,3},
{0x30, 0xf8,3},
{0x33, 0x6c,3},
{0x34, 0x30,3},
{0x35, 0xd4,3},
{0x36, 0x00,3},
{0x37, 0x50,3},

{0x38, 0x02,3},
{0x39, 0x49,3},
{0x3a, 0xF0,3},
{0x3b, 0x27,3},
{0x3c, 0x10,3},
{0x3d, 0x30,3},
{0x3e, 0xd4,3},

{0x50, 0x28,3},
{0x51, 0x10,3},
{0x52, 0xd0,3},
{0x53, 0x10,3},
{0x54, 0x10,3},
{0x55, 0x28,3},
{0x57, 0x60,3},
{0x58, 0x60,3},

{0x60, 0x00,3}, 
{0x70, 0x42,3}, 

{0x83, 0x00,3},
{0x84, 0xaf,3},//30fps
{0x85, 0xc8,3},
{0x88, 0x01,3},//  12fps
{0x89, 0xd4,3},
{0x8a, 0xc0,3},

{0x8b, 0x3a,3},
{0x8c, 0x98,3},
{0x8d, 0x30,3}, 
{0x8e, 0xd4,3},

{0x8f, 0xc4,3},
{0x90, 0x68,3},
{0x98, 0xac,3},
{0x9f, 0xc8,3},

{0xb0, 0x18,3}, 
{0xb1, 0x18,3}, 
{0xb2, 0x60,3}, 
{0xb3, 0x18,3},
{0xb4, 0x18,3},

{0xb5, 0x41,3},
{0xb6, 0x2c,3},
{0xb7, 0x25,3},
{0xb8, 0x22,3},
{0xb9, 0x20,3},
{0xba, 0x1e,3},
{0xbb, 0x1d,3},
{0xbc, 0x1d,3},
{0xbd, 0x1c,3},
{0xc0, 0x1a,3},
{0xc3, 0x30,3},
{0xc4, 0x30,3},
{0x03, 0x22,3}, 
{0x11, 0x2c,3},
{0x21, 0x01,3},
{0x38, 0x12,3},
{0x40, 0xe3,3},
{0x41, 0x88,3},
{0x42, 0x44,3},

{0x43, 0xe3,3},
{0x44, 0xee,3},
{0x45, 0x99,3},
{0x46, 0x01,3},


{0x83, 0x70,3}, 
{0x84, 0x1a,3}, 
{0x85, 0x70,3}, 
{0x86, 0x22,3}, 
{0x87, 0x50,3}, 
{0x88, 0x20,3}, 
{0x89, 0x60,3}, 
{0x8a, 0x20,3},
{0x8f, 0x68,3}, 
{0x90, 0x67,3},
{0x91, 0x65,3},
{0x92, 0x61,3},
{0x93, 0x5c,3},
{0x94, 0x55,3},
{0x95, 0x4f,3},
{0x96, 0x48,3},
{0x97, 0x42,3},
{0x98, 0x3c,3},
{0x99, 0x35,3},
{0x9a, 0x2d,3},
{0x9b, 0x07,3},
{0x10, 0xea,3}, ////AWB ON

{0x03, 0x20,3},
{0x10, 0x9c,3}, ////AE ON

{0x01, 0xc0,3},
 

	 
};

#if 0
// use this for 640x480 (VGA) capture
PRIVATE const CAM_REG_T RG_InitPowerOnVga[] = 
{

{0x01, 0xf1,3},
{0x01, 0xf3,3},
{0x01, 0xf1,3}, 

{0x03, 0x00,3},
{0x12, 0x04,3},
{0x10, 0x08,3},
{0x11, 0x90,3},
{0x20, 0x00,3},
{0x21, 0x04,3},
{0x22, 0x00,3},
{0x23, 0x04,3},
//BLC
{0x40, 0x01,3},
{0x41, 0x58,3},

{0x45, 0x01,3},
{0x46, 0x08,3},
{0x47, 0xf5,3},

//BLC
{0x80, 0x2e,3},
{0x81, 0x7e,3},
{0x82, 0x90,3},
{0x83, 0x30,3},
{0x84, 0x2c,3},//*** Change 100406
{0x85, 0x4b,3},//*** Change 100406 
{0x89, 0x48,3},//BLC hold
{0x90, 0x0b,3},//TIME_IN  11/100  _100318
{0x91, 0x0b,3},//TIME_OUT 11/100  _100318
{0x92, 0x48,3},//AG_IN
{0x93, 0x48,3},//AG_OUT
{0x98, 0x38,3},
{0x99, 0x40,3}, //Out BLC
{0xa0, 0x00,3}, //Dark BLC
{0xa8, 0x40,3}, //Normal BLC

//Page 2  Last Update 10_03_12
{0x03, 0x02,3},
{0x13, 0x40,3}, //*** ADD 100402 
{0x14, 0x04,3}, //*** ADD 100402 
{0x1a, 0x00,3}, //*** ADD 100402 
{0x1b, 0x08,3}, //*** ADD 100402 
{0x20, 0x33,3},
{0x21, 0xaa,3},//*** Change 100402 
{0x22, 0xa7,3},
{0x23, 0x32,3},//*** Change 100405 
{0x3b, 0x48,3},//*** ADD 100405 
{0x50, 0x21,3}, //*** ADD 100406
{0x52, 0xa2,3},
{0x53, 0x0a,3},
{0x54, 0x30,3},//*** ADD 100405 
{0x55, 0x10,3},//*** Change 100402 
{0x56, 0x0c,3},
{0x59, 0x0F,3},//*** ADD 100405 
{0x60, 0xca,3},
{0x61, 0xdb,3},
{0x62, 0xca,3},
{0x63, 0xda,3},
{0x64, 0xca,3},
{0x65, 0xda,3},
{0x72, 0xcb,3},
{0x73, 0xd8,3},
{0x74, 0xcb,3},
{0x75, 0xd8,3},
{0x80, 0x02,3},
{0x81, 0xbd,3},
{0x82, 0x24,3},
{0x83, 0x3e,3},
{0x84, 0x24,3},
{0x85, 0x3e,3},
{0x92, 0x72,3},
{0x93, 0x8c,3},
{0x94, 0x72,3},
{0x95, 0x8c,3},
{0xa0, 0x03,3},
{0xa1, 0xbb,3},
{0xa4, 0xbb,3},
{0xa5, 0x03,3},
{0xa8, 0x44,3},
{0xa9, 0x6a,3},
{0xaa, 0x92,3},
{0xab, 0xb7,3},
{0xb8, 0xc9,3},
{0xb9, 0xd0,3},
{0xbc, 0x20,3},
{0xbd, 0x28,3},
{0xc0, 0xDE,3},//*** Change 100402
{0xc1, 0xEC,3},//*** Change 100402
{0xc2, 0xDE,3},//*** Change 100402
{0xc3, 0xEC,3},//*** Change 100402
{0xc4, 0xE0,3},//*** Change 100402
{0xc5, 0xEA,3},//*** Change 100402
{0xc6, 0xE0,3},//*** Change 100402
{0xc7, 0xEa,3},//*** Change 100402
{0xc8, 0xe1,3},
{0xc9, 0xe8,3},
{0xca, 0xe1,3},
{0xcb, 0xe8,3},
{0xcc, 0xe2,3},
{0xcd, 0xe7,3},
{0xce, 0xe2,3},
{0xcf, 0xe7,3},
{0xd0, 0xc8,3},
{0xd1, 0xef,3},

//        {0xd7, 0x48,3},

//Page 10
{0x03, 0x10,3},
{0x10, 0x03,3}, //03, //ISPCTL1, YUV ORDER(FIX)
{0x11, 0x43,3},
{0x12, 0x30,3}, //Y offet, dy offseet enable
{0x40, 0x82,3},
{0x41, 0x00,3}, //00 DYOFS
{0x48, 0x88,3}, //80Contrast
{0x50, 0x48,3}, //AGBRT

{0x60, 0x7b,3}, //7f//HANS
{0x61, 0x00,3}, //
{0x62, 0xa0,3}, //SATB
{0x63, 0x99,3}, //SATR 98
{0x64, 0x48,3}, //AGSAT
{0x66, 0x90,3}, //wht_th2
{0x67, 0x34,3}, //wht_gain

//LPF
{0x03, 0x11,3},
{0x10, 0x25,3},	//LPF_CTL1 //0x01
{0x11, 0x1f,3},	//Test Setting
{0x20, 0x00,3},	//LPF_AUTO_CTL
{0x21, 0x38,3},	//LPF_PGA_TH
{0x23, 0x0a,3},	//LPF_TIME_TH
{0x60, 0x10,3},	//ZARA_SIGMA_TH //40->10
{0x61, 0x82,3},
{0x62, 0x00,3},	//ZARA_HLVL_CTL
{0x63, 0x83,3},	//ZARA_LLVL_CTL
{0x64, 0x83,3},	//ZARA_DY_CTL

{0x67, 0xF0,3},	//*** Change 100402     //Dark
{0x68, 0x30,3},	//*** Change 100402     //Middle
{0x69, 0x10,3},	//High

{0x03, 0x12,3},
{0x40, 0xe9,3},	//YC2D_LPF_CTL1
{0x41, 0x09,3},	//YC2D_LPF_CTL2
{0x50, 0x18,3},	//Test Setting
{0x51, 0x24,3},	//Test Setting
{0x70, 0x1f,3},	//GBGR_CTL1 //0x1f
{0x71, 0x00,3},	//Test Setting
{0x72, 0x00,3},	//Test Setting
{0x73, 0x00,3},	//Test Setting
{0x74, 0x10,3},	//GBGR_G_UNIT_TH
{0x75, 0x10,3},	//GBGR_RB_UNIT_TH
{0x76, 0x20,3},	//GBGR_EDGE_TH
{0x77, 0x80,3},	//GBGR_HLVL_TH
{0x78, 0x88,3},	//GBGR_HLVL_COMP
{0x79, 0x18,3},	//Test Setting
{0xb0, 0x7d,3},   //dpc

//Edge
{0x03, 0x13,3},
{0x10, 0x01,3},	
{0x11, 0x89,3},	
{0x12, 0x14,3},	
{0x13, 0x19,3},	
{0x14, 0x08,3},	//Test Setting
{0x20, 0x08,3},	//SHARP_SLOPE
{0x21, 0x04,3},	//SHARP_SLOPE_TH
{0x23, 0x30,3},	//SHARP_DY_CTL
{0x24, 0x33,3},	//40->33
{0x25, 0x08,3},	//SHARP_PGA_TH
{0x26, 0x18,3},	//Test Setting
{0x27, 0x00,3},	//Test Setting
{0x28, 0x08,3},	//Test Setting
{0x29, 0x50,3},	//AG_TH
{0x2a, 0xe0,3},	//region ratio
{0x2b, 0x10,3},	//Test Setting
{0x2c, 0x28,3},	//Test Setting
{0x2d, 0x40,3},	//Test Setting
{0x2e, 0x00,3},	//Test Setting
{0x2f, 0x00,3},	//Test Setting
{0x30, 0x11,3},	//Test Setting
{0x80, 0x03,3},	//SHARP2D_CTL
{0x81, 0x07,3},	//Test Setting
{0x90, 0x06,3},	//SHARP2D_SLOPE
{0x91, 0x03,3},	//SHARP2D_DIFF_CTL
{0x92, 0x00,3},	//SHARP2D_HI_CLIP
{0x93, 0x20,3},	//SHARP2D_DY_CTL
{0x94, 0x42,3},	//Test Setting
{0x95, 0x60,3},	//Test Setting

//Shading
{0x03, 0x14,3},
{0x10, 0x01,3},
{0x20, 0x60,3}, //XCEN
{0x21, 0x80,3}, //YCEN
{0x22, 0x76,3}, //76, 34, 2b
{0x23, 0x50,3}, //4b, 15, 0d
{0x24, 0x44,3}, //3b, 10, 0b

//Page 15 CMC
{0x03, 0x15,3}, 
{0x10, 0x03,3},

{0x14, 0x3c,3},
{0x16, 0x2c,3},
{0x17, 0x2f,3},

{0x30, 0xcb,3},
{0x31, 0x61,3},
{0x32, 0x16,3},
{0x33, 0x23,3},
{0x34, 0xce,3},
{0x35, 0x2b,3},
{0x36, 0x01,3},
{0x37, 0x34,3},
{0x38, 0x75,3},

{0x40, 0x87,3},
{0x41, 0x18,3},
{0x42, 0x91,3},
{0x43, 0x94,3},
{0x44, 0x9f,3},
{0x45, 0x33,3},
{0x46, 0x00,3},
{0x47, 0x94,3},
{0x48, 0x14,3},

//Gamma

{0x03, 0x16,3},
{0x30, 0x00,3},
{0x31, 0x12,3},
{0x32, 0x1d,3},
{0x33, 0x31,3},
{0x34, 0x55,3},//5c
{0x35, 0x74,3},//79
{0x36, 0x8e,3},//95
{0x37, 0xa4,3},//a4
{0x38, 0xb7,3},//b1
{0x39, 0xc6,3},//bd
{0x3a, 0xd3,3},//c8
{0x3b, 0xe6,3},//d9
{0x3c, 0xf2,3},//e8
{0x3d, 0xfa,3},//f5
{0x3e, 0xff,3},//ff

//Page 17 AE 
{0x03, 0x17,3},
{0xc4, 0x3c,3},
{0xc5, 0x32,3},

//Page 20 AE 
{0x03, 0x20,3},
{0x10, 0x0c,3},
{0x11, 0x04,3},

{0x20, 0x00,3},
{0x28, 0x27,3},
{0x29, 0xa1,3},

{0x2a, 0xf0,3},
{0x2b, 0x34,3},
{0x2c, 0x2b,3}, //23->2b 2010_04_06 hhzin

{0x30, 0xf8,3},

{0x39, 0x22,3},
{0x3a, 0xde,3},
{0x3b, 0x22,3}, 
{0x3c, 0xde,3},

{0x60, 0xb5,3}, //d5, 99
{0x68, 0x3c,3},
{0x69, 0x64,3},
{0x6A, 0x28,3},
{0x6B, 0xc8,3},

{0x70, 0x40,3},//Y Target 42

{0x76, 0x22,3}, //Unlock bnd1
{0x77, 0x02,3}, //Unlock bnd2

{0x78, 0x12,3}, //Yth 1
{0x79, 0x26,3}, //Yth 2
{0x7a, 0x23,3}, //Yth 3

{0x7c, 0x1c,3},
{0x7d, 0x22,3},

{0x83, 0x01,3},//ExpTime 30fps
{0x84, 0x24,3},
{0x85, 0xf8,3},

{0x86, 0x00,3},//ExpMin
{0x87, 0xfa,3},

{0x88, 0x02,3},//ExpMax 8fps(8fps)
{0x89, 0xbf,3},
{0x8a, 0x20,3},

{0x8b, 0x3a,3},//Exp100
{0x8c, 0x98,3},

{0x8d, 0x30,3},//Exp120
{0x8e, 0xd4,3},

{0x91, 0x02,3},
{0x92, 0xdc,3},
{0x93, 0x6c,3},

{0x94, 0x01,3}, //fix_step
{0x95, 0xb7,3},
{0x96, 0x74,3},

{0x98, 0x8C,3},
{0x99, 0x23,3},

{0x9c, 0x06,3}, //4shared limit
{0x9d, 0xd6,3},
{0x9e, 0x01,3}, //4shared Unit
{0x9f, 0xf4,3},

{0xb1, 0x14,3},
{0xb2, 0x50,3},
{0xb4, 0x14,3},
{0xb5, 0x38,3},
{0xb6, 0x26,3},
{0xb7, 0x20,3},
{0xb8, 0x1d,3},
{0xb9, 0x1b,3},
{0xba, 0x1a,3},
{0xbb, 0x19,3},
{0xbc, 0x19,3},
{0xbd, 0x18,3},

{0xc0, 0x1a,3},
{0xc3, 0x88,3},// 48
{0xc4, 0x88,3},// 48

{0x03, 0x22,3},
{0x10, 0xe2,3},
{0x11, 0x26,3},
{0x21, 0x40,3},
       
{0x30, 0x80,3},
{0x31, 0x80,3},
{0x38, 0x12,3},
{0x39, 0x33,3},
{0x40, 0xf0,3},
{0x41, 0x33,3},
{0x42, 0x33,3},
{0x43, 0xf3,3},
{0x44, 0x55,3},
{0x45, 0x44,3},
{0x46, 0x02,3},
       
{0x80, 0x45,3},
{0x81, 0x20,3},
{0x82, 0x48,3},
{0x83, 0x52,3}, //RMAX Default : 50 -> 48 -> 52 
{0x84, 0x1b,3}, //RMIN Default : 20
{0x85, 0x50,3}, //BMAX Default : 50, 5a -> 58 -> 55
{0x86, 0x25,3}, //BMIN Default : 20
{0x87, 0x4d,3}, //RMAXB Default : 50, 4d
{0x88, 0x38,3}, //RMINB Default : 3e, 45 --> 42
{0x89, 0x3e,3}, //BMAXB Default : 2e, 2d --> 30
{0x8a, 0x29,3}, //BMINB Default : 20, 22 --> 26 --> 29
{0x8b, 0x02,3}, //OUT TH
{0x8d, 0x22,3},
{0x8e, 0x71,3},

{0x8f, 0x63,3},
{0x90, 0x60,3},
{0x91, 0x5c,3},
{0x92, 0x56,3},
{0x93, 0x52,3},
{0x94, 0x4c,3},
{0x95, 0x36,3},
{0x96, 0x31,3},
{0x97, 0x2e,3},
{0x98, 0x2a,3},
{0x99, 0x29,3},
{0x9a, 0x26,3},
{0x9b, 0x08,3},

{0x03, 0x22,3},
{0x10, 0xfb,3},

{0x03, 0x20,3},
{0x10, 0x9c,3},

{0x01, 0xf0,3},
	
};
#else




const CAM_REG_T RG_InitPowerOnVga[] = 
{


{0x01, 0xf1,3},
{0x01, 0xf3,3},
{0x01, 0xf1,3},

{0x03, 0x00,3},

{0x10, 0x08,3},//VGA
{0x11, 0x90,3},//variable frame rate on
{0x12, 0x04,3},//VS,HS High

{0x20, 0x00,3},
{0x21, 0x04,3},
{0x22, 0x00,3},
{0x23, 0x04,3},

{0x24, 0x01,3},//640x480
{0x25, 0xe0,3},
{0x26, 0x02,3},
{0x27, 0x80,3},

{0x40, 0x01,3},
{0x41, 0x58,3},
{0x42, 0x00,3},
{0x43, 0x14,3},

{0x45, 0x01,3},
{0x46, 0x08,3},
{0x47, 0xf5,3},


{0x80, 0x00,3},//BLC
{0x81, 0x7e,3},
{0x82, 0x90,3},
{0x83, 0x30,3},
{0x84, 0x20,3},
{0x85, 0x0b,3},
{0x89, 0x48,3},

{0x90, 0x0a,3},//for fixed frame rate
{0x91, 0x0a,3},
{0x92, 0x48,3},
{0x93, 0x40,3},

{0x98, 0x38,3},
{0x99, 0x40,3}, 
{0xa0, 0x00,3}, 
{0xa8, 0x40,3}, 


{0x03, 0x02,3},
{0x20, 0x33,3},
{0x21, 0x77,3},
{0x22, 0xa7,3},
{0x23, 0x32,3},
{0x52, 0xa2,3},
{0x53, 0x0a,3},
{0x55, 0x18,3},
{0x56, 0x0c,3},
{0x60, 0xca,3},
{0x61, 0xdb,3},
{0x62, 0xca,3},
{0x63, 0xda,3},
{0x64, 0xca,3},
{0x65, 0xda,3},

{0x72, 0xcb,3},
{0x73, 0xd8,3},
{0x74, 0xcb,3},
{0x75, 0xd8,3},
{0x80, 0x02,3},
{0x81, 0xbd,3},
{0x82, 0x24,3},
{0x83, 0x3e,3},
{0x84, 0x24,3},
{0x85, 0x3e,3},
{0x92, 0x72,3},
{0x93, 0x8c,3},
{0x94, 0x72,3},
{0x95, 0x8c,3},
{0xa0, 0x03,3},
{0xa1, 0xbb,3},
{0xa5, 0x03,3},
{0xa4, 0xbb,3},
{0xa8, 0x44,3},
{0xa9, 0x6a,3},
{0xaa, 0x92,3},
{0xab, 0xb7,3},
{0xb8, 0xc9,3},
{0xb9, 0xd0,3},
{0xbc, 0x20,3},
{0xbd, 0x28,3},
{0xc0, 0xe0,3},
{0xc1, 0xea,3},
{0xc2, 0xe0,3},
{0xc3, 0xea,3},
{0xc4, 0xe1,3},
{0xc5, 0xe9,3},
{0xc6, 0xe1,3},
{0xc7, 0xe9,3},
{0xc8, 0xe1,3},
{0xc9, 0xe8,3},
{0xca, 0xe1,3},
{0xcb, 0xe8,3},
{0xcc, 0xe2,3},
{0xcd, 0xe7,3},
{0xce, 0xe2,3},
{0xcf, 0xe7,3},
{0xd0, 0xc8,3},
{0xd1, 0xef,3},



{0x03, 0x10,3},
{0x10, 0x03,3}, //YUV422 
{0x11, 0x43,3},
{0x12, 0x30,3}, 
{0x40, 0x80,3},
{0x41, 0x10,3}, 
{0x48, 0x84,3}, 
{0x50, 0x48,3}, 
       
{0x60, 0x7f,3},
{0x61, 0x00,3}, 
{0x62, 0xa0,3}, 
{0x63, 0x90,3}, 
{0x64, 0x48,3}, 
{0x66, 0x90,3}, 
{0x67, 0x36,3}, 

{0x03, 0x11,3},
{0x10, 0x25,3},	
{0x11, 0x1f,3},	
{0x20, 0x00,3},	
{0x21, 0x38,3},	
{0x23, 0x0a,3},	
{0x60, 0x10,3},	
{0x61, 0x82,3},
{0x62, 0x00,3},	
{0x63, 0x83,3},	
{0x64, 0x83,3},	

{0x67, 0x60,3},	
{0x68, 0x10,3},	
{0x69, 0x10,3},	


{0x03, 0x12,3},
{0x40, 0xe9,3},	
{0x41, 0x09,3},	
{0x50, 0x18,3},	
{0x51, 0x24,3},	
{0x70, 0x1f,3},	
{0x71, 0x00,3},	
{0x72, 0x00,3},	
{0x73, 0x00,3},	
{0x74, 0x10,3},	
{0x75, 0x10,3},	
{0x76, 0x20,3},	
{0x77, 0x80,3},	
{0x78, 0x88,3},	
{0x79, 0x18,3},	
{0xb0, 0x7d,3}, 


{0x03, 0x13,3},
{0x10, 0x01,3},	
{0x11, 0x89,3},	
{0x12, 0x14,3},	
{0x13, 0x19,3},	
{0x14, 0x08,3},	
{0x20, 0x06,3},	
{0x21, 0x03,3},	
{0x23, 0x30,3},	
{0x24, 0x33,3},	
{0x25, 0x08,3},	
{0x26, 0x18,3},	
{0x27, 0x00,3},	
{0x28, 0x08,3},	
{0x29, 0x50,3},	
{0x2a, 0xe0,3},	
{0x2b, 0x10,3},	
{0x2c, 0x28,3},	
{0x2d, 0x40,3},	
{0x2e, 0x00,3},	
{0x2f, 0x00,3},	
{0x30, 0x11,3},	
{0x80, 0x03,3},	
{0x81, 0x07,3},	
{0x90, 0x04,3},	
{0x91, 0x02,3},	
{0x92, 0x00,3},	
{0x93, 0x20,3},	
{0x94, 0x42,3},	
{0x95, 0x60,3},	

{0x03, 0x14,3},
{0x10, 0x01,3},
{0x20, 0x60,3}, 
{0x21, 0x80,3}, 
{0x22, 0x66,3}, 
{0x23, 0x50,3}, 
{0x24, 0x44,3}, 


{0x03, 0x15,3}, 
{0x10, 0x03,3},
       
{0x14, 0x3c,3},
{0x16, 0x2c,3},
{0x17, 0x2f,3},
       
{0x30, 0xcb,3},
{0x31, 0x61,3},
{0x32, 0x16,3},
{0x33, 0x23,3},
{0x34, 0xce,3},
{0x35, 0x2b,3},
{0x36, 0x01,3},
{0x37, 0x34,3},
{0x38, 0x75,3},
       
{0x40, 0x87,3},
{0x41, 0x18,3},
{0x42, 0x91,3},
{0x43, 0x94,3},
{0x44, 0x9f,3},
{0x45, 0x33,3},
{0x46, 0x00,3},
{0x47, 0x94,3},
{0x48, 0x14,3},



{0x03,0x16,3},
{0x30,0x00,3},
{0x31,0x0a,3},
{0x32,0x1b,3},
{0x33,0x2e,3},
{0x34,0x5c,3},
{0x35,0x79,3},
{0x36,0x95,3},
{0x37,0xa4,3},
{0x38,0xb1,3},
{0x39,0xbd,3},
{0x3a,0xc8,3},
{0x3b,0xd9,3},
{0x3c,0xe8,3},
{0x3d,0xf5,3},
{0x3e,0xff,3},

{0x03, 0x17,3},
{0xc4, 0x3c,3},
{0xc5, 0x32,3},


{0x03, 0x20,3},
{0x10, 0x0c,3},
{0x11, 0x04,3},
       
{0x20, 0x01,3},
{0x28, 0x27,3},
{0x29, 0xa1,3},

{0x2a, 0xf0,3},
{0x2b, 0x04,3},
       
{0x30, 0x78,3},
{0x39, 0x22,3},
{0x3a, 0xde,3},
{0x3b, 0x23,3}, 
{0x3c, 0xde,3},

{0x60, 0x95,3}, 
{0x68, 0x3c,3},
{0x69, 0x64,3},
{0x6A, 0x28,3},
{0x6B, 0xc8,3},

{0x70, 0x42,3},

{0x76, 0x22,3},
{0x77, 0x02,3},

{0x78, 0x12,3},
{0x79, 0x26,3},
{0x7a, 0x23,3},

{0x7c, 0x1c,3},
{0x7d, 0x22,3},


{0x83, 0x00,3},
{0x84, 0x72,3},
{0x85, 0x42,3},

{0x86, 0x00,3},
{0x87, 0xfa,3},
{0x88, 0x01,3},
{0x89, 0x7c,3},
{0x8a, 0xdc,3},

{0x8b, 0x26,3},
{0x8c, 0x16,3},

{0x8d, 0x1f,3},
{0x8e, 0xbd,3},

{0x91, 0x01,3},
{0x92, 0x7c,3},
{0x93, 0x18,3},

{0x94, 0x01,3},
{0x95, 0xb7,3},
{0x96, 0x74,3},

{0x98, 0x8C,3},
{0x99, 0x23,3},

{0x9c, 0x0b,3},
{0x9d, 0xb8,3},
{0x9e, 0x00,3}, 
{0x9f, 0xfa,3},	

{0xb1, 0x14,3},
{0xb2, 0x50,3},
{0xb4, 0x14,3},
{0xb5, 0x38,3},
{0xb6, 0x26,3},
{0xb7, 0x20,3},
{0xb8, 0x1d,3},
{0xb9, 0x1b,3},
{0xba, 0x1a,3},
{0xbb, 0x19,3},
{0xbc, 0x19,3},
{0xbd, 0x18,3},

{0xc0, 0x1a,3},
{0xc3, 0x48,3},
{0xc4, 0x48,3},



{0x03, 0x22,3},
{0x10, 0xe2,3},
{0x11, 0x26,3},
{0x21, 0x40,3},
       
{0x30, 0x80,3},
{0x31, 0x80,3},
{0x38, 0x12,3},
{0x39, 0x33,3},
{0x40, 0xf0,3},
{0x41, 0x33,3},
{0x42, 0x33,3},
{0x43, 0xf3,3},
{0x44, 0x55,3},
{0x45, 0x44,3},
{0x46, 0x02,3},
       
{0x80, 0x45,3},
{0x81, 0x20,3},
{0x82, 0x48,3},
{0x83, 0x52,3}, 
{0x84, 0x1b,3}, 
{0x85, 0x50,3}, 
{0x86, 0x25,3}, 
{0x87, 0x4d,3}, 
{0x88, 0x38,3}, 
{0x89, 0x3e,3}, 
{0x8a, 0x29,3}, 
{0x8b, 0x02,3}, 
{0x8d, 0x22,3},
{0x8e, 0x71,3},

{0x8f, 0x63,3},
{0x90, 0x60,3},
{0x91, 0x5c,3},
{0x92, 0x56,3},
{0x93, 0x52,3},
{0x94, 0x4c,3},
{0x95, 0x36,3},
{0x96, 0x31,3},
{0x97, 0x2e,3},
{0x98, 0x2a,3},
{0x99, 0x29,3},
{0x9a, 0x26,3},
{0x9b, 0x09,3},
       
{0x03, 0x22,3},
{0x10, 0xfb,3},

{0x03, 0x20,3},
{0x10, 0x9c,3},

{0x01, 0xf0,3},



};

#endif

#if 0
// use this for 160x120 (QQVGA) capture
const CAM_REG_T RG_InitPowerOnQqvga[] = 
{
//QQVGA size, YUV422 data sequence and fixed frame rate 10fps for previewing

{0x01, 0xf1,3},
{0x01, 0xf3,3},
{0x01, 0xf1,3},

{0x03, 0x00,3},

{0x10, 0x20,3},//QQVGA
{0x11, 0x94,3},//fixed frame rate on
{0x12, 0x24,3},//VS,HS High

{0x20, 0x00,3},
{0x21, 0x04,3},
{0x22, 0x00,3},
{0x23, 0x04,3},

{0x24, 0x01,3},//640x480
{0x25, 0xe0,3},
{0x26, 0x02,3},
{0x27, 0x80,3},

{0x40, 0x01,3},
{0x41, 0x58,3},
{0x42, 0x00,3},
{0x43, 0x14,3},


{0x80, 0x2e,3},
{0x81, 0x7e,3},
{0x82, 0x90,3},
{0x83, 0x30,3},
{0x84, 0x20,3},
{0x85, 0x0b,3},
{0x89, 0x48,3},

{0x90, 0x04,3},//for fixed frame rate
{0x91, 0x04,3},
{0x92, 0x48,3},
{0x93, 0x40,3},

{0x98, 0x38,3},
{0x99, 0x40,3}, 
{0xa0, 0x00,3}, 
{0xa8, 0x40,3}, 


{0x03, 0x02,3},
{0x20, 0x33,3},
{0x21, 0x77,3},
{0x22, 0xa7,3},
{0x23, 0x32,3},
{0x52, 0xa2,3},
{0x53, 0x0a,3},
{0x55, 0x18,3},
{0x56, 0x0c,3},
{0x60, 0xca,3},
{0x61, 0xdb,3},
{0x62, 0xca,3},
{0x63, 0xda,3},
{0x64, 0xca,3},
{0x65, 0xda,3},

{0x72, 0xcb,3},
{0x73, 0xd8,3},
{0x74, 0xcb,3},
{0x75, 0xd8,3},
{0x80, 0x02,3},
{0x81, 0xbd,3},
{0x82, 0x24,3},
{0x83, 0x3e,3},
{0x84, 0x24,3},
{0x85, 0x3e,3},
{0x92, 0x72,3},
{0x93, 0x8c,3},
{0x94, 0x72,3},
{0x95, 0x8c,3},
{0xa0, 0x03,3},
{0xa1, 0xbb,3},
{0xa5, 0x03,3},
{0xa4, 0xbb,3},
{0xa8, 0x44,3},
{0xa9, 0x6a,3},
{0xaa, 0x92,3},
{0xab, 0xb7,3},
{0xb8, 0xc9,3},
{0xb9, 0xd0,3},
{0xbc, 0x20,3},
{0xbd, 0x28,3},
{0xc0, 0xe0,3},
{0xc1, 0xea,3},
{0xc2, 0xe0,3},
{0xc3, 0xea,3},
{0xc4, 0xe1,3},
{0xc5, 0xe9,3},
{0xc6, 0xe1,3},
{0xc7, 0xe9,3},
{0xc8, 0xe1,3},
{0xc9, 0xe8,3},
{0xca, 0xe1,3},
{0xcb, 0xe8,3},
{0xcc, 0xe2,3},
{0xcd, 0xe7,3},
{0xce, 0xe2,3},
{0xcf, 0xe7,3},
{0xd0, 0xc8,3},
{0xd1, 0xef,3},



{0x03, 0x10,3},
{0x10, 0x03,3}, //YUV422 
{0x11, 0x43,3},
{0x12, 0x30,3}, 
{0x40, 0x80,3},
{0x41, 0x10,3}, 
{0x48, 0x84,3}, 
{0x50, 0x48,3}, 
       
{0x60, 0x7f,3},
{0x61, 0x00,3}, 
{0x62, 0xa0,3}, 
{0x63, 0x90,3}, 
{0x64, 0x48,3}, 
{0x66, 0x90,3}, 
{0x67, 0x36,3}, 

{0x03, 0x11,3},
{0x10, 0x25,3},	
{0x11, 0x1f,3},	
{0x20, 0x00,3},	
{0x21, 0x38,3},	
{0x23, 0x0a,3},	
{0x60, 0x10,3},	
{0x61, 0x82,3},
{0x62, 0x00,3},	
{0x63, 0x83,3},	
{0x64, 0x83,3},	

{0x67, 0x60,3},	
{0x68, 0x10,3},	
{0x69, 0x10,3},	


{0x03, 0x12,3},
{0x40, 0xe9,3},	
{0x41, 0x09,3},	
{0x50, 0x18,3},	
{0x51, 0x24,3},	
{0x70, 0x1f,3},	
{0x71, 0x00,3},	
{0x72, 0x00,3},	
{0x73, 0x00,3},	
{0x74, 0x10,3},	
{0x75, 0x10,3},	
{0x76, 0x20,3},	
{0x77, 0x80,3},	
{0x78, 0x88,3},	
{0x79, 0x18,3},	
{0xb0, 0x7d,3}, 


{0x03, 0x13,3},
{0x10, 0x01,3},	
{0x11, 0x89,3},	
{0x12, 0x14,3},	
{0x13, 0x19,3},	
{0x14, 0x08,3},	
{0x20, 0x06,3},	
{0x21, 0x03,3},	
{0x23, 0x30,3},	
{0x24, 0x33,3},	
{0x25, 0x08,3},	
{0x26, 0x18,3},	
{0x27, 0x00,3},	
{0x28, 0x08,3},	
{0x29, 0x50,3},	
{0x2a, 0xe0,3},	
{0x2b, 0x10,3},	
{0x2c, 0x28,3},	
{0x2d, 0x40,3},	
{0x2e, 0x00,3},	
{0x2f, 0x00,3},	
{0x30, 0x11,3},	
{0x80, 0x03,3},	
{0x81, 0x07,3},	
{0x90, 0x04,3},	
{0x91, 0x02,3},	
{0x92, 0x00,3},	
{0x93, 0x20,3},	
{0x94, 0x42,3},	
{0x95, 0x60,3},	

{0x03, 0x14,3},
{0x10, 0x01,3},
{0x20, 0x60,3}, 
{0x21, 0x80,3}, 
{0x22, 0x66,3}, 
{0x23, 0x50,3}, 
{0x24, 0x44,3}, 


{0x03, 0x15,3}, 
{0x10, 0x03,3},
       
{0x14, 0x3c,3},
{0x16, 0x2c,3},
{0x17, 0x2f,3},
       
{0x30, 0xcb,3},
{0x31, 0x61,3},
{0x32, 0x16,3},
{0x33, 0x23,3},
{0x34, 0xce,3},
{0x35, 0x2b,3},
{0x36, 0x01,3},
{0x37, 0x34,3},
{0x38, 0x75,3},
       
{0x40, 0x87,3},
{0x41, 0x18,3},
{0x42, 0x91,3},
{0x43, 0x94,3},
{0x44, 0x9f,3},
{0x45, 0x33,3},
{0x46, 0x00,3},
{0x47, 0x94,3},
{0x48, 0x14,3},



{0x03,0x16,3},
{0x30,0x00,3},
{0x31,0x0a,3},
{0x32,0x1b,3},
{0x33,0x2e,3},
{0x34,0x5c,3},
{0x35,0x79,3},
{0x36,0x95,3},
{0x37,0xa4,3},
{0x38,0xb1,3},
{0x39,0xbd,3},
{0x3a,0xc8,3},
{0x3b,0xd9,3},
{0x3c,0xe8,3},
{0x3d,0xf5,3},
{0x3e,0xff,3},

{0x03, 0x17,3},
{0xc4, 0x3c,3},
{0xc5, 0x32,3},


{0x03, 0x20,3},
{0x10, 0x0c,3},
{0x11, 0x04,3},
       
{0x20, 0x01,3},
{0x28, 0x27,3},
{0x29, 0xa1,3},

{0x2a, 0x00,3},//0x00 for fixed frame rate
{0x2b, 0x35,3},//0x35 for fixed frame rate
       
{0x30, 0x78,3},
{0x39, 0x22,3},
{0x3a, 0xde,3},
{0x3b, 0x23,3}, 
{0x3c, 0xde,3},

{0x60, 0x95,3}, 
{0x68, 0x3c,3},
{0x69, 0x64,3},
{0x6A, 0x28,3},
{0x6B, 0xc8,3},

{0x70, 0x42,3},

{0x76, 0x22,3},
{0x77, 0x02,3},

{0x78, 0x12,3},
{0x79, 0x26,3},
{0x7a, 0x23,3},

{0x7c, 0x1c,3},
{0x7d, 0x22,3},


{0x83, 0x00,3},
{0x84, 0xaf,3},
{0x85, 0xc8,3},

{0x86, 0x00,3},
{0x87, 0xfa,3},
{0x88, 0x00,3},
{0x89, 0xea,3},
{0x8a, 0x60,3},

{0x8b, 0x3a,3},
{0x8c, 0x98,3},

{0x8d, 0x30,3},
{0x8e, 0xd4,3},

{0x91, 0x02,3},
{0x92, 0x40,3},
{0x93, 0x2c,3},

{0x94, 0x01,3},
{0x95, 0xb7,3},
{0x96, 0x74,3},

{0x98, 0x8C,3},
{0x99, 0x23,3},

{0x9c, 0x0b,3},
{0x9d, 0xb8,3},
{0x9e, 0x00,3}, 
{0x9f, 0xfa,3},	

{0xb1, 0x14,3},
{0xb2, 0x50,3},
{0xb4, 0x14,3},
{0xb5, 0x38,3},
{0xb6, 0x26,3},
{0xb7, 0x20,3},
{0xb8, 0x1d,3},
{0xb9, 0x1b,3},
{0xba, 0x1a,3},
{0xbb, 0x19,3},
{0xbc, 0x19,3},
{0xbd, 0x18,3},

{0xc0, 0x1a,3},
{0xc3, 0x48,3},
{0xc4, 0x48,3},



{0x03, 0x22,3},
{0x10, 0xe2,3},
{0x11, 0x26,3},
{0x21, 0x40,3},
       
{0x30, 0x80,3},
{0x31, 0x80,3},
{0x38, 0x12,3},
{0x39, 0x33,3},
{0x40, 0xf0,3},
{0x41, 0x33,3},
{0x42, 0x33,3},
{0x43, 0xf3,3},
{0x44, 0x55,3},
{0x45, 0x44,3},
{0x46, 0x02,3},
       
{0x80, 0x45,3},
{0x81, 0x20,3},
{0x82, 0x48,3},
{0x83, 0x52,3}, 
{0x84, 0x1b,3}, 
{0x85, 0x50,3}, 
{0x86, 0x25,3}, 
{0x87, 0x4d,3}, 
{0x88, 0x38,3}, 
{0x89, 0x3e,3}, 
{0x8a, 0x29,3}, 
{0x8b, 0x02,3}, 
{0x8d, 0x22,3},
{0x8e, 0x71,3},

{0x8f, 0x63,3},
{0x90, 0x60,3},
{0x91, 0x5c,3},
{0x92, 0x56,3},
{0x93, 0x52,3},
{0x94, 0x4c,3},
{0x95, 0x36,3},
{0x96, 0x31,3},
{0x97, 0x2e,3},
{0x98, 0x2a,3},
{0x99, 0x29,3},
{0x9a, 0x26,3},
{0x9b, 0x09,3},
       
{0x03, 0x22,3},
{0x10, 0xfb,3},

{0x03, 0x20,3},
{0x10, 0x9c,3},

{0x01, 0xf0,3},
};

#else



// use this for 160x120 (QQVGA) capture
const CAM_REG_T RG_InitPowerOnQqvga[] = 
{
//QQVGA size, YUV422 data sequence and fixed frame rate 10fps for previewing

{0x01, 0xf1,3},
{0x01, 0xf3,3},
{0x01, 0xf1,3},

{0x03, 0x00,3},

{0x10, 0x28,3},//QQVGA
{0x11, 0x94,3},//fixed frame rate on
{0x12, 0x04,3},//VS,HS High

{0x20, 0x00,3},
{0x21, 0x04,3},
{0x22, 0x00,3},
{0x23, 0x04,3},

{0x24, 0x01,3},//640x480
{0x25, 0xe0,3},
{0x26, 0x02,3},
{0x27, 0x80,3},

{0x40, 0x01,3},
{0x41, 0x58,3},
{0x42, 0x00,3},
{0x43, 0x14,3},

{0x45, 0x01,3},
{0x46, 0x08,3},
{0x47, 0xf5,3},


{0x80, 0x2e,3},
{0x81, 0x7e,3},
{0x82, 0x90,3},
{0x83, 0x30,3},
{0x84, 0x20,3},
{0x85, 0x0b,3},
{0x89, 0x48,3},

{0x90, 0x06,3},//for fixed frame rate
{0x91, 0x06,3},
{0x92, 0x48,3},
{0x93, 0x40,3},

{0x98, 0x38,3},
{0x99, 0x40,3}, 
{0xa0, 0x00,3}, 
{0xa8, 0x40,3}, 


{0x03, 0x02,3},
{0x20, 0x33,3},
{0x21, 0x77,3},
{0x22, 0xa7,3},
{0x23, 0x32,3},
{0x52, 0xa2,3},
{0x53, 0x0a,3},
{0x55, 0x18,3},
{0x56, 0x0c,3},
{0x60, 0xca,3},
{0x61, 0xdb,3},
{0x62, 0xca,3},
{0x63, 0xda,3},
{0x64, 0xca,3},
{0x65, 0xda,3},

{0x72, 0xcb,3},
{0x73, 0xd8,3},
{0x74, 0xcb,3},
{0x75, 0xd8,3},
{0x80, 0x02,3},
{0x81, 0xbd,3},
{0x82, 0x24,3},
{0x83, 0x3e,3},
{0x84, 0x24,3},
{0x85, 0x3e,3},
{0x92, 0x72,3},
{0x93, 0x8c,3},
{0x94, 0x72,3},
{0x95, 0x8c,3},
{0xa0, 0x03,3},
{0xa1, 0xbb,3},
{0xa5, 0x03,3},
{0xa4, 0xbb,3},
{0xa8, 0x44,3},
{0xa9, 0x6a,3},
{0xaa, 0x92,3},
{0xab, 0xb7,3},
{0xb8, 0xc9,3},
{0xb9, 0xd0,3},
{0xbc, 0x20,3},
{0xbd, 0x28,3},
{0xc0, 0xe0,3},
{0xc1, 0xea,3},
{0xc2, 0xe0,3},
{0xc3, 0xea,3},
{0xc4, 0xe1,3},
{0xc5, 0xe9,3},
{0xc6, 0xe1,3},
{0xc7, 0xe9,3},
{0xc8, 0xe1,3},
{0xc9, 0xe8,3},
{0xca, 0xe1,3},
{0xcb, 0xe8,3},
{0xcc, 0xe2,3},
{0xcd, 0xe7,3},
{0xce, 0xe2,3},
{0xcf, 0xe7,3},
{0xd0, 0xc8,3},
{0xd1, 0xef,3},



{0x03, 0x10,3},
{0x10, 0x03,3}, //YUV422 
{0x11, 0x43,3},
{0x12, 0x30,3}, 
{0x40, 0x80,3},
{0x41, 0x10,3}, 
{0x48, 0x84,3}, 
{0x50, 0x48,3}, 
       
{0x60, 0x7f,3},
{0x61, 0x00,3}, 
{0x62, 0xa0,3}, 
{0x63, 0x90,3}, 
{0x64, 0x48,3}, 
{0x66, 0x90,3}, 
{0x67, 0x36,3}, 

{0x03, 0x11,3},
{0x10, 0x25,3},	
{0x11, 0x1f,3},	
{0x20, 0x00,3},	
{0x21, 0x38,3},	
{0x23, 0x0a,3},	
{0x60, 0x10,3},	
{0x61, 0x82,3},
{0x62, 0x00,3},	
{0x63, 0x83,3},	
{0x64, 0x83,3},	

{0x67, 0x60,3},	
{0x68, 0x10,3},	
{0x69, 0x10,3},	


{0x03, 0x12,3},
{0x40, 0xe9,3},	
{0x41, 0x09,3},	
{0x50, 0x18,3},	
{0x51, 0x24,3},	
{0x70, 0x1f,3},	
{0x71, 0x00,3},	
{0x72, 0x00,3},	
{0x73, 0x00,3},	
{0x74, 0x10,3},	
{0x75, 0x10,3},	
{0x76, 0x20,3},	
{0x77, 0x80,3},	
{0x78, 0x88,3},	
{0x79, 0x18,3},	
{0xb0, 0x7d,3}, 


{0x03, 0x13,3},
{0x10, 0x01,3},	
{0x11, 0x89,3},	
{0x12, 0x14,3},	
{0x13, 0x19,3},	
{0x14, 0x08,3},	
{0x20, 0x06,3},	
{0x21, 0x03,3},	
{0x23, 0x30,3},	
{0x24, 0x33,3},	
{0x25, 0x08,3},	
{0x26, 0x18,3},	
{0x27, 0x00,3},	
{0x28, 0x08,3},	
{0x29, 0x50,3},	
{0x2a, 0xe0,3},	
{0x2b, 0x10,3},	
{0x2c, 0x28,3},	
{0x2d, 0x40,3},	
{0x2e, 0x00,3},	
{0x2f, 0x00,3},	
{0x30, 0x11,3},	
{0x80, 0x03,3},	
{0x81, 0x07,3},	
{0x90, 0x04,3},	
{0x91, 0x02,3},	
{0x92, 0x00,3},	
{0x93, 0x20,3},	
{0x94, 0x42,3},	
{0x95, 0x60,3},	

{0x03, 0x14,3},
{0x10, 0x01,3},
{0x20, 0x60,3}, 
{0x21, 0x80,3}, 
{0x22, 0x66,3}, 
{0x23, 0x50,3}, 
{0x24, 0x44,3}, 


{0x03, 0x15,3}, 
{0x10, 0x03,3},
       
{0x14, 0x3c,3},
{0x16, 0x2c,3},
{0x17, 0x2f,3},
       
{0x30, 0xcb,3},
{0x31, 0x61,3},
{0x32, 0x16,3},
{0x33, 0x23,3},
{0x34, 0xce,3},
{0x35, 0x2b,3},
{0x36, 0x01,3},
{0x37, 0x34,3},
{0x38, 0x75,3},
       
{0x40, 0x87,3},
{0x41, 0x18,3},
{0x42, 0x91,3},
{0x43, 0x94,3},
{0x44, 0x9f,3},
{0x45, 0x33,3},
{0x46, 0x00,3},
{0x47, 0x94,3},
{0x48, 0x14,3},



{0x03,0x16,3},
{0x30,0x00,3},
{0x31,0x0a,3},
{0x32,0x1b,3},
{0x33,0x2e,3},
{0x34,0x5c,3},
{0x35,0x79,3},
{0x36,0x95,3},
{0x37,0xa4,3},
{0x38,0xb1,3},
{0x39,0xbd,3},
{0x3a,0xc8,3},
{0x3b,0xd9,3},
{0x3c,0xe8,3},
{0x3d,0xf5,3},
{0x3e,0xff,3},

{0x03, 0x17,3},
{0xc4, 0x3c,3},
{0xc5, 0x32,3},


{0x03, 0x20,3},
{0x10, 0x0c,3},
{0x11, 0x04,3},
       
{0x20, 0x01,3},
{0x28, 0x27,3},
{0x29, 0xa1,3},

{0x2a, 0x00,3},//0x00 for fixed frame rate
{0x2b, 0x35,3},//0x35 for fixed frame rate
       
{0x30, 0x78,3},
{0x39, 0x22,3},
{0x3a, 0xde,3},
{0x3b, 0x23,3}, 
{0x3c, 0xde,3},

{0x60, 0x95,3}, 
{0x68, 0x3c,3},
{0x69, 0x64,3},
{0x6A, 0x28,3},
{0x6B, 0xc8,3},

{0x70, 0x42,3},

{0x76, 0x22,3},
{0x77, 0x02,3},

{0x78, 0x12,3},
{0x79, 0x26,3},
{0x7a, 0x23,3},

{0x7c, 0x1c,3},
{0x7d, 0x22,3},


{0x83, 0x00,3},
{0x84, 0x72,3},
{0x85, 0x42,3},

{0x86, 0x00,3},
{0x87, 0xfa,3},
{0x88, 0x00,3},
{0x89, 0xe4,3},
{0x8a, 0x84,3},

{0x8b, 0x26,3},
{0x8c, 0x16,3},

{0x8d, 0x1f,3},
{0x8e, 0xbd,3},

{0x91, 0x01,3},
{0x92, 0x7c,3},
{0x93, 0x18,3},

{0x94, 0x01,3},
{0x95, 0xb7,3},
{0x96, 0x74,3},

{0x98, 0x8C,3},
{0x99, 0x23,3},

{0x9c, 0x0b,3},
{0x9d, 0xb8,3},
{0x9e, 0x00,3}, 
{0x9f, 0xfa,3},	

{0xb1, 0x14,3},
{0xb2, 0x50,3},
{0xb4, 0x14,3},
{0xb5, 0x38,3},
{0xb6, 0x26,3},
{0xb7, 0x20,3},
{0xb8, 0x1d,3},
{0xb9, 0x1b,3},
{0xba, 0x1a,3},
{0xbb, 0x19,3},
{0xbc, 0x19,3},
{0xbd, 0x18,3},

{0xc0, 0x1a,3},
{0xc3, 0x48,3},
{0xc4, 0x48,3},



{0x03, 0x22,3},
{0x10, 0xe2,3},
{0x11, 0x26,3},
{0x21, 0x40,3},
       
{0x30, 0x80,3},
{0x31, 0x80,3},
{0x38, 0x12,3},
{0x39, 0x33,3},
{0x40, 0xf0,3},
{0x41, 0x33,3},
{0x42, 0x33,3},
{0x43, 0xf3,3},
{0x44, 0x55,3},
{0x45, 0x44,3},
{0x46, 0x02,3},
       
{0x80, 0x45,3},
{0x81, 0x20,3},
{0x82, 0x48,3},
{0x83, 0x52,3}, 
{0x84, 0x1b,3}, 
{0x85, 0x50,3}, 
{0x86, 0x25,3}, 
{0x87, 0x4d,3}, 
{0x88, 0x38,3}, 
{0x89, 0x3e,3}, 
{0x8a, 0x29,3}, 
{0x8b, 0x02,3}, 
{0x8d, 0x22,3},
{0x8e, 0x71,3},

{0x8f, 0x63,3},
{0x90, 0x60,3},
{0x91, 0x5c,3},
{0x92, 0x56,3},
{0x93, 0x52,3},
{0x94, 0x4c,3},
{0x95, 0x36,3},
{0x96, 0x31,3},
{0x97, 0x2e,3},
{0x98, 0x2a,3},
{0x99, 0x29,3},
{0x9a, 0x26,3},
{0x9b, 0x09,3},
       
{0x03, 0x22,3},
{0x10, 0xfb,3},

{0x03, 0x20,3},
{0x10, 0x9c,3},

{0x01, 0xf0,3},



};

#endif

PRIVATE const CAM_REG_T RG_VidFormatVga[] = 
{
     {0x04, 0x00,3}, // setup clock divider and HV-mirror ;Mclk /4
     {0x05, 0x07,3}
};

PRIVATE const CAM_REG_T RG_VidFormatQvga[] = 
{
     {0x04,0x00,3},   // setup clock divider and HV-mirror ;Mclk /4
     {0x05,0x05,3}    // setup  output mode 240*320
};

PRIVATE const CAM_REG_T RG_VidFormatQqvga[] = 
{
     {0x04, 0x00,3}, // setup clock divider and HV-mirror ;Mclk /4
     {0x05, 0x04,3}
};

typedef struct
{
// Camera information structure
    char                desc[40];	

    UINT8               snrtype;            //sensor type(RGB or YUV)
    UINT8               pclk;               //use PCLK of sensor
    UINT8               clkcfg;             //[0]: VSync delay enable; [1]: Fifo VSync delay enable; [2]: Use PCLK Negtive Edge.
    HAL_I2C_BPS_T       i2crate;            //I2C rate : KHz				
    UINT8               i2caddress;         //I2C address
    UINT8               i2cispaddress;      //ISP I2C address
    UINT8               pwrcfg;             //sensor power initial configure(SIF REG801 BIT[0]~BIT[2])
    BOOL                rstactiveh;         //sensor reset active hi/low polarity (TRUE = active hi)
    BOOL                snrrst;             //Reset sensor enable

    CAM_MODE_T          cammode;


    BOOL                capturevideo;
    BOOL                captureframe;
    UINT8               numactivebuffers;
    UINT8               currentbuf;

    UINT8               brightness;         //brightness
    UINT8               contrast;           //contrast

    CAM_FORMAT_T        format;
    UINT32              npixels;
    CAM_IMAGE_T         vidbuffer;

    CAM_REG_GROUP_T     standby;            //sensor standby register
    CAM_REG_GROUP_T     Initpoweron;        //SENSOR ISP initial configure

    CAM_REG_GROUP_T     sifpwronseq;        //Sif config sequence(Reg.800 bit0~2) when sensor power on
    CAM_REG_GROUP_T     sifstdbyseq;        //Sif config sequence(Reg.800 bit0~2) when sensor standby
    CAM_REG_GROUP_T     dsif;               //SIF initial configure
//    TSnrSizeCfgGroup    snrSizeCfg;         //sensor size configure information

// This 'callback' mechanism is not necessary because the encapsulation is taken
// care of by the environment
//    PSensorSetReg       snrSetRegCall;      //set reg callback
//    PSensorGetReg       snrGetRegCall;
//    PSnrIdChk           snrIdChkCall;
//    PSnrMirrorFlip      snrMirrorFlipCall;
//    PSnrContrast        snrContrastCall;
//    PSnrBrightness      snrBrightnessCall;
//    PSnrMode            snrModeCall;
//    PSnrGetEt           snrGetEt;
//    PSnrSetEt           snrSetEt;
//    TFlashParm          flashparm;
    CAM_IRQ_HANDLER_T   camirqhandler;
} CAM_INFO_T;

volatile CAM_INFO_T gSensorInfo =
{
    "HI704 Mode",      // char desc[40];	

    0,                      // UINT8 snrtype; (rgb)
    1,                      // UINT8 pclk; use or don't use PCLK of sensor???
    0,                      // UINT8 clkcfg; ???
    HAL_I2C_BPS_100K,       // UINT16 i2crate;
    0x30,                   // UINT8 i2caddress; this is the _REAL_ slave address.  
                            //  The value written in phase 1 of a write cycle will be 0x42
                            //  while the value just before the read will be 0x43
    0x30,                   // UINT8 i2cispaddress;
    0x02,                   // UINT8 pwrcfg;???
    TRUE,                   // BOOL rstactiveh;  // active high
    FALSE,                  // BOOL snrrst;

    CAM_MODE_IDLE,          // cammode

    FALSE,                  // Capture video mode
    FALSE,                  // Capturing single frame
    0,                      // Number of active buffers reserved by the upper layer
    0,                      // current frame buffer

    3,                      // UINT8 brightness;
    4,                      // UINT8 contrast;
    CAM_FORMAT_RGB565,      // Format
    CAM_NPIX_VGA,           // npixels(VGA, QVGA, QQVGA...)
    NULL,                   // Video Buffer.  First frame buffer for video or image buffer

    {0, NULL},              // CAM_REG_GROUP_T standby;
    // Should start with QQVGA, but for testing, start with VGA
//    {sizeof(RG_InitPowerOnQqvga) / sizeof(CAM_REG_T), (CAM_REG_T*)&RG_InitPowerOnQqvga}, // CAM_REG_GROUP_T Initpoweron;
    {sizeof(RG_InitPowerOnVga) / sizeof(CAM_REG_T), (CAM_REG_T*)&RG_InitPowerOnVga}, // CAM_REG_GROUP_T Initpoweron;

    {0, NULL},              // CAM_REG_GROUP_T sifpwronseq;
    {0, NULL},              // CAM_REG_GROUP_T sifstdbyseq;
    {0, NULL},              // CAM_REG_GROUP_T dsif; initial value
    NULL                    // IRQ Callback
};

// ############
// Private
// ############

// These are the commands specific to the SCCB
#define PHASE3_WR_PH1   0x11000     // Start & Write    Slave ID
#define PHASE3_WR_PH2   0x1000      // Write            Slave Register Address
#define PHASE3_WR_PH3   0x1100      // Stop & Write     Slave Register Data

#define PHASE2_WR_PH1   0x11000     // Start & Write    Slave ID
#define PHASE2_WR_PH2   0x1100      // Stop & Write     Slave Register Address (to read)

#define PHASE2_RD_PH1   0x11000     // Start & Write    Slave ID
#define PHASE2_RD_PH2   0x111       // Stop & Read & NACK   Slave Register Read Data

PRIVATE VOID camerap_WriteOneReg( UINT8 Addr, UINT8 Data);
PRIVATE VOID camerap_Delay(UINT16 Wait_mS);
PRIVATE VOID camerap_WriteReg(CAM_REG_T RegWrite);
PRIVATE UINT8 camerap_ReadReg(UINT8 Addr);
PRIVATE VOID camerap_SendRgSeq(const CAM_REG_T *RegList, UINT16 Len);
PRIVATE VOID camerap_InteruptHandler(HAL_CAMERA_IRQ_CAUSE_T cause);
PRIVATE UINT8 camerap_GetId(VOID);

