/***********************************************************************
 *
 * MODULE NAME:    host_config.h
 * DESCRIPTION:    Bluetooth Host Stack Global Configuration Options
 * AUTHOR:		   Martin Mellody
 *
 * SOURCE CONTROL: $Id: host_config.h 6284 2011-03-02 05:56:23Z admin $
 *
 * LICENSE:
 *     This source code is copyright (c) 2000 Parthus Technologies.
 *     All rights reserved.
 *
 ***********************************************************************/

/* This file should be included *FIRST* into every header and code file in the system */

/* This file contains all internal defines that are not released to stack
 *  users yet. Do not EDIT this file, only configs in the bt_host/config
 * directory should be used.
 */

/* All configurable host stack parameters should be set in this file, with a descriptive comment */
/* All preprocessor symbols should be defined as 1 or 0, to include or not include the feature */
#if COMBINED_HOST==1
#include "sys_config.h"
#endif

#ifndef __HOST_CONFIG_H
#define __HOST_CONFIG_H

#ifdef pDEBUG
#    undef pDEBUG
#endif

#ifdef _DEBUG
#    define pDEBUG 1
#endif

#if (DEBUG)
#ifndef EDRV_NO_TRACE
#    define pDEBUG 1
#endif
#endif
//#if (DEBUG)
//#    define pDEBUG 1
//#endif

#ifndef DBG
#define DBG 0
#endif

#if (DBG)
#    define pDEBUG 1
#endif

#ifndef pDEBUG
#    define pDEBUG 0
#endif

//#define  MGR_MULTI_CONNECTION


/*Control whether single thread or not
    single thread used in Arm: 1
    muti thread used in win32: 0
*/  //Zhu Jianguo added it. 2008.2.1
#ifdef WIN32
#define SINGLE_THREAD_FLAG  0
#else
#define SINGLE_THREAD_FLAG  1
#endif


#if COMBINED_HOST==1
#if (RDA_PRODUCT==RDA_COMBINED_HEADSET)
#include "../config/headset.inc"

#define L2CAP_PRESENT 1 
#define MANAGER_PRESENT 0
#define HCI_PRESENT 0 
#endif
#else
#include "../config/config.inc"

#define L2CAP_PRESENT 1 
#define MANAGER_PRESENT 1
#define HCI_PRESENT 1 
#endif

#if SINGLE_THREAD_FLAG
#define SCHEDULER_PRESENT 0 
#else
#define SCHEDULER_PRESENT 1 
#endif

/* This is used only in the TCI and should be left at 248 */
#define HCI_MAX_NAME_LEN_SUPPORTED 248

/* The local and remote names are truncated to the defines below - see GAP spec. for minima */
#define MGR_MAX_REMOTE_NAME_LEN 248
#define MGR_MAX_LOCAL_NAME_LEN 248

#if MGR_MAX_REMOTE_NAME_LEN>248
#  error MGR_MAX_REMOTE_NAME_LEN too large
#endif

#if MGR_MAX_LOCAL_NAME_LEN>248
#  error MGR_MAX_LOCAL_NAME_LEN too large
#endif

/* Controls presence of API parameter checking where implemented */
#define PRH_API_PARAM_CHECKING 1 

/* If a Parthus HC is detected - attempts to read proprietary version information */
#define QUERY_PARTHUS_EXTENDED_INFO  1  /* ignored if pDEBUG==0 */


/* This controls the default type of PIN code used for paring - see SDAP spec.  */
#define PRH_MGR_DEFAULTPIN_ALLZERO 0

/* Application Service Name */
#define MGR_MAXNAMELEN 30 


#define MGR_ALLOW_BONDING_INQUIRY   0           /* If 0 inquiry is not used before bonding, otherwse it may be used */
//#define MGR_ALLOW_BONDING_INQUIRY   0           /* If 0 inquiry is not used before bonding, otherwse it may be used */
#define BOND_INQUIRY_LENGTH         10          /* Max length of Inquiry used by the bonding routine */
#define MGR_BONDING_INQUIRY_IAC     BT_GIAC_LAP /* May use BT_GIAC_LAP or BT_LIAC_LAP - see GAP */


/* 
    These defines control the behaviour of the manager towards existing connections 
    when an inquiry or page (remotename/createconnection) is attempted.
    These are now obsolete, and should both be set to 0.
*/
#define MGR_HOLD_DURING_INQUIRY     0 
#define MGR_HOLD_DURING_PAGE        0

/* The settings below are placeholders only and are not currently implemented */
/* These are now obsolete since link policy during page/inquiry procedures is no longer required */
#define MGR_IGNORE_SNIFF_LINKS      1
#define MGR_IGNORE_PARKED_LINKS     1 
#define MGR_IGNORE_HOLD_FAILURE     0 /* setting this may cause loss of existing connections */


/* These are used in for paging devices for which we have no inquiry response */
#define HOST_PAGING_DEFAULT_PSRM        1 
#define HOST_PAGING_DEFAULT_PSM         0 
#define HOST_PAGING_DEFAULT_CLKOFFSET   0


#if COMBINED_HOST==1
#define PRH_RFCOMM_SM2 0 /* enable RFCOMM service-level security handling */
#else
#define PRH_RFCOMM_SM2 1 /* enable RFCOMM service-level security handling */
#endif

/* If 0, send connectionless traffic as ACTIVE broadcast, if 1 use PICONET broadcast */
#define L2CAP_USE_PICONET_BROADCAST     1 

/* 
	This controls the max number of similtaneous callbacks outstanding for a given serivce primitive.
	If more than this number are required, BT_NORESOURCES is returned. 
*/
#define MAX_OUTSTANDING_CALLBACKS 3

/* PRH_HOST_TCI_ENABLE Controls whether TCI component in enabled or not  */
#ifndef PRH_HOST_TCI_ENABLE /* allow the build system to set this */
#    define PRH_HOST_TCI_ENABLE 0
#endif

/* Control whether host is unit test mode */
#ifndef PRH_HOST_UNIT_TEST
#	define PRH_HOST_UNIT_TEST 0
#endif

/* 

	Controls the layers which are included in the build.
*/

/* SDP uses SDP_SERVER & SDP_CLIENT #defines below */
#define OBEX_PRESENT 0 /* leave at 0 until obex supports new startup/shutdown code -MM */
#define TCSBIN_PRESENT 0 /* leave at 0 until tcs supports new startup/shutdown code -MM */

/*
  Service Discovery Configuration Defines
 */

/* check requirements */

#if !(L2CAP_PRESENT && MANAGER_PRESENT && HCI_PRESENT)
//#error SDP needs L2CAP_PRESENT, MANAGER_PRESENT, HCI_PRESENT
#endif

#define SDP_VERSION 0x0100

/* validify sdp defines */
#if SDP_SERVER && !(SDP_RECORD_GEN || SDP_ROM_SUPPORT)
#error SDP_RECORD_GEN or SDP_ROM_SUPPORT must be defined.
#elif SDP_SERVER && SDP_RECORD_GEN && SDP_ROM_SUPPORT
#error Only 1 of SDP_RECORD_GEN or SDP_ROM_SUPPORT may be defined.
#elif SDP_ROM_CREATION && !SDP_RECORD_GEN
#error To use SDP_ROM_CREATION, SDP_RECORD_GEN must be set.
#endif 


#if SDP_CLIENT && !(SDP_SS_AND_SA_SUPPORT || SDP_SSA_SUPPORT)
#error SDP_SS_AND_SA_SUPPORT or SDP_SSA_SUPPORT must be defined
#elif SDP_CLIENT && SDP_GENERIC_BROWSE && !SDP_SSA_SUPPORT
#error SDP_GENERIC_BROWSE needs SDP_SSA_SUPPORT
#endif


/*******************************************/
#define PRH_TCS_SINGLEPOINTCONFIGURATION	0
#define PRH_TCS_ENABLEGATEWAYINTERCOMCALLS	0
#define PRH_TCS_MULTIPICONETCAPABLE 0


/* The settings below are for use with test software only and should be 1 for normal usage */
#define HCI_HWERROR_HANDLING 1 /* controls if HWError event causes a call to BT_Reset() */
#define HCI_HWRESET_HANDLING 1 /* controls if a CmdComplete for HWReset causes L2CAP/HCI cleanup/reset */
#define HOST_SEND_BOOTUP_CONFIG 1 /* controls if the HCI_Reset followed by config sequence is sent to HC at bootup */

/* spec. version supported - this may be used in the build system */
#define BT_10B 2
#define BT_SPEC_VER BT_10B

/* define for the RSE Data Pump functionality */
#define PRH_RFCOMM_RSE_DATA_PUMP_ENABLE 0

#if (PRH_RFCOMM_RSE_SUPPORT == 0) && (PRH_RFCOMM_PE_SUPPORT==0) && (RFCOMM_PRESENT == 1)
#error "RFCOMM included in build but no PE or RSE support"
#endif

#if (OBEX_PRESENT==1) && (PRH_RFCOMM_RSE_SUPPORT==0)
#error "OBEX present in build but no RSE support"
#endif


#if RFCOMM_PRESENT == 1
#if PRH_L2CAP_AUTO_CONFIG == 0
#error "Auto configuration must be selected for RFCOMM/TCS"
#endif
#endif

/* Includes support for the host to act as a lower tester for conformance testing */
#ifndef HOST_LOWER_TESTER /* allow this build system to set this */
#   define HOST_LOWER_TESTER 0
#endif

#ifndef PRH_HC_TESTER_BUILD
#define PRH_HC_TESTER_BUILD 0
#endif

/* Internal parthus test use only, set by build system if required */
#if PRH_HC_TESTER_BUILD 
#ifdef	HOST_SEND_BOOTUP_CONFIG	
#undef	HOST_SEND_BOOTUP_CONFIG	
#endif		
#define HOST_SEND_BOOTUP_CONFIG 0
#ifdef	HCI_HWRESET_HANDLING	
#undef	HCI_HWRESET_HANDLING	
#endif		
#define HCI_HWRESET_HANDLING 0
#ifdef	HCI_HWERROR_HANDLING	
#undef	HCI_HWERROR_HANDLING	
#endif		
#define HCI_HWERROR_HANDLING 0
#ifdef	OBEX_PRESENT	
#undef	OBEX_PRESENT	
#endif		
#define	OBEX_PRESENT	0
#ifdef	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_REPORTING_FREQUENCY	
#undef	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_REPORTING_FREQUENCY	
#endif		
#define	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_REPORTING_FREQUENCY	0
#ifdef	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_SUPPORTED	
#undef	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_SUPPORTED	
#endif		
#define	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_SUPPORTED	0
#ifdef	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_ACL_REPORTING_THRESHOLD	
#undef	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_ACL_REPORTING_THRESHOLD	
#endif		
#define	PRH_HOST_HC_TO_HOST_FLOW_CONTROL_ACL_REPORTING_THRESHOLD	0
#ifdef	TCSBIN_PRESENT	
#undef	TCSBIN_PRESENT	
#endif		
#define	TCSBIN_PRESENT	0
#ifdef	RFCOMM_PRESENT	
#undef	RFCOMM_PRESENT	
#endif		
#define	RFCOMM_PRESENT	0
#ifdef	L2CAP_PRESENT	
#undef	L2CAP_PRESENT	
#endif		
#define	L2CAP_PRESENT	0
#ifdef	MANAGER_PRESENT	
#undef	MANAGER_PRESENT	
#endif		
#define	MANAGER_PRESENT	0
#ifdef	HCI_PRESENT	
#undef	HCI_PRESENT	
#endif		
#define	HCI_PRESENT	0
#ifdef	SDP_SERVER	
#undef	SDP_SERVER	
#endif		
#define	SDP_SERVER	0
#ifdef	SDP_RECORD_GEN	
#undef	SDP_RECORD_GEN	
#endif		
#define	SDP_RECORD_GEN	0
#ifdef	SDP_ROM_SUPPORT	
#undef	SDP_ROM_SUPPORT	
#endif		
#define	SDP_ROM_SUPPORT	0
#ifdef	SDP_CLIENT	
#undef	SDP_CLIENT	
#endif		
#define	SDP_CLIENT	0
#ifdef	SDP_GENERIC_BROWSE	
#undef	SDP_GENERIC_BROWSE	
#endif		
#define	SDP_GENERIC_BROWSE	0
#ifdef	SDP_SDAP	
#undef	SDP_SDAP	
#endif		
#define	SDP_SDAP	0
#ifdef	SDP_INTERFACE	
#undef	SDP_INTERFACE	
#endif		
#define	SDP_INTERFACE	0
#ifdef	PRH_TCS_GATEWAY	
#undef	PRH_TCS_GATEWAY	
#endif		
#define	PRH_TCS_GATEWAY	1 
#ifdef	PRH_TCS_TERMINAL	
#undef	PRH_TCS_TERMINAL	
#endif		
#define	PRH_TCS_TERMINAL	1
#ifdef	PRH_TCS_SINGLEPOINTCONFIGURATION	
#undef	PRH_TCS_SINGLEPOINTCONFIGURATION	
#endif		
#define	PRH_TCS_SINGLEPOINTCONFIGURATION	1
#ifdef	PRH_TCS_ENABLEGATEWAYINTERCOMCALLS	
#undef	PRH_TCS_ENABLEGATEWAYINTERCOMCALLS	
#endif		
#define	PRH_TCS_ENABLEGATEWAYINTERCOMCALLS	0
#ifdef	PRH_TCS_MULTIPICONETCAPABLE	
#undef	PRH_TCS_MULTIPICONETCAPABLE	
#endif		
#define	PRH_TCS_MULTIPICONETCAPABLE	0
#ifdef	OBEX_SERVER	
#undef	OBEX_SERVER	
#endif		
#define	OBEX_SERVER	0
#ifdef	OBEX_CLIENT	
#undef	OBEX_CLIENT	
#endif		
#define	OBEX_CLIENT	0
#ifdef	OBEX_SERIAL	
#undef	OBEX_SERIAL	
#endif		
#define	OBEX_SERIAL	0
#ifdef	OBEX_SOCKET	
#undef	OBEX_SOCKET	
#endif		
#define	OBEX_SOCKET	0
#ifdef	OBEX_RFCOMM	
#undef	OBEX_RFCOMM	
#endif		
#define	OBEX_RFCOMM	0
#ifdef	OBEX_PUSH_CLIENT	
#undef	OBEX_PUSH_CLIENT	
#endif		
#define	OBEX_PUSH_CLIENT	0
#ifdef	OBEX_PUSH_SERVER	
#undef	OBEX_PUSH_SERVER	
#endif		
#define	OBEX_PUSH_SERVER	0
#ifdef	OBEX_SYNC_CLIENT	
#undef	OBEX_SYNC_CLIENT	
#endif		
#define	OBEX_SYNC_CLIENT	0
#ifdef	OBEX_SYNC_SERVER	
#undef	OBEX_SYNC_SERVER	
#endif		
#define	OBEX_SYNC_SERVER	0
#ifdef	OBEX_FTP_CLIENT	
#undef	OBEX_FTP_CLIENT	
#endif		
#define	OBEX_FTP_CLIENT	0
#ifdef	OBEX_FTP_SERVER	
#undef	OBEX_FTP_SERVER	
#endif		
#define	OBEX_FTP_SERVER	0
#ifdef	OBEX_GENERIC	
#undef	OBEX_GENERIC	
#endif		
#define	OBEX_GENERIC	0
#ifdef	OBEX_UNIT	
#undef	OBEX_UNIT	
#endif		
#define	OBEX_UNIT	0
#ifdef	OBEX_SEC	
#undef	OBEX_SEC	
#endif		
#define	OBEX_SEC	0

#endif /* PRH_HC_TESTER_BUILD */



/* 
	This allows the preprocessor to remove pDebugPrintf and pDebugDump calls at compile time.
	The side-effect is that calls to pDebugPrintf MUST have TWO sets of enclosing brackets!
		e.g. pDebugPrintf(("Test\n"));
    This side-effect is because variable argument lists are unsupported by the proprocessor.
	Direct calls to pDebugPrint will work if pDEBUG is defined, but fail at link time otherwise.
*/
#if pDEBUG
#ifdef COOLSAND
#define pDebugPrintfEX(args)                 (pDebugPrintEX args)
#define pDebugPrintf(args)                   (pDebugPrint args)
#else
#define pDebugPrintfEX(args)                 (pDebugPrintEX args)
#define pDebugPrintf(args)                   (pDebugPrint args)
#endif
#define pDebugDumpFuncEX(level,layer,buf,len) pDebugPrintEX((level),(layer),"funciont:%s,line:%d-----buf = 0x%x, len=%d\n",__FUNCTION__,__LINE__,(buf),(len))
#define pDebugDumpFunc(level,buf,len) pDebugPrint((level),"funciont:%s,line:%d-----buf = 0x%x, len=%d\n",__FUNCTION__,__LINE__,(buf),(len))

#define pDebugDumpEX(level,layer,buf,len)    (pDebugDumpFuncEX((level),(layer),(buf),(len)))
#define pDebugDump(level,buf,len)            (pDebugDumpFunc((level),(buf),(len)))
#elif (PRH_BS_CFG_SYS_TRACE_DEBUG_VIA_UART_SUPPORTED)
#   define pDebugPrintfEX(level,layer,index,buf,len,type)    (SYSDebug_PrintEx((level),(layer),(index),(buf),(len),(type)))
#   define pDebugDumpEX(level,layer,buf,len)    (SYSDebug_Dump_FuncEX((level),(layer),(buf),(len)))
#	define pDebugPrintf(args)
#   define pDebugDump(level,buf,len)
#   define pDebugCheck()
#else
#	define pDebugPrintfEX(args) 
#   define pDebugDumpEX(level,layer,buf,len) 
#	define pDebugPrintf(args) 
#   define pDebugDump(level,buf,len) 
#   define pDebugCheck()
#endif


/* Each platform should provide one of these for the build system to find */
#if COMBINED_HOST==0
#include "platform_config.h"
#else
#if (BUILD_TYPE==UNIT_TEST_BUILD)
#define PRH_L2_MAX_NUM_LINKS 0x01
#endif
#endif

/* 
    These ACPIDECLx macros are platform-specific and are provided by platform_config.h
    These are used to provide linkage qualifiers, e.g. on Win32 the "dllexport" specifier 
*/
#ifndef APIDECL1
#    define APIDECL1
#endif

#ifndef APIDECL2
#    define APIDECL2
#endif

#endif /*__HOST_CONFIG_H */
