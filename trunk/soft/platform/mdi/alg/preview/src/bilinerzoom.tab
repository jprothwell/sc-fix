		//0x0000		VoC_code_section_0
		//0x0000		Coolsand_MAIN
0x003F1794,	//0x0000		VoC_cfg_lg(0x3f,)
		//0x0002		AudioDecode_MAIN_L0
0x00101792,	//0x0002		VoC_cfg_lg(0x10,)
0xFFC0DEA0,	//0x0004		VoC_NOP	|	VoC_cfg(0x20)
0x0AAAFFC0,	//0x0006		VoC_lw16i(SP16,0x27ff)(lo)	|	VoC_NOP
0x0AAB27FF,	//0x0008		VoC_lw16i(SP32,0x67fe)(lo)	|	VoC_lw16i(SP16,0x27ff)(hi)
0x179467FE,	//0x000a		VoC_cfg_lg(0x3f,)(lo)	|	VoC_lw16i(SP32,0x67fe)(hi)
0x1792003F,	//0x000c		VoC_cfg_lg(0x8,)(lo)	|	VoC_cfg_lg(0x3f,)(hi)
0x2B800008,	//0x000e		VoC_jal(Coolsand_bilinear_preview)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xE5F100D0,	//0x0010		VoC_jump(AudioDecode_MAIN_L0)	|	VoC_jal(Coolsand_bilinear_preview)(hi)
		//0x0012		CoolSand_SignBits2
0xEE257023,	//0x0012		VoC_lw16i_short(REG5,0xffffffe2,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x0014		Lable_X_L1
0xC15D790C,	//0x0014		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x001431C4,	//0x0016		VoC_bnez16_r(Lable_X_L1,REG4)
0xFFC0E580,	//0x0018		VoC_NAD	|	VoC_return
		//0x001a		CoolSand_Div2
0xF3FF5FE9,	//0x001a		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4460C4,	//0x001c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x00122B80,	//0x001e		VoC_jal(CoolSand_SignBits2)
0xF6C860A6,	//0x0020		VoC_movreg16(ACC0_LO,REG6,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xFF4560E4,	//0x0022		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x00122B80,	//0x0024		VoC_jal(CoolSand_SignBits2)
0xFEF460EA,	//0x0026		VoC_shru32_rr(ACC0,REG6,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG7,DEFAULT)
0xC3747EED,	//0x0028		VoC_sub16_rr(REG4,REG5,REG6,IN_PARALLEL)	|	VoC_shru32_rr(ACC1,REG5,DEFAULT)
0xE0167087,	//0x002a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xE007413C,	//0x002c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xFF467223,	//0x002e		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x11,DEFAULT)
		//0x0030		LABLE_DIV_COUNTDOWN
0x0034362C,	//0x0030		VoC_bgt32_rr(LABLE_DIV_L0,ACC1,ACC0)
0xC99E4B2C,	//0x0032		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
		//0x0034		LABLE_DIV_L0
0xFDFC7DFE,	//0x0034		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xffffffff,DEFAULT)
0x31C3DE18,	//0x0036		VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(lo)	|	VoC_inc_p(REG3,DEFAULT)
0x5FA90030,	//0x0038		VoC_pop16(RA,DEFAULT)	|	VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(hi)
0xFEE6F00B,	//0x003a		VoC_shru32_rr(RL6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xFFC0E580,	//0x003c		VoC_NAD	|	VoC_return
		//0x003e		Coolsand_zoomline
0xDFC17F43,	//0x003e		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0xF5E97021,	//0x0040		VoC_lw16i_short(FORMAT32,0xfffffffd,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x20000A83,	//0x0042		VoC_lw16i(REG3,0x2000)
0x400A1403,	//0x0044		VoC_lw16_d(REG3,0x400a)
0x1486DFC3,	//0x0046		VoC_lw32_d(RL6,0x4020)(lo)	|	VoC_push16(REG3,DEFAULT)
0x790B4020,	//0x0048		VoC_shru16_ri(REG3,0x1,DEFAULT)	|	VoC_lw32_d(RL6,0x4020)(hi)
0xFFC0FF1A,	//0x004a		VoC_NAD	|	VoC_movreg32(REG45,REG67,IN_PARALLEL)
0x00762E18,	//0x004c		VoC_loop_r(0,REG3)
0xFC6A7F17,	//0x004e		VoC_shru32_ri(REG45,0xd,IN_PARALLEL)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xF685640C,	//0x0050		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG1,DEFAULT)
0xF6C878FC,	//0x0052		VoC_movreg16(ACC0_LO,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xD613402F,	//0x0054		VoC_lw16_sd(REG3,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG0,REG5,DEFAULT)
0xC3E641E7,	//0x0056		VoC_sub16_rr(REG6,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xF704418E,	//0x0058		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xC2E55877,	//0x005a		VoC_sub16_rr(REG5,REG3,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x7F1DD866,	//0x005c		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x4DE4F95F,	//0x005e		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG7,0xb,IN_PARALLEL)
0x4E2EF95E,	//0x0060		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xb,IN_PARALLEL)
0x79DEFF2B,	//0x0062		VoC_shru16_ri(REG6,0xfffffffb,DEFAULT)	|	VoC_movreg32(REG67,ACC1,IN_PARALLEL)
0x7956F9DF,	//0x0064		VoC_shru16_ri(REG6,0xa,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffffb,IN_PARALLEL)
0x5CA9F957,	//0x0066		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_shru16_ri(REG7,0xa,IN_PARALLEL)
0x4E3CCDAC,	//0x0068		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,IN_PARALLEL)
0x1606FF2B,	//0x006a		VoC_and16_ri(REG6,0x1f)(lo)	|	VoC_movreg32(REG67,ACC1,IN_PARALLEL)
0x1607001F,	//0x006c		VoC_and16_ri(REG7,0x1f)(lo)	|	VoC_and16_ri(REG6,0x1f)(hi)
0x5CA9001F,	//0x006e		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_and16_ri(REG7,0x1f)(hi)
0xCE3CCDAC,	//0x0070		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,IN_PARALLEL)
0x401C093B,	//0x0072		VoC_add32_rd(REG67,RL7,0x401c)
0xFF1A64F3,	//0x0074		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_and32_rr(REG67,RL6,DEFAULT)
		//0x0076		VoC_endloop0
0xDCA97021,	//0x0076		VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x400A1403,	//0x0078		VoC_lw16_d(REG3,0x400a)
0xFFC0F90B,	//0x007a		VoC_NAD	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x00A62E18,	//0x007c		VoC_loop_r(0,REG3)
0xFC6A7F17,	//0x007e		VoC_shru32_ri(REG45,0xd,IN_PARALLEL)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xF685640C,	//0x0080		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG1,DEFAULT)
0xF6C878FC,	//0x0082		VoC_movreg16(ACC0_LO,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0xD613402F,	//0x0084		VoC_lw16_sd(REG3,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG0,REG5,DEFAULT)
0xC3E641E7,	//0x0086		VoC_sub16_rr(REG6,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xF704418E,	//0x0088		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xC2E55877,	//0x008a		VoC_sub16_rr(REG5,REG3,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x7F1DD866,	//0x008c		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x4DE4F95F,	//0x008e		VoC_multf32_rr(ACC0,REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG7,0xb,IN_PARALLEL)
0x4E2EF95E,	//0x0090		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0xb,IN_PARALLEL)
0x79DEFF2B,	//0x0092		VoC_shru16_ri(REG6,0xfffffffb,DEFAULT)	|	VoC_movreg32(REG67,ACC1,IN_PARALLEL)
0x7956F9DF,	//0x0094		VoC_shru16_ri(REG6,0xa,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffffb,IN_PARALLEL)
0x5CA9F957,	//0x0096		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_shru16_ri(REG7,0xa,IN_PARALLEL)
0x4E3CCDAC,	//0x0098		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,IN_PARALLEL)
0x1606FF2B,	//0x009a		VoC_and16_ri(REG6,0x1f)(lo)	|	VoC_movreg32(REG67,ACC1,IN_PARALLEL)
0x1607001F,	//0x009c		VoC_and16_ri(REG7,0x1f)(lo)	|	VoC_and16_ri(REG6,0x1f)(hi)
0x5CA9001F,	//0x009e		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_and16_ri(REG7,0x1f)(hi)
0xCE3CCDAC,	//0x00a0		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,IN_PARALLEL)
0x401C093B,	//0x00a2		VoC_add32_rd(REG67,RL7,0x401c)
0xFF1A64F3,	//0x00a4		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_and32_rr(REG67,RL6,DEFAULT)
		//0x00a6		VoC_endloop0
0xDCA97021,	//0x00a6		VoC_sw16inc_p(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xDF81DF83,	//0x00a8		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xFFC0E580,	//0x00aa		VoC_NAD	|	VoC_return
		//0x00ac		COOLSAND_DMA_READ
0x03C00A85,	//0x00ac		VoC_lw16i(REG5,0x3c0)
0x40131404,	//0x00ae		VoC_lw16_d(REG4,0x4013)
0x40001484,	//0x00b0		VoC_lw32_d(ACC0,0x4000)
0x7FC215C2,	//0x00b2		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x00b4		VoC_sw32_d(ACC0,0xffc4)
0x0924DE80,	//0x00b6		VoC_add32_rd(ACC0,ACC0,0x401a)(lo)	|	VoC_cfg(0x0)
0x1794401A,	//0x00b8		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x401a)(hi)
0x15840008,	//0x00ba		VoC_sw32_d(ACC0,0x4000)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xE5804000,	//0x00bc		VoC_return	|	VoC_sw32_d(ACC0,0x4000)(hi)
		//0x00be		COOLSAND_DMA_READ_BlendBuf
0x20110A85,	//0x00be		VoC_lw16i(REG5,0x2011)
0x400D1404,	//0x00c0		VoC_lw16_d(REG4,0x400d)
0x40041484,	//0x00c2		VoC_lw32_d(ACC0,0x4004)
0x7FC215C2,	//0x00c4		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x00c6		VoC_sw32_d(ACC0,0xffc4)
0x0924DE80,	//0x00c8		VoC_add32_rd(ACC0,ACC0,0x400e)(lo)	|	VoC_cfg(0x0)
0x1794400E,	//0x00ca		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x400e)(hi)
0x15840008,	//0x00cc		VoC_sw32_d(ACC0,0x4004)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xE5804004,	//0x00ce		VoC_return	|	VoC_sw32_d(ACC0,0x4004)(hi)
		//0x00d0		Coolsand_bilinear_preview
0xF01CF000,	//0x00d0		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF01EF01D,	//0x00d2		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x1540F01F,	//0x00d4		VoC_sw16_d(REG0,0xffc1)(lo)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x0A967FC1,	//0x00d6		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG0,0xffc1)(hi)
0xF01B003F,	//0x00d8		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x3f)(hi)
0x40061808,	//0x00da		VoC_lw16i_set_inc(REG0,0x4006,0x2)
0xF5887304,	//0x00dc		VoC_lw16i_short(FORMAT16,0xfffffff1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x18,DEFAULT)
0xD9C30D05,	//0x00de		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_multf16_rp(REG5,REG4,REG0,DEFAULT)
0x40001484,	//0x00e0		VoC_lw32_d(ACC0,0x4000)
0xDFE97022,	//0x00e2		VoC_push16(RA,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x40121582,	//0x00e4		VoC_sw32_d(REG45,0x4012)
0xF5F94314,	//0x00e6		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)
0xD9C24DA5,	//0x00e8		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC1,REG6,REG4,DEFAULT)
0x40151504,	//0x00ea		VoC_sw16_d(REG4,0x4015)
0xC3EF43A6,	//0x00ec		VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xF80F7816,	//0x00ee		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0x1585F8FE,	//0x00f0		VoC_sw32_d(ACC1,0x401a)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x0A84401A,	//0x00f2		VoC_lw16i(REG4,0x780)(lo)	|	VoC_sw32_d(ACC1,0x401a)(hi)
0x41A60780,	//0x00f4		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x780)(hi)
0x0E38F5F9,	//0x00f6		VoC_mac32_rd(REG7,0x4006)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)
0x15064006,	//0x00f8		VoC_sw16_d(REG6,0x4010)(lo)	|	VoC_mac32_rd(REG7,0x4006)(hi)
0x14834010,	//0x00fa		VoC_lw32_d(REG67,0x4008)(lo)	|	VoC_sw16_d(REG6,0x4010)(hi)
0x14874008,	//0x00fc		VoC_lw32_d(RL7,0x400a)(lo)	|	VoC_lw32_d(REG67,0x4008)(hi)
0x1584400A,	//0x00fe		VoC_sw32_d(ACC0,0x4000)(lo)	|	VoC_lw32_d(RL7,0x400a)(hi)
0x61C74000,	//0x0100		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_sw32_d(ACC0,0x4000)(hi)
0x0A80F6EE,	//0x0102		VoC_lw16i(REG0,0x401c)(lo)	|	VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)
0xFFC0401C,	//0x0104		VoC_NAD	|	VoC_lw16i(REG0,0x401c)(hi)
0x001A2B80,	//0x0106		VoC_jal(CoolSand_Div2)
0xDDC67F3B,	//0x0108		VoC_sw32inc_p(RL6,REG0,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x001A2B80,	//0x010a		VoC_jal(CoolSand_Div2)
0x03C00A85,	//0x010c		VoC_lw16i(REG5,0x3c0)
0xFF455DC6,	//0x010e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0x40221805,	//0x0110		VoC_lw16i_set_inc(REG1,0x4022,0x1)
0x40111505,	//0x0112		VoC_sw16_d(REG5,0x4011)
0xE27577CA,	//0x0114		VoC_lw16i_short(REG5,0x27,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0xfffffffe,DEFAULT)
0x1FFF0A8A,	//0x0116		VoC_lw16i(ACC1_LO,0x1fff)
0x40161585,	//0x0118		VoC_sw32_d(ACC1,0x4016)
0x400A082C,	//0x011a		VoC_mult16_rd(REG4,REG5,0x400a)
0x40220A82,	//0x011c		VoC_lw16i(REG2,0x4022)
0xF90C4115,	//0x011e		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG4,REG2,DEFAULT)
0x40201585,	//0x0120		VoC_sw32_d(ACC1,0x4020)
0x40141505,	//0x0122		VoC_sw16_d(REG5,0x4014)
0xF9F47005,	//0x0124		VoC_shru16_ri(REG4,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x400D1504,	//0x0126		VoC_sw16_d(REG4,0x400d)
0x400E1582,	//0x0128		VoC_sw32_d(REG45,0x400e)
0x00AC2B80,	//0x012a		VoC_jal(COOLSAND_DMA_READ)
0x00BE2B80,	//0x012c		VoC_jal(COOLSAND_DMA_READ_BlendBuf)
0xE0157F43,	//0x012e		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
		//0x0130		LABLE_BILINERA_LOOP_H_2
0x400B1404,	//0x0130		VoC_lw16_d(REG4,0x400b)
0x1505F90C,	//0x0132		VoC_sw16_d(REG5,0x400c)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x2E21400C,	//0x0134		VoC_loop_r(1,REG4)(lo)	|	VoC_sw16_d(REG5,0x400c)(hi)
0xFC6B01D8,	//0x0136		VoC_shru32_ri(REG67,0xd,DEFAULT)	|	VoC_loop_r(1,REG4)(hi)
0x48AEDF43,	//0x0138		VoC_blt16_rd(LABLE_PREVIEW_L0,REG6,0x4015)(lo)	|	VoC_push32(REG67,DEFAULT)
0xFFC04015,	//0x013a		VoC_NAD	|	VoC_blt16_rd(LABLE_PREVIEW_L0,REG6,0x4015)(hi)
0x00AC2B80,	//0x013c		VoC_jal(COOLSAND_DMA_READ)
0x401507B4,	//0x013e		VoC_sub16_rd(REG4,REG6,0x4015)
0x7D9AF005,	//0x0140		VoC_shru32_ri(REG45,0xfffffff3,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFFC0F686,	//0x0142		VoC_NOP	|	VoC_movreg16(REG6,REG4,IN_PARALLEL)
0xFFC0DD0A,	//0x0144		VoC_NAD	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
		//0x0146		LABLE_PREVIEW_L0
0x40060834,	//0x0146		VoC_mult16_rd(REG4,REG6,0x4006)
0x401607B7,	//0x0148		VoC_sub16_rd(REG7,REG6,0x4016)
0x40161506,	//0x014a		VoC_sw16_d(REG6,0x4016)
0x40100724,	//0x014c		VoC_add16_rd(REG4,REG4,0x4010)
0x40060725,	//0x014e		VoC_add16_rd(REG5,REG4,0x4006)
0x35BEF026,	//0x0150		VoC_bne16_rr(LABLE_PREVIEW_L1,REG7,REG6)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x6E110172,	//0x0152		VoC_bnez16_d(LABLE_PREVIEW_L3,0x4017)(lo)	|	VoC_bne16_rr(LABLE_PREVIEW_L1,REG7,REG6)(hi)
0x0A834017,	//0x0154		VoC_lw16i(REG3,0x0)(lo)	|	VoC_bnez16_d(LABLE_PREVIEW_L3,0x4017)(hi)
0x20060000,	//0x0156		VoC_lw16d_set_inc(REG2,0x4011,0x1)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0x15064011,	//0x0158		VoC_sw16_d(REG6,0x4017)(lo)	|	VoC_lw16d_set_inc(REG2,0x4011,0x1)(hi)
0x15814017,	//0x015a		VoC_sw32_d(REG23,0x4018)(lo)	|	VoC_sw16_d(REG6,0x4017)(hi)
0x60624018,	//0x015c		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw32_d(REG23,0x4018)(hi)
0xFFC0F6A0,	//0x015e		VoC_NAD	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0x003E2B80,	//0x0160		VoC_jal(Coolsand_zoomline)
0x01862B00,	//0x0162		VoC_jump_lg(LABLE_PREVIEW_L2)
		//0x0164		LABLE_PREVIEW_L3
0x1403F006,	//0x0164		VoC_lw16_d(REG3,0x4011)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064011,	//0x0166		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_lw16_d(REG3,0x4011)(hi)
0x15060000,	//0x0168		VoC_sw16_d(REG6,0x4017)(lo)	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
0x15814017,	//0x016a		VoC_sw32_d(REG23,0x4018)(lo)	|	VoC_sw16_d(REG6,0x4017)(hi)
0x60624018,	//0x016c		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw32_d(REG23,0x4018)(hi)
0x2B80F6A0,	//0x016e		VoC_jal(Coolsand_zoomline)(lo)	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0xE5D5003E,	//0x0170		VoC_jump(LABLE_PREVIEW_L2)	|	VoC_jal(Coolsand_zoomline)(hi)
		//0x0172		LABLE_PREVIEW_L1
0x01863187,	//0x0172		VoC_bez16_r(LABLE_PREVIEW_L2,REG7)
0x1403F006,	//0x0174		VoC_lw16_d(REG3,0x4011)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064011,	//0x0176		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_lw16_d(REG3,0x4011)(hi)
0x15060000,	//0x0178		VoC_sw16_d(REG6,0x4017)(lo)	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
0x60804017,	//0x017a		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_sw16_d(REG6,0x4017)(hi)
0x1581DFC5,	//0x017c		VoC_sw32_d(REG23,0x4018)(lo)	|	VoC_push16(REG5,IN_PARALLEL)
0x2B804018,	//0x017e		VoC_jal(Coolsand_zoomline)(lo)	|	VoC_sw32_d(REG23,0x4018)(hi)
0xDF80003E,	//0x0180		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_zoomline)(hi)
0x40111402,	//0x0182		VoC_lw16_d(REG2,0x4011)
0x003E2B80,	//0x0184		VoC_jal(Coolsand_zoomline)
		//0x0186		LABLE_PREVIEW_L2
0xF00A590B,	//0x0186		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x20000A85,	//0x0188		VoC_lw16i(REG5,0x2000)
0x40202983,	//0x018a		VoC_and32_rd(REG67,0x4020)
0xF00B4377,	//0x018c		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG5,REG6,DEFAULT)
0x40181481,	//0x018e		VoC_lw32_d(REG23,0x4018)
0x400A1400,	//0x0190		VoC_lw16_d(REG0,0x400a)
0x9BD51BD4,	//0x0192		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xD1335133,	//0x0194		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0xFFC0F908,	//0x0196		VoC_NAD	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x01BE2E00,	//0x0198		VoC_loop_r(0,REG0)
0x9BD51BD4,	//0x019a		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xF7646120,	//0x019c		VoC_movreg16(REG4,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xD1335133,	//0x019e		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0xF9DC79A8,	//0x01a0		VoC_shru16_ri(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xfffffff5,DEFAULT)
0xF7246460,	//0x01a2		VoC_movreg16(REG4,ACC0_HI,IN_PARALLEL)	|	VoC_or16_rr(REG0,REG4,DEFAULT)
0x9BD51BD4,	//0x01a4		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xF7656460,	//0x01a6		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_or16_rr(REG0,REG4,DEFAULT)
0xD1335133,	//0x01a8		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0xD81079AD,	//0x01aa		VoC_lw16_p(REG0,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff5,DEFAULT)
0x3180DC10,	//0x01ac		VoC_bez16_r(LABLE_BILIEAR_BLEND1,REG0)(lo)	|	VoC_sw16_p(REG0,REG1,DEFAULT)
0xDC1001B0,	//0x01ae		VoC_sw16_p(REG0,REG1,DEFAULT)	|	VoC_bez16_r(LABLE_BILIEAR_BLEND1,REG0)(hi)
		//0x01b0		LABLE_BILIEAR_BLEND1
0xF7646120,	//0x01b0		VoC_movreg16(REG4,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xF9D86465,	//0x01b2		VoC_shru16_ri(REG0,0xfffffffb,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG4,DEFAULT)
0xDE086445,	//0x01b4		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG0,DEFAULT)
0x9BD51BD4,	//0x01b6		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xF6205815,	//0x01b8		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x3185DC95,	//0x01ba		VoC_bez16_r(LABLE_BILIEAR_BLEND2,REG5)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDC0501BE,	//0x01bc		VoC_sw16_p(REG5,REG0,DEFAULT)	|	VoC_bez16_r(LABLE_BILIEAR_BLEND2,REG5)(hi)
		//0x01be		LABLE_BILIEAR_BLEND2
		//0x01be		VoC_endloop0
0xD1335133,	//0x01be		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0x40144539,	//0x01c0		VoC_bne16_rd(LABLE_PREVIEW_L4,REG1,0x4014)
0x20110A85,	//0x01c2		VoC_lw16i(REG5,0x2011)
0x400D1404,	//0x01c4		VoC_lw16_d(REG4,0x400d)
0x40021484,	//0x01c6		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x01c8		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x01ca		VoC_sw32_d(ACC0,0xffc4)
0x0924DE80,	//0x01cc		VoC_add32_rd(ACC0,ACC0,0x400e)(lo)	|	VoC_cfg(0x0)
0x1794400E,	//0x01ce		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x400e)(hi)
0x18050008,	//0x01d0		VoC_lw16i_set_inc(REG1,0x4022,0x1)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15844022,	//0x01d2		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_lw16i_set_inc(REG1,0x4022,0x1)(hi)
0x2B804002,	//0x01d4		VoC_jal(COOLSAND_DMA_READ_BlendBuf)(lo)	|	VoC_sw32_d(ACC0,0x4002)(hi)
0xDF0300BE,	//0x01d6		VoC_pop32(REG67,DEFAULT)	|	VoC_jal(COOLSAND_DMA_READ_BlendBuf)(hi)
		//0x01d7		LABLE_PREVIEW_L4
		//0x01d8		VoC_endloop1
0x401E091B,	//0x01d8		VoC_add32_rd(REG67,REG67,0x401e)
0x1405F024,	//0x01da		VoC_lw16_d(REG5,0x400c)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC365400C,	//0x01dc		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG5,0x400c)(hi)
0x01E23205,	//0x01de		VoC_bltz16_r(LABLE_BILIERA_GOON,REG5)
0x01302B00,	//0x01e0		VoC_jump_lg(LABLE_BILINERA_LOOP_H_2)
		//0x01e2		LABLE_BILIERA_GOON
0x0A85DFA9,	//0x01e2		VoC_lw16i(REG5,0x4022)(lo)	|	VoC_pop16(RA,DEFAULT)
0x350D4022,	//0x01e4		VoC_be16_rr(LABLE_PREVIEW_L7,REG1,REG5)(lo)	|	VoC_lw16i(REG5,0x4022)(hi)
0x426C01F4,	//0x01e6		VoC_sub16_rr(REG4,REG1,REG5,DEFAULT)	|	VoC_be16_rr(LABLE_PREVIEW_L7,REG1,REG5)(hi)
0xF90CF90D,	//0x01e8		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,IN_PARALLEL)
0x40021484,	//0x01ea		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x01ec		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x01ee		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x01f0		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x01f2		VoC_cfg_lg(0x8,)
		//0x01f4		LABLE_PREVIEW_L7
0xFFC0E580,	//0x01f4		VoC_NAD	|	VoC_return
