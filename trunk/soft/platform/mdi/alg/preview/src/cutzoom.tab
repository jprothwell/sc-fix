		//0x0000		VoC_code_section_0
		//0x0000		Coolsand_MAIN
0x003F1794,	//0x0000		VoC_cfg_lg(0x3f,)
		//0x0002		AudioDecode_MAIN_L0
0x00101792,	//0x0002		VoC_cfg_lg(0x10,)
0xFFC0DEA0,	//0x0004		VoC_NOP	|	VoC_cfg(0x20)
0x0AAAFFC0,	//0x0006		VoC_lw16i(SP16,0x27ff)(lo)	|	VoC_NOP
0x0AAB27FF,	//0x0008		VoC_lw16i(SP32,0x67fe)(lo)	|	VoC_lw16i(SP16,0x27ff)(hi)
0x179467FE,	//0x000a		VoC_cfg_lg(0x3f,)(lo)	|	VoC_lw16i(SP32,0x67fe)(hi)
0x1792003F,	//0x000c		VoC_cfg_lg(0x8,)(lo)	|	VoC_cfg_lg(0x3f,)(hi)
0x2B800008,	//0x000e		VoC_jal(Coolsand_CameraPreview_Entrance)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xE5F100CC,	//0x0010		VoC_jump(AudioDecode_MAIN_L0)	|	VoC_jal(Coolsand_CameraPreview_Entrance)(hi)
		//0x0012		CoolSand_SignBits2
0xEE257023,	//0x0012		VoC_lw16i_short(REG5,0xffffffe2,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x0014		Lable_X_L1
0xC15D790C,	//0x0014		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x001431C4,	//0x0016		VoC_bnez16_r(Lable_X_L1,REG4)
0xFFC0E580,	//0x0018		VoC_NAD	|	VoC_return
		//0x001a		CoolSand_Div2
0xF3FF5FE9,	//0x001a		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF4460C4,	//0x001c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x00122B80,	//0x001e		VoC_jal(CoolSand_SignBits2)
0xF6C860A6,	//0x0020		VoC_movreg16(ACC0_LO,REG6,IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
0xFF4560E4,	//0x0022		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x00122B80,	//0x0024		VoC_jal(CoolSand_SignBits2)
0xFEF460EA,	//0x0026		VoC_shru32_rr(ACC0,REG6,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG7,DEFAULT)
0xC3747EED,	//0x0028		VoC_sub16_rr(REG4,REG5,REG6,IN_PARALLEL)	|	VoC_shru32_rr(ACC1,REG5,DEFAULT)
0xE0167087,	//0x002a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xE007413C,	//0x002c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xFF467263,	//0x002e		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x13,DEFAULT)
		//0x0030		LABLE_DIV_COUNTDOWN
0x0034362C,	//0x0030		VoC_bgt32_rr(LABLE_DIV_L0,ACC1,ACC0)
0xC99E4B2C,	//0x0032		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
		//0x0034		LABLE_DIV_L0
0xFDFC7DFE,	//0x0034		VoC_shru32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xffffffff,DEFAULT)
0x31C3DE18,	//0x0036		VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(lo)	|	VoC_inc_p(REG3,DEFAULT)
0x5FA90030,	//0x0038		VoC_pop16(RA,DEFAULT)	|	VoC_bnez16_r(LABLE_DIV_COUNTDOWN,REG3)(hi)
0xFEE6F00B,	//0x003a		VoC_shru32_rr(RL6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xFFC0E580,	//0x003c		VoC_NAD	|	VoC_return
		//0x003e		COOLSAND_DMA_READ
0x06070A85,	//0x003e		VoC_lw16i(REG5,0x607)
0x44151404,	//0x0040		VoC_lw16_d(REG4,0x4415)
0x40001484,	//0x0042		VoC_lw32_d(ACC0,0x4000)
0x7FC215C2,	//0x0044		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0046		VoC_sw32_d(ACC0,0xffc4)
0x441C0924,	//0x0048		VoC_add32_rd(ACC0,ACC0,0x441c)
0x1584FFC0,	//0x004a		VoC_sw32_d(ACC0,0x4000)(lo)	|	VoC_NOP
0xDE804000,	//0x004c		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0x4000)(hi)
0x1794FFC0,	//0x004e		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x0050		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x0052		COOLSAND_DMA_WRITE
0xFFC0DE80,	//0x0052		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0054		VoC_cfg_lg(0x8,)
0x400C6C0F,	//0x0056		VoC_bez16_d(LABLE_WHETHER_UPDATE_ADDR,0x400c)
0xE0057084,	//0x0058		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x12870A85,	//0x005a		VoC_lw16i(REG5,0x1287)
0x400C1505,	//0x005c		VoC_sw16_d(REG5,0x400c)
0x40021484,	//0x005e		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x0060		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0062		VoC_sw32_d(ACC0,0xffc4)
0xF024E580,	//0x0064		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_return
		//0x0065		LABLE_WHETHER_UPDATE_ADDR
0x44262904,	//0x0066		VoC_xor16_rd(REG4,0x4426)
0x44266E08,	//0x0068		VoC_bnez16_d(LABLE_FLAG_WRITE1,0x4426)
0x12870A85,	//0x006a		VoC_lw16i(REG5,0x1287)
0x25FE1805,	//0x006c		VoC_lw16i_set_inc(REG1,0x25fe,0x1)
0xFFC0E5C6,	//0x006e		VoC_NAD	|	VoC_jump(LABLE_FLAG_WRITE2)
		//0x0070		LABLE_FLAG_WRITE1
0x12FF0A85,	//0x0070		VoC_lw16i(REG5,0x12ff)
0x250E1805,	//0x0072		VoC_lw16i_set_inc(REG1,0x250e,0x1)
		//0x0074		LABLE_FLAG_WRITE2
0x44261504,	//0x0074		VoC_sw16_d(REG4,0x4426)
0x440F1404,	//0x0076		VoC_lw16_d(REG4,0x440f)
0x40021484,	//0x0078		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x007a		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x007c		VoC_sw32_d(ACC0,0xffc4)
0x44100924,	//0x007e		VoC_add32_rd(ACC0,ACC0,0x4410)
0x1584FFC0,	//0x0080		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_NOP
0xE5804002,	//0x0082		VoC_return	|	VoC_sw32_d(ACC0,0x4002)(hi)
		//0x0084		COOLSAND_DMA_WRITE_withoutblend
0x400C6C0F,	//0x0084		VoC_bez16_d(LABLE_WHETHER_UPDATE_ADDR_withoutblend,0x400c)
0xE0057084,	//0x0086		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x12870A85,	//0x0088		VoC_lw16i(REG5,0x1287)
0x400C1505,	//0x008a		VoC_sw16_d(REG5,0x400c)
0x40021484,	//0x008c		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x008e		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0090		VoC_sw32_d(ACC0,0xffc4)
0xF024E580,	//0x0092		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_return
		//0x0093		LABLE_WHETHER_UPDATE_ADDR_withoutblend
0x44262904,	//0x0094		VoC_xor16_rd(REG4,0x4426)
0x44266E08,	//0x0096		VoC_bnez16_d(LABLE_FLAG_WRITE1_withoutblend,0x4426)
0x12870A85,	//0x0098		VoC_lw16i(REG5,0x1287)
0x25FE1805,	//0x009a		VoC_lw16i_set_inc(REG1,0x25fe,0x1)
0xFFC0E5C6,	//0x009c		VoC_NAD	|	VoC_jump(LABLE_FLAG_WRITE2_withoutblend)
		//0x009e		LABLE_FLAG_WRITE1_withoutblend
0x12FF0A85,	//0x009e		VoC_lw16i(REG5,0x12ff)
0x250E1805,	//0x00a0		VoC_lw16i_set_inc(REG1,0x250e,0x1)
		//0x00a2		LABLE_FLAG_WRITE2_withoutblend
0x44261504,	//0x00a2		VoC_sw16_d(REG4,0x4426)
0x440F1404,	//0x00a4		VoC_lw16_d(REG4,0x440f)
0x40021484,	//0x00a6		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x00a8		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x00aa		VoC_sw32_d(ACC0,0xffc4)
0x44100924,	//0x00ac		VoC_add32_rd(ACC0,ACC0,0x4410)
0x1584FFC0,	//0x00ae		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_NOP
0xE5804002,	//0x00b0		VoC_return	|	VoC_sw32_d(ACC0,0x4002)(hi)
		//0x00b2		COOLSAND_DMA_READ_BlendBuf
0x2904F024,	//0x00b2		VoC_xor16_rd(REG4,0x4427)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x6E054427,	//0x00b4		VoC_bnez16_d(LABLE_FLAG_BLEND1,0x4427)(lo)	|	VoC_xor16_rd(REG4,0x4427)(hi)
0x0A854427,	//0x00b6		VoC_lw16i(REG5,0x1287)(lo)	|	VoC_bnez16_d(LABLE_FLAG_BLEND1,0x4427)(hi)
0xE5C31287,	//0x00b8		VoC_jump(LABLE_FLAG_BLEND2)	|	VoC_lw16i(REG5,0x1287)(hi)
		//0x00ba		LABLE_FLAG_BLEND1
0x12FF0A85,	//0x00ba		VoC_lw16i(REG5,0x12ff)
		//0x00bc		LABLE_FLAG_BLEND2
0x44271504,	//0x00bc		VoC_sw16_d(REG4,0x4427)
0x440F1404,	//0x00be		VoC_lw16_d(REG4,0x440f)
0x40041484,	//0x00c0		VoC_lw32_d(ACC0,0x4004)
0x7FC215C2,	//0x00c2		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x00c4		VoC_sw32_d(ACC0,0xffc4)
0x44100924,	//0x00c6		VoC_add32_rd(ACC0,ACC0,0x4410)
0x1584FFC0,	//0x00c8		VoC_sw32_d(ACC0,0x4004)(lo)	|	VoC_NOP
0xE5804004,	//0x00ca		VoC_return	|	VoC_sw32_d(ACC0,0x4004)(hi)
		//0x00cc		Coolsand_CameraPreview_Entrance
0xE0005FE9,	//0x00cc		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF405701C,	//0x00ce		VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF407701E,	//0x00d0		VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x7FC11540,	//0x00d2		VoC_sw16_d(REG0,0xffc1)
0x003F0A96,	//0x00d4		VoC_lw16i(STATUS,0x3f)
0x03000A84,	//0x00d6		VoC_lw16i(REG4,0x300)
0x430E0A85,	//0x00d8		VoC_lw16i(REG5,0x430e)
0x05680A86,	//0x00da		VoC_lw16i(REG6,0x568)
0x06681504,	//0x00dc		VoC_sw16_d(REG4,0x668)
0x06691504,	//0x00de		VoC_sw16_d(REG4,0x669)
0x066A1505,	//0x00e0		VoC_sw16_d(REG5,0x66a)
0x066B1505,	//0x00e2		VoC_sw16_d(REG5,0x66b)
0x066C1506,	//0x00e4		VoC_sw16_d(REG6,0x66c)
0x066D1506,	//0x00e6		VoC_sw16_d(REG6,0x66d)
0x40081482,	//0x00e8		VoC_lw32_d(REG45,0x4008)
0x400A4504,	//0x00ea		VoC_bne16_rd(LABLE_SELECT_ZOOMIN,REG4,0x400a)
0x400B44B5,	//0x00ec		VoC_bne16_rd(LABLE_SELECT_ZOOMIN,REG5,0x400b)
0x01802B80,	//0x00ee		VoC_jal(Coolsand_InitGlobal_Normal)
0x400D6E06,	//0x00f0		VoC_bnez16_d(LABLE_YUV2RGB_ROTATE,0x400d)
0x02122B80,	//0x00f2		VoC_jal(Coolsand_YUV2RGB565_Directly)
0x011A2B00,	//0x00f4		VoC_jump_lg(LABLE_SELECT_ENTRANCE)
		//0x00f6		LABLE_YUV2RGB_ROTATE
0x01DA2B80,	//0x00f6		VoC_jal(Coolsand_YUV2RGB565_Rotate)
0x011A2B00,	//0x00f8		VoC_jump_lg(LABLE_SELECT_ENTRANCE)
		//0x00fa		LABLE_SELECT_ZOOMIN
0x400A4D14,	//0x00fa		VoC_bnlt16_rd(LABLE_SELECT_ZOOMOUT,REG4,0x400a)
0x011E2B80,	//0x00fc		VoC_jal(Coolsand_InitGlobal_withZoom)
0x003E2B80,	//0x00fe		VoC_jal(COOLSAND_DMA_READ)
0x02800A84,	//0x0100		VoC_lw16i(REG4,0x280)
0x40064434,	//0x0102		VoC_bne16_rd(LABLE_ZOOMIN_WITHOUT_BLEND,REG4,0x4006)
0x067F2B80,	//0x0104		VoC_jal(Coolsand_bilinear_preview_yuv_zoomin)
0xFFC0E5D4,	//0x0106		VoC_NAD	|	VoC_jump(LABLE_SELECT_ENTRANCE)
		//0x0108		LABLE_ZOOMIN_WITHOUT_BLEND
0x05D42B80,	//0x0108		VoC_jal(Coolsand_bilinear_preview_yuv_zoomin_withoutblend)
0xFFC0E5D0,	//0x010a		VoC_NAD	|	VoC_jump(LABLE_SELECT_ENTRANCE)
		//0x010c		LABLE_SELECT_ZOOMOUT
0x011E2B80,	//0x010c		VoC_jal(Coolsand_InitGlobal_withZoom)
0x003E2B80,	//0x010e		VoC_jal(COOLSAND_DMA_READ)
0x02800A84,	//0x0110		VoC_lw16i(REG4,0x280)
0x40064434,	//0x0112		VoC_bne16_rd(LABLE_ZOOMOUT_WITHOUT_BLEND,REG4,0x4006)
0x03D72B80,	//0x0114		VoC_jal(Coolsand_bilinear_preview_yuv_zoomout)
0xFFC0E5C4,	//0x0116		VoC_NAD	|	VoC_jump(LABLE_SELECT_ENTRANCE)
		//0x0118		LABLE_ZOOMOUT_WITHOUT_BLEND
0x04BD2B80,	//0x0118		VoC_jal(Coolsand_bilinear_preview_yuv_zoomout_withoutblend)
		//0x011a		LABLE_SELECT_ENTRANCE
0xFFC0DFA9,	//0x011a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x011c		VoC_NAD	|	VoC_return
		//0x011e		Coolsand_InitGlobal_withZoom
0x00FF0A84,	//0x011e		VoC_lw16i(REG4,0xff)
0xE0126085,	//0x0120		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x40061808,	//0x0122		VoC_lw16i_set_inc(REG0,0x4006,0x2)
0x44241582,	//0x0124		VoC_sw32_d(REG45,0x4424)
0xE1447638,	//0x0126		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0xfffffff1,DEFAULT)
0x02800A85,	//0x0128		VoC_lw16i(REG5,0x280)
0x40064425,	//0x012a		VoC_bne16_rd(LABLE2_WIDTH_640,REG5,0x4006)
0xFFC0F90C,	//0x012c		VoC_NAD	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
		//0x012e		LABLE2_WIDTH_640
0xD9C30D05,	//0x012e		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_multf16_rp(REG5,REG4,REG0,DEFAULT)
0x40001484,	//0x0130		VoC_lw32_d(ACC0,0x4000)
0xF5F94314,	//0x0132		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG2,DEFAULT)
0x44141582,	//0x0134		VoC_sw32_d(REG45,0x4414)
0xD9C24DA5,	//0x0136		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC1,REG6,REG4,DEFAULT)
0x44171504,	//0x0138		VoC_sw16_d(REG4,0x4417)
0xC3EF43A6,	//0x013a		VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xF80F7816,	//0x013c		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xF00778FE,	//0x013e		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x441C1585,	//0x0140		VoC_sw32_d(ACC1,0x441c)
0x0C0E0A84,	//0x0142		VoC_lw16i(REG4,0xc0e)
0xF5F941A6,	//0x0144		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x40060E38,	//0x0146		VoC_mac32_rd(REG7,0x4006)
0x44121506,	//0x0148		VoC_sw16_d(REG6,0x4412)
0x40081483,	//0x014a		VoC_lw32_d(REG67,0x4008)
0x400A1487,	//0x014c		VoC_lw32_d(RL7,0x400a)
0x40001584,	//0x014e		VoC_sw32_d(ACC0,0x4000)
0x61C7DFE9,	//0x0150		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A80F6EE,	//0x0152		VoC_lw16i(REG0,0x441e)(lo)	|	VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)
0x07B6441E,	//0x0154		VoC_sub16_rd(REG6,REG6,0x102)(lo)	|	VoC_lw16i(REG0,0x441e)(hi)
0xFFC00102,	//0x0156		VoC_NAD	|	VoC_sub16_rd(REG6,REG6,0x102)(hi)
0x001A2B80,	//0x0158		VoC_jal(CoolSand_Div2)
0xDDC67F3B,	//0x015a		VoC_sw32inc_p(RL6,REG0,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x010207B6,	//0x015c		VoC_sub16_rd(REG6,REG6,0x102)
0x001A2B80,	//0x015e		VoC_jal(CoolSand_Div2)
0x0A85DFA9,	//0x0160		VoC_lw16i(REG5,0x93e)(lo)	|	VoC_pop16(RA,DEFAULT)
0x5DC6093E,	//0x0162		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw16i(REG5,0x93e)(hi)
0x1805FF45,	//0x0164		VoC_lw16i_set_inc(REG1,0x250e,0x1)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x1505250E,	//0x0166		VoC_sw16_d(REG5,0x4413)(lo)	|	VoC_lw16i_set_inc(REG1,0x250e,0x1)(hi)
0xF7CA4413,	//0x0168		VoC_lw16i_short(ACC1_LO,0xfffffffe,DEFAULT)	|	VoC_sw16_d(REG5,0x4413)(hi)
0x7FFE0A8A,	//0x016a		VoC_lw16i(ACC1_LO,0x7ffe)
0x44181585,	//0x016c		VoC_sw32_d(ACC1,0x4418)
0x44221585,	//0x016e		VoC_sw32_d(ACC1,0x4422)
0x400A1404,	//0x0170		VoC_lw16_d(REG4,0x400a)
0xFF44790C,	//0x0172		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF9F47005,	//0x0174		VoC_shru16_ri(REG4,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x440F1504,	//0x0176		VoC_sw16_d(REG4,0x440f)
0x44101582,	//0x0178		VoC_sw32_d(REG45,0x4410)
0x44261584,	//0x017a		VoC_sw32_d(ACC0,0x4426)
0xF5F977FA,	//0x017c		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)
0xFFC0E580,	//0x017e		VoC_NAD	|	VoC_return
		//0x0180		Coolsand_InitGlobal_Normal
0x00FF0A84,	//0x0180		VoC_lw16i(REG4,0xff)
0x1808E085,	//0x0182		VoC_lw16i_set_inc(REG0,0x4006,0x2)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x15824006,	//0x0184		VoC_sw32_d(REG45,0x4424)(lo)	|	VoC_lw16i_set_inc(REG0,0x4006,0x2)(hi)
0x76384424,	//0x0186		VoC_lw16i_short(FORMAT16,0xfffffff1,DEFAULT)	|	VoC_sw32_d(REG45,0x4424)(hi)
0x0D05E144,	//0x0188		VoC_multf16_rp(REG5,REG4,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x14,IN_PARALLEL)
0x4DA5D9C3,	//0x018a		VoC_multf32_rr(ACC1,REG6,REG4,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0x1504F5F9,	//0x018c		VoC_sw16_d(REG4,0x4417)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)
0x15824417,	//0x018e		VoC_sw32_d(REG45,0x4414)(lo)	|	VoC_sw16_d(REG4,0x4417)(hi)
0xD9C24414,	//0x0190		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32_d(REG45,0x4414)(hi)
0xF816C3A6,	//0x0192		VoC_shr16_ri(REG6,0x2,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xF00778FE,	//0x0194		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x441C1585,	//0x0196		VoC_sw32_d(ACC1,0x441c)
0x0C0E0A84,	//0x0198		VoC_lw16i(REG4,0xc0e)
0xFF4541A6,	//0x019a		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x7FFE0A8A,	//0x019c		VoC_lw16i(ACC1_LO,0x7ffe)
0x44121506,	//0x019e		VoC_sw16_d(REG6,0x4412)
0x400D6C20,	//0x01a0		VoC_bez16_d(LABLE_CUTZOOM_NO_ROTATE,0x400d)
0x44221585,	//0x01a2		VoC_sw32_d(ACC1,0x4422)
0x44280A81,	//0x01a4		VoC_lw16i(REG1,0x4428)
0xE1357291,	//0x01a6		VoC_lw16i_short(REG5,0x13,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x14,DEFAULT)
0xE1454069,	//0x01a8		VoC_lw16i_short(REG5,0x14,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x400B0B2E,	//0x01aa		VoC_sub16_dr(REG6,0x400b,REG5)
0xE00779FE,	//0x01ac		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0x4002091B,	//0x01ae		VoC_add32_rd(REG67,REG67,0x4002)
0xE0057144,	//0x01b0		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xa,DEFAULT)
0xFF4478F4,	//0x01b2		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x440F1504,	//0x01b4		VoC_sw16_d(REG4,0x440f)
0x44101582,	//0x01b6		VoC_sw32_d(REG45,0x4410)
0x400B1408,	//0x01b8		VoC_lw16_d(ACC0_LO,0x400b)
0x1583FDFC,	//0x01ba		VoC_sw32_d(REG67,0x4002)(lo)	|	VoC_shru32_ri(ACC0,0xffffffff,DEFAULT)
0x15844002,	//0x01bc		VoC_sw32_d(ACC0,0x441a)(lo)	|	VoC_sw32_d(REG67,0x4002)(hi)
0xE5D1441A,	//0x01be		VoC_jump(LABLE_CUTZOOM_INIT_QUITE)	|	VoC_sw32_d(ACC0,0x441a)(hi)
		//0x01c0		LABLE_CUTZOOM_NO_ROTATE
0x250E1809,	//0x01c0		VoC_lw16i_set_inc(REG1,0x250e,0x2)
0x44221585,	//0x01c2		VoC_sw32_d(ACC1,0x4422)
0x400A1404,	//0x01c4		VoC_lw16_d(REG4,0x400a)
0xFF44790C,	//0x01c6		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF9F47005,	//0x01c8		VoC_shru16_ri(REG4,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x440F1504,	//0x01ca		VoC_sw16_d(REG4,0x440f)
0x44101582,	//0x01cc		VoC_sw32_d(REG45,0x4410)
0x44261584,	//0x01ce		VoC_sw32_d(ACC0,0x4426)
		//0x01d0		LABLE_CUTZOOM_INIT_QUITE
0x400E0A8C,	//0x01d0		VoC_lw16i(RL6_LO,0x400e)
0x01000A8D,	//0x01d2		VoC_lw16i(RL6_HI,0x100)
0x00000A8F,	//0x01d4		VoC_lw16i(RL7_HI,0x0)
0x410E0A8E,	//0x01d6		VoC_lw16i(RL7_LO,0x410e)
0xFFC0E580,	//0x01d8		VoC_NAD	|	VoC_return
		//0x01da		Coolsand_YUV2RGB565_Rotate
0xE1445FE9,	//0x01da		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x400B0B24,	//0x01dc		VoC_sub16_dr(REG4,0x400b,REG4)
0x1504FFC0,	//0x01de		VoC_sw16_d(REG4,0x400b)(lo)	|	VoC_NOP
0xFFC0400B,	//0x01e0		VoC_NAD	|	VoC_sw16_d(REG4,0x400b)(hi)
		//0x01e2		LABLE_YUV2RGB_ROTATE_BEGIN
0x06070A85,	//0x01e2		VoC_lw16i(REG5,0x607)
0x44151404,	//0x01e4		VoC_lw16_d(REG4,0x4415)
0x40001484,	//0x01e6		VoC_lw32_d(ACC0,0x4000)
0x7FC215C2,	//0x01e8		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x01ea		VoC_sw32_d(ACC0,0xffc4)
0x441C0924,	//0x01ec		VoC_add32_rd(ACC0,ACC0,0x441c)
0x1584FFC0,	//0x01ee		VoC_sw32_d(ACC0,0x4000)(lo)	|	VoC_NOP
0xDE804000,	//0x01f0		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0x4000)(hi)
0x1794FFC0,	//0x01f2		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14000008,	//0x01f4		VoC_lw16_d(REG0,0x4412)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x70254412,	//0x01f6		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0x4412)(hi)
0x432CE144,	//0x01f8		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x14,IN_PARALLEL)
0xFFC0DFC1,	//0x01fa		VoC_NAD	|	VoC_push16(REG1,IN_PARALLEL)
0x02002E21,	//0x01fc		VoC_loop_r(1,REG4)
0x02F22B80,	//0x01fe		VoC_jal(Coolsand_yuv2rgb565_oneline_whenRotate)
		//0x0200		VoC_endloop1
0xFFC0FFC0,	//0x0200		VoC_NAD	|	VoC_NAD
0x032C2B80,	//0x0202		VoC_jal(Coolsand_yuv2rgb565_oneline_with_rotateDMA)
0xE1445F81,	//0x0204		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x400B6C09,	//0x0206		VoC_bez16_d(LABLE_YUV2RGB_ROTATE_EXITE,0x400b)
0x400B0B24,	//0x0208		VoC_sub16_dr(REG4,0x400b,REG4)
0x1504FFC0,	//0x020a		VoC_sw16_d(REG4,0x400b)(lo)	|	VoC_NOP
0x2B00400B,	//0x020c		VoC_jump_lg(LABLE_YUV2RGB_ROTATE_BEGIN)(lo)	|	VoC_sw16_d(REG4,0x400b)(hi)
0xDFA901E2,	//0x020e		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(LABLE_YUV2RGB_ROTATE_BEGIN)(hi)
		//0x020f		LABLE_YUV2RGB_ROTATE_EXITE
0xE580FFC0,	//0x0210		VoC_return	|	VoC_NOP
		//0x0212		Coolsand_YUV2RGB565_Directly
0xE1445FE9,	//0x0212		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x400B0B25,	//0x0214		VoC_sub16_dr(REG5,0x400b,REG4)
0x1505FFC0,	//0x0216		VoC_sw16_d(REG5,0x4419)(lo)	|	VoC_NOP
0xFFC04419,	//0x0218		VoC_NAD	|	VoC_sw16_d(REG5,0x4419)(hi)
		//0x021a		LABLE_YUV2RGB_PROCESS
0x06070A85,	//0x021a		VoC_lw16i(REG5,0x607)
0x44151404,	//0x021c		VoC_lw16_d(REG4,0x4415)
0x40001484,	//0x021e		VoC_lw32_d(ACC0,0x4000)
0x7FC215C2,	//0x0220		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0222		VoC_sw32_d(ACC0,0xffc4)
0x441C0924,	//0x0224		VoC_add32_rd(ACC0,ACC0,0x441c)
0x1584FFC0,	//0x0226		VoC_sw32_d(ACC0,0x4000)(lo)	|	VoC_NOP
0xDE804000,	//0x0228		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0x4000)(hi)
0x1794FFC0,	//0x022a		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x70460008,	//0x022c		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0xC334E144,	//0x022e		VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x14,IN_PARALLEL)
0x44121400,	//0x0230		VoC_lw16_d(REG0,0x4412)
0x5FC0DFC4,	//0x0232		VoC_push16(REG0,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x2B80F008,	//0x0234		VoC_jal(Coolsand_yuv2rgb565_oneline)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xDF8002C0,	//0x0236		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_yuv2rgb565_oneline)(hi)
0x40060700,	//0x0238		VoC_add16_rd(REG0,REG0,0x4006)
0x2904F024,	//0x023a		VoC_xor16_rd(REG4,0x4426)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x6E074426,	//0x023c		VoC_bnez16_d(LABLE_FLAG_WRITE1_ONELINE_PRE,0x4426)(lo)	|	VoC_xor16_rd(REG4,0x4426)(hi)
0x0A854426,	//0x023e		VoC_lw16i(REG5,0x1287)(lo)	|	VoC_bnez16_d(LABLE_FLAG_WRITE1_ONELINE_PRE,0x4426)(hi)
0x18091287,	//0x0240		VoC_lw16i_set_inc(REG1,0x25fe,0x2)(lo)	|	VoC_lw16i(REG5,0x1287)(hi)
0xE5C525FE,	//0x0242		VoC_jump(LABLE_FLAG_WRITE2_ONELINE_PRE)	|	VoC_lw16i_set_inc(REG1,0x25fe,0x2)(hi)
		//0x0244		LABLE_FLAG_WRITE1_ONELINE_PRE
0x12FF0A85,	//0x0244		VoC_lw16i(REG5,0x12ff)
0x250E1809,	//0x0246		VoC_lw16i_set_inc(REG1,0x250e,0x2)
		//0x0248		LABLE_FLAG_WRITE2_ONELINE_PRE
0x44261504,	//0x0248		VoC_sw16_d(REG4,0x4426)
0x440F1404,	//0x024a		VoC_lw16_d(REG4,0x440f)
0x40021484,	//0x024c		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x024e		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0250		VoC_sw32_d(ACC0,0xffc4)
0x44100924,	//0x0252		VoC_add32_rd(ACC0,ACC0,0x4410)
0x1584FFC0,	//0x0254		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_NOP
0xDF844002,	//0x0256		VoC_pop16(REG4,DEFAULT)	|	VoC_sw32_d(ACC0,0x4002)(hi)
0x02863184,	//0x0258		VoC_bez16_r(LABLE_AFTER_LOOP,REG4)
0x02832E21,	//0x025a		VoC_loop_r(1,REG4)
0xF0085FC0,	//0x025c		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x02C02B80,	//0x025e		VoC_jal(Coolsand_yuv2rgb565_oneline)
0x0700DF80,	//0x0260		VoC_add16_rd(REG0,REG0,0x4006)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xF0244006,	//0x0262		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x4006)(hi)
0x44262904,	//0x0264		VoC_xor16_rd(REG4,0x4426)
0x44266E08,	//0x0266		VoC_bnez16_d(LABLE_FLAG_WRITE1_ONELINE,0x4426)
0x12870A85,	//0x0268		VoC_lw16i(REG5,0x1287)
0x25FE1809,	//0x026a		VoC_lw16i_set_inc(REG1,0x25fe,0x2)
0xFFC0E5C6,	//0x026c		VoC_NAD	|	VoC_jump(LABLE_FLAG_WRITE2_ONELINE)
		//0x026e		LABLE_FLAG_WRITE1_ONELINE
0x12FF0A85,	//0x026e		VoC_lw16i(REG5,0x12ff)
0x250E1809,	//0x0270		VoC_lw16i_set_inc(REG1,0x250e,0x2)
		//0x0272		LABLE_FLAG_WRITE2_ONELINE
0x44261504,	//0x0272		VoC_sw16_d(REG4,0x4426)
0x440F1404,	//0x0274		VoC_lw16_d(REG4,0x440f)
0x40021484,	//0x0276		VoC_lw32_d(ACC0,0x4002)
0xFFC0DE80,	//0x0278		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x027a		VoC_cfg_lg(0x8,)
0x7FC215C2,	//0x027c		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x027e		VoC_sw32_d(ACC0,0xffc4)
0x44100924,	//0x0280		VoC_add32_rd(ACC0,ACC0,0x4410)
0x1584FFC0,	//0x0282		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_NOP
		//0x0283		VoC_endloop1
0xFFC04002,	//0x0284		VoC_NAD	|	VoC_sw32_d(ACC0,0x4002)(hi)
		//0x0286		LABLE_AFTER_LOOP
0xF0085FC0,	//0x0286		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x02C02B80,	//0x0288		VoC_jal(Coolsand_yuv2rgb565_oneline)
0x0700DF80,	//0x028a		VoC_add16_rd(REG0,REG0,0x4006)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xF0244006,	//0x028c		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x4006)(hi)
0x44262904,	//0x028e		VoC_xor16_rd(REG4,0x4426)
0x44266E08,	//0x0290		VoC_bnez16_d(LABLE_FLAG_WRITE1_ONELINE_AFTER,0x4426)
0x12870A85,	//0x0292		VoC_lw16i(REG5,0x1287)
0x25FE1809,	//0x0294		VoC_lw16i_set_inc(REG1,0x25fe,0x2)
0xFFC0E5C6,	//0x0296		VoC_NAD	|	VoC_jump(LABLE_FLAG_WRITE2_ONELINE_AFTER)
		//0x0298		LABLE_FLAG_WRITE1_ONELINE_AFTER
0x12FF0A85,	//0x0298		VoC_lw16i(REG5,0x12ff)
0x250E1809,	//0x029a		VoC_lw16i_set_inc(REG1,0x250e,0x2)
		//0x029c		LABLE_FLAG_WRITE2_ONELINE_AFTER
0x44261504,	//0x029c		VoC_sw16_d(REG4,0x4426)
0x440F1404,	//0x029e		VoC_lw16_d(REG4,0x440f)
0x40021484,	//0x02a0		VoC_lw32_d(ACC0,0x4002)
0xFFC0DE80,	//0x02a2		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x02a4		VoC_cfg_lg(0x8,)
0x7FC215C2,	//0x02a6		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x02a8		VoC_sw32_d(ACC0,0xffc4)
0x44100924,	//0x02aa		VoC_add32_rd(ACC0,ACC0,0x4410)
0x1584FFC0,	//0x02ac		VoC_sw32_d(ACC0,0x4002)(lo)	|	VoC_NOP
0xDE804002,	//0x02ae		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0x4002)(hi)
0x1794FFC0,	//0x02b0		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x6C0A0008,	//0x02b2		VoC_bez16_d(LABLE_YUV2RGB_EXIT,0x4419)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xF2844419,	//0x02b4		VoC_lw16i_short(REG4,0x14,DEFAULT)	|	VoC_bez16_d(LABLE_YUV2RGB_EXIT,0x4419)(hi)
0x44190B24,	//0x02b6		VoC_sub16_dr(REG4,0x4419,REG4)
0x1504FFC0,	//0x02b8		VoC_sw16_d(REG4,0x4419)(lo)	|	VoC_NOP
0x2B004419,	//0x02ba		VoC_jump_lg(LABLE_YUV2RGB_PROCESS)(lo)	|	VoC_sw16_d(REG4,0x4419)(hi)
0xDFA9021A,	//0x02bc		VoC_pop16(RA,DEFAULT)	|	VoC_jump_lg(LABLE_YUV2RGB_PROCESS)(hi)
		//0x02bd		LABLE_YUV2RGB_EXIT
0xE580FFC0,	//0x02be		VoC_return	|	VoC_NOP
		//0x02c0		Coolsand_yuv2rgb565_oneline
0x44241484,	//0x02c0		VoC_lw32_d(ACC0,0x4424)
0x40081402,	//0x02c2		VoC_lw16_d(REG2,0x4008)
0x06680A8A,	//0x02c4		VoC_lw16i(ACC1_LO,0x668)
0xF90A614B,	//0x02c6		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,ACC1_LO,DEFAULT)
0xD9C25983,	//0x02c8		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xF9477946,	//0x02ca		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x02EE2E10,	//0x02cc		VoC_loop_r(0,REG2)
0xC8F164E2,	//0x02ce		VoC_add32_rr(REG23,REG67,RL6,IN_PARALLEL)	|	VoC_and32_rr(REG45,ACC0,DEFAULT)
0xDFC148FB,	//0x02d0		VoC_push16(REG1,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xF741249A,	//0x02d2		VoC_movreg16(REG1,ACC1_LO,IN_PARALLEL)	|	VoC_sub16_pp(REG2,REG2,REG3,DEFAULT)
0x817F013B,	//0x02d4		VoC_add16_rp(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG4,REG7,DEFAULT)
0x81364114,	//0x02d6		VoC_add16_rp(REG6,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x81724155,	//0x02d8		VoC_add16_rp(REG2,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x83CF02CB,	//0x02da		VoC_add16inc_rp(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG1,DEFAULT)
0x834D030C,	//0x02dc		VoC_add16inc_rp(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)
0x838E028A,	//0x02de		VoC_add16inc_rp(REG6,REG6,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG2,REG2,REG1,DEFAULT)
0xD8445833,	//0x02e0		VoC_lw16_p(REG4,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xD866645C,	//0x02e2		VoC_lw16_p(REG6,REG6,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG3,DEFAULT)
0xD8555877,	//0x02e4		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xD8226474,	//0x02e6		VoC_lw16_p(REG2,REG2,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xD983647D,	//0x02e8		VoC_lw32_p(REG67,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
0xDF816455,	//0x02ea		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG2,DEFAULT)
0xF94659C2,	//0x02ec		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x02ee		VoC_endloop0
0xF9475DCA,	//0x02ee		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xFFC0E580,	//0x02f0		VoC_NAD	|	VoC_return
		//0x02f2		Coolsand_yuv2rgb565_oneline_whenRotate
0xF0085F40,	//0x02f2		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x44241484,	//0x02f4		VoC_lw32_d(ACC0,0x4424)
0x40081402,	//0x02f6		VoC_lw16_d(REG2,0x4008)
0x06680A8A,	//0x02f8		VoC_lw16i(ACC1_LO,0x668)
0xF90A614B,	//0x02fa		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,ACC1_LO,DEFAULT)
0xD9C25983,	//0x02fc		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xF9477946,	//0x02fe		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x03242E10,	//0x0300		VoC_loop_r(0,REG2)
0xC8F164E2,	//0x0302		VoC_add32_rr(REG23,REG67,RL6,IN_PARALLEL)	|	VoC_and32_rr(REG45,ACC0,DEFAULT)
0xDFC048FB,	//0x0304		VoC_push16(REG0,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xF740249A,	//0x0306		VoC_movreg16(REG0,ACC1_LO,IN_PARALLEL)	|	VoC_sub16_pp(REG2,REG2,REG3,DEFAULT)
0x817F013B,	//0x0308		VoC_add16_rp(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG4,REG7,DEFAULT)
0x81364114,	//0x030a		VoC_add16_rp(REG6,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x81724155,	//0x030c		VoC_add16_rp(REG2,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x83C702C3,	//0x030e		VoC_add16inc_rp(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0x83450304,	//0x0310		VoC_add16inc_rp(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0x83860282,	//0x0312		VoC_add16inc_rp(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG2,REG2,REG0,DEFAULT)
0xD8445833,	//0x0314		VoC_lw16_p(REG4,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xD866645C,	//0x0316		VoC_lw16_p(REG6,REG6,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG3,DEFAULT)
0xD8555877,	//0x0318		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xDF806474,	//0x031a		VoC_pop16(REG0,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xD822647D,	//0x031c		VoC_lw16_p(REG2,REG2,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
0xD9836455,	//0x031e		VoC_lw32_p(REG67,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG2,DEFAULT)
0xF9467947,	//0x0320		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0x8,DEFAULT)
0xD9C25C94,	//0x0322		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0324		VoC_endloop0
0x5F00DC95,	//0x0324		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0x0700EFF4,	//0x0326		VoC_add16_rd(REG0,REG0,0x4006)(lo)	|	VoC_lw16i_short(REG4,0xffffffff,IN_PARALLEL)
0xC0614006,	//0x0328		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x4006)(hi)
0xFFC0E580,	//0x032a		VoC_NAD	|	VoC_return
		//0x032c		Coolsand_yuv2rgb565_oneline_with_rotateDMA
0x06680A8A,	//0x032c		VoC_lw16i(ACC1_LO,0x668)
0x40081402,	//0x032e		VoC_lw16_d(REG2,0x4008)
0xF90A7024,	//0x0330		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF62342A2,	//0x0332		VoC_movreg16(REG3,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0xF02B780B,	//0x0334		VoC_lw16i_short(INC3,0xa,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0x40021483,	//0x0336		VoC_lw32_d(REG67,0x4002)
0x44241484,	//0x0338		VoC_lw32_d(ACC0,0x4424)
0xDF435FC3,	//0x033a		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x5983DFC2,	//0x033c		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x7946D9C2,	//0x033e		VoC_shru16_ri(REG6,0x8,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)
0x64E2F947,	//0x0340		VoC_and32_rr(REG45,ACC0,DEFAULT)	|	VoC_shru16_ri(REG7,0x8,IN_PARALLEL)
0x48FBC8F1,	//0x0342		VoC_add32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_add32_rr(REG23,REG67,RL6,IN_PARALLEL)
0x249ADFC0,	//0x0344		VoC_sub16_pp(REG2,REG2,REG3,DEFAULT)	|	VoC_push16(REG0,IN_PARALLEL)
0x013BF740,	//0x0346		VoC_add16_rp(REG3,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG0,ACC1_LO,IN_PARALLEL)
0x4114817F,	//0x0348		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG5,REG7,IN_PARALLEL)
0x41558136,	//0x034a		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG4,REG6,IN_PARALLEL)
0x02C38172,	//0x034c		VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)	|	VoC_add16_rp(REG2,REG5,REG6,IN_PARALLEL)
0x030483C7,	//0x034e		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG0,IN_PARALLEL)
0x02828345,	//0x0350		VoC_add16inc_rp(REG2,REG2,REG0,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG0,IN_PARALLEL)
0x58338386,	//0x0352		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG0,IN_PARALLEL)
0x645CD844,	//0x0354		VoC_or16_rr(REG4,REG3,DEFAULT)	|	VoC_lw16_p(REG4,REG4,IN_PARALLEL)
0x5877D866,	//0x0356		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_lw16_p(REG6,REG6,IN_PARALLEL)
0x6474D855,	//0x0358		VoC_or16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16_p(REG5,REG5,IN_PARALLEL)
0x647DDF80,	//0x035a		VoC_or16_rr(REG5,REG7,DEFAULT)	|	VoC_pop16(REG0,IN_PARALLEL)
0x6455D822,	//0x035c		VoC_or16_rr(REG5,REG2,DEFAULT)	|	VoC_lw16_p(REG2,REG2,IN_PARALLEL)
0x7947D983,	//0x035e		VoC_shru16_ri(REG7,0x8,DEFAULT)	|	VoC_lw32_p(REG67,REG0,IN_PARALLEL)
0x5C94F946,	//0x0360		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0xDC95D9C2,	//0x0362		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)
0x440F1402,	//0x0364		VoC_lw16_d(REG2,0x440f)
0xDF475623,	//0x0366		VoC_push32(RL7,IN_PARALLEL)	|	VoC_lw16_sd(REG3,0x1,DEFAULT)
0xDF825917,	//0x0368		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x1,DEFAULT)
0x7FC215C1,	//0x036a		VoC_sw32_d(REG23,0xffc2)
0x7FC415C7,	//0x036c		VoC_sw32_d(RL7,0xffc4)
0x441A093F,	//0x036e		VoC_add32_rd(RL7,RL7,0x441a)
0xDF075E18,	//0x0370		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xDD0F5A13,	//0x0372		VoC_sw32_sd(RL7,0x0,IN_PARALLEL)	|	VoC_sw16_sd(REG3,0x0,DEFAULT)
0x03BD2E10,	//0x0374		VoC_loop_r(0,REG2)
0xC8F164E2,	//0x0376		VoC_add32_rr(REG23,REG67,RL6,IN_PARALLEL)	|	VoC_and32_rr(REG45,ACC0,DEFAULT)
0xDFC048FB,	//0x0378		VoC_push16(REG0,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xF740249A,	//0x037a		VoC_movreg16(REG0,ACC1_LO,IN_PARALLEL)	|	VoC_sub16_pp(REG2,REG2,REG3,DEFAULT)
0x817F013B,	//0x037c		VoC_add16_rp(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG4,REG7,DEFAULT)
0x81364114,	//0x037e		VoC_add16_rp(REG6,REG4,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0x81724155,	//0x0380		VoC_add16_rp(REG2,REG5,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x83C702C3,	//0x0382		VoC_add16inc_rp(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0x83450304,	//0x0384		VoC_add16inc_rp(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0x83860282,	//0x0386		VoC_add16inc_rp(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG2,REG2,REG0,DEFAULT)
0xD8445833,	//0x0388		VoC_lw16_p(REG4,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xD855645C,	//0x038a		VoC_lw16_p(REG5,REG5,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG3,DEFAULT)
0xDF475866,	//0x038c		VoC_push32(RL7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xD6235917,	//0x038e		VoC_lw16_sd(REG3,0x1,IN_PARALLEL)	|	VoC_lw32_sd(RL7,0x1,DEFAULT)
0x440F140B,	//0x0390		VoC_lw16_d(ACC1_HI,0x440f)
0xFFC0DE80,	//0x0392		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0394		VoC_cfg_lg(0x8,)
0x7FC2154B,	//0x0396		VoC_sw16_d(ACC1_HI,0xffc2)
0x7FC31543,	//0x0398		VoC_sw16_d(REG3,0xffc3)
0x7FC415C7,	//0x039a		VoC_sw32_d(RL7,0xffc4)
0x441A093F,	//0x039c		VoC_add32_rd(RL7,RL7,0x441a)
0xDF075E18,	//0x039e		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xD8775D0F,	//0x03a0		VoC_lw16_p(REG7,REG7,IN_PARALLEL)	|	VoC_sw32_sd(RL7,0x0,DEFAULT)
0xDF806474,	//0x03a2		VoC_pop16(REG0,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG6,DEFAULT)
0xD822647D,	//0x03a4		VoC_lw16_p(REG2,REG2,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG7,DEFAULT)
0xD9836455,	//0x03a6		VoC_lw32_p(REG67,REG0,IN_PARALLEL)	|	VoC_or16_rr(REG5,REG2,DEFAULT)
0xF9467947,	//0x03a8		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0x8,DEFAULT)
0xD9C25C94,	//0x03aa		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x1402DC95,	//0x03ac		VoC_lw16_d(REG2,0x440f)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xD90F440F,	//0x03ae		VoC_lw32_sd(RL7,0x0,DEFAULT)	|	VoC_lw16_d(REG2,0x440f)(hi)
0xDE80DF47,	//0x03b0		VoC_cfg(0x0)	|	VoC_push32(RL7,DEFAULT)
0x1794FFC0,	//0x03b2		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x15C10008,	//0x03b4		VoC_sw32_d(REG23,0xffc2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15C77FC2,	//0x03b6		VoC_sw32_d(RL7,0xffc4)(lo)	|	VoC_sw32_d(REG23,0xffc2)(hi)
0x093F7FC4,	//0x03b8		VoC_add32_rd(RL7,RL7,0x441a)(lo)	|	VoC_sw32_d(RL7,0xffc4)(hi)
0x5E18441A,	//0x03ba		VoC_inc_p(REG3,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x441a)(hi)
0x5A13DF07,	//0x03bc		VoC_sw16_sd(REG3,0x0,DEFAULT)	|	VoC_pop32(RL7,IN_PARALLEL)
		//0x03bd		VoC_endloop0
0x1402DD0F,	//0x03be		VoC_lw16_d(REG2,0x440f)(lo)	|	VoC_sw32_sd(RL7,0x0,IN_PARALLEL)
0x5F83440F,	//0x03c0		VoC_pop16(REG3,DEFAULT)	|	VoC_lw16_d(REG2,0x440f)(hi)
0xDE80DF03,	//0x03c2		VoC_cfg(0x0)	|	VoC_pop32(REG67,IN_PARALLEL)
0x1794FFC0,	//0x03c4		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x15C10008,	//0x03c6		VoC_sw32_d(REG23,0xffc2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15C37FC2,	//0x03c8		VoC_sw32_d(REG67,0xffc4)(lo)	|	VoC_sw32_d(REG23,0xffc2)(hi)
0x14827FC4,	//0x03ca		VoC_lw32_d(REG45,0x4002)(lo)	|	VoC_sw32_d(REG67,0xffc4)(hi)
0x09924002,	//0x03cc		VoC_sub32_rd(REG45,REG45,0x4410)(lo)	|	VoC_lw32_d(REG45,0x4002)(hi)
0xFFC04410,	//0x03ce		VoC_NOP	|	VoC_sub32_rd(REG45,REG45,0x4410)(hi)
0x40021582,	//0x03d0		VoC_sw32_d(REG45,0x4002)
0xFFC0DE80,	//0x03d2		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x03d4		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x03d6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x03d7		Coolsand_bilinear_preview_yuv_zoomout
0xE0157F43,	//0x03d8		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x400E0A8C,	//0x03da		VoC_lw16i(RL6_LO,0x400e)
0x01000A8D,	//0x03dc		VoC_lw16i(RL6_HI,0x100)
0xFFC0DFC7,	//0x03de		VoC_NAD	|	VoC_push16(REG7,DEFAULT)
		//0x03e0		LABLE_CUTZOOM_H_2
0x400B1404,	//0x03e0		VoC_lw16_d(REG4,0x400b)
0x1505F90C,	//0x03e2		VoC_sw16_d(REG5,0x440e)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0440E,	//0x03e4		VoC_NAD	|	VoC_sw16_d(REG5,0x440e)(hi)
0x04972E21,	//0x03e6		VoC_loop_r(1,REG4)
0xD6147C7B,	//0x03e8		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xf,DEFAULT)
0xF0055F43,	//0x03ea		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x44181407,	//0x03ec		VoC_lw16_d(REG7,0x4418)
0x48AEC3A6,	//0x03ee		VoC_blt16_rd(LABLE_PREVIEW_L0,REG6,0x4417)(lo)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xFFC04417,	//0x03f0		VoC_NAD	|	VoC_blt16_rd(LABLE_PREVIEW_L0,REG6,0x4417)(hi)
0x003E2B80,	//0x03f2		VoC_jal(COOLSAND_DMA_READ)
0x44171405,	//0x03f4		VoC_lw16_d(REG5,0x4417)
0xC3AE5614,	//0x03f6		VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC12C43EF,	//0x03f8		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0xDA14FFC0,	//0x03fa		VoC_sw16_sd(REG4,0x0,DEFAULT)	|	VoC_NOP
		//0x03fc		LABLE_PREVIEW_L0
0x00B22B80,	//0x03fc		VoC_jal(COOLSAND_DMA_READ_BlendBuf)
0x40060834,	//0x03fe		VoC_mult16_rd(REG4,REG6,0x4006)
0x1506C3BF,	//0x0400		VoC_sw16_d(REG6,0x4418)(lo)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
0x07244418,	//0x0402		VoC_add16_rd(REG4,REG4,0x4412)(lo)	|	VoC_sw16_d(REG6,0x4418)(hi)
0x07254412,	//0x0404		VoC_add16_rd(REG5,REG4,0x4006)(lo)	|	VoC_add16_rd(REG4,REG4,0x4412)(hi)
0x70264006,	//0x0406		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_add16_rd(REG5,REG4,0x4006)(hi)
0x35BEF008,	//0x0408		VoC_bne16_rr(LABLE_PREVIEW_L1,REG7,REG6)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x6E11042A,	//0x040a		VoC_bnez16_d(LABLE_PREVIEW_L3,0x4419)(lo)	|	VoC_bne16_rr(LABLE_PREVIEW_L1,REG7,REG6)(hi)
0x180B4419,	//0x040c		VoC_lw16i_set_inc(REG3,0x66e,0x2)(lo)	|	VoC_bnez16_d(LABLE_PREVIEW_L3,0x4419)(hi)
0x2006066E,	//0x040e		VoC_lw16d_set_inc(REG2,0x4413,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x66e,0x2)(hi)
0x15064413,	//0x0410		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16d_set_inc(REG2,0x4413,0x1)(hi)
0x15814419,	//0x0412		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x6062441A,	//0x0414		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xFFC0F6A0,	//0x0416		VoC_NAD	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0x05882B80,	//0x0418		VoC_jal(Coolsand_zoomline_yuv)
0x043E2B00,	//0x041a		VoC_jump_lg(LABLE_PREVIEW_L2)
		//0x041c		LABLE_PREVIEW_L3
0x200BF006,	//0x041c		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x041e		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x0420		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x15814419,	//0x0422		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x6062441A,	//0x0424		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw32_d(REG23,0x441a)(hi)
0x2B80F6A0,	//0x0426		VoC_jal(Coolsand_zoomline_yuv)(lo)	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0xE5D50588,	//0x0428		VoC_jump(LABLE_PREVIEW_L2)	|	VoC_jal(Coolsand_zoomline_yuv)(hi)
		//0x042a		LABLE_PREVIEW_L1
0x043E3187,	//0x042a		VoC_bez16_r(LABLE_PREVIEW_L2,REG7)
0x200BF006,	//0x042c		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x042e		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x0430		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x60804419,	//0x0432		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x1581DFC5,	//0x0434		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_push16(REG5,IN_PARALLEL)
0x2B80441A,	//0x0436		VoC_jal(Coolsand_zoomline_yuv)(lo)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xDF800588,	//0x0438		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_zoomline_yuv)(hi)
0x44131402,	//0x043a		VoC_lw16_d(REG2,0x4413)
0x05882B80,	//0x043c		VoC_jal(Coolsand_zoomline_yuv)
		//0x043e		LABLE_PREVIEW_L2
0x00522B80,	//0x043e		VoC_jal(COOLSAND_DMA_WRITE)
0x400A1404,	//0x0440		VoC_lw16_d(REG4,0x400a)
0x7FFF180B,	//0x0442		VoC_lw16i_set_inc(REG3,0x7fff,0x2)
0xF90C590B,	//0x0444		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x44222983,	//0x0446		VoC_and32_rd(REG67,0x4422)
0xDFC142F7,	//0x0448		VoC_push16(REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG6,DEFAULT)
0x441A1481,	//0x044a		VoC_lw32_d(REG23,0x441a)
0x400A0710,	//0x044c		VoC_add16_rd(REG0,REG2,0x400a)
0x400A0719,	//0x044e		VoC_add16_rd(REG1,REG3,0x400a)
0x00000A8F,	//0x0450		VoC_lw16i(RL7_HI,0x0)
0x410E0A8E,	//0x0452		VoC_lw16i(RL7_LO,0x410e)
0xF0097052,	//0x0454		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xFFC0DF43,	//0x0456		VoC_NAD	|	VoC_push32(REG67,DEFAULT)
0x048E2E20,	//0x0458		VoC_loop_r(0,REG4)
0x9BC51BC4,	//0x045a		VoC_multf32inc_rp(ACC1,REG7,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)
0xD1315131,	//0x045c		VoC_mac32inc_rp(REG6,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x9BD51BD4,	//0x045e		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xF7656124,	//0x0460		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xD1335173,	//0x0462		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0xC8BB48B2,	//0x0464		VoC_add32_rr(REG67,REG45,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,RL6,DEFAULT)
0xDF416120,	//0x0466		VoC_push32(REG23,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xF7625F40,	//0x0468		VoC_movreg16(REG2,ACC1_HI,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0A81A52C,	//0x046a		VoC_lw16i(REG1,0x668)(lo)	|	VoC_sub16_pp(REG4,REG4,REG5,DEFAULT)
0x40240668,	//0x046c		VoC_add16_rr(REG4,REG0,REG4,DEFAULT)	|	VoC_lw16i(REG1,0x668)(hi)
0x003EC0A5,	//0x046e		VoC_add16_rp(REG6,REG0,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG4,IN_PARALLEL)
0x003280BF,	//0x0470		VoC_add16_rp(REG2,REG0,REG6,DEFAULT)	|	VoC_add16_rp(REG7,REG2,REG7,IN_PARALLEL)
0x038E80B3,	//0x0472		VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16_rp(REG3,REG2,REG6,IN_PARALLEL)
0x030C83CF,	//0x0474		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0x028A834D,	//0x0476		VoC_add16inc_rp(REG2,REG2,REG1,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,IN_PARALLEL)
0x586682CB,	//0x0478		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG1,IN_PARALLEL)
0x6466D844,	//0x047a		VoC_or16_rr(REG6,REG4,DEFAULT)	|	VoC_lw16_p(REG4,REG4,IN_PARALLEL)
0x6456D822,	//0x047c		VoC_or16_rr(REG6,REG2,DEFAULT)	|	VoC_lw16_p(REG2,REG2,IN_PARALLEL)
0x5855D833,	//0x047e		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG3,REG3,IN_PARALLEL)
0x645FD877,	//0x0480		VoC_or16_rr(REG7,REG3,DEFAULT)	|	VoC_lw16_p(REG7,REG7,IN_PARALLEL)
0xE46FD612,	//0x0482		VoC_or16_rr(REG7,REG5,DEFAULT)	|	VoC_lw16_sd(REG2,0x0,IN_PARALLEL)
0x3184D992,	//0x0484		VoC_bez16_r(AverageTwoLine_blend3,REG4)(lo)	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0xE0860488,	//0x0486		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_bez16_r(AverageTwoLine_blend3,REG4)(hi)
		//0x0488		AverageTwoLine_blend3
0x048B3185,	//0x0488		VoC_bez16_r(AverageTwoLine_blend4,REG5)
0xD91BE0A7,	//0x048a		VoC_lw32_sd(REG67,0x2,DEFAULT)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x048b		AverageTwoLine_blend4
0xDF005DD3,	//0x048c		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x048e		VoC_endloop0
0xDF015A12,	//0x048e		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_sw16_sd(REG2,0x0,DEFAULT)
0x5F03DF03,	//0x0490		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x091BDF81,	//0x0492		VoC_add32_rd(REG67,REG67,0x4420)(lo)	|	VoC_pop16(REG1,IN_PARALLEL)
0xDE804420,	//0x0494		VoC_cfg(0x0)	|	VoC_add32_rd(REG67,REG67,0x4420)(hi)
0x1794FFC0,	//0x0496		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
		//0x0497		VoC_endloop1
0x14050008,	//0x0498		VoC_lw16_d(REG5,0x440e)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x07AD440E,	//0x049a		VoC_sub16_rd(REG5,REG5,0x102)(lo)	|	VoC_lw16_d(REG5,0x440e)(hi)
0x32050102,	//0x049c		VoC_bltz16_r(LABLE_CUTZOOM_GOON,REG5)(lo)	|	VoC_sub16_rd(REG5,REG5,0x102)(hi)
0x2B0004A1,	//0x049e		VoC_jump_lg(LABLE_CUTZOOM_H_2)(lo)	|	VoC_bltz16_r(LABLE_CUTZOOM_GOON,REG5)(hi)
0xF02403E0,	//0x04a0		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_jump_lg(LABLE_CUTZOOM_H_2)(hi)
		//0x04a1		LABLE_CUTZOOM_GOON
0x44262904,	//0x04a2		VoC_xor16_rd(REG4,0x4426)
0x44266E06,	//0x04a4		VoC_bnez16_d(LABLE_FLAG_WRITE1_last1,0x4426)
0x12870A85,	//0x04a6		VoC_lw16i(REG5,0x1287)
0xFFC0E5C4,	//0x04a8		VoC_NAD	|	VoC_jump(LABLE_FLAG_WRITE2_last1)
		//0x04aa		LABLE_FLAG_WRITE1_last1
0x12FF0A85,	//0x04aa		VoC_lw16i(REG5,0x12ff)
		//0x04ac		LABLE_FLAG_WRITE2_last1
0x44261504,	//0x04ac		VoC_sw16_d(REG4,0x4426)
0x440F1404,	//0x04ae		VoC_lw16_d(REG4,0x440f)
0x40021484,	//0x04b0		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x04b2		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x04b4		VoC_sw32_d(ACC0,0xffc4)
0xDFA9DF84,	//0x04b6		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xFFC0DE80,	//0x04b8		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x04ba		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x04bc		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x04bd		Coolsand_bilinear_preview_yuv_zoomout_withoutblend
0xE0157F43,	//0x04be		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x400E0A8C,	//0x04c0		VoC_lw16i(RL6_LO,0x400e)
0x01000A8D,	//0x04c2		VoC_lw16i(RL6_HI,0x100)
0xFFC0DFC7,	//0x04c4		VoC_NAD	|	VoC_push16(REG7,DEFAULT)
		//0x04c6		LABLE_CUTZOOM_H_2_withoutblend
0x400B1404,	//0x04c6		VoC_lw16_d(REG4,0x400b)
0x1505F90C,	//0x04c8		VoC_sw16_d(REG5,0x440e)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0440E,	//0x04ca		VoC_NAD	|	VoC_sw16_d(REG5,0x440e)(hi)
0x05742E21,	//0x04cc		VoC_loop_r(1,REG4)
0xD6147C7B,	//0x04ce		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xf,DEFAULT)
0xF0055F43,	//0x04d0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x44181407,	//0x04d2		VoC_lw16_d(REG7,0x4418)
0x48AEC3A6,	//0x04d4		VoC_blt16_rd(LABLE_PREVIEW_L0_withoutblend,REG6,0x4417)(lo)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0xFFC04417,	//0x04d6		VoC_NAD	|	VoC_blt16_rd(LABLE_PREVIEW_L0_withoutblend,REG6,0x4417)(hi)
0x003E2B80,	//0x04d8		VoC_jal(COOLSAND_DMA_READ)
0x44171405,	//0x04da		VoC_lw16_d(REG5,0x4417)
0xC3AE5614,	//0x04dc		VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC12C43EF,	//0x04de		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0xDA14FFC0,	//0x04e0		VoC_sw16_sd(REG4,0x0,DEFAULT)	|	VoC_NOP
		//0x04e2		LABLE_PREVIEW_L0_withoutblend
0x00842B80,	//0x04e2		VoC_jal(COOLSAND_DMA_WRITE_withoutblend)
0x40060834,	//0x04e4		VoC_mult16_rd(REG4,REG6,0x4006)
0x1506C3BF,	//0x04e6		VoC_sw16_d(REG6,0x4418)(lo)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
0x07244418,	//0x04e8		VoC_add16_rd(REG4,REG4,0x4412)(lo)	|	VoC_sw16_d(REG6,0x4418)(hi)
0x07254412,	//0x04ea		VoC_add16_rd(REG5,REG4,0x4006)(lo)	|	VoC_add16_rd(REG4,REG4,0x4412)(hi)
0x70264006,	//0x04ec		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_add16_rd(REG5,REG4,0x4006)(hi)
0x35BEF008,	//0x04ee		VoC_bne16_rr(LABLE_PREVIEW_L1_withoutblend,REG7,REG6)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x6E110510,	//0x04f0		VoC_bnez16_d(LABLE_PREVIEW_L3_withoutblend,0x4419)(lo)	|	VoC_bne16_rr(LABLE_PREVIEW_L1_withoutblend,REG7,REG6)(hi)
0x180B4419,	//0x04f2		VoC_lw16i_set_inc(REG3,0x66e,0x2)(lo)	|	VoC_bnez16_d(LABLE_PREVIEW_L3_withoutblend,0x4419)(hi)
0x2006066E,	//0x04f4		VoC_lw16d_set_inc(REG2,0x4413,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x66e,0x2)(hi)
0x15064413,	//0x04f6		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16d_set_inc(REG2,0x4413,0x1)(hi)
0x15814419,	//0x04f8		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x6062441A,	//0x04fa		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xFFC0F6A0,	//0x04fc		VoC_NAD	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0x05882B80,	//0x04fe		VoC_jal(Coolsand_zoomline_yuv)
0x05242B00,	//0x0500		VoC_jump_lg(LABLE_PREVIEW_L2_withoutblend)
		//0x0502		LABLE_PREVIEW_L3_withoutblend
0x200BF006,	//0x0502		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x0504		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x0506		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x15814419,	//0x0508		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x6062441A,	//0x050a		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_sw32_d(REG23,0x441a)(hi)
0x2B80F6A0,	//0x050c		VoC_jal(Coolsand_zoomline_yuv)(lo)	|	VoC_movreg16(REG0,REG5,IN_PARALLEL)
0xE5D50588,	//0x050e		VoC_jump(LABLE_PREVIEW_L2_withoutblend)	|	VoC_jal(Coolsand_zoomline_yuv)(hi)
		//0x0510		LABLE_PREVIEW_L1_withoutblend
0x05243187,	//0x0510		VoC_bez16_r(LABLE_PREVIEW_L2_withoutblend,REG7)
0x200BF006,	//0x0512		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x0514		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x0516		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x60804419,	//0x0518		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x1581DFC5,	//0x051a		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_push16(REG5,IN_PARALLEL)
0x2B80441A,	//0x051c		VoC_jal(Coolsand_zoomline_yuv)(lo)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xDF800588,	//0x051e		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_zoomline_yuv)(hi)
0x44131402,	//0x0520		VoC_lw16_d(REG2,0x4413)
0x05882B80,	//0x0522		VoC_jal(Coolsand_zoomline_yuv)
		//0x0524		LABLE_PREVIEW_L2_withoutblend
0x400A1404,	//0x0524		VoC_lw16_d(REG4,0x400a)
0x7FFF180B,	//0x0526		VoC_lw16i_set_inc(REG3,0x7fff,0x2)
0xF90C590B,	//0x0528		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x44222983,	//0x052a		VoC_and32_rd(REG67,0x4422)
0xDFC142F7,	//0x052c		VoC_push16(REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG6,DEFAULT)
0x441A1481,	//0x052e		VoC_lw32_d(REG23,0x441a)
0x400A0710,	//0x0530		VoC_add16_rd(REG0,REG2,0x400a)
0x400A0719,	//0x0532		VoC_add16_rd(REG1,REG3,0x400a)
0x00000A8F,	//0x0534		VoC_lw16i(RL7_HI,0x0)
0x410E0A8E,	//0x0536		VoC_lw16i(RL7_LO,0x410e)
0xF0097052,	//0x0538		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xFFC0DF43,	//0x053a		VoC_NAD	|	VoC_push32(REG67,DEFAULT)
0x056B2E20,	//0x053c		VoC_loop_r(0,REG4)
0x9BC51BC4,	//0x053e		VoC_multf32inc_rp(ACC1,REG7,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG0,DEFAULT)
0xD1315131,	//0x0540		VoC_mac32inc_rp(REG6,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x9BD51BD4,	//0x0542		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xF7656124,	//0x0544		VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xD1335173,	//0x0546		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0xC8BB48B2,	//0x0548		VoC_add32_rr(REG67,REG45,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,RL6,DEFAULT)
0xDF416120,	//0x054a		VoC_push32(REG23,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xF7625F40,	//0x054c		VoC_movreg16(REG2,ACC1_HI,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0A81A52C,	//0x054e		VoC_lw16i(REG1,0x668)(lo)	|	VoC_sub16_pp(REG4,REG4,REG5,DEFAULT)
0x40240668,	//0x0550		VoC_add16_rr(REG4,REG0,REG4,DEFAULT)	|	VoC_lw16i(REG1,0x668)(hi)
0x003EC0A5,	//0x0552		VoC_add16_rp(REG6,REG0,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG4,IN_PARALLEL)
0x003280BF,	//0x0554		VoC_add16_rp(REG2,REG0,REG6,DEFAULT)	|	VoC_add16_rp(REG7,REG2,REG7,IN_PARALLEL)
0x038E80B3,	//0x0556		VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16_rp(REG3,REG2,REG6,IN_PARALLEL)
0x030C83CF,	//0x0558		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,IN_PARALLEL)
0x028A834D,	//0x055a		VoC_add16inc_rp(REG2,REG2,REG1,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,IN_PARALLEL)
0x586682CB,	//0x055c		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_add16inc_rp(REG3,REG3,REG1,IN_PARALLEL)
0x6466D844,	//0x055e		VoC_or16_rr(REG6,REG4,DEFAULT)	|	VoC_lw16_p(REG4,REG4,IN_PARALLEL)
0x6456D822,	//0x0560		VoC_or16_rr(REG6,REG2,DEFAULT)	|	VoC_lw16_p(REG2,REG2,IN_PARALLEL)
0x5855D833,	//0x0562		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG3,REG3,IN_PARALLEL)
0x645FD877,	//0x0564		VoC_or16_rr(REG7,REG3,DEFAULT)	|	VoC_lw16_p(REG7,REG7,IN_PARALLEL)
0xE46FD612,	//0x0566		VoC_or16_rr(REG7,REG5,DEFAULT)	|	VoC_lw16_sd(REG2,0x0,IN_PARALLEL)
0x5DD3D91B,	//0x0568		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw32_sd(REG67,0x2,DEFAULT)
0x5A12DF00,	//0x056a		VoC_sw16_sd(REG2,0x0,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
		//0x056b		VoC_endloop0
0xDF03DF01,	//0x056c		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
0xDF815F03,	//0x056e		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0x4420091B,	//0x0570		VoC_add32_rd(REG67,REG67,0x4420)
0xFFC0DE80,	//0x0572		VoC_NOP	|	VoC_cfg(0x0)
		//0x0574		VoC_endloop1
0x00081794,	//0x0574		VoC_cfg_lg(0x8,)
0x440E1405,	//0x0576		VoC_lw16_d(REG5,0x440e)
0x010207AD,	//0x0578		VoC_sub16_rd(REG5,REG5,0x102)
0x057E3205,	//0x057a		VoC_bltz16_r(LABLE_CUTZOOM_GOON_withoutblend,REG5)
0x04C62B00,	//0x057c		VoC_jump_lg(LABLE_CUTZOOM_H_2_withoutblend)
		//0x057e		LABLE_CUTZOOM_GOON_withoutblend
0x00842B80,	//0x057e		VoC_jal(COOLSAND_DMA_WRITE_withoutblend)
0xDFA9DF84,	//0x0580		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xFFC0DE80,	//0x0582		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0584		VoC_cfg_lg(0x8,)
0xFFC0E580,	//0x0586		VoC_NAD	|	VoC_return
		//0x0588		Coolsand_zoomline_yuv
0x7FFF0A83,	//0x0588		VoC_lw16i(REG3,0x7fff)
0xDFC17F43,	//0x058a		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0xDF465FC3,	//0x058c		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x400A1403,	//0x058e		VoC_lw16_d(REG3,0x400a)
0xFF47790B,	//0x0590		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x400A0711,	//0x0592		VoC_add16_rd(REG1,REG2,0x400a)
0xFF425FC3,	//0x0594		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x05B82E18,	//0x0596		VoC_loop_r(0,REG3)
0xF68579FC,	//0x0598		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0xFF066001,	//0x059a		VoC_movreg32(RL6,REG01,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xD6234810,	//0x059c		VoC_lw16_sd(REG3,0x1,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,REG45,DEFAULT)
0x441E093F,	//0x059e		VoC_add32_rd(RL7,RL7,0x441e)
0xC2F759C2,	//0x05a0		VoC_sub16_rr(REG7,REG3,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xF9457944,	//0x05a2		VoC_shru16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
0xCD3D4D7C,	//0x05a4		VoC_multf32_rr(ACC1,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)
0x7944D982,	//0x05a6		VoC_shru16_ri(REG4,0x8,DEFAULT)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0x4E2EF945,	//0x05a8		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_shru16_ri(REG5,0x8,IN_PARALLEL)
0xD894CE26,	//0x05aa		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG6,IN_PARALLEL)
0xFF305815,	//0x05ac		VoC_movreg32(REG01,RL6,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x44242982,	//0x05ae		VoC_and32_rd(REG45,0x4424)
0xCDAC5C9B,	//0x05b0		VoC_multf32_rr(ACC0,REG6,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG1,DEFAULT)
0xDC994E3C,	//0x05b2		VoC_sw16inc_p(ACC0_HI,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
0xFF3A7F3B,	//0x05b4		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x44222983,	//0x05b6		VoC_and32_rd(REG67,0x4422)
		//0x05b8		VoC_endloop0
0xFC7A5CA9,	//0x05b8		VoC_shru32_ri(REG45,0xf,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)
0x5F8CDF83,	//0x05ba		VoC_pop16(RL6_LO,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xFFC0C021,	//0x05bc		VoC_NAD	|	VoC_add16_rr(REG1,REG0,REG4,IN_PARALLEL)
0x05CF2E18,	//0x05be		VoC_loop_r(0,REG3)
0x441E093F,	//0x05c0		VoC_add32_rd(RL7,RL7,0x441e)
0x5815D894,	//0x05c2		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x2982F783,	//0x05c4		VoC_and32_rd(REG45,0x4424)(lo)	|	VoC_movreg16(REG3,RL6_LO,IN_PARALLEL)
0x4D744424,	//0x05c6		VoC_multf32_rr(ACC0,REG5,REG6,DEFAULT)	|	VoC_and32_rd(REG45,0x4424)(hi)
0x4E27C2F7,	//0x05c8		VoC_mac32_rr(REG4,REG7,DEFAULT)	|	VoC_sub16_rr(REG7,REG3,REG6,IN_PARALLEL)
0x7C7AFF3A,	//0x05ca		VoC_shru32_ri(REG45,0xf,DEFAULT)	|	VoC_movreg32(REG45,RL7,IN_PARALLEL)
0x2983FF3B,	//0x05cc		VoC_and32_rd(REG67,0x4422)(lo)	|	VoC_movreg32(REG67,RL7,IN_PARALLEL)
0x5CA94422,	//0x05ce		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_and32_rd(REG67,0x4422)(hi)
		//0x05cf		VoC_endloop0
0x5F81C021,	//0x05d0		VoC_pop16(REG1,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG4,IN_PARALLEL)
0xE580DF06,	//0x05d2		VoC_return	|	VoC_pop32(RL6,IN_PARALLEL)
		//0x05d4		Coolsand_bilinear_preview_yuv_zoomin_withoutblend
0x7F43DFE9,	//0x05d4		VoC_lw32z(REG67,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A8CE015,	//0x05d6		VoC_lw16i(RL6_LO,0x400e)(lo)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x0A8D400E,	//0x05d8		VoC_lw16i(RL6_HI,0x100)(lo)	|	VoC_lw16i(RL6_LO,0x400e)(hi)
0x0A8F0100,	//0x05da		VoC_lw16i(RL7_HI,0x0)(lo)	|	VoC_lw16i(RL6_HI,0x100)(hi)
0x0A8E0000,	//0x05dc		VoC_lw16i(RL7_LO,0x410e)(lo)	|	VoC_lw16i(RL7_HI,0x0)(hi)
0xDFC7410E,	//0x05de		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i(RL7_LO,0x410e)(hi)
		//0x05e0		LABLE_CUTZOOM_zoomin_loop_withoutblend
0x400B1404,	//0x05e0		VoC_lw16_d(REG4,0x400b)
0x1505F90C,	//0x05e2		VoC_sw16_d(REG5,0x440e)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0440E,	//0x05e4		VoC_NAD	|	VoC_sw16_d(REG5,0x440e)(hi)
0x066C2E21,	//0x05e6		VoC_loop_r(1,REG4)
0xD6147C7B,	//0x05e8		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xf,DEFAULT)
0xF0055F43,	//0x05ea		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x1407C3A6,	//0x05ec		VoC_lw16_d(REG7,0x4418)(lo)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x48AE4418,	//0x05ee		VoC_blt16_rd(LABLE_ZOOMIN_L0_withoutblend,REG6,0x4417)(lo)	|	VoC_lw16_d(REG7,0x4418)(hi)
0xFFC04417,	//0x05f0		VoC_NAD	|	VoC_blt16_rd(LABLE_ZOOMIN_L0_withoutblend,REG6,0x4417)(hi)
0x003E2B80,	//0x05f2		VoC_jal(COOLSAND_DMA_READ)
0x44171405,	//0x05f4		VoC_lw16_d(REG5,0x4417)
0xC3AE5614,	//0x05f6		VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC12C43EF,	//0x05f8		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0xDA14FFC0,	//0x05fa		VoC_sw16_sd(REG4,0x0,DEFAULT)	|	VoC_NOP
		//0x05fc		LABLE_ZOOMIN_L0_withoutblend
0x00842B80,	//0x05fc		VoC_jal(COOLSAND_DMA_WRITE_withoutblend)
0x40060834,	//0x05fe		VoC_mult16_rd(REG4,REG6,0x4006)
0x1506C3BF,	//0x0600		VoC_sw16_d(REG6,0x4418)(lo)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
0x07244418,	//0x0602		VoC_add16_rd(REG4,REG4,0x4412)(lo)	|	VoC_sw16_d(REG6,0x4418)(hi)
0x07254412,	//0x0604		VoC_add16_rd(REG5,REG4,0x4006)(lo)	|	VoC_add16_rd(REG4,REG4,0x4412)(hi)
0x70264006,	//0x0606		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_add16_rd(REG5,REG4,0x4006)(hi)
0x35BEF008,	//0x0608		VoC_bne16_rr(LABLE_ZOOMIN_L1_withoutblend,REG7,REG6)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x6E170638,	//0x060a		VoC_bnez16_d(LABLE_ZOOMIN_L3_withoutblend,0x4419)(lo)	|	VoC_bne16_rr(LABLE_ZOOMIN_L1_withoutblend,REG7,REG6)(hi)
0x180B4419,	//0x060c		VoC_lw16i_set_inc(REG3,0x66e,0x2)(lo)	|	VoC_bnez16_d(LABLE_ZOOMIN_L3_withoutblend,0x4419)(hi)
0x2006066E,	//0x060e		VoC_lw16d_set_inc(REG2,0x4413,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x66e,0x2)(hi)
0x15064413,	//0x0610		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16d_set_inc(REG2,0x4413,0x1)(hi)
0x15814419,	//0x0612		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x180A441A,	//0x0614		VoC_lw16i_set_inc(REG2,0x4428,0x2)(lo)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xE0A04428,	//0x0616		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4428,0x2)(hi)
0x07402B80,	//0x0618		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441B2007,	//0x061a		VoC_lw16d_set_inc(REG3,0x441b,0x1)
0xFFC0F030,	//0x061c		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x061e		VoC_jal(Coolsand_zoomin_rgbline)
0x065C2B00,	//0x0620		VoC_jump_lg(LABLE_ZOOMIN_L2_withoutblend)
		//0x0622		LABLE_ZOOMIN_L3_withoutblend
0x200BF006,	//0x0622		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x0624		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x0626		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x15814419,	//0x0628		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x180A441A,	//0x062a		VoC_lw16i_set_inc(REG2,0x4428,0x2)(lo)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xE0A04428,	//0x062c		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4428,0x2)(hi)
0x07402B80,	//0x062e		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441B2007,	//0x0630		VoC_lw16d_set_inc(REG3,0x441b,0x1)
0xFFC0F030,	//0x0632		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x0634		VoC_jal(Coolsand_zoomin_rgbline)
0x065C2B00,	//0x0636		VoC_jump_lg(LABLE_ZOOMIN_L2_withoutblend)
		//0x0638		LABLE_ZOOMIN_L1_withoutblend
0x065C3187,	//0x0638		VoC_bez16_r(LABLE_ZOOMIN_L2_withoutblend,REG7)
0x200BF006,	//0x063a		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x063c		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x063e		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x15814419,	//0x0640		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x6080441A,	//0x0642		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_sw32_d(REG23,0x441a)(hi)
0x180ADFC5,	//0x0644		VoC_lw16i_set_inc(REG2,0x4428,0x2)(lo)	|	VoC_push16(REG5,IN_PARALLEL)
0xFFC04428,	//0x0646		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x4428,0x2)(hi)
0x07402B80,	//0x0648		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441A2007,	//0x064a		VoC_lw16d_set_inc(REG3,0x441a,0x1)
0xFFC0F030,	//0x064c		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x064e		VoC_jal(Coolsand_zoomin_rgbline)
0xF0085F80,	//0x0650		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x4428180A,	//0x0652		VoC_lw16i_set_inc(REG2,0x4428,0x2)
0x07402B80,	//0x0654		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441B2007,	//0x0656		VoC_lw16d_set_inc(REG3,0x441b,0x1)
0xFFC0F030,	//0x0658		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x065a		VoC_jal(Coolsand_zoomin_rgbline)
		//0x065c		LABLE_ZOOMIN_L2_withoutblend
0x7FFF180B,	//0x065c		VoC_lw16i_set_inc(REG3,0x7fff,0x2)
0xF00A590B,	//0x065e		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x44222983,	//0x0660		VoC_and32_rd(REG67,0x4422)
0x1481C2F7,	//0x0662		VoC_lw32_d(REG23,0x441a)(lo)	|	VoC_sub16_rr(REG7,REG3,REG6,DEFAULT)
0x2B80441A,	//0x0664		VoC_jal(Coolsand_AverageTwoLine_withoutblend)(lo)	|	VoC_lw32_d(REG23,0x441a)(hi)
0xDF0307EC,	//0x0666		VoC_pop32(REG67,DEFAULT)	|	VoC_jal(Coolsand_AverageTwoLine_withoutblend)(hi)
0x4420091B,	//0x0668		VoC_add32_rd(REG67,REG67,0x4420)
0xFFC0DE80,	//0x066a		VoC_NOP	|	VoC_cfg(0x0)
		//0x066c		VoC_endloop1
0x00081794,	//0x066c		VoC_cfg_lg(0x8,)
0x440E1405,	//0x066e		VoC_lw16_d(REG5,0x440e)
0x010207AD,	//0x0670		VoC_sub16_rd(REG5,REG5,0x102)
0x06763205,	//0x0672		VoC_bltz16_r(LABLE_ZOOMIN_GOON_withoutblend,REG5)
0x05E02B00,	//0x0674		VoC_jump_lg(LABLE_CUTZOOM_zoomin_loop_withoutblend)
		//0x0676		LABLE_ZOOMIN_GOON_withoutblend
0x00842B80,	//0x0676		VoC_jal(COOLSAND_DMA_WRITE_withoutblend)
0xDFA9DF84,	//0x0678		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xFFC0DE80,	//0x067a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x067c		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x067e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x067f		Coolsand_bilinear_preview_yuv_zoomin
0xE0157F43,	//0x0680		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x400E0A8C,	//0x0682		VoC_lw16i(RL6_LO,0x400e)
0x01000A8D,	//0x0684		VoC_lw16i(RL6_HI,0x100)
0x00000A8F,	//0x0686		VoC_lw16i(RL7_HI,0x0)
0x410E0A8E,	//0x0688		VoC_lw16i(RL7_LO,0x410e)
0xFFC0DFC7,	//0x068a		VoC_NAD	|	VoC_push16(REG7,DEFAULT)
		//0x068c		LABLE_CUTZOOM_zoomin_loop
0x400B1404,	//0x068c		VoC_lw16_d(REG4,0x400b)
0x1505F90C,	//0x068e		VoC_sw16_d(REG5,0x440e)(lo)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0440E,	//0x0690		VoC_NAD	|	VoC_sw16_d(REG5,0x440e)(hi)
0x071A2E21,	//0x0692		VoC_loop_r(1,REG4)
0xD6147C7B,	//0x0694		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0xf,DEFAULT)
0xF0055F43,	//0x0696		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x1407C3A6,	//0x0698		VoC_lw16_d(REG7,0x4418)(lo)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x48AE4418,	//0x069a		VoC_blt16_rd(LABLE_ZOOMIN_L0,REG6,0x4417)(lo)	|	VoC_lw16_d(REG7,0x4418)(hi)
0xFFC04417,	//0x069c		VoC_NAD	|	VoC_blt16_rd(LABLE_ZOOMIN_L0,REG6,0x4417)(hi)
0x003E2B80,	//0x069e		VoC_jal(COOLSAND_DMA_READ)
0x44171405,	//0x06a0		VoC_lw16_d(REG5,0x4417)
0xC3AE5614,	//0x06a2		VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC12C43EF,	//0x06a4		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG5,DEFAULT)
0xDA14FFC0,	//0x06a6		VoC_sw16_sd(REG4,0x0,DEFAULT)	|	VoC_NOP
		//0x06a8		LABLE_ZOOMIN_L0
0x00B22B80,	//0x06a8		VoC_jal(COOLSAND_DMA_READ_BlendBuf)
0x40060834,	//0x06aa		VoC_mult16_rd(REG4,REG6,0x4006)
0x1506C3BF,	//0x06ac		VoC_sw16_d(REG6,0x4418)(lo)	|	VoC_sub16_rr(REG7,REG6,REG7,DEFAULT)
0x07244418,	//0x06ae		VoC_add16_rd(REG4,REG4,0x4412)(lo)	|	VoC_sw16_d(REG6,0x4418)(hi)
0x07254412,	//0x06b0		VoC_add16_rd(REG5,REG4,0x4006)(lo)	|	VoC_add16_rd(REG4,REG4,0x4412)(hi)
0x70264006,	//0x06b2		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_add16_rd(REG5,REG4,0x4006)(hi)
0x35BEF008,	//0x06b4		VoC_bne16_rr(LABLE_ZOOMIN_L1,REG7,REG6)(lo)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x6E1706E4,	//0x06b6		VoC_bnez16_d(LABLE_ZOOMIN_L3,0x4419)(lo)	|	VoC_bne16_rr(LABLE_ZOOMIN_L1,REG7,REG6)(hi)
0x180B4419,	//0x06b8		VoC_lw16i_set_inc(REG3,0x66e,0x2)(lo)	|	VoC_bnez16_d(LABLE_ZOOMIN_L3,0x4419)(hi)
0x2006066E,	//0x06ba		VoC_lw16d_set_inc(REG2,0x4413,0x1)(lo)	|	VoC_lw16i_set_inc(REG3,0x66e,0x2)(hi)
0x15064413,	//0x06bc		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16d_set_inc(REG2,0x4413,0x1)(hi)
0x15814419,	//0x06be		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x180A441A,	//0x06c0		VoC_lw16i_set_inc(REG2,0x4428,0x2)(lo)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xE0A04428,	//0x06c2		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4428,0x2)(hi)
0x07402B80,	//0x06c4		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441B2007,	//0x06c6		VoC_lw16d_set_inc(REG3,0x441b,0x1)
0xFFC0F030,	//0x06c8		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x06ca		VoC_jal(Coolsand_zoomin_rgbline)
0x07082B00,	//0x06cc		VoC_jump_lg(LABLE_ZOOMIN_L2)
		//0x06ce		LABLE_ZOOMIN_L3
0x200BF006,	//0x06ce		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x06d0		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x06d2		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x15814419,	//0x06d4		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x180A441A,	//0x06d6		VoC_lw16i_set_inc(REG2,0x4428,0x2)(lo)	|	VoC_sw32_d(REG23,0x441a)(hi)
0xE0A04428,	//0x06d8		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4428,0x2)(hi)
0x07402B80,	//0x06da		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441B2007,	//0x06dc		VoC_lw16d_set_inc(REG3,0x441b,0x1)
0xFFC0F030,	//0x06de		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x06e0		VoC_jal(Coolsand_zoomin_rgbline)
0x07082B00,	//0x06e2		VoC_jump_lg(LABLE_ZOOMIN_L2)
		//0x06e4		LABLE_ZOOMIN_L1
0x07083187,	//0x06e4		VoC_bez16_r(LABLE_ZOOMIN_L2,REG7)
0x200BF006,	//0x06e6		VoC_lw16d_set_inc(REG3,0x4413,0x2)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x18064413,	//0x06e8		VoC_lw16i_set_inc(REG2,0x66e,0x1)(lo)	|	VoC_lw16d_set_inc(REG3,0x4413,0x2)(hi)
0x1506066E,	//0x06ea		VoC_sw16_d(REG6,0x4419)(lo)	|	VoC_lw16i_set_inc(REG2,0x66e,0x1)(hi)
0x15814419,	//0x06ec		VoC_sw32_d(REG23,0x441a)(lo)	|	VoC_sw16_d(REG6,0x4419)(hi)
0x6080441A,	//0x06ee		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_sw32_d(REG23,0x441a)(hi)
0x180ADFC5,	//0x06f0		VoC_lw16i_set_inc(REG2,0x4428,0x2)(lo)	|	VoC_push16(REG5,IN_PARALLEL)
0xFFC04428,	//0x06f2		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x4428,0x2)(hi)
0x07402B80,	//0x06f4		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441A2007,	//0x06f6		VoC_lw16d_set_inc(REG3,0x441a,0x1)
0xFFC0F030,	//0x06f8		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x06fa		VoC_jal(Coolsand_zoomin_rgbline)
0xF0085F80,	//0x06fc		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x4428180A,	//0x06fe		VoC_lw16i_set_inc(REG2,0x4428,0x2)
0x07402B80,	//0x0700		VoC_jal(Coolsand_yuv2rgb_oneline)
0x441B2007,	//0x0702		VoC_lw16d_set_inc(REG3,0x441b,0x1)
0xFFC0F030,	//0x0704		VoC_NAD	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07762B80,	//0x0706		VoC_jal(Coolsand_zoomin_rgbline)
		//0x0708		LABLE_ZOOMIN_L2
0x00522B80,	//0x0708		VoC_jal(COOLSAND_DMA_WRITE)
0x7FFF180B,	//0x070a		VoC_lw16i_set_inc(REG3,0x7fff,0x2)
0xF00A590B,	//0x070c		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x44222983,	//0x070e		VoC_and32_rd(REG67,0x4422)
0x1481C2F7,	//0x0710		VoC_lw32_d(REG23,0x441a)(lo)	|	VoC_sub16_rr(REG7,REG3,REG6,DEFAULT)
0x2B80441A,	//0x0712		VoC_jal(Coolsand_AverageTwoLine)(lo)	|	VoC_lw32_d(REG23,0x441a)(hi)
0xDF0307B8,	//0x0714		VoC_pop32(REG67,DEFAULT)	|	VoC_jal(Coolsand_AverageTwoLine)(hi)
0x4420091B,	//0x0716		VoC_add32_rd(REG67,REG67,0x4420)
0xFFC0DE80,	//0x0718		VoC_NOP	|	VoC_cfg(0x0)
		//0x071a		VoC_endloop1
0x00081794,	//0x071a		VoC_cfg_lg(0x8,)
0x440E1405,	//0x071c		VoC_lw16_d(REG5,0x440e)
0x010207AD,	//0x071e		VoC_sub16_rd(REG5,REG5,0x102)
0x07243205,	//0x0720		VoC_bltz16_r(LABLE_ZOOMIN_GOON,REG5)
0x068C2B00,	//0x0722		VoC_jump_lg(LABLE_CUTZOOM_zoomin_loop)
		//0x0724		LABLE_ZOOMIN_GOON
0x2904F024,	//0x0724		VoC_xor16_rd(REG4,0x4426)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x6E054426,	//0x0726		VoC_bnez16_d(LABLE_FLAG_WRITE1_last,0x4426)(lo)	|	VoC_xor16_rd(REG4,0x4426)(hi)
0x0A854426,	//0x0728		VoC_lw16i(REG5,0x1287)(lo)	|	VoC_bnez16_d(LABLE_FLAG_WRITE1_last,0x4426)(hi)
0xE5C31287,	//0x072a		VoC_jump(LABLE_FLAG_WRITE2_last)	|	VoC_lw16i(REG5,0x1287)(hi)
		//0x072c		LABLE_FLAG_WRITE1_last
0x12FF0A85,	//0x072c		VoC_lw16i(REG5,0x12ff)
		//0x072e		LABLE_FLAG_WRITE2_last
0x44261504,	//0x072e		VoC_sw16_d(REG4,0x4426)
0x440F1404,	//0x0730		VoC_lw16_d(REG4,0x440f)
0x40021484,	//0x0732		VoC_lw32_d(ACC0,0x4002)
0x7FC215C2,	//0x0734		VoC_sw32_d(REG45,0xffc2)
0x7FC415C4,	//0x0736		VoC_sw32_d(ACC0,0xffc4)
0xDFA9DF84,	//0x0738		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0xFFC0DE80,	//0x073a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x073c		VoC_cfg_lg(0x8,)
0xFFC0E580,	//0x073e		VoC_NAD	|	VoC_return
		//0x0740		Coolsand_yuv2rgb_oneline
0x00800A83,	//0x0740		VoC_lw16i(REG3,0x80)
0x44241484,	//0x0742		VoC_lw32_d(ACC0,0x4424)
0x40081404,	//0x0744		VoC_lw16_d(REG4,0x4008)
0x790CDFC3,	//0x0746		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xFFC0DFC2,	//0x0748		VoC_NAD	|	VoC_push16(REG2,IN_PARALLEL)
0x07712E20,	//0x074a		VoC_loop_r(0,REG4)
0xD9C35982,	//0x074c		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xF9477946,	//0x074e		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0xFF0548F0,	//0x0750		VoC_movreg32(ACC1,REG01,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG67,RL6,DEFAULT)
0xC8FB64E2,	//0x0752		VoC_add32_rr(REG67,REG67,RL7,IN_PARALLEL)	|	VoC_and32_rr(REG45,ACC0,DEFAULT)
0x0138A40B,	//0x0754		VoC_add16_rp(REG0,REG4,REG7,DEFAULT)	|	VoC_sub16_pp(REG3,REG0,REG1,DEFAULT)
0x0136C119,	//0x0756		VoC_add16_rp(REG6,REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG4,REG3,IN_PARALLEL)
0x0175817F,	//0x0758		VoC_add16_rp(REG5,REG5,REG6,DEFAULT)	|	VoC_add16_rp(REG7,REG5,REG7,IN_PARALLEL)
0x78C0C15C,	//0x075a		VoC_shr16_ri(REG0,0xfffffff8,DEFAULT)	|	VoC_add16_rr(REG4,REG5,REG3,IN_PARALLEL)
0x7840F8C1,	//0x075c		VoC_shr16_ri(REG0,0x8,DEFAULT)	|	VoC_shr16_ri(REG1,0xfffffff8,IN_PARALLEL)
0x78C6F841,	//0x075e		VoC_shr16_ri(REG6,0xfffffff8,DEFAULT)	|	VoC_shr16_ri(REG1,0x8,IN_PARALLEL)
0x7846F8C7,	//0x0760		VoC_shr16_ri(REG6,0x8,DEFAULT)	|	VoC_shr16_ri(REG7,0xfffffff8,IN_PARALLEL)
0x78C4F847,	//0x0762		VoC_shr16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_shr16_ri(REG7,0x8,IN_PARALLEL)
0x4018D623,	//0x0764		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16_sd(REG3,0x1,IN_PARALLEL)
0x419EC059,	//0x0766		VoC_add16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0x7844C1DF,	//0x0768		VoC_shr16_ri(REG4,0x8,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)
0x7845F8C5,	//0x076a		VoC_shr16_ri(REG5,0x8,DEFAULT)	|	VoC_shr16_ri(REG5,0xfffffff8,IN_PARALLEL)
0x411CDDD0,	//0x076c		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_sw32inc_p(REG01,REG2,IN_PARALLEL)
0x5DD3C15D,	//0x076e		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0xDDD2FF28,	//0x0770		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_movreg32(REG01,ACC1,IN_PARALLEL)
		//0x0771		VoC_endloop0
0xF0065F82,	//0x0772		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xE580DF83,	//0x0774		VoC_return	|	VoC_pop16(REG3,DEFAULT)
		//0x0776		Coolsand_zoomin_rgbline
0x400A1404,	//0x0776		VoC_lw16_d(REG4,0x400a)
0xF90C5F47,	//0x0778		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0xDF467F47,	//0x077a		VoC_push32(RL6,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xFF435FC1,	//0x077c		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x7FFF0A81,	//0x077e		VoC_lw16i(REG1,0x7fff)
0xDFC27065,	//0x0780		VoC_push16(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
0x441E1486,	//0x0782		VoC_lw32_d(RL6,0x441e)
0x44221485,	//0x0784		VoC_lw32_d(ACC1,0x4422)
0x07B12E20,	//0x0786		VoC_loop_r(0,REG4)
0xC27740A8,	//0x0788		VoC_sub16_rr(REG7,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG2,REG5,DEFAULT)
0xC9F71BD4,	//0x078a		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xFF3A5130,	//0x078c		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0xF00B1BD4,	//0x078e		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xFC7A5130,	//0x0790		VoC_shru32_ri(REG45,0xf,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0x99D45CB9,	//0x0792		VoC_multf32_rp(ACC0,REG7,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
0xE0355030,	//0x0794		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG0,DEFAULT)
0xC52C5CB9,	//0x0796		VoC_mult16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
0xFF3B5612,	//0x0798		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xC0A264EB,	//0x079a		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_and32_rr(REG67,ACC1,DEFAULT)
0xDC3942EB,	//0x079c		VoC_sw16_p(ACC0_HI,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG5,DEFAULT)
0xC27740A8,	//0x079e		VoC_sub16_rr(REG7,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG2,REG5,DEFAULT)
0xC9F71BD4,	//0x07a0		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xFF3A5130,	//0x07a2		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0xFC7A1BD4,	//0x07a4		VoC_shru32_ri(REG45,0xf,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xE0355130,	//0x07a6		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0xDCB919D4,	//0x07a8		VoC_sw16inc_p(ACC0_HI,REG3,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG7,REG2,DEFAULT)
0xFF3B5030,	//0x07aa		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_mac32_rp(REG6,REG0,DEFAULT)
0xC52C5CB9,	//0x07ac		VoC_mult16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)
0xD6127033,	//0x07ae		VoC_lw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x5CB9E4EB,	//0x07b0		VoC_sw16inc_p(ACC0_HI,REG3,DEFAULT)	|	VoC_and32_rr(REG67,ACC1,DEFAULT)
		//0x07b1		VoC_endloop0
0x5F82C0A2,	//0x07b2		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x5F81DF06,	//0x07b4		VoC_pop16(REG1,DEFAULT)	|	VoC_pop32(RL6,IN_PARALLEL)
0xE580DF07,	//0x07b6		VoC_return	|	VoC_pop32(RL7,IN_PARALLEL)
		//0x07b8		Coolsand_AverageTwoLine
0x400A1404,	//0x07b8		VoC_lw16_d(REG4,0x400a)
0xF40A7059,	//0x07ba		VoC_lw16i_short(FORMATX,0x1,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x2,DEFAULT)
0xF009790C,	//0x07bc		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x9BD51BD4,	//0x07be		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xD1335133,	//0x07c0		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0x7FFF0A80,	//0x07c2		VoC_lw16i(REG0,0x7fff)
0x07E62E20,	//0x07c4		VoC_loop_r(0,REG4)
0xE00A7008,	//0x07c6		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)
0xFDD57DD4,	//0x07c8		VoC_shru32_ri(ACC1,0xfffffffa,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0xfffffffa,DEFAULT)
0xD17A517A,	//0x07ca		VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)	|	VoC_macXinc_rp(REG7,REG2,DEFAULT)
0xD1735173,	//0x07cc		VoC_macXinc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0x7008DF43,	//0x07ce		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7DDCE00A,	//0x07d0		VoC_shru32_ri(ACC0,0xfffffffb,DEFAULT)	|	VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)
0x513AFDDD,	//0x07d2		VoC_mac32inc_rp(REG7,REG2,DEFAULT)	|	VoC_shru32_ri(ACC1,0xfffffffb,IN_PARALLEL)
0x5133D13A,	//0x07d4		VoC_mac32inc_rp(REG6,REG3,DEFAULT)	|	VoC_mac32inc_rp(REG7,REG2,IN_PARALLEL)
0x1BD4D133,	//0x07d6		VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)
0x61249BD5,	//0x07d8		VoC_movreg16(REG4,ACC0_HI,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)
0x5133F765,	//0x07da		VoC_mac32inc_rp(REG6,REG3,DEFAULT)	|	VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)
0xD98BD133,	//0x07dc		VoC_lw32_p(REG67,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)
0x07E23186,	//0x07de		VoC_bez16_r(AverageTwoLine_blend1,REG6)
0xFFC0E0C4,	//0x07e0		VoC_NAD	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x07e2		AverageTwoLine_blend1
0x07E63187,	//0x07e2		VoC_bez16_r(AverageTwoLine_blend2,REG7)
0xFFC0E0E5,	//0x07e4		VoC_NOP	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x07e6		AverageTwoLine_blend2
		//0x07e6		VoC_endloop0
0xDDCA5F03,	//0x07e6		VoC_sw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xF5F977FA,	//0x07e8		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)
0xFFC0E580,	//0x07ea		VoC_NAD	|	VoC_return
		//0x07ec		Coolsand_AverageTwoLine_withoutblend
0x400A1404,	//0x07ec		VoC_lw16_d(REG4,0x400a)
0xF40A7059,	//0x07ee		VoC_lw16i_short(FORMATX,0x1,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x2,DEFAULT)
0xF009790C,	//0x07f0		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x9BD51BD4,	//0x07f2		VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)
0xD1335133,	//0x07f4		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG3,DEFAULT)
0x7FFF0A80,	//0x07f6		VoC_lw16i(REG0,0x7fff)
0x08122E20,	//0x07f8		VoC_loop_r(0,REG4)
0xE00A7008,	//0x07fa		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)
0xFDD57DD4,	//0x07fc		VoC_shru32_ri(ACC1,0xfffffffa,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0xfffffffa,DEFAULT)
0xD17A517A,	//0x07fe		VoC_macXinc_rp(REG7,REG2,IN_PARALLEL)	|	VoC_macXinc_rp(REG7,REG2,DEFAULT)
0xD1735173,	//0x0800		VoC_macXinc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_macXinc_rp(REG6,REG3,DEFAULT)
0x7008DF43,	//0x0802		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7DDCE00A,	//0x0804		VoC_shru32_ri(ACC0,0xfffffffb,DEFAULT)	|	VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)
0x513AFDDD,	//0x0806		VoC_mac32inc_rp(REG7,REG2,DEFAULT)	|	VoC_shru32_ri(ACC1,0xfffffffb,IN_PARALLEL)
0x5133D13A,	//0x0808		VoC_mac32inc_rp(REG6,REG3,DEFAULT)	|	VoC_mac32inc_rp(REG7,REG2,IN_PARALLEL)
0x1BD4D133,	//0x080a		VoC_multf32inc_rp(ACC0,REG7,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)
0x61249BD5,	//0x080c		VoC_movreg16(REG4,ACC0_HI,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG7,REG2,IN_PARALLEL)
0x5133F765,	//0x080e		VoC_mac32inc_rp(REG6,REG3,DEFAULT)	|	VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)
0xD98BD133,	//0x0810		VoC_lw32_p(REG67,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)
		//0x0812		VoC_endloop0
0xDDCA5F03,	//0x0812		VoC_sw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xF5F977FA,	//0x0814		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)
0xFFC0E580,	//0x0816		VoC_NAD	|	VoC_return
