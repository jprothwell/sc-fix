#!/bin/bash

# ---------------------------------------
# Starting info
if [ "x`echo $0 | grep ^/`" = "x" ]; then
    PROGRAM_NAME="`pwd`/$0"
else
    PROGRAM_NAME="$0"
fi

echo "Running $PROGRAM_NAME"
echo


# ---------------------------------------
# Working thread

TARGET_LIST=`find "${SOFT_WORKDIR}/target" -maxdepth 1 -type d -name 'gallite_*' | sed 's/.*\/gallite_\(.*\)$/\1/'`
if [ "x$?" != "x0" ] || [ "x$TARGET_LIST" = "x" ]; then
    echo "Failed to list targets in: ${SOFT_WORKDIR}/target"
    exit 1
fi

CMD_ARGS=
for arg in $@; do
    # release abbreviation
    if [ "x$arg" = "xdebug" ] || [ "x$arg" = "xrelease" ] || [ "x$arg" = "xcool_profile" ]; then
        CMD_ARGS="$CMD_ARGS CT_RELEASE=$arg"
        continue;
    fi

    # user abbreviation
    if [ "x$arg" = "xADMIN" ] || [ "x$arg" = "xFAE" ] || \
       [ "x$arg" = "xCHIP" ] || [ "x$arg" = "xMMI" ]; then
        CMD_ARGS="$CMD_ARGS CT_USER=$arg"
        continue;
    fi

    # target abbreviation
    TARGET=
    if [ "x$arg" = "xg800" ]; then
        TARGET="gallite_g800_6432"
    else
        for tgt in $TARGET_LIST; do
            if [ "x$arg" = "x$tgt" ]; then
                TARGET="gallite_$arg"
                break
            fi
        done
    fi

    if [ "x$TARGET" != "x" ]; then
        CMD_ARGS="$CMD_ARGS CT_TARGET=$TARGET"
    else
        CMD_ARGS="$CMD_ARGS $arg"
    fi
done

if [[ "x$CMD_ARGS" != *AUTO_XCP2H=* ]]; then
    CMD_ARGS="AUTO_XCP2H=no $CMD_ARGS"
fi

if [[ "x$CMD_ARGS" != *AUTO_XMD2H=* ]]; then
    CMD_ARGS="AUTO_XMD2H=no $CMD_ARGS"
fi

if [[ "x$CMD_ARGS" != *WITH_FLASH=* ]]; then
    CMD_ARGS="WITH_FLASH=1 $CMD_ARGS"
fi

if [[ "x$CMD_ARGS" != *CT_TARGET=* ]]; then
    CMD_ARGS="CT_TARGET=gallite_g33 $CMD_ARGS"
fi

if [[ "x$CMD_ARGS" != *CT_RELEASE=* ]]; then
    CMD_ARGS="CT_RELEASE=debug $CMD_ARGS"
fi

if [[ "x$CMD_ARGS" != *CT_USER=* ]]; then
    CMD_ARGS="CT_USER=ADMIN $CMD_ARGS"
fi

set -x

ctmake $CMD_ARGS

# ---------------------------------------
# Ending info
#STATUS=$?
#set +x

#echo
#echo "Exiting $PROGRAM_NAME (Status=$STATUS)"

#exit $STATUS
