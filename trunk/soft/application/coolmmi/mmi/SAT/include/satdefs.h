/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of COOLSAND Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("COOLSAND SOFTWARE")
*  RECEIVED FROM COOLSAND AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. COOLSAND EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES COOLSAND PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE COOLSAND SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. COOLSAND SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY COOLSAND SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND COOLSAND'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE COOLSAND SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT COOLSAND'S OPTION, TO REVISE OR REPLACE THE COOLSAND SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  COOLSAND FOR SUCH COOLSAND SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*******************************************************************************
 * Filename:
 * ---------
 *	SATDefs.h
 *
 * Project:
 * --------
 
 *
 * Description:
 * ------------
 *   SIM application toolkit related functions
 *
 * Author:
 * -------
 * -------
 *
*==============================================================================
 * 				HISTORY
 
 *------------------------------------------------------------------------------
 *
 *
 *
 *------------------------------------------------------------------------------
 
 *============================================================================== 
 *******************************************************************************/
 
 /**************************************************************

	FILENAME	: SATDefs.h

  	PURPOSE		: SAT application 

 

 

	DATE		: Mar 24,03

**************************************************************/

#ifndef _COOLSAND_SATDEFS_H
#define _COOLSAND_SATDEFS_H
 

#ifdef MMI_ON_HARDWARE_P
	#include "custom_util.h"
	#define ALLOCATE_ITM(src_mod) allocate_ilm(src_mod)
//micha1229
#ifdef __MMI_MULTI_SIM__
#define SEND_MSG(Message)           \
{                                   \
    Message->oslDestId =            \
        (gSATContext.CMDfromSIM == SAT_CMD_SIM2 || gSATContext.satIndex == SAT_CMD_SIM2) ?  \
        MOD_L4C_2 :                 \
        MOD_L4C;                    \
    Message->sap_id = INVALID_SAP;  \
    msg_send_ext_queue(Message);    \
}

#define SEND_MSG_DISPTEXT(Message)  \
{                                   \
    Message->oslDestId =            \
        (gSATDisplayText.CMDfromSIM == SAT_CMD_SIM2) ? MOD_L4C_2 : MOD_L4C; \
    gSATDisplayText.CMDfromSIM = SAT_CMD_NONE;  \
    Message->sap_id = INVALID_SAP;  \
    msg_send_ext_queue(Message);    \
}        

#define SEND_MSG_SUBMENU(Message)   \
{                                   \
    Message->oslDestId =            \
        (gSATSubMenu.CMDfromSIM == SAT_CMD_SIM2) ? MOD_L4C_2 : MOD_L4C;     \
    gSATSubMenu.CMDfromSIM = SAT_CMD_NONE;      \
    Message->sap_id = INVALID_SAP;  \
    msg_send_ext_queue(Message);    \
}                                   \

#else
	#define SEND_MSG(Message)\
	{\
		Message->oslDestId = MOD_L4C; \
		Message->sap_id=INVALID_SAP;\
		mmi_sat_dualsim_sendmsg(Message);\
	}
#endif
#else
	#define ALLOCATE_ITM(src_mod) OslMalloc(sizeof(MYQUEUE))
#ifdef __MMI_MULTI_SIM__
#define SEND_MSG(Message)           \
{                                   \
    Message->oslDestId =            \
        (gSATContext.CMDfromSIM == SAT_CMD_SIM2 || gSATContext.satIndex == SAT_CMD_SIM2) ?  \
        MOD_L4C_2 :                 \
        MOD_L4C;                    \
    Message->sap_id = INVALID_SAP;  \
    msg_send_ext_queue(Message);    \
}

#define SEND_MSG_DISPTEXT(Message)  \
{                                   \
    Message->oslDestId =            \
        (gSATDisplayText.CMDfromSIM == SAT_CMD_SIM2) ? MOD_L4C_2 : MOD_L4C; \
    gSATDisplayText.CMDfromSIM = SAT_CMD_NONE;  \
    Message->sap_id = INVALID_SAP;  \
    msg_send_ext_queue(Message);    \
}        

#define SEND_MSG_SUBMENU(Message)   \
{                                   \
    Message->oslDestId =            \
        (gSATSubMenu.CMDfromSIM == SAT_CMD_SIM2) ? MOD_L4C_2 : MOD_L4C;     \
    gSATSubMenu.CMDfromSIM = SAT_CMD_NONE;      \
    Message->sap_id = INVALID_SAP;  \
    msg_send_ext_queue(Message);    \
}                                   \

#else	
	#define SEND_MSG(Message)\
	{\
		OslMsgSendExtQueue(Message);\
		OslMfree(Message);\
	}
#endif
#endif                   

//micha0714
#define SAT_MESSAGE_WAIT_TIMER_DURATION	15000  
#define SAT_NO_RESPONSE_TIMER_DURATION	180000
#define SAT_DISPLAY_TEXT_DELAY_DURATION	5000  
#define SAT_HELP_TIMER_DURATION		90000
#define MAX_ICON_SUPPORT		5
#define SAT_BASIC_IMAGE			0x11
#define SAT_COLORR_IMAGE		0x21
#define SAT_LANG_CHINESE		"zh"
#define SAT_LANG_ENGLISH 		"en"
#define INPUT_TYPE_YES_NO		200


#ifdef MMI_ON_HARDWARE_P
	#include "sim_common_enums.h"
	#define	SAT_FILE_IMG_IDX	FILE_IMG_IDX
#else
	#define	SAT_FILE_IMG_IDX	20
#endif


typedef enum
{
	SAT_ICON_SELF_EX=0x00,
	SAT_ICON_NOT_SELF_EX
}SAT_ICON_SELFEX_ATTR;


typedef enum
{
	SCR_ID_SAT_MAINMENU=SAT_BASE+1,
	SCR_ID_SAT_SUBMENU=SAT_BASE+1,
	SCR_ID_SAT_DISPLAYTEXT=SAT_BASE+1,
	SCR_ID_SAT_GETINPUT=SAT_BASE+1,
	SCR_ID_SAT_GETINKEY=SAT_BASE+1,
	SCR_ID_SAT_CMCALLBACK=SAT_BASE+1,
	SCR_ID_SAT_SENDSMS=SAT_BASE+1,
	SCR_ID_SAT_SENDSS=SAT_BASE+1,
	SCR_ID_SAT_SENDUSSD=SAT_BASE+1,
	SCR_ID_SAT_PLAYTONE=SAT_BASE+1,
	SCR_ID_SAT_WAITSCREEN=SAT_BASE+1,
	SCR_ID_SAT_SEND_SMS_CONF=SAT_BASE+1,
	SCR_ID_SAT_LAUNCH_BROWSER_CONF=SAT_BASE+1,
	SCR_ID_SAT_SEND_DTMF_CONF=SAT_BASE+1,
	SCR_ID_SAT_SENDDTMF=SAT_BASE+1,
	SCR_ID_SAT_SEND_AT_CMD=SAT_BASE+1,
	SCR_ID_SAT_HISTORY=SAT_BASE+1,
#ifdef __SATCE__
	SAT_OPEN_CHANNEL_CONF_SCREENID =SAT_BASE+1,
	SAT_OPEN_CHANNEL_SCREENID=SAT_BASE+1,
	SAT_CLOSE_CHANNEL_SCREENID=SAT_BASE+1,
	SAT_SEND_DATA_CONF_SCREENID =SAT_BASE+1,
	SAT_SEND_DATA_SCREENID=SAT_BASE+1,
	SAT_RECV_DATA_CONF_SCREENID =SAT_BASE+1,
	SAT_RECV_DATA_SCREENID=SAT_BASE+1,
#endif
	SAT_SCR_INPUT_METHOD_AND_DONE,
 
	SCR_ID_SAT_DISPLAY_SS,
	SCR_ID_SAT_DISPLAY_USSD
}SAT_SCREEN_ID;

typedef enum
{
	SAT_CALL_DISCONNECT_BEFORE_CONNECT=0x00,
	SAT_CALL_DISCONNECT_AFTER_CONNECT
}SAT_CALL_EXIT_CAUSE;


typedef enum
{
	SAT_NONE_CMD=0x00,
	SAT_SELECT_ITEM_CMD,
	SAT_DISPLAY_TEXT_CMD,
	SAT_GET_INPUT,
	SAT_GET_INKEY,
	SAT_CALL_SETUP_CMD,
	SAT_SEND_SMS_CMD,	
	SAT_PLAY_TONE_CMD,
	SAT_LAUNCH_BROWSER_CMD,
	SAT_SEND_DTMF_CMD,
	SAT_SEND_SS_CMD,
	SAT_SEND_USSD_CMD,
	SAT_IMAGE_IDLE_CMD,
	SAT_IMAGE_READLEN_CMD,
	SAT_IMAGE_READINST_CMD,
	SAT_IMAGE_READDATA_CMD
}SAT_CMD_STATE;

#ifdef __MMI_MULTI_SIM__
typedef enum
{
    SAT_CMD_NONE = 0,
    SAT_CMD_SIM1 = 1,
    SAT_CMD_SIM2 = 2,
    SAT_CMD_SIM3,
    SAT_CMD_SIM4
    
} SAT_CMD_FROM_SIM;
#endif

typedef enum
{
	SAT_WAIT_IMAGE_ID=SAT_BASE+1,
	SAT_TITLE_IMAGE_ID,
	SAT_HELP_IMAGE_ID, 
#ifdef __MMI_MULTI_SIM__
	SAT_TITLE_IMAGE_ID_SIM1,
	SAT_TITLE_IMAGE_ID_SIM2,
	SAT_TITLE_IMAGE_ID_SIM3,
	SAT_TITLE_IMAGE_ID_SIM4
#endif
}SAT_IMAGE_LIST;


typedef enum
{
	SAT_WAIT_STRING_ID=SAT_BASE+1,
//micha0702
	SAT_GET_INPUT_LENGTH_NOT_ENOUGH,
	SAT_ABORT_STRING_ID,
	SAT_SETUP_CALL_CONF_STRING_ID,
	SAT_SEND_SMS_CONF_STRING_ID,
	SAT_SEND_SMS_STRING_ID,
	SAT_SMS_ERROR_STRING_ID,
	SAT_SMS_SUCCESS_STRING_ID,
	SAT_SEND_SS_STRING_ID,
	SAT_SS_ERROR_STRING_ID,
	SAT_SS_SUCCESS_STRING_ID,
	SAT_SEND_USSD_STRING_ID,
	SAT_USSD_ERROR_STRING_ID,
	SAT_USSD_SUCCESS_STRING_ID,
	SAT_SEND_DTMF_CONF_STRING_ID,
	SAT_SEND_DTMF_STRING_ID,
	SAT_DTMF_ERROR_STRING_ID,
	SAT_DTMF_SUCCESS_STRING_ID,
	SAT_DTMF_ABORT_STRING_ID,
	SAT_LAUNCH_BROWSER_CONF_STRING_ID,  
	SAT_NEXT_ACTION_REFRESH_STRING_ID,
	SAT_NEXT_ACTION_MORE_TIME_STRING_ID,
	SAT_NEXT_ACTION_POLL_INTERVAL_STRING_ID,
	SAT_NEXT_ACTION_POLLING_OFF_STRING_ID,
	SAT_NEXT_ACTION_SETUP_EVENT_LIST_STRING_ID,
	SAT_NEXT_ACTION_SETUP_CALL_STRING_ID,
	SAT_NEXT_ACTION_SEND_SS_STRING_ID,
	SAT_NEXT_ACTION_SEND_USSD_STRING_ID,
	SAT_NEXT_ACTION_SEND_SMS_STRING_ID,
	SAT_NEXT_ACTION_SEND_DTMF_STRING_ID,
	SAT_NEXT_ACTION_LAUNCH_BROWSER_STRING_ID,
	SAT_NEXT_ACTION_PLAY_TONE_STRING_ID,
	SAT_NEXT_ACTION_DISPLAY_TEXT_STRING_ID,
	SAT_NEXT_ACTION_GET_INKEY_STRING_ID,
	SAT_NEXT_ACTION_GET_INPUT_STRING_ID,
	SAT_NEXT_ACTION_SELECT_ITEM_STRING_ID,
	SAT_NEXT_ACTION_SETUP_MENU_STRING_ID,
	SAT_NEXT_ACTION_PROVIDE_LOCAL_INFO_STRING_ID,
	SAT_NEXT_ACTION_TIMER_MANAGEMENT_STRING_ID,
	SAT_NEXT_ACTION_SETUP_IDLE_TEXT_STRING_ID,
	SAT_NEXT_ACTION_PERFORM_CARD_APDU_STRING_ID,
	SAT_NEXT_ACTION_POWER_ON_CARD_STRING_ID,
	SAT_NEXT_ACTION_POWER_OFF_CARD_STRING_ID,
	SAT_NEXT_ACTION_GET_READER_STATUS_STRING_ID,
	SAT_NEXT_ACTION_RUN_AT_COMMAND_STRING_ID,
	SAT_NEXT_ACTION_LANGUAGE_NOTIFICATION_STRING_ID,
	SAT_NEXT_ACTION_OPEN_CHANNEL_STRING_ID,
	SAT_NEXT_ACTION_CLOSE_CHANNEL_STRING_ID,
	SAT_NEXT_ACTION_RECEIVE_DATA_STRING_ID,
	SAT_NEXT_ACTION_SEND_DATA_STRING_ID,
	SAT_NEXT_ACTION_GET_CHANNEL_STATUS_STRING_ID,
	SAT_NEXT_ACTION_RESERVED_FOR_TIA_STRING_ID,
	SAT_NEXT_ACTION_END_SESSION_STRING_ID,
#ifdef __SATCE__
	SAT_OPEN_CHANNEL_STRING_ID,
	SAT_OPEN_CHANNEL_CONF_STRING_ID,
	SAT_OPEN_CHANNEL_SUCCESS_STRING_ID,
	SAT_OPEN_CHANNEL_FAIL_STRING_ID,
	
	SAT_SEND_DATA_STRING_ID,
	SAT_SEND_DATA_CONF_STRING_ID,
	SAT_SEND_DATA_SUCCESS_STRING_ID,
	SAT_SEND_DATA_FAIL_STRING_ID,

	SAT_RECV_DATA_STRING_ID,
	SAT_RECV_DATA_CONF_STRING_ID,
	SAT_RECV_DATA_SUCCESS_STRING_ID,
	SAT_RECV_DATA_FAIL_STRING_ID,
#endif
	SAT_PLAY_TONE_STRING_ID,
	SAT_NUM_CHANGED_BY_SIM_STRING_ID,
	SAT_HELP_STRING_ID
}SAT_STRING_LIST;


typedef enum
{
	SAT_NEXT_ACTION_NONE				= 0x00,
	SAT_NEXT_ACTION_REFRESH				= 0x01,	
	SAT_NEXT_ACTION_MORE_TIME			= 0x02,	
	SAT_NEXT_ACTION_POLL_INTERVAL			= 0x03,	
	SAT_NEXT_ACTION_POLLING_OFF			= 0x04,	
	SAT_NEXT_ACTION_SETUP_EVENT_LIST		= 0x05,	
	SAT_NEXT_ACTION_SETUP_CALL			= 0x10,	
	SAT_NEXT_ACTION_SEND_SS				= 0x11,	
	SAT_NEXT_ACTION_SEND_USSD			= 0x12,	
	SAT_NEXT_ACTION_SEND_SMS			= 0x13,	
	SAT_NEXT_ACTION_SEND_DTMF			= 0x14,	
	SAT_NEXT_ACTION_LAUNCH_BROWSER			= 0x15,	
	SAT_NEXT_ACTION_PLAY_TONE			= 0x20,	
	SAT_NEXT_ACTION_DISPLAY_TEXT			= 0x21,	
	SAT_NEXT_ACTION_GET_INKEY			= 0x22,	
	SAT_NEXT_ACTION_GET_INPUT			= 0x23,	
	SAT_NEXT_ACTION_SELECT_ITEM			= 0x24,	
	SAT_NEXT_ACTION_SETUP_MENU			= 0x25,	
	SAT_NEXT_ACTION_PROVIDE_LOCAL_INFO		= 0x26,	
	SAT_NEXT_ACTION_TIMER_MANAGEMENT		= 0x27,	
	SAT_NEXT_ACTION_SETUP_IDLE_TEXT			= 0x28,	
	SAT_NEXT_ACTION_PERFORM_CARD_APDU		= 0x30,	
	SAT_NEXT_ACTION_POWER_ON_CARD			= 0x31,	
	SAT_NEXT_ACTION_POWER_OFF_CARD			= 0x32,	
	SAT_NEXT_ACTION_GET_READER_STATUS		= 0x33,	
	SAT_NEXT_ACTION_RUN_AT_COMMAND			= 0x34,	
	SAT_NEXT_ACTION_LANGUAGE_NOTIFICATION		= 0x35,	
	SAT_NEXT_ACTION_OPEN_CHANNEL			= 0x40,	
	SAT_NEXT_ACTION_CLOSE_CHANNEL			= 0x41,	
	SAT_NEXT_ACTION_RECEIVE_DATA			= 0x42,	
	SAT_NEXT_ACTION_SEND_DATA			= 0x43,	
	SAT_NEXT_ACTION_GET_CHANNEL_STATUS		= 0x44,	
	SAT_NEXT_ACTION_RESERVED_FOR_TIA		= 0x60,	
	SAT_NEXT_ACTION_END_SESSION			= 0x81
}SAT_NEXT_ACTION_LIST;


typedef enum
{
   SAT_PRI_NORMAL=0,
   SAT_PRI_HIGH=1
}SAT_DSPL_PRIORITY;

typedef enum
{
   SAT_CLEAR_AFTER_DELAY=0,
   SAT_CLEAR_BY_USR=1
}SAT_CLEAR_TEXT;



#endif /* _COOLSAND_SATDEFS_H */


